{"version":3,"mappings":"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","names":["window","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","useInterval","fn","deps","immediate","savedCallback","useRef","useEffect","current","id","setInterval","tick","clearInterval","openCompose","opts","url","URL","location","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","alert","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","comment2","home","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","more2","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","info","shortcut","user","following","pin","unpin","bus","link","history","share","sparkles","sparkles2","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","filters","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","speak","building","history2","document","arrows-right","code","copy","quote","settings","heart-break","SIZES","s","m","l","xl","xxl","ICONDATA","SVGICon","moize","body","rotate","flip","_jsx","viewBox","dangerouslySetInnerHTML","__html","style","transform","isShallowEqual","maxSize","Object","keys","length","matchesArg","cacheKeyArg","keyArg","icon","Icon","size","alt","title","class","iconSize","iconBlock","warn","Array","iconData","setIconData","useState","currentIcon","iconB","useCloseWatcher","watcher","CloseWatcher","addEventListener","destroy","useCloseWatcher$1","$modalContainer","getElementById","Modal","children","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","supportsCloseWatcher","escRef","useHotkeys","enabled","keydown","keyup","ref","node","e","target","currentTarget","tabIndex","onFocus","isFocusable","getComputedStyle","pointerEvents","console","Link","forwardRef","routerLocation","useLocation","hash","replace","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","key","value","encodeURIComponent","join","pathname","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","states","prevLocation","locale","Intl","NumberFormat","resolvedOptions","shortenNumber","notation","format","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","parseInt","classList","toggle","useResizeObserver","box","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","imageSmoothingEnabled","Avatar","squircle","avatarRef","isMissing","test","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","queueMicrotask","drawImage","allPixels","getImageData","hasAlpha","data","pixel","i","add","clearRect","mem","CustomEmoji","staticUrl","_jsxs","srcset","EmojiText","emojis","indexOf","regex","RegExp","shortcode","elements","split","word","emoji","find","EmojiText$1","memo","oldProps","newProps","nameCollator","Collator","sensitivity","NameText","account","instance","showAvatar","showAcct","short","acct","avatar","avatarStatic","displayName","username","_","acct1","acct2","match","trimmedUsername","toLowerCase","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","compare","preventDefault","showAccount","_Fragment","newAccount","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","DateTimeFormat","RelativeTime","datetime","renderCount","rerender","useReducer","date","useMemo","dateStr","dt","str","now","diff","year","twitter","toDate","fromNow","toISOString","timeout","raf","rafRerender","requestAnimationFrame","scheduleRerender","cancelAnimationFrame","LazyShazam","containerRef","visible","setVisible","visibleStart","setVisibleStart","useInView","root","trackVisibility","onChange","inView","triggerOnce","skip","useLayoutEffect","getBoundingClientRect","bottom","hidden","documentElement","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","safeBoundingBoxPadding","paddings","v","CSS","supports","passive","Menu2","containerProps","instanceRef","_instanceRef","useWindowSize","Menu","boundingBoxPadding","repositionFlag","unmountOnClose","closeMenu","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","menuExtras","MenuItem","cloneElement","Parent","SubMenu","menuRef","openTrigger","direction","overflow","gap","shift","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","Poll","lang","readOnly","votePoll","uiState","setUIState","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","Date","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","dir","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","forEach","push","type","name","marginLeft","emojifyText","fauxDiv","whitelistLinkClasses","_enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","shortenLink","links","usernames","innerText","hasChildren","domain","some","u","d","slice","textNodes","extractTextNodes","html","nodeValue","replaceWith","childNodes","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","index","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","URL_PREFIX_REGEX","URL_DISPLAY_LENGTH","prefix","displayURL","suffix","cutoff","rejectFilterMap","assign","reduce","acc","cur","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","FilterContext","createContext","_isFiltered","filtered","filterContext","appliedFilters","f","hasContext","context","isHidden","filterAction","action","filterTitles","titles","titlesStr","isFiltered","filteredItem","item","currentAccountID","isSelf","filterState","filteredItems","items","store","session","get","_localeMatch","args","localeMatch","locales","navigator","languages","localeTargetLanguages","translationTargetLanguages","getTranslateTargetLanguage","fromSettings","contentTranslationTargetLanguage","div","getHTMLText","el","append","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","hashURL","_b","htmlContentLength","_DateTimeFormat","dateYear","hideTime","formatOpts","currentYear","getFullYear","day","hour","minute","niceDateTime","dtfOpts","supportsTTS","speechSynthesis","speaking","cancel","utterance","SpeechSynthesisUtterance","statusPeek","status","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","visibilityIconsMap","public","unlisted","private","direct","formatDuration","hours","floor","minutes","seconds","toString","padStart","isSafari","userAgent","dataAltLabel","AltBadge","showMediaAlt","MEDIA_CAPTION_LIMIT","MEDIA_CAPTION_LIMIT_LONGER","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","allowLongerCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","remoteMediaURLObj","isVideoMaybe","isAudioMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","fetch","mode","backgroundImage","backgroundSize","QuickPinchZoom","objectPosition","shortDuration","duration","isGIF","loopable","formattedDuration","hoverAnimate","autoGIFAnimate","showProgress","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","onTimeUpdate","container","currentTime","controls","autoplay","MenuLink","FocusableItem","detail","localeCode2Text","DisplayNames","of","define_import_meta_env_default","SHOW_COMMENT_COUNT_LIMIT","INLINE_TRANSLATE_LIMIT","fetchAccount","masto","v1","accounts","$select","memFetchAccount","pmem","visibilityText","isIOS","ontouchstart","rtf","RelativeTimeFormat","REACTIONS_LIMIT","getPollText","getPostText","PostContent","post","language","a","removeAttribute","oldPost","newPost","Status","statusID","propInstance","contentTextWeight","enableCommentHint","withinContext","skeleton","enableTranslate","forceTranslate","_forceTranslate","onMediaClick","quoted","onStatusLinkClick","showFollowedTags","allowContextMenu","showActionsBar","showReplyParent","authenticated","api","currentInstance","sameInstance","sKey","statusKey","snapStates","useSnapshot","statuses","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","editedAt","card","createdAt","inReplyToId","inReplyToAccountId","reblog","uri","tags","_deleted","_pinned","emojiReactions","currentAccount","useContext","filterInfo","debugHover","FilteredStatus","editedAtDate","inReplyToAccountRef","createdAtDate","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","showSpoiler","readingExpandMedia","prefs","showSpoilerMedia","setForceTranslate","targetLanguage","contentTranslationHideLanguages","contentTranslation","contentTranslationAutoInline","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showEmbed","setShowEmbed","readMoreText","statusRef","spoilerContentRef","contentRef","mediaContainerRef","textWeight","editedDateText","_a","mediaNoDesc","showCompose","replyToStatus","statusMonthsAgo","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","saveStatus","favouriteStatus","favouriteStatusNotify","done","bookmarkStatus","bookmarkStatusNotify","reblogIterator","firstLoad","favouriteIterator","differentLanguage","reblogResults","_c","Promise","favouriteResults","_types","isPinnable","StatusMenuItems","replyStatus","canBoost","confirmBoostStatus","heading","fetchBoostedLikedByAccounts","showReactions","postID","MenuDivider","postText","createdDateText","nicePostURL","isPublic","cachedStatus","getStatus","setIsContextMenuOpen","contextMenuProps","bindLongPressContext","useLongPress","showContextMenu","clientX","clientY","setContextMenuProps","isContextMenuOpen","hotkeysEnabled","fRef","dRef","threshold","bRef","rRef","xRef","activeStatus","spoilerButton","spoilerMediaButton","displayedMediaAttachments","captionChildren","attachments","indices","showMultipleMediaCaptions","showCommentCount","isThread","StatusCompact","containsQuestion","nodeRef","selection","anchorNode","ControlledMenu","contextMenuRef","anchorPoint","state","portal","actionsRef","StatusButton","showCommentHint","statusThreadNumber","spoilers","spoilersMedia","QuoteStatuses","newPoll","pollResponse","TranslationBlock","polls","MultipleMediaFigure","emojiReaction","count","me","isShortCode","checked","viewScroll","EditedAtModal","selfReferential","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","isMastodonLinkMaybe","unfurlMastodonLink","then","hasIframeHTML","setCardStatusURL","handleClick","hostname","blurhashImage","w","putImageData","videoID","videoid","setEditHistory","editHistory2","fetchStatusHistory","editHistory","log","error","Loader","generateHTMLCode","level","quotes","contentHTML","sourceMediaURL","previewMediaURL","mediaHTML","sourceMediaURLObj","htmlCode","prettify","EmbedModal","setButtonTitle","buttonTitle","iconAlt","urlObj","path","restPath","host","statusReply","srKey","statusPeekText","filterTitleStr","bindLongPressPeek","isReblog","actualStatusID","showPeek","isFollowedTags","setShowPeek","cancelOnMovement","ssKey","statusPeekRef","uniqueQuotes","q","arr","q2","statusQuotes","restNewProps","shallowEqual","restOldProps","AccountBlock","avatarSize","useAvatarStatic","internal","showActivity","showStats","accountInstance","hideDisplayName","relationship","excludeRelationshipAttrs","statusesCount","lastStatusAt","fields","note","followersCount","locked","verifiedField","verifiedAt","excludedRelationship","r","hasRelationship","followedBy","requested","supportsCache","feature","version","getCurrentInstance","range","features","satisfies","includePrerelease","loose","initDB","dbName","storeName","createStore","set","val","getMany","del","delMany","clear","db","drafts","catchup"],"ignoreList":[],"sources":["../../src/utils/show-toast.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/ICONS.jsx","../../src/components/icon.jsx","../../src/utils/useCloseWatcher.js","../../src/components/modal.jsx","../../src/components/link.jsx","../../src/utils/shorten-number.jsx","../../src/utils/useTruncated.js","../../src/components/avatar.jsx","../../src/components/custom-emoji.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/components/lazy-shazam.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/components/menu2.jsx","../../src/components/menu-confirm.jsx","../../src/components/poll.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/filter-context.js","../../src/utils/filters.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/html-content-length.js","../../src/utils/nice-date-time.js","../../src/utils/speech.js","../../src/utils/status-peek.jsx","../../src/utils/visibility-icons-map.js","../../src/utils/format-duration.jsx","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/utils/localeCode2Text.jsx","../../src/components/translation-block.jsx","../../src/components/status.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/utils/db.js"],"sourcesContent":["import Toastify from 'toastify-js';\n\nwindow._showToast = showToast;\n\nfunction showToast(props) {\n  if (typeof props === 'string') {\n    props = { text: props };\n  }\n  const { onClick, delay, ...rest } = props;\n  const toast = Toastify({\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\n    gravity: 'bottom',\n    position: 'center',\n    ...rest,\n    onClick: () => {\n      onClick?.(toast); // Pass in the object itself!\n    },\n  });\n  if (delay) {\n    setTimeout(() => {\n      toast.showToast();\n    }, delay);\n  } else {\n    toast.showToast();\n  }\n  return toast;\n}\n\nexport default showToast;\n","import { useEffect, useRef } from 'preact/hooks';\n\nfunction useInterval(fn, delay, deps, immediate) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn, deps]);\n\n  useEffect(() => {\n    if (!immediate || delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  useEffect(() => {\n    if (delay === null || delay === false) return;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","export default function openCompose(opts) {\n  const url = new URL('/compose/', window.location);\n  const { width: screenWidth, height: screenHeight } = window.screen;\n  const left = Math.max(0, (screenWidth - 600) / 2);\n  const top = Math.max(0, (screenHeight - 450) / 2);\n  const width = Math.min(screenWidth, 600);\n  const height = Math.min(screenHeight, 450);\n  const winUID = opts?.uid || Math.random();\n  const newWin = window.open(\n    url,\n    'compose' + winUID,\n    `width=${width},height=${height},left=${left},top=${top}`,\n  );\n\n  if (newWin) {\n    // if (masto) {\n    //   newWin.masto = masto;\n    // }\n\n    newWin.__COMPOSE__ = opts;\n  } else {\n    alert('Looks like your browser is blocking popups.');\n  }\n\n  return newWin;\n}\n","export const ICONS = {\n  x: () => import('@iconify-icons/mingcute/close-line'),\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\n  message: () => import('@iconify-icons/mingcute/mail-line'),\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\n  comment2: () => import('@iconify-icons/mingcute/comment-2-line'),\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\n  at: () => import('@iconify-icons/mingcute/at-line'),\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\n  more2: () => import('@iconify-icons/mingcute/more-1-fill'),\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\n  reply: [\n    () => import('@iconify-icons/mingcute/share-forward-line'),\n    '180deg',\n    'horizontal',\n  ],\n  thread: () => import('@iconify-icons/mingcute/route-line'),\n  group: () => import('@iconify-icons/mingcute/group-line'),\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\n  info: () => import('@iconify-icons/mingcute/information-line'),\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\n  following: () => import('@iconify-icons/mingcute/walk-line'),\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\n  unpin: [() => import('@iconify-icons/mingcute/pin-line'), '180deg'],\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\n  history: () => import('@iconify-icons/mingcute/history-line'),\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\n  sparkles2: () => import('@iconify-icons/mingcute/sparkles-2-line'),\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\n  play: () => import('@iconify-icons/mingcute/play-fill'),\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\n  unblock: [\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\n    '180deg',\n  ],\n  flag: () => import('@iconify-icons/mingcute/flag-1-line'),\n  time: () => import('@iconify-icons/mingcute/time-line'),\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\n  filters: () => import('@iconify-icons/mingcute/filter-line'),\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\n  react: () => import('@iconify-icons/mingcute/react-line'),\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\n  round: () => import('@iconify-icons/mingcute/round-fill'),\n  'arrow-up-circle': () =>\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\n  'arrow-down-circle': () =>\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\n  speak: () => import('@iconify-icons/mingcute/radar-line'),\n  building: () => import('@iconify-icons/mingcute/building-5-line'),\n  history2: () => import('@iconify-icons/mingcute/history-2-line'),\n  document: () => import('@iconify-icons/mingcute/document-line'),\n  'arrows-right': () => import('@iconify-icons/mingcute/arrows-right-line'),\n  code: () => import('@iconify-icons/mingcute/code-line'),\n  copy: () => import('@iconify-icons/mingcute/copy-2-line'),\n  quote: () => import('@iconify-icons/mingcute/quote-left-line'),\n  settings: () => import('@iconify-icons/mingcute/settings-6-line'),\n  'heart-break': () => import('@iconify-icons/mingcute/heart-crack-line'),\n};\n","import moize from 'moize';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { ICONS } from './ICONS';\n\nconst SIZES = {\n  s: 12,\n  m: 16,\n  l: 20,\n  xl: 24,\n  xxl: 32,\n};\n\nconst ICONDATA = {};\n\n// Memoize the dangerouslySetInnerHTML of the SVGs\nconst SVGICon = moize(\n  function ({ width, height, body, rotate, flip }) {\n    return (\n      <svg\n        viewBox={`0 0 ${width} ${height}`}\n        dangerouslySetInnerHTML={{ __html: body }}\n        style={{\n          transform: `${rotate ? `rotate(${rotate})` : ''} ${\n            flip ? `scaleX(-1)` : ''\n          }`,\n        }}\n      />\n    );\n  },\n  {\n    isShallowEqual: true,\n    maxSize: Object.keys(ICONS).length,\n    matchesArg: (cacheKeyArg, keyArg) =>\n      cacheKeyArg.icon === keyArg.icon && cacheKeyArg.body === keyArg.body,\n  },\n);\n\nfunction Icon({\n  icon,\n  size = 'm',\n  alt,\n  title,\n  class: className = '',\n  style = {},\n}) {\n  if (!icon) return null;\n\n  const iconSize = SIZES[size];\n  let iconBlock = ICONS[icon];\n  if (!iconBlock) {\n    console.warn(`Icon ${icon} not found`);\n    return null;\n  }\n\n  let rotate, flip;\n  if (Array.isArray(iconBlock)) {\n    [iconBlock, rotate, flip] = iconBlock;\n  }\n\n  const [iconData, setIconData] = useState(ICONDATA[icon]);\n  const currentIcon = useRef(icon);\n  useEffect(() => {\n    if (iconData && currentIcon.current === icon) return;\n    (async () => {\n      const iconB = await iconBlock();\n      setIconData(iconB.default);\n      ICONDATA[icon] = iconB.default;\n    })();\n    currentIcon.current = icon;\n  }, [icon]);\n\n  return (\n    <span\n      class={`icon ${className}`}\n      title={title || alt}\n      style={{\n        width: `${iconSize}px`,\n        height: `${iconSize}px`,\n        ...style,\n      }}\n    >\n      {iconData && (\n        // <svg\n        //   width={iconSize}\n        //   height={iconSize}\n        //   viewBox={`0 0 ${iconData.width} ${iconData.height}`}\n        //   dangerouslySetInnerHTML={{ __html: iconData.body }}\n        //   style={{\n        //     transform: `${rotate ? `rotate(${rotate})` : ''} ${\n        //       flip ? `scaleX(-1)` : ''\n        //     }`,\n        //   }}\n        // />\n        <SVGICon\n          icon={icon}\n          width={iconData.width}\n          height={iconData.height}\n          body={iconData.body}\n          rotate={rotate}\n          flip={flip}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default Icon;\n","import { useEffect } from 'preact/hooks';\n\nfunction useCloseWatcher(fn, deps = []) {\n  if (!fn || typeof fn !== 'function') return;\n  useEffect(() => {\n    const watcher = new CloseWatcher();\n    watcher.addEventListener('close', fn);\n    return () => {\n      watcher.destroy();\n    };\n  }, deps);\n}\n\nexport default window.CloseWatcher ? useCloseWatcher : () => {};\n","import './modal.css';\n\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport useCloseWatcher from '../utils/useCloseWatcher';\n\nconst $modalContainer = document.getElementById('modal-container');\n\nfunction Modal({ children, onClose, onClick, class: className }) {\n  if (!children) return null;\n\n  const modalRef = useRef();\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\n      if (focusElement) {\n        focusElement.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setTimeout(() => {\n        onClose?.();\n      }, 0);\n    },\n    {\n      enabled: !supportsCloseWatcher && !!onClose,\n      // Using keyup and setTimeout above\n      // This will run \"later\" to prevent clash with esc handlers from other components\n      keydown: false,\n      keyup: true,\n    },\n    [onClose],\n  );\n  useCloseWatcher(onClose, [onClose]);\n\n  const Modal = (\n    <div\n      ref={(node) => {\n        modalRef.current = node;\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\n      }}\n      className={className}\n      onClick={(e) => {\n        onClick?.(e);\n        if (e.target === e.currentTarget) {\n          onClose?.(e);\n        }\n      }}\n      tabIndex=\"-1\"\n      onFocus={(e) => {\n        try {\n          if (e.target === e.currentTarget) {\n            const focusElement =\n              modalRef.current?.querySelector('[tabindex=\"-1\"]');\n            const isFocusable =\n              !!focusElement &&\n              getComputedStyle(focusElement)?.pointerEvents !== 'none';\n            if (focusElement && isFocusable) {\n              focusElement.focus();\n            }\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {children}\n    </div>\n  );\n\n  return createPortal(Modal, $modalContainer);\n\n  // return createPortal(children, $modalContainer);\n}\n\nexport default Modal;\n","import { forwardRef } from 'preact/compat';\nimport { useLocation } from 'react-router-dom';\n\nimport states from '../utils/states';\n\n/* NOTES\n   =====\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\n*/\n\nconst Link = forwardRef((props, ref) => {\n  let routerLocation;\n  try {\n    routerLocation = useLocation();\n  } catch (e) {}\n  let hash = (location.hash || '').replace(/^#/, '').trim();\n  if (hash === '') hash = '/';\n  const { to, ...restProps } = props;\n\n  // Handle encodeURIComponent of searchParams values\n  if (!!hash && hash !== '/' && hash.includes('?')) {\n    try {\n      const parsedHash = new URL(hash, location.origin); // Fake base URL\n      if (parsedHash.searchParams.size) {\n        const searchParamsStr = Array.from(parsedHash.searchParams.entries())\n          .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n          .join('&');\n        hash = parsedHash.pathname + '?' + searchParamsStr;\n      }\n    } catch (e) {}\n  }\n\n  const isActive = hash === to || decodeURIComponent(hash) === to;\n  return (\n    <a\n      ref={ref}\n      href={`#${to}`}\n      {...restProps}\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\n      onClick={(e) => {\n        if (e.currentTarget?.parentNode?.closest('a')) {\n          // If this <a> is nested inside another <a>\n          e.stopPropagation();\n        }\n        if (routerLocation) states.prevLocation = routerLocation;\n        props.onClick?.(e);\n      }}\n    />\n  );\n});\n\nexport default Link;\n","const { locale } = Intl.NumberFormat().resolvedOptions();\nconst shortenNumber = Intl.NumberFormat(locale, {\n  notation: 'compact',\n}).format;\nexport default shortenNumber;\n","import { useRef } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\nimport useResizeObserver from 'use-resize-observer';\n\nexport default function useTruncated({ className = 'truncated' } = {}) {\n  const ref = useRef();\n  const onResize = useThrottledCallback(({ height }) => {\n    if (ref.current) {\n      const { scrollHeight } = ref.current;\n      let truncated = scrollHeight > height;\n      if (truncated) {\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\n        const computedHeight = parseInt(maxHeight || _height, 10);\n        truncated = scrollHeight > computedHeight;\n      }\n      ref.current.classList.toggle(className, truncated);\n    }\n  }, 300);\n  useResizeObserver({\n    ref,\n    box: 'border-box',\n    onResize,\n  });\n  return ref;\n}\n","import './avatar.css';\n\nimport { useRef } from 'preact/hooks';\n\nimport mem from '../utils/mem';\n\nconst SIZES = {\n  s: 16,\n  m: 20,\n  l: 24,\n  xl: 32,\n  xxl: 50,\n  xxxl: 64,\n};\n\nconst alphaCache = {};\n\nconst canvas = window.OffscreenCanvas\n  ? new OffscreenCanvas(1, 1)\n  : document.createElement('canvas');\nconst ctx = canvas.getContext('2d', {\n  willReadFrequently: true,\n});\nctx.imageSmoothingEnabled = false;\n\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\n  size = SIZES[size] || size || SIZES.m;\n  const avatarRef = useRef();\n  const isMissing = /missing\\.png$/.test(url);\n  return (\n    <span\n      ref={avatarRef}\n      class={`avatar ${squircle ? 'squircle' : ''} ${\n        alphaCache[url] ? 'has-alpha' : ''\n      }`}\n      style={{\n        width: size,\n        height: size,\n      }}\n      title={alt}\n      {...props}\n    >\n      {!!url && (\n        <img\n          src={url}\n          width={size}\n          height={size}\n          alt={alt}\n          loading=\"lazy\"\n          decoding=\"async\"\n          crossOrigin={\n            alphaCache[url] === undefined && !isMissing\n              ? 'anonymous'\n              : undefined\n          }\n          onError={(e) => {\n            if (e.target.crossOrigin) {\n              e.target.crossOrigin = null;\n              e.target.src = url;\n            }\n          }}\n          onLoad={(e) => {\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\n            if (alphaCache[url] !== undefined) return;\n            if (isMissing) return;\n            queueMicrotask(() => {\n              try {\n                // Check if image has alpha channel\n                const { width, height } = e.target;\n                if (canvas.width !== width) canvas.width = width;\n                if (canvas.height !== height) canvas.height = height;\n                ctx.drawImage(e.target, 0, 0);\n                const allPixels = ctx.getImageData(0, 0, width, height);\n                // At least 10% of pixels have alpha <= 128\n                const hasAlpha =\n                  allPixels.data.filter(\n                    (pixel, i) => i % 4 === 3 && pixel <= 128,\n                  ).length /\n                    (allPixels.data.length / 4) >\n                  0.1;\n                if (hasAlpha) {\n                  // console.log('hasAlpha', hasAlpha, allPixels.data);\n                  avatarRef.current.classList.add('has-alpha');\n                }\n                alphaCache[url] = hasAlpha;\n                ctx.clearRect(0, 0, width, height);\n              } catch (e) {\n                // Silent fail\n                alphaCache[url] = false;\n              }\n            });\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default mem(Avatar);\n","export default function CustomEmoji({ staticUrl, alt, url }) {\n  return (\n    <picture>\n      <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\n      <img\n        key={alt}\n        src={url}\n        alt={alt}\n        class=\"shortcode-emoji emoji\"\n        width=\"16\"\n        height=\"16\"\n        loading=\"lazy\"\n        decoding=\"async\"\n      />\n    </picture>\n  );\n}\n","import { memo } from 'preact/compat';\n\nimport CustomEmoji from './custom-emoji';\n\nfunction EmojiText({ text, emojis }) {\n  if (!text) return '';\n  if (!emojis?.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  const regex = new RegExp(\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\n    'g',\n  );\n  const elements = text.split(regex).map((word) => {\n    const emoji = emojis.find((e) => e.shortcode === word);\n    if (emoji) {\n      const { url, staticUrl } = emoji;\n      return <CustomEmoji staticUrl={staticUrl} alt={word} url={url} />;\n    }\n    return word;\n  });\n  return elements;\n}\n\nexport default memo(\n  EmojiText,\n  (oldProps, newProps) =>\n    oldProps.text === newProps.text &&\n    oldProps.emojis?.length === newProps.emojis?.length,\n);\n","import './name-text.css';\n\nimport { memo } from 'preact/compat';\n\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\n\nconst nameCollator = new Intl.Collator('en', {\n  sensitivity: 'base',\n});\n\nfunction NameText({\n  account,\n  instance,\n  showAvatar,\n  showAcct,\n  short,\n  external,\n  onClick,\n}) {\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\n    account;\n  let { username } = account;\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n\n  const trimmedUsername = username.toLowerCase().trim();\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\n  const shortenedDisplayName = trimmedDisplayName\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\n    /[^a-z0-9]/gi,\n    '',\n  ); // Remove non-alphanumeric characters\n\n  if (\n    !short &&\n    (trimmedUsername === trimmedDisplayName ||\n      trimmedUsername === shortenedDisplayName ||\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\n      nameCollator.compare(trimmedUsername, shortenedDisplayName) === 0)\n  ) {\n    username = null;\n  }\n\n  return (\n    <a\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\n      href={url}\n      target={external ? '_blank' : null}\n      title={\n        displayName\n          ? `${displayName} (${acct2 ? '' : '@'}${acct})`\n          : `${acct2 ? '' : '@'}${acct}`\n      }\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        e.stopPropagation();\n        if (onClick) return onClick(e);\n        states.showAccount = {\n          account,\n          instance,\n        };\n      }}\n    >\n      {showAvatar && (\n        <>\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\n        </>\n      )}\n      {displayName && !short ? (\n        <>\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          {!showAcct && username && (\n            <>\n              {' '}\n              <i>@{username}</i>\n            </>\n          )}\n        </>\n      ) : short ? (\n        <i>{username}</i>\n      ) : (\n        <b>{username}</b>\n      )}\n      {showAcct && (\n        <>\n          <br />\n          <i>\n            {acct2 ? '' : '@'}\n            {acct1}\n            {!!acct2 && <span class=\"ib\">{acct2}</span>}\n          </i>\n        </>\n      )}\n    </a>\n  );\n}\n\nexport default memo(NameText, (oldProps, newProps) => {\n  // Only care about account.id, the other props usually don't change\n  const { account } = oldProps;\n  const { account: newAccount } = newProps;\n  return account?.acct === newAccount?.acct;\n});\n","// Twitter-style relative time component\n// Seconds = 1s\n// Minutes = 1m\n// Hours = 1h\n// Days = 1d\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\nimport dayjs from 'dayjs';\nimport dayjsTwitter from 'dayjs-twitter';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useEffect, useMemo, useReducer } from 'preact/hooks';\n\ndayjs.extend(dayjsTwitter);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst dtf = new Intl.DateTimeFormat();\n\nexport default function RelativeTime({ datetime, format }) {\n  if (!datetime) return null;\n  const [renderCount, rerender] = useReducer((x) => x + 1, 0);\n  const date = useMemo(() => dayjs(datetime), [datetime]);\n  const [dateStr, dt, title] = useMemo(() => {\n    let str;\n    if (format === 'micro') {\n      // If date <= 1 day ago or day is within this year\n      const now = dayjs();\n      const dayDiff = now.diff(date, 'day');\n      if (dayDiff <= 1 || now.year() === date.year()) {\n        str = date.twitter();\n      } else {\n        str = dtf.format(date.toDate());\n      }\n    }\n    if (!str) str = date.fromNow();\n    return [str, date.toISOString(), date.format('LLLL')];\n  }, [date, format, renderCount]);\n\n  useEffect(() => {\n    let timeout;\n    let raf;\n    function rafRerender() {\n      raf = requestAnimationFrame(() => {\n        rerender();\n        scheduleRerender();\n      });\n    }\n    function scheduleRerender() {\n      // If less than 1 minute, rerender every 10s\n      // If less than 1 hour rerender every 1m\n      // Else, don't need to rerender\n      if (date.diff(dayjs(), 'minute', true) < 1) {\n        timeout = setTimeout(rafRerender, 10_000);\n      } else if (date.diff(dayjs(), 'hour', true) < 1) {\n        timeout = setTimeout(rafRerender, 60_000);\n      }\n    }\n    scheduleRerender();\n    return () => {\n      clearTimeout(timeout);\n      cancelAnimationFrame(raf);\n    };\n  }, []);\n\n  return (\n    <time datetime={dt} title={title}>\n      {dateStr}\n    </time>\n  );\n}\n","/*\n  Rendered but hidden. Only show when visible\n*/\nimport { useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useInView } from 'react-intersection-observer';\n\nexport default function LazyShazam({ children }) {\n  const containerRef = useRef();\n  const [visible, setVisible] = useState(false);\n  const [visibleStart, setVisibleStart] = useState(false);\n\n  const { ref } = useInView({\n    root: null,\n    trackVisibility: true,\n    delay: 1000,\n    onChange: (inView) => {\n      if (inView) {\n        setVisible(true);\n      }\n    },\n    triggerOnce: true,\n    skip: visibleStart || visible,\n  });\n\n  useLayoutEffect(() => {\n    if (!containerRef.current) return;\n    const rect = containerRef.current.getBoundingClientRect();\n    if (rect.bottom > 0) {\n      setVisibleStart(true);\n    }\n  }, []);\n\n  if (visibleStart) return children;\n\n  return (\n    <div\n      ref={containerRef}\n      class=\"shazam-container no-animation\"\n      hidden={!visible}\n    >\n      <div ref={ref} class=\"shazam-container-inner\">\n        {children}\n      </div>\n    </div>\n  );\n}\n","const root = document.documentElement;\nconst style = getComputedStyle(root);\nconst defaultBoundingBoxPadding = 8;\n\nlet safeAreaInsets = [0, 0, 0, 0];\nfunction getSafeAreaInsets() {\n  // Get safe area inset variables from root\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\n  safeAreaInsets = [\n    // top, right, bottom, left (clockwise)\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\n  ];\n}\nrequestAnimationFrame(getSafeAreaInsets);\n\nfunction safeBoundingBoxPadding(paddings = []) {\n  const str = safeAreaInsets\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\n    .join(' ');\n  // console.log(str);\n  return str;\n}\n\n// Update safe area insets when orientation or resize\nif (CSS.supports('top: env(safe-area-inset-top)')) {\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\n}\n\nexport default safeBoundingBoxPadding;\n","import { Menu } from '@szhsin/react-menu';\nimport { useWindowSize } from '@uidotdev/usehooks';\nimport { useRef } from 'preact/hooks';\n\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\n\n// It's like Menu but with sensible defaults, bug fixes and improvements.\nfunction Menu2(props) {\n  const { containerProps, instanceRef: _instanceRef } = props;\n  const size = useWindowSize();\n  const instanceRef = _instanceRef?.current ? _instanceRef : useRef();\n\n  return (\n    <Menu\n      boundingBoxPadding={safeBoundingBoxPadding()}\n      repositionFlag={`${size.width}x${size.height}`}\n      unmountOnClose\n      {...props}\n      instanceRef={instanceRef}\n      containerProps={{\n        onClick: (e) => {\n          if (e.target === e.currentTarget) {\n            instanceRef.current?.closeMenu?.();\n          }\n          containerProps?.onClick?.(e);\n        },\n        ...containerProps,\n      }}\n    />\n  );\n}\n\nexport default Menu2;\n","import { MenuItem, SubMenu } from '@szhsin/react-menu';\nimport { cloneElement } from 'preact';\nimport { useRef } from 'preact/hooks';\n\nimport Menu2 from './menu2';\n\nfunction MenuConfirm({\n  subMenu = false,\n  confirm = true,\n  confirmLabel,\n  menuItemClassName,\n  menuFooter,\n  menuExtras,\n  ...props\n}) {\n  const { children, onClick, ...restProps } = props;\n  if (!confirm) {\n    if (subMenu) return <MenuItem {...props} />;\n    if (onClick) {\n      return cloneElement(children, {\n        onClick,\n      });\n    }\n    return children;\n  }\n  const Parent = subMenu ? SubMenu : Menu2;\n  const menuRef = useRef();\n  return (\n    <Parent\n      instanceRef={menuRef}\n      openTrigger=\"clickOnly\"\n      direction=\"bottom\"\n      overflow=\"auto\"\n      gap={-8}\n      shift={8}\n      menuClassName=\"menu-emphasized\"\n      {...restProps}\n      menuButton={subMenu ? undefined : children}\n      label={subMenu ? children : undefined}\n      // Test fix for bug; submenus not opening on Android\n      itemProps={{\n        onPointerMove: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n        onPointerLeave: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n      }}\n    >\n      <MenuItem className={menuItemClassName} onClick={onClick}>\n        {confirmLabel}\n      </MenuItem>\n      {menuExtras}\n      {menuFooter}\n    </Parent>\n  );\n}\n\nexport default MenuConfirm;\n","import { useState } from 'preact/hooks';\n\nimport shortenNumber from '../utils/shorten-number';\n\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport RelativeTime from './relative-time';\n\nexport default function Poll({\n  poll,\n  lang,\n  readOnly,\n  refresh = () => {},\n  votePoll = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const {\n    expired,\n    expiresAt,\n    id,\n    multiple,\n    options,\n    ownVotes,\n    voted,\n    votersCount,\n    votesCount,\n    emojis,\n  } = poll;\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\n  // https://stackoverflow.com/a/56718027/20838\n  // useEffect(() => {\n  //   let timeout;\n  //   if (!expired && expiresAtDate) {\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\n  //     if (ms > 0) {\n  //       timeout = setTimeout(() => {\n  //         setUIState('loading');\n  //         (async () => {\n  //           // await refresh();\n  //           setUIState('default');\n  //         })();\n  //       }, ms);\n  //     }\n  //   }\n  //   return () => {\n  //     clearTimeout(timeout);\n  //   };\n  // }, [expired, expiresAtDate]);\n\n  const pollVotesCount = votersCount || votesCount;\n  let roundPrecision = 0;\n\n  if (pollVotesCount <= 1000) {\n    roundPrecision = 0;\n  } else if (pollVotesCount <= 10000) {\n    roundPrecision = 1;\n  } else if (pollVotesCount <= 100000) {\n    roundPrecision = 2;\n  }\n\n  const [showResults, setShowResults] = useState(false);\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\n\n  return (\n    <div\n      lang={lang}\n      dir=\"auto\"\n      class={`poll ${readOnly ? 'read-only' : ''} ${\n        uiState === 'loading' ? 'loading' : ''\n      }`}\n    >\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\n        <>\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title, votesCount: optionVotesCount } = option;\n              const percentage = pollVotesCount\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\n                    roundPrecision,\n                  )\n                : 0; // check if current poll choice is the leading one\n\n              const isLeading =\n                optionVotesCount > 0 &&\n                optionVotesCount ===\n                  Math.max(...options.map((o) => o.votesCount));\n              return (\n                <div\n                  key={`${i}-${title}-${optionVotesCount}`}\n                  class={`poll-option poll-result ${\n                    isLeading ? 'poll-option-leading' : ''\n                  }`}\n                  style={{\n                    '--percentage': `${percentage}%`,\n                  }}\n                >\n                  <div class=\"poll-option-title\">\n                    <span>\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                    {voted && ownVotes.includes(i) && (\n                      <>\n                        {' '}\n                        <Icon icon=\"check-circle\" />\n                      </>\n                    )}\n                  </div>\n                  <div\n                    class=\"poll-option-votes\"\n                    title={`${optionVotesCount} vote${\n                      optionVotesCount === 1 ? '' : 's'\n                    }`}\n                  >\n                    {percentage}%\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {!expired && !voted && (\n            <button\n              class=\"poll-vote-button plain2\"\n              disabled={uiState === 'loading'}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowResults(false);\n              }}\n            >\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\n            </button>\n          )}\n        </>\n      ) : (\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const form = e.target;\n            const formData = new FormData(form);\n            const choices = [];\n            formData.forEach((value, key) => {\n              if (key === 'poll') {\n                choices.push(value);\n              }\n            });\n            if (!choices.length) return;\n            setUIState('loading');\n            await votePoll(choices);\n            setUIState('default');\n          }}\n        >\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title } = option;\n              return (\n                <div class=\"poll-option\">\n                  <label class=\"poll-label\">\n                    <input\n                      type={multiple ? 'checkbox' : 'radio'}\n                      name=\"poll\"\n                      value={i}\n                      disabled={uiState === 'loading'}\n                      readOnly={readOnly}\n                    />\n                    <span class=\"poll-option-title\">\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n          {!readOnly && (\n            <button\n              class=\"poll-vote-button\"\n              type=\"submit\"\n              disabled={uiState === 'loading'}\n            >\n              Vote\n            </button>\n          )}\n        </form>\n      )}\n      <p class=\"poll-meta\">\n        {!expired && !readOnly && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            style={{\n              marginLeft: -8,\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              setUIState('loading');\n\n              (async () => {\n                await refresh();\n                setUIState('default');\n              })();\n            }}\n            title=\"Refresh\"\n          >\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\n          </button>\n        )}\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            onClick={(e) => {\n              e.preventDefault();\n              setShowResults(!showResults);\n            }}\n            title={showResults ? 'Hide results' : 'Show results'}\n          >\n            <Icon\n              icon={showResults ? 'eye-open' : 'eye-close'}\n              alt={showResults ? 'Hide results' : 'Show results'}\n            />{' '}\n          </button>\n        )}\n        {!expired && !readOnly && ' '}\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\n        {votesCount === 1 ? '' : 's'}\n        {!!votersCount && votersCount !== votesCount && (\n          <>\n            {' '}\n            &bull; <span title={votersCount}>\n              {shortenNumber(votersCount)}\n            </span>{' '}\n            voter\n            {votersCount === 1 ? '' : 's'}\n          </>\n        )}{' '}\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\n      </p>{' '}\n    </div>\n  );\n}\n","function emojifyText(text, emojis = []) {\n  if (!text) return '';\n  if (!emojis.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  // Replace shortcodes in text with emoji\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\n  emojis.forEach((emoji) => {\n    const { shortcode, staticUrl, url } = emoji;\n    text = text.replace(\n      new RegExp(`:${shortcode}:`, 'g'),\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\n    );\n  });\n  // console.log(text, emojis);\n  return text;\n}\n\nexport default emojifyText;\n","import emojifyText from './emojify-text';\nimport mem from './mem';\n\nconst fauxDiv = document.createElement('div');\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\n\nfunction _enhanceContent(content, opts = {}) {\n  const { emojis, postEnhanceDOM = () => {} } = opts;\n  let enhancedContent = content;\n  const dom = document.createElement('div');\n  dom.innerHTML = enhancedContent;\n  const hasLink = /<a/i.test(enhancedContent);\n  const hasCodeBlock = enhancedContent.includes('```');\n\n  if (hasLink) {\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\n    // E.g. `note` in `account`\n    const noTargetBlankLinks = dom.querySelectorAll('a:not([target=\"_blank\"])');\n    noTargetBlankLinks.forEach((link) => {\n      link.setAttribute('target', '_blank');\n    });\n\n    // Remove all classes except `u-url`, `mention`, `hashtag`\n    const links = dom.querySelectorAll('a[class]');\n    links.forEach((link) => {\n      link.classList.forEach((c) => {\n        if (!whitelistLinkClasses.includes(c)) {\n          link.classList.remove(c);\n        }\n      });\n    });\n  }\n\n  // Add 'has-url-text' to all links that contains a url\n  if (hasLink) {\n    const links = dom.querySelectorAll('a[href]');\n    links.forEach((link) => {\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\n        link.classList.add('has-url-text');\n        shortenLink(link);\n      }\n    });\n  }\n\n  // Spanify un-spanned mentions\n  if (hasLink) {\n    const links = dom.querySelectorAll('a[href]');\n    const usernames = [];\n    links.forEach((link) => {\n      const text = link.innerText.trim();\n      const hasChildren = link.querySelector('*');\n      // If text looks like @username@domain, then it's a mention\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\n        // Only show @username\n        const [_, username, domain] = text.split('@');\n        if (!hasChildren) {\n          if (\n            !usernames.some(([u]) => u === username) ||\n            usernames.some(([u, d]) => u === username && d === domain)\n          ) {\n            link.innerHTML = `@<span>${username}</span>`;\n            usernames.push([username, domain]);\n          } else {\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\n          }\n        }\n        link.classList.add('mention');\n      }\n      // If text looks like #hashtag, then it's a hashtag\n      if (/^#[^#]+$/g.test(text)) {\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\n        link.classList.add('mention', 'hashtag');\n      }\n    });\n  }\n\n  // EMOJIS\n  // ======\n  // Convert :shortcode: to <img />\n  let textNodes;\n  if (enhancedContent.includes(':')) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (emojis) {\n        html = emojifyText(html, emojis);\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // CODE BLOCKS\n  // ===========\n  // Convert ```code``` to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const blocks = [...dom.querySelectorAll('p')].filter((p) =>\n      /^```[^]+```$/g.test(p.innerText.trim()),\n    );\n    blocks.forEach((block) => {\n      const pre = document.createElement('pre');\n      // Replace <br /> with newlines\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\n      block.replaceWith(pre);\n    });\n  }\n\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const paragraphs = [...dom.querySelectorAll('p')];\n    // Filter out paragraphs with ``` in beginning only\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\n    codeBlocks.forEach((block) => {\n      const nextParagraphs = [block];\n      let hasCodeBlock = false;\n      let currentBlock = block;\n      while (currentBlock.nextElementSibling) {\n        const next = currentBlock.nextElementSibling;\n        if (next && next.tagName === 'P') {\n          if (/```$/g.test(next.innerText)) {\n            nextParagraphs.push(next);\n            hasCodeBlock = true;\n            break;\n          } else {\n            nextParagraphs.push(next);\n          }\n        } else {\n          break;\n        }\n        currentBlock = next;\n      }\n      if (hasCodeBlock) {\n        const pre = document.createElement('pre');\n        nextParagraphs.forEach((p) => {\n          // Replace <br /> with newlines\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n        });\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\n        block.replaceWith(pre);\n        nextParagraphs.forEach((p) => p.remove());\n      }\n    });\n  }\n\n  // INLINE CODE\n  // ===========\n  // Convert `code` to <code>code</code>\n  if (enhancedContent.includes('`')) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/`[^`]+`/g.test(html)) {\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // TWITTER USERNAMES\n  // =================\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\n  if (/twitter\\.com/i.test(enhancedContent)) {\n    textNodes = extractTextNodes(dom, {\n      rejectFilter: ['A'],\n    });\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\n        html = html.replaceAll(\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\n        );\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // HASHTAG STUFFING\n  // ================\n  // Get the <p> that contains a lot of hashtags, add a class to it\n  if (enhancedContent.includes('#')) {\n    let prevIndex = null;\n    const hashtagStuffedParagraphs = [...dom.querySelectorAll('p')].filter(\n      (p, index) => {\n        let hashtagCount = 0;\n        for (let i = 0; i < p.childNodes.length; i++) {\n          const node = p.childNodes[i];\n\n          if (node.nodeType === Node.TEXT_NODE) {\n            const text = node.textContent.trim();\n            if (text !== '') {\n              return false;\n            }\n          } else if (node.tagName === 'BR') {\n            // Ignore <br />\n          } else if (node.tagName === 'A') {\n            const linkText = node.textContent.trim();\n            if (!linkText || !linkText.startsWith('#')) {\n              return false;\n            } else {\n              hashtagCount++;\n            }\n          } else {\n            return false;\n          }\n        }\n        // Only consider \"stuffing\" if:\n        // - there are more than 3 hashtags\n        // - there are more than 1 hashtag in adjacent paragraphs\n        if (hashtagCount > 3) {\n          prevIndex = index;\n          return true;\n        }\n        if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\n          prevIndex = index;\n          return true;\n        }\n      },\n    );\n    if (hashtagStuffedParagraphs?.length) {\n      hashtagStuffedParagraphs.forEach((p) => {\n        p.classList.add('hashtag-stuffing');\n        p.title = p.innerText;\n      });\n    }\n  }\n\n  if (postEnhanceDOM) {\n    queueMicrotask(() => postEnhanceDOM(dom));\n    // postEnhanceDOM(dom); // mutate dom\n  }\n\n  enhancedContent = dom.innerHTML;\n\n  return enhancedContent;\n}\nconst enhanceContent = mem(_enhanceContent);\n\nconst defaultRejectFilter = [\n  // Document metadata\n  'STYLE',\n  // Image and multimedia\n  'IMG',\n  'VIDEO',\n  'AUDIO',\n  'AREA',\n  'MAP',\n  'TRACK',\n  // Embedded content\n  'EMBED',\n  'IFRAME',\n  'OBJECT',\n  'PICTURE',\n  'PORTAL',\n  'SOURCE',\n  // SVG and MathML\n  'SVG',\n  'MATH',\n  // Scripting\n  'CANVAS',\n  'NOSCRIPT',\n  'SCRIPT',\n  // Forms\n  'INPUT',\n  'OPTION',\n  'TEXTAREA',\n  // Web Components\n  'SLOT',\n  'TEMPLATE',\n];\nconst defaultRejectFilterMap = Object.fromEntries(\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\n);\n\nconst URL_PREFIX_REGEX = /^(https?:\\/\\/(www\\.)?|xmpp:)/;\nconst URL_DISPLAY_LENGTH = 30;\n// Similar to https://github.com/mastodon/mastodon/blob/1666b1955992e16f4605b414c6563ca25b3a3f18/app/lib/text_formatter.rb#L54-L69\nfunction shortenLink(link) {\n  if (!link || link.querySelector?.('*')) {\n    return;\n  }\n  try {\n    const url = link.innerText.trim();\n    const prefix = (url.match(URL_PREFIX_REGEX) || [])[0] || '';\n    if (!prefix) return;\n    const displayURL = url.slice(\n      prefix.length,\n      prefix.length + URL_DISPLAY_LENGTH,\n    );\n    const suffix = url.slice(prefix.length + URL_DISPLAY_LENGTH);\n    const cutoff = url.slice(prefix.length).length > URL_DISPLAY_LENGTH;\n    link.innerHTML = `<span class=\"invisible\">${prefix}</span><span class=${\n      cutoff ? 'ellipsis' : ''\n    }>${displayURL}</span><span class=\"invisible\">${suffix}</span>`;\n  } catch (e) {}\n}\n\nfunction extractTextNodes(dom, opts = {}) {\n  const textNodes = [];\n  const rejectFilterMap = Object.assign(\n    {},\n    defaultRejectFilterMap,\n    opts.rejectFilter?.reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {}),\n  );\n  const walk = document.createTreeWalker(\n    dom,\n    NodeFilter.SHOW_TEXT,\n    {\n      acceptNode(node) {\n        if (rejectFilterMap[node.parentNode.nodeName]) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    },\n    false,\n  );\n  let node;\n  while ((node = walk.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\nexport default enhanceContent;\n","import { createContext } from 'preact';\n\nconst FilterContext = createContext();\nexport default FilterContext;\n","import mem from './mem';\nimport store from './store';\n\nfunction _isFiltered(filtered, filterContext) {\n  if (!filtered?.length) return false;\n  const appliedFilters = filtered.filter((f) => {\n    const { filter } = f;\n    const hasContext = filter.context.includes(filterContext);\n    if (!hasContext) return false;\n    if (!filter.expiresAt) return hasContext;\n    return new Date(filter.expiresAt) > new Date();\n  });\n  if (!appliedFilters.length) return false;\n  const isHidden = appliedFilters.some((f) => f.filter.filterAction === 'hide');\n  if (isHidden)\n    return {\n      action: 'hide',\n    };\n  const isWarn = appliedFilters.some((f) => f.filter.filterAction === 'warn');\n  if (isWarn) {\n    const filterTitles = appliedFilters.map((f) => f.filter.title);\n    return {\n      action: 'warn',\n      titles: filterTitles,\n      titlesStr: filterTitles.join(' • '),\n    };\n  }\n  return false;\n}\nexport const isFiltered = mem(_isFiltered);\n\nexport function filteredItem(item, filterContext, currentAccountID) {\n  const { filtered } = item;\n  if (!filtered?.length) return true;\n  const isSelf = currentAccountID && item.account?.id === currentAccountID;\n  if (isSelf) return true;\n  const filterState = isFiltered(filtered, filterContext);\n  if (!filterState) return true;\n  if (filterState.action === 'hide') return false;\n  // item._filtered = filterState;\n  return true;\n}\nexport function filteredItems(items, filterContext) {\n  if (!items?.length) return [];\n  if (!filterContext) return items;\n  const currentAccountID = store.session.get('currentAccount');\n  return items.filter((item) =>\n    filteredItem(item, filterContext, currentAccountID),\n  );\n}\n","import { match } from '@formatjs/intl-localematcher';\n\nimport mem from './mem';\n\nfunction _localeMatch(...args) {\n  // Wrap in try/catch because localeMatcher throws on invalid locales\n  try {\n    return match(...args);\n  } catch (e) {\n    const defaultLocale = args[2];\n    return defaultLocale || false;\n  }\n}\nconst localeMatch = mem(_localeMatch);\n\nexport default localeMatch;\n","import translationTargetLanguages from '../data/lingva-target-languages';\n\nimport localeMatch from './locale-match';\nimport states from './states';\n\nconst locales = [\n  new Intl.DateTimeFormat().resolvedOptions().locale,\n  ...navigator.languages,\n];\n\nconst localeTargetLanguages = localeMatch(\n  locales,\n  translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\n  'en',\n);\n\nfunction getTranslateTargetLanguage(fromSettings = false) {\n  if (fromSettings) {\n    const { contentTranslationTargetLanguage } = states.settings;\n    if (contentTranslationTargetLanguage) {\n      return contentTranslationTargetLanguage;\n    }\n  }\n  return localeTargetLanguages;\n}\n\nexport default getTranslateTargetLanguage;\n","import mem from './mem';\n\nconst div = document.createElement('div');\nfunction getHTMLText(html) {\n  if (!html) return '';\n  div.innerHTML = html\n    .replace(/<\\/p>/g, '</p>\\n\\n')\n    .replace(/<\\/li>/g, '</li>\\n');\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n\n  // MASTODON-SPECIFIC classes\n  // Remove .invisible\n  div.querySelectorAll('.invisible').forEach((el) => {\n    el.remove();\n  });\n  // Add … at end of .ellipsis\n  div.querySelectorAll('.ellipsis').forEach((el) => {\n    el.append('...');\n  });\n\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\n}\n\nexport default mem(getHTMLText);\n","import states from './states';\n\nfunction handleContentLinks(opts) {\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\n  return (e) => {\n    let { target } = e;\n    target = target.closest('a');\n    if (!target) return;\n\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\n      return;\n    }\n\n    const prevText = target.previousSibling?.textContent;\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\n    const textStartsWithAt = target.innerText.startsWith('@');\n    if (\n      ((target.classList.contains('u-url') ||\n        target.classList.contains('mention')) &&\n        textStartsWithAt) ||\n      (textBeforeLinkIsAt && !textStartsWithAt)\n    ) {\n      const targetText = (\n        target.querySelector('span') || target\n      ).innerText.trim();\n      const username = targetText.replace(/^@/, '');\n      const url = target.getAttribute('href');\n      // Only fallback to acct/username check if url doesn't match\n      const mention =\n        mentions.find((mention) => mention.url === url) ||\n        mentions.find(\n          (mention) =>\n            mention.acct === username || mention.username === username,\n        );\n      console.warn('MENTION', mention, url);\n      if (mention) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.showAccount = {\n          account: mention.acct,\n          instance,\n        };\n      } else if (!/^http/i.test(targetText)) {\n        console.log('mention not found', targetText);\n        e.preventDefault();\n        e.stopPropagation();\n        const href = target.getAttribute('href');\n        states.showAccount = {\n          account: href,\n          instance,\n        };\n      }\n    } else if (!previewMode) {\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tag = target.innerText.replace(/^#/, '').trim();\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\n        console.log({ hashURL });\n        location.hash = hashURL;\n      } else if (\n        states.unfurledLinks[target.href]?.url &&\n        statusURL !== target.href\n      ) {\n        // If unfurled AND not self-referential\n        e.preventDefault();\n        e.stopPropagation();\n        states.prevLocation = {\n          pathname: location.hash.replace(/^#/, ''),\n        };\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\n      }\n    }\n  };\n}\n\nexport default handleContentLinks;\n","const div = document.createElement('div');\nexport default function htmlContentLength(html) {\n  if (!html) return 0;\n  div.innerHTML = html;\n  // .invisible spans for links\n  // e.g. <span class=\"invisible\">https://</span>mastodon.social\n  div.querySelectorAll('.invisible').forEach((el) => {\n    el.remove();\n  });\n  return div.innerText.length;\n}\n","import mem from './mem';\n\nconst { locale } = new Intl.DateTimeFormat().resolvedOptions();\n\nconst _DateTimeFormat = (opts) => {\n  const { dateYear, hideTime, formatOpts } = opts || {};\n  const currentYear = new Date().getFullYear();\n  return Intl.DateTimeFormat(locale, {\n    // Show year if not current year\n    year: dateYear === currentYear ? undefined : 'numeric',\n    month: 'short',\n    day: 'numeric',\n    // Hide time if requested\n    hour: hideTime ? undefined : 'numeric',\n    minute: hideTime ? undefined : 'numeric',\n    ...formatOpts,\n  });\n};\nconst DateTimeFormat = mem(_DateTimeFormat);\n\nfunction niceDateTime(date, dtfOpts) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const DTF = DateTimeFormat({\n    dateYear: date.getFullYear(),\n    ...dtfOpts,\n  });\n  const dateText = DTF.format(date);\n  return dateText;\n}\n\nexport default niceDateTime;\n","export const supportsTTS = 'speechSynthesis' in window;\n\nexport function speak(text, lang) {\n  if (!supportsTTS) return;\n  try {\n    if (speechSynthesis.speaking) {\n      speechSynthesis.cancel();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    if (lang) utterance.lang = lang;\n    speechSynthesis.speak(utterance);\n  } catch (e) {\n    alert(e);\n  }\n}\n","import getHTMLText from './getHTMLText';\n\nfunction statusPeek(status) {\n  const { spoilerText, content, poll, mediaAttachments } = status;\n  let text = '';\n  if (spoilerText?.trim()) {\n    text += spoilerText;\n  } else {\n    text += getHTMLText(content);\n  }\n  text = text.trim();\n  if (poll?.options?.length) {\n    text += `\\n\\n📊:\\n${poll.options\n      .map((o) => `${poll.multiple ? '▪️' : '•'} ${o.title}`)\n      .join('\\n')}`;\n  }\n  if (mediaAttachments?.length) {\n    text +=\n      ' ' +\n      mediaAttachments\n        .map(\n          (m) =>\n            ({\n              image: '🖼️',\n              gifv: '🎞️',\n              video: '📹',\n              audio: '🎵',\n              unknown: '',\n            }[m.type] || ''),\n        )\n        .join('');\n  }\n  return text;\n}\n\nexport default statusPeek;\n","export default {\n  public: 'earth',\n  unlisted: 'group',\n  private: 'lock',\n  direct: 'message',\n};\n","export default function formatDuration(time) {\n  if (!time) return;\n  let hours = Math.floor(time / 3600);\n  let minutes = Math.floor((time % 3600) / 60);\n  let seconds = Math.round(time % 60);\n\n  if (hours === 0) {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\n      .toString()\n      .padStart(2, '0')}`;\n  }\n}\n","import { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport {\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\n\nimport formatDuration from '../utils/format-duration';\nimport mem from '../utils/mem';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\n\n/*\nMedia type\n===\nunknown = unsupported or unrecognized file type\nimage = Static image\ngifv = Looping, soundless animation\nvideo = Video clip\naudio = Audio track\n*/\n\nconst dataAltLabel = 'ALT';\nconst AltBadge = (props) => {\n  const { alt, lang, index, ...rest } = props;\n  if (!alt || !alt.trim()) return null;\n  return (\n    <button\n      type=\"button\"\n      class=\"alt-badge clickable\"\n      {...rest}\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        states.showMediaAlt = {\n          alt,\n          lang,\n        };\n      }}\n      title=\"Media description\"\n    >\n      {dataAltLabel}\n      {!!index && <sup>{index}</sup>}\n    </button>\n  );\n};\n\nconst MEDIA_CAPTION_LIMIT = 140;\nconst MEDIA_CAPTION_LIMIT_LONGER = 280;\nexport const isMediaCaptionLong = mem((caption) =>\n  caption?.length\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\n    : false,\n);\n\nfunction Media({\n  class: className = '',\n  media,\n  to,\n  lang,\n  showOriginal,\n  autoAnimate,\n  showCaption,\n  allowLongerCaption,\n  altIndex,\n  onClick = () => {},\n}) {\n  const {\n    blurhash,\n    description,\n    meta,\n    previewRemoteUrl,\n    previewUrl,\n    remoteUrl,\n    url,\n    type,\n  } = media;\n  const { original = {}, small, focus } = meta || {};\n\n  const width = showOriginal ? original?.width : small?.width;\n  const height = showOriginal ? original?.height : small?.height;\n  const mediaURL = showOriginal ? url : previewUrl || url;\n  const remoteMediaURL = showOriginal\n    ? remoteUrl\n    : previewRemoteUrl || remoteUrl;\n  const orientation = width >= height ? 'landscape' : 'portrait';\n\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\n\n  const videoRef = useRef();\n\n  let focalPosition;\n  if (focus) {\n    // Convert focal point to CSS background position\n    // Formula from jquery-focuspoint\n    // x = -1, y = 1 => 0% 0%\n    // x = 0, y = 0 => 50% 50%\n    // x = 1, y = -1 => 100% 100%\n    const x = ((focus.x + 1) / 2) * 100;\n    const y = ((1 - focus.y) / 2) * 100;\n    focalPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\n  }\n\n  const mediaRef = useRef();\n  const onUpdate = useCallback(({ x, y, scale }) => {\n    const { current: media } = mediaRef;\n\n    if (media) {\n      const value = make3dTransformValue({ x, y, scale });\n\n      if (scale === 1) {\n        media.style.removeProperty('transform');\n      } else {\n        media.style.setProperty('transform', value);\n      }\n\n      media.closest('.media-zoom').style.touchAction =\n        scale <= 1.01 ? 'pan-x' : '';\n    }\n  }, []);\n\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\n  const quickPinchZoomProps = {\n    enabled: pinchZoomEnabled,\n    draggableUnZoomed: false,\n    inertiaFriction: 0.9,\n    doubleTapZoomOutOnMaxScale: true,\n    containerProps: {\n      className: 'media-zoom',\n      style: {\n        overflow: 'visible',\n        //   width: 'inherit',\n        //   height: 'inherit',\n        //   justifyContent: 'inherit',\n        //   alignItems: 'inherit',\n        //   display: 'inherit',\n      },\n    },\n    onUpdate,\n  };\n\n  const Parent = useMemo(\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\n    [to],\n  );\n\n  const remoteMediaURLObj = remoteMediaURL ? new URL(remoteMediaURL) : null;\n  const isVideoMaybe =\n    type === 'unknown' &&\n    remoteMediaURLObj &&\n    /\\.(mp4|m4r|m4v|mov|webm)$/i.test(remoteMediaURLObj.pathname);\n  const isAudioMaybe =\n    type === 'unknown' &&\n    remoteMediaURLObj &&\n    /\\.(mp3|ogg|wav|m4a|m4p|m4b)$/i.test(remoteMediaURLObj.pathname);\n  const isImage =\n    type === 'image' ||\n    (type === 'unknown' && previewUrl && !isVideoMaybe && !isAudioMaybe);\n\n  const parentRef = useRef();\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\n  useLayoutEffect(() => {\n    if (!isImage) return;\n    if (!showOriginal) return;\n    if (!parentRef.current) return;\n    const { offsetWidth, offsetHeight } = parentRef.current;\n    const smaller = width < offsetWidth && height < offsetHeight;\n    if (smaller) setImageSmallerThanParent(smaller);\n  }, [width, height]);\n\n  const maxAspectHeight =\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\n  const averageColorStyle = {\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n  };\n  const mediaStyles =\n    width && height\n      ? {\n          '--width': `${width}px`,\n          '--height': `${height}px`,\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\n          '--aspectWidth': `${\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\n          }px`,\n          aspectRatio: `${width} / ${height}`,\n          ...averageColorStyle,\n        }\n      : {\n          ...averageColorStyle,\n        };\n\n  const longDesc = isMediaCaptionLong(description);\n  let showInlineDesc =\n    !!showCaption && !showOriginal && !!description && !longDesc;\n  if (\n    allowLongerCaption &&\n    !showInlineDesc &&\n    description?.length <= MEDIA_CAPTION_LIMIT_LONGER\n  ) {\n    showInlineDesc = true;\n  }\n  const Figure = !showInlineDesc\n    ? Fragment\n    : (props) => {\n        const { children, ...restProps } = props;\n        return (\n          <figure {...restProps}>\n            {children}\n            <figcaption\n              class=\"media-caption\"\n              lang={lang}\n              dir=\"auto\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                states.showMediaAlt = {\n                  alt: description,\n                  lang,\n                };\n              }}\n            >\n              {description}\n            </figcaption>\n          </figure>\n        );\n      };\n\n  if (isImage) {\n    // Note: type: unknown might not have width/height\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\n\n    useLayoutEffect(() => {\n      if (!isSafari) return;\n      if (!showOriginal) return;\n      (async () => {\n        try {\n          await fetch(mediaURL, { mode: 'no-cors' });\n          mediaRef.current.src = mediaURL;\n        } catch (e) {\n          // Ignore\n        }\n      })();\n    }, [mediaURL]);\n\n    return (\n      <Figure>\n        <Parent\n          ref={parentRef}\n          class={`media media-image ${className}`}\n          onClick={onClick}\n          data-orientation={orientation}\n          data-has-alt={!showInlineDesc}\n          style={\n            showOriginal\n              ? {\n                  backgroundImage: `url(${previewUrl})`,\n                  backgroundSize: imageSmallerThanParent\n                    ? `${width}px ${height}px`\n                    : undefined,\n                  ...averageColorStyle,\n                }\n              : mediaStyles\n          }\n        >\n          {showOriginal ? (\n            <QuickPinchZoom {...quickPinchZoomProps}>\n              <img\n                ref={mediaRef}\n                src={mediaURL}\n                alt={description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"eager\"\n                decoding=\"sync\"\n                onLoad={(e) => {\n                  e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.closest('.media-zoom').style.display = '';\n                  setPinchZoomEnabled(true);\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n            </QuickPinchZoom>\n          ) : (\n            <>\n              <img\n                src={mediaURL}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n                style={{\n                  // backgroundColor:\n                  //   rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n                  // backgroundPosition: focalBackgroundPosition || 'center',\n                  // Duration based on width or height in pixels\n                  objectPosition: focalPosition || 'center',\n                  // 100px per second (rough estimate)\n                  // Clamp between 5s and 120s\n                  '--anim-duration': `${Math.min(\n                    Math.max(Math.max(width, height) / 100, 5),\n                    120,\n                  )}s`,\n                }}\n                onLoad={(e) => {\n                  // e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.dataset.loaded = true;\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\n    const shortDuration = original.duration < 31;\n    const isGIF = type === 'gifv' && shortDuration;\n    // If GIF is too long, treat it as a video\n    const loopable = original.duration < 61;\n    const formattedDuration = formatDuration(original.duration);\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\n    const showProgress = original.duration > 5;\n\n    const videoHTML = `\n    <video\n      src=\"${url}\"\n      poster=\"${previewUrl}\"\n      width=\"${width}\"\n      height=\"${height}\"\n      data-orientation=\"${orientation}\"\n      preload=\"auto\"\n      autoplay\n      muted=\"${isGIF}\"\n      ${isGIF ? '' : 'controls'}\n      playsinline\n      loop=\"${loopable}\"\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\n      ${\n        isGIF && showProgress\n          ? \"ontimeupdate=\\\"this.closest('.media-gif') && this.closest('.media-gif').style.setProperty('--progress', `${~~((this.currentTime / this.duration) * 100)}%`)\\\"\"\n          : ''\n      }\n    ></video>\n  `;\n\n    return (\n      <Figure>\n        <Parent\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\n            autoGIFAnimate ? 'media-contain' : ''\n          } ${hoverAnimate ? 'media-hover-animate' : ''}`}\n          data-orientation={orientation}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\n          data-has-alt={!showInlineDesc}\n          // style={{\n          //   backgroundColor:\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n          // }}\n          style={!showOriginal && mediaStyles}\n          onClick={(e) => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n            onClick(e);\n          }}\n          onMouseEnter={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onMouseLeave={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n          onFocus={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onBlur={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n        >\n          {showOriginal || autoGIFAnimate ? (\n            isGIF && showOriginal ? (\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\n                <div\n                  ref={mediaRef}\n                  dangerouslySetInnerHTML={{\n                    __html: videoHTML,\n                  }}\n                />\n              </QuickPinchZoom>\n            ) : (\n              <div\n                class=\"video-container\"\n                dangerouslySetInnerHTML={{\n                  __html: videoHTML,\n                }}\n              />\n            )\n          ) : isGIF ? (\n            <video\n              ref={videoRef}\n              src={url}\n              poster={previewUrl}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              preload=\"auto\"\n              // controls\n              playsinline\n              loop\n              muted\n              onTimeUpdate={\n                showProgress\n                  ? (e) => {\n                      const { target } = e;\n                      const container = target?.closest('.media-gif');\n                      if (container) {\n                        const percentage =\n                          (target.currentTime / target.duration) * 100;\n                        container.style.setProperty(\n                          '--progress',\n                          `${percentage}%`,\n                        );\n                      }\n                    }\n                  : undefined\n              }\n            />\n          ) : (\n            <>\n              <img\n                src={previewUrl}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n              />\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n            </>\n          )}\n          {!showOriginal && !showInlineDesc && (\n            <AltBadge alt={description} lang={lang} index={altIndex} />\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'audio' || isAudioMaybe) {\n    const formattedDuration = formatDuration(original.duration);\n    return (\n      <Figure>\n        <Parent\n          class={`media media-audio ${className}`}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-has-alt={!showInlineDesc}\n          onClick={onClick}\n          style={!showOriginal && mediaStyles}\n        >\n          {showOriginal ? (\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\n          ) : previewUrl ? (\n            <img\n              src={previewUrl}\n              alt={showInlineDesc ? '' : description}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              loading=\"lazy\"\n              onError={(e) => {\n                try {\n                  // Remove self if broken\n                  e.target?.remove?.();\n                } catch (e) {}\n              }}\n            />\n          ) : null}\n          {!showOriginal && (\n            <>\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  }\n}\n\nexport default Media;\n","import { FocusableItem } from '@szhsin/react-menu';\n\nimport Link from './link';\n\nfunction MenuLink(props) {\n  const { className, disabled, ...restProps } = props;\n  return (\n    <FocusableItem className={className} disabled={disabled}>\n      {({ ref, closeMenu }) => (\n        <Link\n          {...restProps}\n          ref={ref}\n          onClick={({ detail }) =>\n            closeMenu(detail === 0 ? 'Enter' : undefined)\n          }\n        />\n      )}\n    </FocusableItem>\n  );\n}\n\nexport default MenuLink;\n","export default function localeCode2Text(code) {\n  try {\n    return new Intl.DisplayNames(navigator.languages, {\n      type: 'language',\n    }).of(code);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","import './translation-block.css';\n\nimport pRetry from 'p-retry';\nimport pThrottle from 'p-throttle';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport sourceLanguages from '../data/lingva-source-languages';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport pmem from '../utils/pmem';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nconst { PHANPY_LINGVA_INSTANCES } = import.meta.env;\nconst LINGVA_INSTANCES = PHANPY_LINGVA_INSTANCES\n  ? PHANPY_LINGVA_INSTANCES.split(/\\s+/)\n  : [];\n\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 2000,\n});\n\nlet currentLingvaInstance = 0;\n\nfunction _lingvaTranslate(text, source, target) {\n  console.log('TRANSLATE', text, source, target);\n  const fetchCall = () => {\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\n    return fetch(\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\n        text,\n      )}`,\n    )\n      .then((res) => {\n        if (!res.ok) throw new Error(res.statusText);\n        return res.json();\n      })\n      .then((res) => {\n        return {\n          provider: 'lingva',\n          content: res.translation,\n          detectedSourceLanguage: res.info?.detectedSource,\n          info: res.info,\n        };\n      });\n  };\n  return pRetry(fetchCall, {\n    retries: 3,\n    onFailedAttempt: (e) => {\n      currentLingvaInstance =\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\n      console.log(\n        'Retrying translation with another instance',\n        currentLingvaInstance,\n      );\n    },\n  });\n  // return masto.v1.statuses.$select(id).translate({\n  //   lang: DEFAULT_LANG,\n  // });\n}\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\nconst lingvaTranslate = pmem(_lingvaTranslate, {\n  maxAge: TRANSLATED_MAX_AGE,\n});\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\n  // I know, this is double-layered memoization\n  maxAge: TRANSLATED_MAX_AGE,\n});\n\nfunction TranslationBlock({\n  forceTranslate,\n  sourceLanguage,\n  onTranslate,\n  text = '',\n  mini,\n}) {\n  const targetLang = getTranslateTargetLanguage(true);\n  const [uiState, setUIState] = useState('default');\n  const [pronunciationContent, setPronunciationContent] = useState(null);\n  const [translatedContent, setTranslatedContent] = useState(null);\n  const [detectedLang, setDetectedLang] = useState(null);\n  const detailsRef = useRef();\n\n  const sourceLangText = sourceLanguage\n    ? localeCode2Text(sourceLanguage)\n    : null;\n  const targetLangText = localeCode2Text(targetLang);\n  const apiSourceLang = useRef('auto');\n\n  if (!onTranslate) {\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\n  }\n\n  const translate = async () => {\n    setUIState('loading');\n    try {\n      const { content, detectedSourceLanguage, provider, error, ...props } =\n        await onTranslate(text, apiSourceLang.current, targetLang);\n      if (content) {\n        if (detectedSourceLanguage) {\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\n          setDetectedLang(detectedLangText);\n        }\n        if (provider === 'lingva') {\n          const pronunciation = props?.info?.pronunciation?.query;\n          if (pronunciation) {\n            setPronunciationContent(pronunciation);\n          }\n        }\n        setTranslatedContent(content);\n        setUIState('default');\n        if (!mini && content.trim() !== text.trim()) {\n          detailsRef.current.open = true;\n          detailsRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      } else {\n        if (error) console.error(error);\n        setUIState('error');\n      }\n    } catch (e) {\n      console.error(e);\n      setUIState('error');\n    }\n  };\n\n  useEffect(() => {\n    if (forceTranslate) {\n      translate();\n    }\n  }, [forceTranslate]);\n\n  if (mini) {\n    if (\n      !!translatedContent &&\n      translatedContent.trim() !== text.trim() &&\n      detectedLang !== targetLangText\n    ) {\n      return (\n        <div class=\"shazam-container\">\n          <div class=\"shazam-container-inner\">\n            <div class=\"status-translation-block-mini\">\n              <Icon\n                icon=\"translate\"\n                alt={`Auto-translated from ${sourceLangText}`}\n              />\n              <output\n                lang={targetLang}\n                dir=\"auto\"\n                title={pronunciationContent || ''}\n              >\n                {translatedContent}\n              </output>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div\n      class=\"status-translation-block\"\n      onClick={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <details ref={detailsRef}>\n        <summary>\n          <button\n            type=\"button\"\n            onClick={async (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              detailsRef.current.open = !detailsRef.current.open;\n              if (uiState === 'loading') return;\n              if (!translatedContent) translate();\n            }}\n          >\n            <Icon icon=\"translate\" />{' '}\n            <span>\n              {uiState === 'loading'\n                ? 'Translating…'\n                : sourceLanguage && sourceLangText && !detectedLang\n                ? `Translate from ${sourceLangText}`\n                : `Translate`}\n            </span>\n          </button>\n        </summary>\n        <div class=\"translated-block\">\n          <div class=\"translation-info insignificant\">\n            <select\n              class=\"translated-source-select\"\n              disabled={uiState === 'loading'}\n              onChange={(e) => {\n                apiSourceLang.current = e.target.value;\n                translate();\n              }}\n            >\n              {sourceLanguages.map((l) => (\n                <option value={l.code}>\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\n                </option>\n              ))}\n            </select>{' '}\n            <span>→ {targetLangText}</span>\n            <Loader abrupt hidden={uiState !== 'loading'} />\n          </div>\n          {uiState === 'error' ? (\n            <p class=\"ui-state\">Failed to translate</p>\n          ) : (\n            !!translatedContent && (\n              <>\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\n                  {translatedContent}\n                </output>\n                {!!pronunciationContent && (\n                  <output\n                    class=\"translated-pronunciation-content\"\n                    tabIndex={-1}\n                    onClick={(e) => {\n                      e.target.classList.toggle('expand');\n                    }}\n                  >\n                    {pronunciationContent}\n                  </output>\n                )}\n              </>\n            )\n          )}\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default LINGVA_INSTANCES?.length ? TranslationBlock : () => null;\n","import './status.css';\n\nimport '@justinribeiro/lite-youtube';\nimport {\n  ControlledMenu,\n  Menu,\n  MenuDivider,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { decodeBlurHash, getBlurHashAverageColor } from 'fast-blurhash';\nimport { shallowEqual } from 'fast-equals';\nimport prettify from 'html-prettify';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport CustomEmoji from '../components/custom-emoji';\nimport EmojiText from '../components/emoji-text';\nimport LazyShazam from '../components/lazy-shazam';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport Poll from '../components/poll';\nimport { api } from '../utils/api';\nimport emojifyText from '../utils/emojify-text';\nimport enhanceContent from '../utils/enhance-content';\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport htmlContentLength from '../utils/html-content-length';\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\nimport localeMatch from '../utils/locale-match';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport unfurlMastodonLink from '../utils/unfurl-link';\nimport useTruncated from '../utils/useTruncated';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport { isMediaCaptionLong } from './media';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport TranslationBlock from './translation-block';\n\nconst SHOW_COMMENT_COUNT_LIMIT = 280;\nconst INLINE_TRANSLATE_LIMIT = 140;\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount);\n\nconst visibilityText = {\n  public: 'Public',\n  unlisted: 'Unlisted',\n  private: 'Followers only',\n  direct: 'Private mention',\n};\n\nconst isIOS =\n  window.ontouchstart !== undefined &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst rtf = new Intl.RelativeTimeFormat();\n\nconst REACTIONS_LIMIT = 80;\n\nfunction getPollText(poll) {\n  if (!poll?.options?.length) return '';\n  return `📊:\\n${poll.options\n    .map(\n      (option) =>\n        `- ${option.title}${\n          option.votesCount >= 0 ? ` (${option.votesCount})` : ''\n        }`,\n    )\n    .join('\\n')}`;\n}\nfunction getPostText(status) {\n  const { spoilerText, content, poll } = status;\n  return (\n    (spoilerText ? `${spoilerText}\\n\\n` : '') +\n    getHTMLText(content) +\n    getPollText(poll)\n  );\n}\n\nconst PostContent = memo(\n  ({ post, instance, previewMode }) => {\n    const { content, emojis, language, mentions, url } = post;\n    return (\n      <div\n        lang={language}\n        dir=\"auto\"\n        class=\"inner-content\"\n        onClick={handleContentLinks({\n          mentions,\n          instance,\n          previewMode,\n          statusURL: url,\n        })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n            postEnhanceDOM: (dom) => {\n              // Remove target=\"_blank\" from links\n              dom.querySelectorAll('a.u-url[target=\"_blank\"]').forEach((a) => {\n                if (!/http/i.test(a.innerText.trim())) {\n                  a.removeAttribute('target');\n                }\n              });\n            },\n          }),\n        }}\n      />\n    );\n  },\n  (oldProps, newProps) => {\n    const { post: oldPost } = oldProps;\n    const { post: newPost } = newProps;\n    return oldPost.content === newPost.content;\n  },\n);\n\nfunction Status({\n  statusID,\n  status,\n  instance: propInstance,\n  size = 'm',\n  contentTextWeight,\n  readOnly,\n  enableCommentHint,\n  withinContext,\n  skeleton,\n  enableTranslate,\n  forceTranslate: _forceTranslate,\n  previewMode,\n  // allowFilters,\n  onMediaClick,\n  quoted,\n  onStatusLinkClick = () => {},\n  showFollowedTags,\n  allowContextMenu,\n  showActionsBar,\n  showReplyParent,\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"status skeleton\">\n        <Avatar size=\"xxl\" />\n        <div class=\"container\">\n          <div class=\"meta\">███ ████████</div>\n          <div class=\"content-container\">\n            <div class=\"content\">\n              <p>████ ████████</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const { instance: currentInstance } = api();\n  const sameInstance = instance === currentInstance;\n\n  let sKey = statusKey(statusID || status?.id, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    tags,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n    // Non-Mastodon\n    emojiReactions,\n  } = status;\n\n  const currentAccount = useMemo(() => {\n    return store.session.get('currentAccount');\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo =\n    !isSelf && !readOnly && !previewMode && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  if (/*allowFilters && */ size !== 'l' && filterInfo) {\n    return (\n      <FilteredStatus\n        status={status}\n        filterInfo={filterInfo}\n        instance={instance}\n        containerProps={{\n          onMouseEnter: debugHover,\n        }}\n        showFollowedTags\n      />\n    );\n  }\n\n  const createdAtDate = new Date(createdAt);\n  const editedAtDate = new Date(editedAt);\n\n  let inReplyToAccountRef = mentions?.find(\n    (mention) => mention.id === inReplyToAccountId,\n  );\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\n    inReplyToAccountRef = { url: accountURL, username, displayName };\n  }\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\n    const account = states.accounts[inReplyToAccountId];\n    if (account) {\n      setInReplyToAccount(account);\n    } else {\n      memFetchAccount(inReplyToAccountId, masto)\n        .then((account) => {\n          setInReplyToAccount(account);\n          states.accounts[account.id] = account;\n        })\n        .catch((e) => {});\n    }\n  }\n  const mentionSelf =\n    inReplyToAccountId === currentAccount ||\n    mentions?.find((mention) => mention.id === currentAccount);\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    // Ignore hide_all because it means hide *ALL* media including non-sensitive ones\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media'] || 'default';\n  }, []);\n  // FOR TESTING:\n  // const readingExpandSpoilers = true;\n  // const readingExpandMedia = 'show_all';\n  const showSpoiler =\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id];\n  const showSpoilerMedia =\n    previewMode ||\n    readingExpandMedia === 'show_all' ||\n    !!snapStates.spoilersMedia[id];\n\n  if (reblog) {\n    // If has statusID, means useItemID (cached in states)\n\n    if (group) {\n      return (\n        <div\n          data-state-post-id={sKey}\n          class=\"status-group\"\n          onMouseEnter={debugHover}\n        >\n          <div class=\"status-pre-meta\">\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\n            <NameText account={status.account} instance={instance} showAvatar />\n          </div>\n          <Status\n            status={statusID ? null : reblog}\n            statusID={statusID ? reblog.id : null}\n            instance={instance}\n            size={size}\n            contentTextWeight={contentTextWeight}\n            readOnly={readOnly}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div\n        data-state-post-id={sKey}\n        class=\"status-reblog\"\n        onMouseEnter={debugHover}\n      >\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\n          <span>boosted</span>\n        </div>\n        <Status\n          status={statusID ? null : reblog}\n          statusID={statusID ? reblog.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n          readOnly={readOnly}\n          enableCommentHint\n        />\n      </div>\n    );\n  }\n\n  // Check followedTags\n  if (showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length) {\n    return (\n      <div\n        data-state-post-id={sKey}\n        class=\"status-followed-tags\"\n        onMouseEnter={debugHover}\n      >\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"hashtag\" size=\"l\" />{' '}\n          {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\n            <Link\n              key={tag}\n              to={instance ? `/${instance}/t/${tag}` : `/t/${tag}`}\n              class=\"status-followed-tag-item\"\n            >\n              {tag}\n            </Link>\n          ))}\n        </div>\n        <Status\n          status={statusID ? null : status}\n          statusID={statusID ? status.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n          readOnly={readOnly}\n          enableCommentHint\n        />\n      </div>\n    );\n  }\n\n  const isSizeLarge = size === 'l';\n\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const { contentTranslation, contentTranslationAutoInline } =\n    snapStates.settings;\n  if (!contentTranslation) enableTranslate = false;\n  const inlineTranslate = useMemo(() => {\n    if (\n      !contentTranslation ||\n      !contentTranslationAutoInline ||\n      readOnly ||\n      (withinContext && !isSizeLarge) ||\n      previewMode ||\n      spoilerText ||\n      sensitive ||\n      poll ||\n      card ||\n      mediaAttachments?.length\n    ) {\n      return false;\n    }\n    const contentLength = htmlContentLength(content);\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\n  }, [\n    contentTranslation,\n    contentTranslationAutoInline,\n    readOnly,\n    withinContext,\n    isSizeLarge,\n    previewMode,\n    spoilerText,\n    sensitive,\n    poll,\n    card,\n    mediaAttachments,\n    content,\n  ]);\n\n  const [showEdited, setShowEdited] = useState(false);\n  const [showEmbed, setShowEmbed] = useState(false);\n\n  const spoilerContentRef = useTruncated();\n  const contentRef = useTruncated();\n  const mediaContainerRef = useTruncated();\n  const readMoreText = 'Read more →';\n\n  const statusRef = useRef(null);\n\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\n\n  const textWeight = useCallback(\n    () =>\n      Math.max(\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\n          1,\n        1,\n      ),\n    [spoilerText, content],\n  );\n\n  const createdDateText = niceDateTime(createdAtDate);\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\n\n  // Can boost if:\n  // - authenticated AND\n  // - visibility != direct OR\n  // - visibility = private AND isSelf\n  let canBoost =\n    authenticated && visibility !== 'direct' && visibility !== 'private';\n  if (visibility === 'private' && isSelf) {\n    canBoost = true;\n  }\n\n  const replyStatus = (e) => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    // syntheticEvent comes from MenuItem\n    if (e?.shiftKey || e?.syntheticEvent?.shiftKey) {\n      const newWin = openCompose({\n        replyToStatus: status,\n      });\n      if (newWin) return;\n    }\n    states.showCompose = {\n      replyToStatus: status,\n    };\n  };\n\n  // Check if media has no descriptions\n  const mediaNoDesc = useMemo(() => {\n    return mediaAttachments.some(\n      (attachment) => !attachment.description?.trim?.(),\n    );\n  }, [mediaAttachments]);\n\n  const statusMonthsAgo = useMemo(() => {\n    return Math.floor(\n      (new Date() - createdAtDate) / (1000 * 60 * 60 * 24 * 30),\n    );\n  }, [createdAtDate]);\n\n  const boostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      if (!reblogged) {\n        let confirmText = 'Boost this post?';\n        if (mediaNoDesc) {\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\n        }\n        const yes = confirm(confirmText);\n        if (!yes) {\n          return false;\n        }\n      }\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const confirmBoostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n\n  const favouriteStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        favourited: !favourited,\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\n      };\n      if (favourited) {\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const favouriteStatusNotify = async () => {\n    try {\n      const done = await favouriteStatus();\n      if (!isSizeLarge && done) {\n        showToast(\n          favourited\n            ? `Unliked @${username || acct}'s post`\n            : `Liked @${username || acct}'s post`,\n        );\n      }\n    } catch (e) {}\n  };\n\n  const bookmarkStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        bookmarked: !bookmarked,\n      };\n      if (bookmarked) {\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const bookmarkStatusNotify = async () => {\n    try {\n      const done = await bookmarkStatus();\n      if (!isSizeLarge && done) {\n        showToast(\n          bookmarked\n            ? `Unbookmarked @${username || acct}'s post`\n            : `Bookmarked @${username || acct}'s post`,\n        );\n      }\n    } catch (e) {}\n  };\n\n  const differentLanguage =\n    !!language &&\n    language !== targetLanguage &&\n    !localeMatch([language], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => language === l || localeMatch([language], [l]),\n    );\n\n  const reblogIterator = useRef();\n  const favouriteIterator = useRef();\n  async function fetchBoostedLikedByAccounts(firstLoad) {\n    if (firstLoad) {\n      reblogIterator.current = masto.v1.statuses\n        .$select(statusID)\n        .rebloggedBy.list({\n          limit: REACTIONS_LIMIT,\n        });\n      favouriteIterator.current = masto.v1.statuses\n        .$select(statusID)\n        .favouritedBy.list({\n          limit: REACTIONS_LIMIT,\n        });\n    }\n    const [{ value: reblogResults }, { value: favouriteResults }] =\n      await Promise.allSettled([\n        reblogIterator.current.next(),\n        favouriteIterator.current.next(),\n      ]);\n    if (reblogResults.value?.length || favouriteResults.value?.length) {\n      const accounts = [];\n      if (reblogResults.value?.length) {\n        accounts.push(\n          ...reblogResults.value.map((a) => {\n            a._types = ['reblog'];\n            return a;\n          }),\n        );\n      }\n      if (favouriteResults.value?.length) {\n        accounts.push(\n          ...favouriteResults.value.map((a) => {\n            a._types = ['favourite'];\n            return a;\n          }),\n        );\n      }\n      return {\n        value: accounts,\n        done: reblogResults.done && favouriteResults.done,\n      };\n    }\n    return {\n      value: [],\n      done: true,\n    };\n  }\n\n  const actionsRef = useRef();\n  const isPublic = ['public', 'unlisted'].includes(visibility);\n  const isPinnable = ['public', 'unlisted', 'private'].includes(visibility);\n  const StatusMenuItems = (\n    <>\n      {!isSizeLarge && sameInstance && (\n        <>\n          <div class=\"menu-control-group-horizontal status-menu\">\n            <MenuItem onClick={replyStatus}>\n              <Icon icon=\"comment\" />\n              <span>\n                {repliesCount > 0 ? shortenNumber(repliesCount) : 'Reply'}\n              </span>\n            </MenuItem>\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"rocket\" />\n                  <span>{reblogged ? 'Unboost' : 'Boost'}</span>\n                </>\n              }\n              className={`menu-reblog ${reblogged ? 'checked' : ''}`}\n              menuExtras={\n                <MenuItem\n                  onClick={() => {\n                    states.showCompose = {\n                      draftStatus: {\n                        status: `\\n${url}`,\n                      },\n                    };\n                  }}\n                >\n                  <Icon icon=\"quote\" />\n                  <span>Quote</span>\n                </MenuItem>\n              }\n              menuFooter={\n                mediaNoDesc && !reblogged ? (\n                  <div class=\"footer\">\n                    <Icon icon=\"alert\" />\n                    Some media have no descriptions.\n                  </div>\n                ) : (\n                  statusMonthsAgo >= 3 && (\n                    <div class=\"footer\">\n                      <Icon icon=\"info\" />\n                      <span>\n                        Old post (\n                        <strong>{rtf.format(-statusMonthsAgo, 'month')}</strong>\n                        )\n                      </span>\n                    </div>\n                  )\n                )\n              }\n              disabled={!canBoost}\n              onClick={async () => {\n                try {\n                  const done = await confirmBoostStatus();\n                  if (!isSizeLarge && done) {\n                    showToast(\n                      reblogged\n                        ? `Unboosted @${username || acct}'s post`\n                        : `Boosted @${username || acct}'s post`,\n                    );\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"rocket\" />\n              <span>\n                {reblogsCount > 0\n                  ? shortenNumber(reblogsCount)\n                  : reblogged\n                  ? 'Unboost'\n                  : 'Boost…'}\n              </span>\n            </MenuConfirm>\n            <MenuItem\n              onClick={favouriteStatusNotify}\n              className={`menu-favourite ${favourited ? 'checked' : ''}`}\n            >\n              <Icon icon=\"heart\" />\n              <span>\n                {favouritesCount > 0\n                  ? shortenNumber(favouritesCount)\n                  : favourited\n                  ? 'Unlike'\n                  : 'Like'}\n              </span>\n            </MenuItem>\n            <MenuItem\n              onClick={bookmarkStatusNotify}\n              className={`menu-bookmark ${bookmarked ? 'checked' : ''}`}\n            >\n              <Icon icon=\"bookmark\" />\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\n            </MenuItem>\n          </div>\n        </>\n      )}\n      {!isSizeLarge && sameInstance && (isSizeLarge || showActionsBar) && (\n        <MenuDivider />\n      )}\n      {(isSizeLarge || showActionsBar) && (\n        <>\n          <MenuItem\n            onClick={() => {\n              states.showGenericAccounts = {\n                heading: 'Boosted/Liked by…',\n                fetchAccounts: fetchBoostedLikedByAccounts,\n                instance,\n                showReactions: true,\n                postID: sKey,\n              };\n            }}\n          >\n            <Icon icon=\"react\" />\n            <span>\n              Boosted/Liked by<span class=\"more-insignificant\">…</span>\n            </span>\n          </MenuItem>\n        </>\n      )}\n      {(enableTranslate || !language || differentLanguage) && <MenuDivider />}\n      {enableTranslate ? (\n        <div class={supportsTTS ? 'menu-horizontal' : ''}>\n          <MenuItem\n            disabled={forceTranslate}\n            onClick={() => {\n              setForceTranslate(true);\n            }}\n          >\n            <Icon icon=\"translate\" />\n            <span>Translate</span>\n          </MenuItem>\n          {supportsTTS && (\n            <MenuItem\n              onClick={() => {\n                const postText = getPostText(status);\n                if (postText) {\n                  speak(postText, language);\n                }\n              }}\n            >\n              <Icon icon=\"speak\" />\n              <span>Speak</span>\n            </MenuItem>\n          )}\n        </div>\n      ) : (\n        (!language || differentLanguage) && (\n          <div class={supportsTTS ? 'menu-horizontal' : ''}>\n            <MenuLink\n              to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\n            >\n              <Icon icon=\"translate\" />\n              <span>Translate</span>\n            </MenuLink>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  const postText = getPostText(status);\n                  if (postText) {\n                    speak(postText, language);\n                  }\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>Speak</span>\n              </MenuItem>\n            )}\n          </div>\n        )\n      )}\n      {((!isSizeLarge && sameInstance) ||\n        enableTranslate ||\n        !language ||\n        differentLanguage) && <MenuDivider />}\n      {!isSizeLarge && (\n        <>\n          <MenuLink\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n            onClick={(e) => {\n              onStatusLinkClick(e, status);\n            }}\n          >\n            <Icon icon=\"arrows-right\" />\n            <small>\n              View post by @{username || acct}\n              <br />\n              <span class=\"more-insignificant\">\n                {visibilityText[visibility]} • {createdDateText}\n              </span>\n            </small>\n          </MenuLink>\n        </>\n      )}\n      {!!editedAt && (\n        <>\n          <MenuItem\n            onClick={() => {\n              setShowEdited(id);\n            }}\n          >\n            <Icon icon=\"history\" />\n            <small>\n              Show Edit History\n              <br />\n              <span class=\"more-insignificant\">Edited: {editedDateText}</span>\n            </small>\n          </MenuItem>\n        </>\n      )}\n      <MenuItem href={url} target=\"_blank\">\n        <Icon icon=\"external\" />\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\n      </MenuItem>\n      <div class=\"menu-horizontal\">\n        <MenuItem\n          onClick={() => {\n            // Copy url to clipboard\n            try {\n              navigator.clipboard.writeText(url);\n              showToast('Link copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy link');\n            }\n          }}\n        >\n          <Icon icon=\"link\" />\n          <span>Copy</span>\n        </MenuItem>\n        {isPublic &&\n          navigator?.share &&\n          navigator?.canShare?.({\n            url,\n          }) && (\n            <MenuItem\n              onClick={() => {\n                try {\n                  navigator.share({\n                    url,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(\"Sharing doesn't seem to work.\");\n                }\n              }}\n            >\n              <Icon icon=\"share\" />\n              <span>Share…</span>\n            </MenuItem>\n          )}\n      </div>\n      {isPublic && isSizeLarge && (\n        <MenuItem\n          onClick={() => {\n            setShowEmbed(true);\n          }}\n        >\n          <Icon icon=\"code\" />\n          <span>Embed post</span>\n        </MenuItem>\n      )}\n      {(isSelf || mentionSelf) && <MenuDivider />}\n      {(isSelf || mentionSelf) && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [muted ? 'unmute' : 'mute']();\n              saveStatus(newStatus, instance);\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\n            } catch (e) {\n              console.error(e);\n              showToast(\n                muted\n                  ? 'Unable to unmute conversation'\n                  : 'Unable to mute conversation',\n              );\n            }\n          }}\n        >\n          {muted ? (\n            <>\n              <Icon icon=\"unmute\" />\n              <span>Unmute conversation</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"mute\" />\n              <span>Mute conversation</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && isPinnable && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [_pinned ? 'unpin' : 'pin']();\n              // saveStatus(newStatus, instance);\n              showToast(\n                _pinned\n                  ? 'Post unpinned from profile'\n                  : 'Post pinned to profile',\n              );\n            } catch (e) {\n              console.error(e);\n              showToast(\n                _pinned ? 'Unable to unpin post' : 'Unable to pin post',\n              );\n            }\n          }}\n        >\n          {_pinned ? (\n            <>\n              <Icon icon=\"unpin\" />\n              <span>Unpin from profile</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"pin\" />\n              <span>Pin to profile</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && (\n        <div class=\"menu-horizontal\">\n          <MenuItem\n            onClick={() => {\n              states.showCompose = {\n                editStatus: status,\n              };\n            }}\n          >\n            <Icon icon=\"pencil\" />\n            <span>Edit</span>\n          </MenuItem>\n          {isSizeLarge && (\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"trash\" />\n                  <span>Delete this post?</span>\n                </>\n              }\n              menuItemClassName=\"danger\"\n              onClick={() => {\n                // const yes = confirm('Delete this post?');\n                // if (yes) {\n                (async () => {\n                  try {\n                    await masto.v1.statuses.$select(id).remove();\n                    const cachedStatus = getStatus(id, instance);\n                    cachedStatus._deleted = true;\n                    showToast('Deleted');\n                  } catch (e) {\n                    console.error(e);\n                    showToast('Unable to delete');\n                  }\n                })();\n                // }\n              }}\n            >\n              <Icon icon=\"trash\" />\n              <span>Delete…</span>\n            </MenuConfirm>\n          )}\n        </div>\n      )}\n      {!isSelf && isSizeLarge && (\n        <>\n          <MenuDivider />\n          <MenuItem\n            className=\"danger\"\n            onClick={() => {\n              states.showReportModal = {\n                account: status.account,\n                post: status,\n              };\n            }}\n          >\n            <Icon icon=\"flag\" />\n            <span>Report post…</span>\n          </MenuItem>\n        </>\n      )}\n    </>\n  );\n\n  const contextMenuRef = useRef();\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuProps, setContextMenuProps] = useState({});\n\n  const showContextMenu =\n    allowContextMenu || (!isSizeLarge && !previewMode && !_deleted && !quoted);\n\n  // Only iOS/iPadOS browsers don't support contextmenu\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\n  const bindLongPressContext = useLongPress(\n    isIOS && showContextMenu\n      ? (e) => {\n          if (e.pointerType === 'mouse') return;\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\n\n          const { clientX, clientY } = e.touches?.[0] || e;\n          // link detection copied from onContextMenu because here it works\n          const link = e.target.closest('a');\n          if (\n            link &&\n            statusRef.current.contains(link) &&\n            !link.getAttribute('href').startsWith('#')\n          )\n            return;\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: clientX,\n              y: clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }\n      : null,\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const hotkeysEnabled = !readOnly && !previewMode && !quoted;\n  const rRef = useHotkeys('r, shift+r', replyStatus, {\n    enabled: hotkeysEnabled,\n  });\n  const fRef = useHotkeys('f, l', favouriteStatusNotify, {\n    enabled: hotkeysEnabled,\n  });\n  const dRef = useHotkeys('d', bookmarkStatusNotify, {\n    enabled: hotkeysEnabled,\n  });\n  const bRef = useHotkeys(\n    'shift+b',\n    () => {\n      (async () => {\n        try {\n          const done = await confirmBoostStatus();\n          if (!isSizeLarge && done) {\n            showToast(\n              reblogged\n                ? `Unboosted @${username || acct}'s post`\n                : `Boosted @${username || acct}'s post`,\n            );\n          }\n        } catch (e) {}\n      })();\n    },\n    {\n      enabled: hotkeysEnabled && canBoost,\n    },\n  );\n  const xRef = useHotkeys('x', (e) => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const spoilerButton = activeStatus.querySelector(\n        '.spoiler-button:not(.spoiling)',\n      );\n      if (spoilerButton) {\n        e.stopPropagation();\n        spoilerButton.click();\n      } else {\n        const spoilerMediaButton = activeStatus.querySelector(\n          '.spoiler-media-button:not(.spoiling)',\n        );\n        if (spoilerMediaButton) {\n          e.stopPropagation();\n          spoilerMediaButton.click();\n        }\n      }\n    }\n  });\n\n  const displayedMediaAttachments = mediaAttachments.slice(\n    0,\n    isSizeLarge ? undefined : 4,\n  );\n  const showMultipleMediaCaptions =\n    mediaAttachments.length > 1 &&\n    displayedMediaAttachments.some(\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\n    );\n  const captionChildren = useMemo(() => {\n    if (!showMultipleMediaCaptions) return null;\n    const attachments = [];\n    displayedMediaAttachments.forEach((media, i) => {\n      if (!media.description) return;\n      const index = attachments.findIndex(\n        (attachment) => attachment.media.description === media.description,\n      );\n      if (index === -1) {\n        attachments.push({\n          media,\n          indices: [i],\n        });\n      } else {\n        attachments[index].indices.push(i);\n      }\n    });\n    return attachments.map(({ media, indices }) => (\n      <div\n        key={media.id}\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          states.showMediaAlt = {\n            alt: media.description,\n            lang: language,\n          };\n        }}\n        title={media.description}\n      >\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\n      </div>\n    ));\n\n    // return displayedMediaAttachments.map(\n    //   (media, i) =>\n    //     !!media.description && (\n    //       <div\n    //         key={media.id}\n    //         data-caption-index={i + 1}\n    //         onClick={(e) => {\n    //           e.preventDefault();\n    //           e.stopPropagation();\n    //           states.showMediaAlt = {\n    //             alt: media.description,\n    //             lang: language,\n    //           };\n    //         }}\n    //         title={media.description}\n    //       >\n    //         <sup>{i + 1}</sup> {media.description}\n    //       </div>\n    //     ),\n    // );\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\n\n  const isThread = useMemo(() => {\n    return (\n      (!!inReplyToId && inReplyToAccountId === status.account?.id) ||\n      !!snapStates.statusThreadNumber[sKey]\n    );\n  }, [\n    inReplyToId,\n    inReplyToAccountId,\n    status.account?.id,\n    snapStates.statusThreadNumber[sKey],\n  ]);\n\n  const showCommentHint = useMemo(() => {\n    return (\n      enableCommentHint &&\n      !isThread &&\n      !withinContext &&\n      !inReplyToId &&\n      visibility === 'public' &&\n      repliesCount > 0\n    );\n  }, [\n    enableCommentHint,\n    isThread,\n    withinContext,\n    inReplyToId,\n    repliesCount,\n    visibility,\n  ]);\n  const showCommentCount = useMemo(() => {\n    if (\n      card ||\n      poll ||\n      sensitive ||\n      spoilerText ||\n      mediaAttachments?.length ||\n      isThread ||\n      withinContext ||\n      inReplyToId ||\n      repliesCount <= 0\n    ) {\n      return false;\n    }\n    const questionRegex = /[??？︖❓❔⁇⁈⁉¿‽؟]/;\n    const containsQuestion = questionRegex.test(content);\n    if (!containsQuestion) return false;\n    const contentLength = htmlContentLength(content);\n    if (contentLength > 0 && contentLength <= SHOW_COMMENT_COUNT_LIMIT) {\n      return true;\n    }\n  }, [\n    card,\n    poll,\n    sensitive,\n    spoilerText,\n    mediaAttachments,\n    reblog,\n    isThread,\n    withinContext,\n    inReplyToId,\n    repliesCount,\n    content,\n  ]);\n\n  return (\n    <>\n      {showReplyParent && !!(inReplyToId && inReplyToAccountId) && (\n        <StatusCompact sKey={sKey} />\n      )}\n      <article\n        data-state-post-id={sKey}\n        ref={(node) => {\n          statusRef.current = node;\n          // Use parent node if it's in focus\n          // Use case: <a><status /></a>\n          // When navigating (j/k), the <a> is focused instead of <status />\n          // Hotkey binding doesn't bubble up thus this hack\n          const nodeRef =\n            node?.closest?.(\n              '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\n            ) || node;\n          rRef.current = nodeRef;\n          fRef.current = nodeRef;\n          dRef.current = nodeRef;\n          bRef.current = nodeRef;\n          xRef.current = nodeRef;\n        }}\n        tabindex=\"-1\"\n        class={`status ${\n          !withinContext && inReplyToId && inReplyToAccount\n            ? 'status-reply-to'\n            : ''\n        } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\n          {\n            s: 'small',\n            m: 'medium',\n            l: 'large',\n          }[size]\n        } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''} ${\n          isContextMenuOpen ? 'status-menu-open' : ''\n        }`}\n        onMouseEnter={debugHover}\n        onContextMenu={(e) => {\n          if (!showContextMenu) return;\n          if (e.metaKey) return;\n          // console.log('context menu', e);\n          const link = e.target.closest('a');\n          if (\n            link &&\n            statusRef.current.contains(link) &&\n            !link.getAttribute('href').startsWith('#')\n          )\n            return;\n\n          // If there's selected text, don't show custom context menu\n          const selection = window.getSelection?.();\n          if (selection.toString().length > 0) {\n            const { anchorNode } = selection;\n            if (statusRef.current?.contains(anchorNode)) {\n              return;\n            }\n          }\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: e.clientX,\n              y: e.clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }}\n        {...(showContextMenu ? bindLongPressContext() : {})}\n      >\n        {showContextMenu && (\n          <ControlledMenu\n            ref={contextMenuRef}\n            state={isContextMenuOpen ? 'open' : undefined}\n            {...contextMenuProps}\n            onClose={(e) => {\n              setIsContextMenuOpen(false);\n              // statusRef.current?.focus?.();\n              if (e?.reason === 'click') {\n                statusRef.current?.closest('[tabindex]')?.focus?.();\n              }\n            }}\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n              onClick: () => {\n                contextMenuRef.current?.closeMenu?.();\n              },\n            }}\n            overflow=\"auto\"\n            boundingBoxPadding={safeBoundingBoxPadding()}\n            unmountOnClose\n          >\n            {StatusMenuItems}\n          </ControlledMenu>\n        )}\n        {showActionsBar &&\n          size !== 'l' &&\n          !previewMode &&\n          !readOnly &&\n          !_deleted &&\n          !quoted && (\n            <div\n              class={`status-actions ${\n                isContextMenuOpen === 'actions-bar' ? 'open' : ''\n              }`}\n              ref={actionsRef}\n            >\n              <StatusButton\n                size=\"s\"\n                title=\"Reply\"\n                alt=\"Reply\"\n                class=\"reply-button\"\n                icon=\"comment\"\n                iconSize=\"m\"\n                onClick={replyStatus}\n              />\n              <StatusButton\n                size=\"s\"\n                checked={favourited}\n                title={['Like', 'Unlike']}\n                alt={['Like', 'Liked']}\n                class=\"favourite-button\"\n                icon=\"heart\"\n                iconSize=\"m\"\n                count={favouritesCount}\n                onClick={favouriteStatusNotify}\n              />\n              <button\n                type=\"button\"\n                title=\"More\"\n                class=\"plain more-button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setContextMenuProps({\n                    anchorRef: {\n                      current: e.currentTarget,\n                    },\n                    align: 'start',\n                    direction: 'left',\n                    gap: 0,\n                    shift: -8,\n                  });\n                  setIsContextMenuOpen('actions-bar');\n                }}\n              >\n                <Icon icon=\"more2\" size=\"m\" alt=\"More\" />\n              </button>\n            </div>\n          )}\n        {size !== 'l' && (\n          <div class=\"status-badge\">\n            {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\n            {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\n            {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\n            {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\n          </div>\n        )}\n        {size !== 's' && (\n          <a\n            href={accountURL}\n            tabindex=\"-1\"\n            // target=\"_blank\"\n            title={`@${acct}`}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              states.showAccount = {\n                account: status.account,\n                instance,\n              };\n            }}\n          >\n            <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\n          </a>\n        )}\n        <div class=\"container\">\n          <div class=\"meta\">\n            <span class=\"meta-name\">\n              <NameText\n                account={status.account}\n                instance={instance}\n                showAvatar={size === 's'}\n                showAcct={isSizeLarge}\n              />\n            </span>\n            {/* {inReplyToAccount && !withinContext && size !== 's' && (\n              <>\n                {' '}\n                <span class=\"ib\">\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\n                  <NameText account={inReplyToAccount} instance={instance} short />\n                </span>\n              </>\n            )} */}\n            {/* </span> */}{' '}\n            {size !== 'l' &&\n              (_deleted ? (\n                <span class=\"status-deleted-tag\">Deleted</span>\n              ) : url && !previewMode && !readOnly && !quoted ? (\n                <Link\n                  to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                  onClick={(e) => {\n                    if (\n                      e.metaKey ||\n                      e.ctrlKey ||\n                      e.shiftKey ||\n                      e.altKey ||\n                      e.which === 2\n                    ) {\n                      return;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onStatusLinkClick?.(e, status);\n                    setContextMenuProps({\n                      anchorRef: {\n                        current: e.currentTarget,\n                      },\n                      align: 'end',\n                      direction: 'bottom',\n                      gap: 4,\n                    });\n                    setIsContextMenuOpen(true);\n                  }}\n                  class={`time ${\n                    isContextMenuOpen && contextMenuProps?.anchorRef\n                      ? 'is-open'\n                      : ''\n                  }`}\n                >\n                  {showCommentHint && !showCommentCount ? (\n                    <Icon\n                      icon=\"comment2\"\n                      size=\"s\"\n                      alt={`${repliesCount} ${\n                        repliesCount === 1 ? 'reply' : 'replies'\n                      }`}\n                    />\n                  ) : (\n                    visibility !== 'public' &&\n                    visibility !== 'direct' && (\n                      <Icon\n                        icon={visibilityIconsMap[visibility]}\n                        alt={visibilityText[visibility]}\n                        size=\"s\"\n                      />\n                    )\n                  )}{' '}\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                  {!previewMode && !readOnly && (\n                    <Icon icon=\"more2\" class=\"more\" />\n                  )}\n                </Link>\n              ) : (\n                // <Menu\n                //   instanceRef={menuInstanceRef}\n                //   portal={{\n                //     target: document.body,\n                //   }}\n                //   containerProps={{\n                //     style: {\n                //       // Higher than the backdrop\n                //       zIndex: 1001,\n                //     },\n                //     onClick: (e) => {\n                //       if (e.target === e.currentTarget)\n                //         menuInstanceRef.current?.closeMenu?.();\n                //     },\n                //   }}\n                //   align=\"end\"\n                //   gap={4}\n                //   overflow=\"auto\"\n                //   viewScroll=\"close\"\n                //   boundingBoxPadding=\"8 8 8 8\"\n                //   unmountOnClose\n                //   menuButton={({ open }) => (\n                //     <Link\n                //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                //       onClick={(e) => {\n                //         e.preventDefault();\n                //         e.stopPropagation();\n                //         onStatusLinkClick?.(e, status);\n                //       }}\n                //       class={`time ${open ? 'is-open' : ''}`}\n                //     >\n                //       <Icon\n                //         icon={visibilityIconsMap[visibility]}\n                //         alt={visibilityText[visibility]}\n                //         size=\"s\"\n                //       />{' '}\n                //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                //     </Link>\n                //   )}\n                // >\n                //   {StatusMenuItems}\n                // </Menu>\n                <span class=\"time\">\n                  {visibility !== 'public' && visibility !== 'direct' && (\n                    <>\n                      <Icon\n                        icon={visibilityIconsMap[visibility]}\n                        alt={visibilityText[visibility]}\n                        size=\"s\"\n                      />{' '}\n                    </>\n                  )}\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                </span>\n              ))}\n          </div>\n          {visibility === 'direct' && (\n            <>\n              <div class=\"status-direct-badge\">Private mention</div>{' '}\n            </>\n          )}\n          {!withinContext && (\n            <>\n              {isThread ? (\n                <div class=\"status-thread-badge\">\n                  <Icon icon=\"thread\" size=\"s\" />\n                  Thread\n                  {snapStates.statusThreadNumber[sKey]\n                    ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n                    : ''}\n                </div>\n              ) : (\n                !!inReplyToId &&\n                !!inReplyToAccount &&\n                (!!spoilerText ||\n                  !mentions.find((mention) => {\n                    return mention.id === inReplyToAccountId;\n                  })) && (\n                  <div class=\"status-reply-badge\">\n                    <Icon icon=\"reply\" />{' '}\n                    <NameText\n                      account={inReplyToAccount}\n                      instance={instance}\n                      short\n                    />\n                  </div>\n                )\n              )}\n            </>\n          )}\n          <div\n            class={`content-container ${\n              spoilerText || sensitive ? 'has-spoiler' : ''\n            } ${showSpoiler ? 'show-spoiler' : ''} ${\n              showSpoilerMedia ? 'show-media' : ''\n            }`}\n            data-content-text-weight={contentTextWeight ? textWeight() : null}\n            style={\n              (isSizeLarge || contentTextWeight) && {\n                '--content-text-weight': textWeight(),\n              }\n            }\n          >\n            {!!spoilerText && (\n              <>\n                <div\n                  class=\"content spoiler-content\"\n                  lang={language}\n                  dir=\"auto\"\n                  ref={spoilerContentRef}\n                  data-read-more={readMoreText}\n                >\n                  <p>\n                    <EmojiText text={spoilerText} emojis={emojis} />\n                  </p>\n                </div>\n                {readingExpandSpoilers || previewMode ? (\n                  <div class=\"spoiler-divider\">\n                    <Icon icon=\"eye-open\" /> Content warning\n                  </div>\n                ) : (\n                  <button\n                    class={`light spoiler-button ${\n                      showSpoiler ? 'spoiling' : ''\n                    }`}\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      if (showSpoiler) {\n                        delete states.spoilers[id];\n                        if (!readingExpandSpoilers) {\n                          delete states.spoilersMedia[id];\n                        }\n                      } else {\n                        states.spoilers[id] = true;\n                        if (!readingExpandSpoilers) {\n                          states.spoilersMedia[id] = true;\n                        }\n                      }\n                    }}\n                  >\n                    <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\n                    {showSpoiler ? 'Show less' : 'Show content'}\n                  </button>\n                )}\n              </>\n            )}\n            {!!content && (\n              <div\n                class=\"content\"\n                ref={contentRef}\n                data-read-more={readMoreText}\n              >\n                <PostContent\n                  post={status}\n                  instance={instance}\n                  previewMode={previewMode}\n                />\n                <QuoteStatuses id={id} instance={instance} level={quoted} />\n              </div>\n            )}\n            {!!poll && (\n              <Poll\n                lang={language}\n                poll={poll}\n                readOnly={readOnly || !sameInstance || !authenticated}\n                onUpdate={(newPoll) => {\n                  states.statuses[sKey].poll = newPoll;\n                }}\n                refresh={() => {\n                  return masto.v1.polls\n                    .$select(poll.id)\n                    .fetch()\n                    .then((pollResponse) => {\n                      states.statuses[sKey].poll = pollResponse;\n                    })\n                    .catch((e) => {}); // Silently fail\n                }}\n                votePoll={(choices) => {\n                  return masto.v1.polls\n                    .$select(poll.id)\n                    .votes.create({\n                      choices,\n                    })\n                    .then((pollResponse) => {\n                      states.statuses[sKey].poll = pollResponse;\n                    })\n                    .catch((e) => {}); // Silently fail\n                }}\n              />\n            )}\n            {(((enableTranslate || inlineTranslate) &&\n              !!content.trim() &&\n              !!getHTMLText(emojifyText(content, emojis)) &&\n              differentLanguage) ||\n              forceTranslate) && (\n              <TranslationBlock\n                forceTranslate={forceTranslate || inlineTranslate}\n                mini={!isSizeLarge && !withinContext}\n                sourceLanguage={language}\n                text={getPostText(status)}\n              />\n            )}\n            {!previewMode &&\n              sensitive &&\n              !!mediaAttachments.length &&\n              readingExpandMedia !== 'show_all' && (\n                <button\n                  class={`plain spoiler-media-button ${\n                    showSpoilerMedia ? 'spoiling' : ''\n                  }`}\n                  type=\"button\"\n                  hidden={!readingExpandSpoilers && !!spoilerText}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (showSpoilerMedia) {\n                      delete states.spoilersMedia[id];\n                    } else {\n                      states.spoilersMedia[id] = true;\n                    }\n                  }}\n                >\n                  <Icon icon={showSpoilerMedia ? 'eye-open' : 'eye-close'} />{' '}\n                  {showSpoilerMedia ? 'Show less' : 'Show media'}\n                </button>\n              )}\n            {!!mediaAttachments.length && (\n              <MultipleMediaFigure\n                lang={language}\n                enabled={showMultipleMediaCaptions}\n                captionChildren={captionChildren}\n              >\n                <div\n                  ref={mediaContainerRef}\n                  class={`media-container media-eq${mediaAttachments.length} ${\n                    mediaAttachments.length > 2 ? 'media-gt2' : ''\n                  } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\n                >\n                  {displayedMediaAttachments.map((media, i) => (\n                    <Media\n                      key={media.id}\n                      media={media}\n                      autoAnimate={isSizeLarge}\n                      showCaption={mediaAttachments.length === 1}\n                      allowLongerCaption={\n                        !content && mediaAttachments.length === 1\n                      }\n                      lang={language}\n                      altIndex={\n                        showMultipleMediaCaptions &&\n                        !!media.description &&\n                        i + 1\n                      }\n                      to={`/${instance}/s/${id}?${\n                        withinContext ? 'media' : 'media-only'\n                      }=${i + 1}`}\n                      onClick={\n                        onMediaClick\n                          ? (e) => {\n                              onMediaClick(e, i, media, status);\n                            }\n                          : undefined\n                      }\n                    />\n                  ))}\n                </div>\n              </MultipleMediaFigure>\n            )}\n            {!!card &&\n              /^https/i.test(card?.url) &&\n              !sensitive &&\n              !spoilerText &&\n              !poll &&\n              !mediaAttachments.length &&\n              !snapStates.statusQuotes[sKey] && (\n                <Card\n                  card={card}\n                  selfReferential={\n                    card?.url === status.url || card?.url === status.uri\n                  }\n                  instance={currentInstance}\n                />\n              )}\n          </div>\n          {!isSizeLarge && showCommentCount && (\n            <div class=\"content-comment-hint insignificant\">\n              <Icon icon=\"comment2\" alt=\"Replies\" /> {repliesCount}\n            </div>\n          )}\n          {isSizeLarge && (\n            <>\n              <div class=\"extra-meta\">\n                {_deleted ? (\n                  <span class=\"status-deleted-tag\">Deleted</span>\n                ) : (\n                  <>\n                    {/* <Icon\n                      icon={visibilityIconsMap[visibility]}\n                      alt={visibilityText[visibility]}\n                    /> */}\n                    <span>{visibilityText[visibility]}</span> &bull;{' '}\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <time\n                        class=\"created\"\n                        datetime={createdAtDate.toISOString()}\n                        title={createdAtDate.toLocaleString()}\n                      >\n                        {createdDateText}\n                      </time>\n                    </a>\n                    {editedAt && (\n                      <>\n                        {' '}\n                        &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\n                        <time\n                          tabIndex=\"0\"\n                          class=\"edited\"\n                          datetime={editedAtDate.toISOString()}\n                          onClick={() => {\n                            setShowEdited(id);\n                          }}\n                        >\n                          {editedDateText}\n                        </time>\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n              {!!emojiReactions?.length && (\n                <div class=\"emoji-reactions\">\n                  {emojiReactions.map((emojiReaction) => {\n                    const { name, count, me } = emojiReaction;\n                    const isShortCode = /^:.+?:$/.test(name);\n                    if (isShortCode) {\n                      const emoji = emojis.find(\n                        (e) =>\n                          e.shortcode ===\n                          name.replace(/^:/, '').replace(/:$/, ''),\n                      );\n                      if (emoji) {\n                        return (\n                          <span\n                            class={`emoji-reaction tag ${\n                              me ? '' : 'insignificant'\n                            }`}\n                          >\n                            <CustomEmoji\n                              alt={name}\n                              url={emoji.url}\n                              staticUrl={emoji.staticUrl}\n                            />\n                            {count}\n                          </span>\n                        );\n                      }\n                    }\n                    return (\n                      <span\n                        class={`emoji-reaction tag ${\n                          me ? '' : 'insignificant'\n                        }`}\n                      >\n                        {name} {count}\n                      </span>\n                    );\n                  })}\n                </div>\n              )}\n              <div class={`actions ${_deleted ? 'disabled' : ''}`}>\n                <div class=\"action has-count\">\n                  <StatusButton\n                    title=\"Reply\"\n                    alt=\"Comments\"\n                    class=\"reply-button\"\n                    icon=\"comment\"\n                    count={repliesCount}\n                    onClick={replyStatus}\n                  />\n                </div>\n                {/* <div class=\"action has-count\">\n                <StatusButton\n                  checked={reblogged}\n                  title={['Boost', 'Unboost']}\n                  alt={['Boost', 'Boosted']}\n                  class=\"reblog-button\"\n                  icon=\"rocket\"\n                  count={reblogsCount}\n                  onClick={boostStatus}\n                  disabled={!canBoost}\n                />\n              </div> */}\n                <MenuConfirm\n                  disabled={!canBoost}\n                  onClick={confirmBoostStatus}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"rocket\" />\n                      <span>{reblogged ? 'Unboost' : 'Boost'}</span>\n                    </>\n                  }\n                  menuExtras={\n                    <MenuItem\n                      onClick={() => {\n                        states.showCompose = {\n                          draftStatus: {\n                            status: `\\n${url}`,\n                          },\n                        };\n                      }}\n                    >\n                      <Icon icon=\"quote\" />\n                      <span>Quote</span>\n                    </MenuItem>\n                  }\n                  menuFooter={\n                    mediaNoDesc &&\n                    !reblogged && (\n                      <div class=\"footer\">\n                        <Icon icon=\"alert\" />\n                        Some media have no descriptions.\n                      </div>\n                    )\n                  }\n                >\n                  <div class=\"action has-count\">\n                    <StatusButton\n                      checked={reblogged}\n                      title={['Boost', 'Unboost']}\n                      alt={['Boost', 'Boosted']}\n                      class=\"reblog-button\"\n                      icon=\"rocket\"\n                      count={reblogsCount}\n                      // onClick={boostStatus}\n                      disabled={!canBoost}\n                    />\n                  </div>\n                </MenuConfirm>\n                <div class=\"action has-count\">\n                  <StatusButton\n                    checked={favourited}\n                    title={['Like', 'Unlike']}\n                    alt={['Like', 'Liked']}\n                    class=\"favourite-button\"\n                    icon=\"heart\"\n                    count={favouritesCount}\n                    onClick={favouriteStatus}\n                  />\n                </div>\n                <div class=\"action\">\n                  <StatusButton\n                    checked={bookmarked}\n                    title={['Bookmark', 'Unbookmark']}\n                    alt={['Bookmark', 'Bookmarked']}\n                    class=\"bookmark-button\"\n                    icon=\"bookmark\"\n                    onClick={bookmarkStatus}\n                  />\n                </div>\n                <Menu2\n                  portal={{\n                    target:\n                      document.querySelector('.status-deck') || document.body,\n                  }}\n                  align=\"end\"\n                  gap={4}\n                  overflow=\"auto\"\n                  viewScroll=\"close\"\n                  menuButton={\n                    <div class=\"action\">\n                      <button\n                        type=\"button\"\n                        title=\"More\"\n                        class=\"plain more-button\"\n                      >\n                        <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                      </button>\n                    </div>\n                  }\n                >\n                  {StatusMenuItems}\n                </Menu2>\n              </div>\n            </>\n          )}\n        </div>\n        {!!showEdited && (\n          <Modal\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                setShowEdited(false);\n                // statusRef.current?.focus();\n              }\n            }}\n          >\n            <EditedAtModal\n              statusID={showEdited}\n              instance={instance}\n              fetchStatusHistory={() => {\n                return masto.v1.statuses.$select(showEdited).history.list();\n              }}\n              onClose={() => {\n                setShowEdited(false);\n                statusRef.current?.focus();\n              }}\n            />\n          </Modal>\n        )}\n        {!!showEmbed && (\n          <Modal\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                setShowEmbed(false);\n              }\n            }}\n          >\n            <EmbedModal\n              post={status}\n              instance={instance}\n              onClose={() => {\n                setShowEmbed(false);\n              }}\n            />\n          </Modal>\n        )}\n      </article>\n    </>\n  );\n}\n\nfunction MultipleMediaFigure(props) {\n  const { enabled, children, lang, captionChildren } = props;\n  if (!enabled || !captionChildren) return children;\n  return (\n    <figure class=\"media-figure-multiple\">\n      {children}\n      <figcaption lang={lang} dir=\"auto\">\n        {captionChildren}\n      </figcaption>\n    </figure>\n  );\n}\n\nfunction Card({ card, selfReferential, instance }) {\n  const snapStates = useSnapshot(states);\n  const {\n    blurhash,\n    title,\n    description,\n    html,\n    providerName,\n    providerUrl,\n    authorName,\n    authorUrl,\n    width,\n    height,\n    image,\n    imageDescription,\n    url,\n    type,\n    embedUrl,\n    language,\n    publishedAt,\n  } = card;\n\n  /* type\n  link = Link OEmbed\n  photo = Photo OEmbed\n  video = Video OEmbed\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\n  */\n\n  const hasText = title || providerName || authorName;\n  const isLandscape = width / height >= 1.2;\n  const size = isLandscape ? 'large' : '';\n\n  const [cardStatusURL, setCardStatusURL] = useState(null);\n  // const [cardStatusID, setCardStatusID] = useState(null);\n  useEffect(() => {\n    if (hasText && image && !selfReferential && isMastodonLinkMaybe(url)) {\n      unfurlMastodonLink(instance, url).then((result) => {\n        if (!result) return;\n        const { id, url } = result;\n        setCardStatusURL('#' + url);\n\n        // NOTE: This is for quote post\n        // (async () => {\n        //   const { masto } = api({ instance });\n        //   const status = await masto.v1.statuses.$select(id).fetch();\n        //   saveStatus(status, instance);\n        //   setCardStatusID(id);\n        // })();\n      });\n    }\n  }, [hasText, image, selfReferential]);\n\n  // if (cardStatusID) {\n  //   return (\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\n  //   );\n  // }\n\n  if (snapStates.unfurledLinks[url]) return null;\n\n  const hasIframeHTML = /<iframe/i.test(html);\n  const handleClick = useCallback(\n    (e) => {\n      if (hasIframeHTML) {\n        e.preventDefault();\n        states.showEmbedModal = {\n          html,\n          url: url || embedUrl,\n          width,\n          height,\n        };\n      }\n    },\n    [hasIframeHTML],\n  );\n\n  if (hasText && (image || (type === 'photo' && blurhash))) {\n    const domain = new URL(url).hostname\n      .replace(/^www\\./, '')\n      .replace(/\\/$/, '');\n    let blurhashImage;\n    const rgbAverageColor =\n      image && blurhash ? getBlurHashAverageColor(blurhash) : null;\n    if (!image) {\n      const w = 44;\n      const h = 44;\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\n      const canvas = window.OffscreenCanvas\n        ? new OffscreenCanvas(1, 1)\n        : document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = false;\n      const imageData = ctx.createImageData(w, h);\n      imageData.data.set(blurhashPixels);\n      ctx.putImageData(imageData, 0, 0);\n      blurhashImage = canvas.toDataURL();\n    }\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link ${blurhashImage ? '' : size}`}\n        lang={language}\n        dir=\"auto\"\n        style={{\n          '--average-color':\n            rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n        }}\n        onClick={handleClick}\n      >\n        <div class=\"card-image\">\n          <img\n            src={image || blurhashImage}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n            alt={imageDescription || ''}\n            onError={(e) => {\n              try {\n                e.target.style.display = 'none';\n              } catch (e) {}\n            }}\n          />\n        </div>\n        <div class=\"meta-container\">\n          <p class=\"meta domain\">\n            <span class=\"domain\">{domain}</span>{' '}\n            {!!publishedAt && <>&middot; </>}\n            {!!publishedAt && (\n              <>\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\n              </>\n            )}\n          </p>\n          <p class=\"title\" dir=\"auto\" title={title}>\n            {title}\n          </p>\n          <p class=\"meta\" dir=\"auto\" title={description}>\n            {description ||\n              (!!publishedAt && (\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\n              ))}\n          </p>\n        </div>\n      </a>\n    );\n  } else if (type === 'photo') {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n        class=\"card photo\"\n        onClick={handleClick}\n      >\n        <img\n          src={embedUrl}\n          width={width}\n          height={height}\n          alt={title || description}\n          loading=\"lazy\"\n          style={{\n            height: 'auto',\n            aspectRatio: `${width}/${height}`,\n          }}\n        />\n      </a>\n    );\n  } else {\n    if (type === 'video') {\n      if (/youtube/i.test(providerName)) {\n        // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\n        const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\n        if (videoID) {\n          return (\n            <a class=\"card video\" onClick={handleClick}>\n              <lite-youtube videoid={videoID} nocookie></lite-youtube>\n            </a>\n          );\n        }\n      }\n      // return (\n      //   <div\n      //     class=\"card video\"\n      //     style={{\n      //       aspectRatio: `${width}/${height}`,\n      //     }}\n      //     dangerouslySetInnerHTML={{ __html: html }}\n      //   />\n      // );\n    }\n    if (hasText && !image) {\n      const domain = new URL(url).hostname.replace(/^www\\./, '');\n      return (\n        <a\n          href={cardStatusURL || url}\n          target={cardStatusURL ? null : '_blank'}\n          rel=\"nofollow noopener noreferrer\"\n          class={`card link no-image`}\n          lang={language}\n          onClick={handleClick}\n        >\n          <div class=\"meta-container\">\n            <p class=\"meta domain\">\n              <span class=\"domain\">\n                <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\n              </span>{' '}\n              {!!publishedAt && <>&middot; </>}\n              {!!publishedAt && (\n                <>\n                  <RelativeTime datetime={publishedAt} format=\"micro\" />\n                </>\n              )}\n            </p>\n            <p class=\"title\" title={title}>\n              {title}\n            </p>\n            <p class=\"meta\" title={description || providerName || authorName}>\n              {description || providerName || authorName}\n            </p>\n          </div>\n        </a>\n      );\n    }\n  }\n}\n\nfunction EditedAtModal({\n  statusID,\n  instance,\n  fetchStatusHistory = () => {},\n  onClose,\n}) {\n  const [uiState, setUIState] = useState('default');\n  const [editHistory, setEditHistory] = useState([]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const editHistory = await fetchStatusHistory();\n        console.log(editHistory);\n        setEditHistory(editHistory);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"edit-history\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Edit History</h2>\n        {uiState === 'error' && <p>Failed to load history</p>}\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> Loading&hellip;\n          </p>\n        )}\n      </header>\n      <main tabIndex=\"-1\">\n        {editHistory.length > 0 && (\n          <ol>\n            {editHistory.map((status) => {\n              const { createdAt } = status;\n              const createdAtDate = new Date(createdAt);\n              return (\n                <li key={createdAt} class=\"history-item\">\n                  <h3>\n                    <time>\n                      {niceDateTime(createdAtDate, {\n                        formatOpts: {\n                          weekday: 'short',\n                          second: 'numeric',\n                        },\n                      })}\n                    </time>\n                  </h3>\n                  <Status\n                    status={status}\n                    instance={instance}\n                    size=\"s\"\n                    withinContext\n                    readOnly\n                    previewMode\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction generateHTMLCode(post, instance, level = 0) {\n  const {\n    account: {\n      url: accountURL,\n      displayName,\n      acct,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    poll,\n    spoilerText,\n    language,\n    editedAt,\n    createdAt,\n    content,\n    mediaAttachments,\n    url,\n    emojis,\n  } = post;\n\n  const sKey = statusKey(id, instance);\n  const quotes = states.statusQuotes[sKey] || [];\n  const uniqueQuotes = quotes.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n  const quoteStatusesHTML =\n    uniqueQuotes.length && level <= 2\n      ? uniqueQuotes\n          .map((quote) => {\n            const { id, instance } = quote;\n            const sKey = statusKey(id, instance);\n            const s = states.statuses[sKey];\n            if (s) {\n              return generateHTMLCode(s, instance, ++level);\n            }\n          })\n          .join('')\n      : '';\n\n  const createdAtDate = new Date(createdAt);\n  // const editedAtDate = editedAt && new Date(editedAt);\n\n  const contentHTML =\n    emojifyText(content, emojis) +\n    '\\n' +\n    quoteStatusesHTML +\n    '\\n' +\n    (poll?.options?.length\n      ? `\n        <p>📊:</p>\n        <ul>\n        ${poll.options\n          .map(\n            (option) => `\n              <li>\n                ${option.title}\n                ${option.votesCount >= 0 ? ` (${option.votesCount})` : ''}\n              </li>\n            `,\n          )\n          .join('')}\n        </ul>`\n      : '') +\n    (mediaAttachments.length > 0\n      ? '\\n' +\n        mediaAttachments\n          .map((media) => {\n            const {\n              description,\n              meta,\n              previewRemoteUrl,\n              previewUrl,\n              remoteUrl,\n              url,\n              type,\n            } = media;\n            const { original = {}, small } = meta || {};\n            const width = small?.width || original?.width;\n            const height = small?.height || original?.height;\n\n            // Prefer remote over original\n            const sourceMediaURL = remoteUrl || url;\n            const previewMediaURL = previewRemoteUrl || previewUrl;\n            const mediaURL = previewMediaURL || sourceMediaURL;\n\n            const sourceMediaURLObj = sourceMediaURL\n              ? new URL(sourceMediaURL)\n              : null;\n            const isVideoMaybe =\n              type === 'unknown' &&\n              sourceMediaURLObj &&\n              /\\.(mp4|m4r|m4v|mov|webm)$/i.test(sourceMediaURLObj.pathname);\n            const isAudioMaybe =\n              type === 'unknown' &&\n              sourceMediaURLObj &&\n              /\\.(mp3|ogg|wav|m4a|m4p|m4b)$/i.test(sourceMediaURLObj.pathname);\n            const isImage =\n              type === 'image' ||\n              (type === 'unknown' &&\n                previewMediaURL &&\n                !isVideoMaybe &&\n                !isAudioMaybe);\n            const isVideo = type === 'gifv' || type === 'video' || isVideoMaybe;\n            const isAudio = type === 'audio' || isAudioMaybe;\n\n            let mediaHTML = '';\n            if (isImage) {\n              mediaHTML = `<img src=\"${mediaURL}\" width=\"${width}\" height=\"${height}\" alt=\"${description}\" loading=\"lazy\" />`;\n            } else if (isVideo) {\n              mediaHTML = `\n                <video src=\"${sourceMediaURL}\" width=\"${width}\" height=\"${height}\" controls preload=\"auto\" poster=\"${previewMediaURL}\" loading=\"lazy\"></video>\n                ${description ? `<figcaption>${description}</figcaption>` : ''}\n              `;\n            } else if (isAudio) {\n              mediaHTML = `\n                <audio src=\"${sourceMediaURL}\" controls preload=\"auto\"></audio>\n                ${description ? `<figcaption>${description}</figcaption>` : ''}\n              `;\n            } else {\n              mediaHTML = `\n                <a href=\"${sourceMediaURL}\">📄 ${\n                description || sourceMediaURL\n              }</a>\n              `;\n            }\n\n            return `<figure>${mediaHTML}</figure>`;\n          })\n          .join('\\n')\n      : '');\n\n  const htmlCode = `\n    <blockquote lang=\"${language}\" cite=\"${url}\">\n      ${\n        spoilerText\n          ? `\n            <details>\n              <summary>${spoilerText}</summary>\n              ${contentHTML}\n            </details>\n          `\n          : contentHTML\n      }\n      <footer>\n        — ${emojifyText(\n          displayName,\n          accountEmojis,\n        )} (@${acct}) <a href=\"${url}\"><time datetime=\"${createdAtDate.toISOString()}\">${createdAtDate.toLocaleString()}</time></a>\n      </footer>\n    </blockquote>\n  `;\n\n  return prettify(htmlCode);\n}\n\nfunction EmbedModal({ post, instance, onClose }) {\n  const {\n    account: {\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    poll,\n    spoilerText,\n    language,\n    editedAt,\n    createdAt,\n    content,\n    mediaAttachments,\n    url,\n    emojis,\n  } = post;\n\n  const htmlCode = generateHTMLCode(post, instance);\n  return (\n    <div id=\"embed-post\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Embed post</h2>\n      </header>\n      <main tabIndex=\"-1\">\n        <h3>HTML Code</h3>\n        <textarea\n          class=\"embed-code\"\n          readonly\n          onClick={(e) => {\n            e.target.select();\n          }}\n        >\n          {htmlCode}\n        </textarea>\n        <button\n          type=\"button\"\n          onClick={() => {\n            try {\n              navigator.clipboard.writeText(htmlCode);\n              showToast('HTML code copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy HTML code');\n            }\n          }}\n        >\n          <Icon icon=\"clipboard\" /> <span>Copy</span>\n        </button>\n        {!!mediaAttachments?.length && (\n          <section>\n            <p>Media attachments:</p>\n            <ol class=\"links-list\">\n              {mediaAttachments.map((media) => {\n                return (\n                  <li key={media.id}>\n                    <a\n                      href={media.remoteUrl || media.url}\n                      target=\"_blank\"\n                      download\n                    >\n                      {media.remoteUrl || media.url}\n                    </a>\n                  </li>\n                );\n              })}\n            </ol>\n          </section>\n        )}\n        {!!accountEmojis?.length && (\n          <section>\n            <p>Account Emojis:</p>\n            <ul>\n              {accountEmojis.map((emoji) => {\n                return (\n                  <li key={emoji.shortcode}>\n                    <picture>\n                      <source\n                        srcset={emoji.staticUrl}\n                        media=\"(prefers-reduced-motion: reduce)\"\n                      ></source>\n                      <img\n                        class=\"shortcode-emoji emoji\"\n                        src={emoji.url}\n                        alt={`:${emoji.shortcode}:`}\n                        width=\"16\"\n                        height=\"16\"\n                        loading=\"lazy\"\n                        decoding=\"async\"\n                      />\n                    </picture>{' '}\n                    <code>:{emoji.shortcode}:</code> (\n                    <a href={emoji.url} target=\"_blank\" download>\n                      url\n                    </a>\n                    )\n                    {emoji.staticUrl ? (\n                      <>\n                        {' '}\n                        (\n                        <a href={emoji.staticUrl} target=\"_blank\" download>\n                          static\n                        </a>\n                        )\n                      </>\n                    ) : null}\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n        )}\n        {!!emojis?.length && (\n          <section>\n            <p>Emojis:</p>\n            <ul>\n              {emojis.map((emoji) => {\n                return (\n                  <li key={emoji.shortcode}>\n                    <picture>\n                      <source\n                        srcset={emoji.staticUrl}\n                        media=\"(prefers-reduced-motion: reduce)\"\n                      ></source>\n                      <img\n                        class=\"shortcode-emoji emoji\"\n                        src={emoji.url}\n                        alt={`:${emoji.shortcode}:`}\n                        width=\"16\"\n                        height=\"16\"\n                        loading=\"lazy\"\n                        decoding=\"async\"\n                      />\n                    </picture>{' '}\n                    <code>:{emoji.shortcode}:</code> (\n                    <a href={emoji.url} target=\"_blank\" download>\n                      url\n                    </a>\n                    )\n                    {emoji.staticUrl ? (\n                      <>\n                        {' '}\n                        (\n                        <a href={emoji.staticUrl} target=\"_blank\" download>\n                          static\n                        </a>\n                        )\n                      </>\n                    ) : null}\n                  </li>\n                );\n              })}\n            </ul>\n          </section>\n        )}\n        <section>\n          <small>\n            <p>Notes:</p>\n            <ul>\n              <li>\n                This is static, unstyled and scriptless. You may need to apply\n                your own styles and edit as needed.\n              </li>\n              <li>\n                Polls are not interactive, becomes a list with vote counts.\n              </li>\n              <li>\n                Media attachments can be images, videos, audios or any file\n                types.\n              </li>\n              <li>Post could be edited or deleted later.</li>\n            </ul>\n          </small>\n        </section>\n        <h3>Preview</h3>\n        <output\n          class=\"embed-preview\"\n          dangerouslySetInnerHTML={{ __html: htmlCode }}\n        />\n        <p>\n          <small>Note: This preview is lightly styled.</small>\n        </p>\n      </main>\n    </div>\n  );\n}\n\nfunction StatusButton({\n  checked,\n  count,\n  class: className,\n  title,\n  alt,\n  size,\n  icon,\n  iconSize = 'l',\n  onClick,\n  ...props\n}) {\n  if (typeof title === 'string') {\n    title = [title, title];\n  }\n  if (typeof alt === 'string') {\n    alt = [alt, alt];\n  }\n\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\n\n  useEffect(() => {\n    if (checked) {\n      setButtonTitle(title[1] || '');\n      setIconAlt(alt[1] || '');\n    } else {\n      setButtonTitle(title[0] || '');\n      setIconAlt(alt[0] || '');\n    }\n  }, [checked, title, alt]);\n\n  return (\n    <button\n      type=\"button\"\n      title={buttonTitle}\n      class={`plain ${size ? 'small' : ''} ${className} ${\n        checked ? 'checked' : ''\n      }`}\n      onClick={(e) => {\n        if (!onClick) return;\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n      {...props}\n    >\n      <Icon icon={icon} size={iconSize} alt={iconAlt} />\n      {!!count && (\n        <>\n          {' '}\n          <small title={count}>{shortenNumber(count)}</small>\n        </>\n      )}\n    </button>\n  );\n}\n\nfunction nicePostURL(url) {\n  if (!url) return;\n  const urlObj = new URL(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '');\n  // split only first slash\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\n  return (\n    <>\n      {host}\n      {username ? (\n        <>\n          /{username}\n          <wbr />\n          <span class=\"more-insignificant\">/{restPath}</span>\n        </>\n      ) : (\n        <span class=\"more-insignificant\">{path}</span>\n      )}\n    </>\n  );\n}\n\nfunction StatusCompact({ sKey }) {\n  const snapStates = useSnapshot(states);\n  const statusReply = snapStates.statusReply[sKey];\n  if (!statusReply) return null;\n\n  const { id, instance } = statusReply;\n  const status = getStatus(id, instance);\n  if (!status) return null;\n\n  const {\n    sensitive,\n    spoilerText,\n    account: { avatar, avatarStatic, bot },\n    visibility,\n    content,\n    language,\n    filtered,\n  } = status;\n  if (sensitive || spoilerText) return null;\n  if (!content) return null;\n\n  const srKey = statusKey(id, instance);\n  const statusPeekText = statusPeek(status);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') return null;\n\n  const filterTitleStr = filterInfo?.titlesStr || '';\n\n  return (\n    <article\n      class={`status compact-reply ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n      data-state-post-id={srKey}\n    >\n      <Avatar url={avatarStatic || avatar} squircle={bot} />\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {filterInfo ? (\n          <b class=\"status-filtered-badge badge-meta\" title={filterTitleStr}>\n            <span>Filtered</span>\n            <span>{filterTitleStr}</span>\n          </b>\n        ) : (\n          <span>{statusPeekText}</span>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction FilteredStatus({\n  status,\n  filterInfo,\n  instance,\n  containerProps = {},\n  showFollowedTags,\n}) {\n  const snapStates = useSnapshot(states);\n  const {\n    id: statusID,\n    account: { avatar, avatarStatic, bot, group },\n    createdAt,\n    visibility,\n    reblog,\n  } = status;\n  const isReblog = !!reblog;\n  const filterTitleStr = filterInfo?.titlesStr || '';\n  const createdAtDate = new Date(createdAt);\n  const statusPeekText = statusPeek(status.reblog || status);\n\n  const [showPeek, setShowPeek] = useState(false);\n  const bindLongPressPeek = useLongPress(\n    () => {\n      setShowPeek(true);\n    },\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const statusPeekRef = useTruncated();\n  const sKey = statusKey(status.id, instance);\n  const ssKey =\n    statusKey(status.id, instance) +\n    ' ' +\n    (statusKey(reblog?.id, instance) || '');\n\n  const actualStatusID = reblog?.id || statusID;\n  const url = instance\n    ? `/${instance}/s/${actualStatusID}`\n    : `/s/${actualStatusID}`;\n  const isFollowedTags =\n    showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length;\n\n  return (\n    <div\n      class={\n        isReblog\n          ? group\n            ? 'status-group'\n            : 'status-reblog'\n          : isFollowedTags\n          ? 'status-followed-tags'\n          : ''\n      }\n      {...containerProps}\n      // title={statusPeekText}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setShowPeek(true);\n      }}\n      {...bindLongPressPeek()}\n    >\n      <article data-state-post-id={ssKey} class=\"status filtered\" tabindex=\"-1\">\n        <b\n          class=\"status-filtered-badge clickable badge-meta\"\n          title={filterTitleStr}\n          onClick={(e) => {\n            e.preventDefault();\n            setShowPeek(true);\n          }}\n        >\n          <span>Filtered</span>\n          <span>{filterTitleStr}</span>\n        </b>{' '}\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\n        <span class=\"status-filtered-info\">\n          <span class=\"status-filtered-info-1\">\n            <NameText account={status.account} instance={instance} />{' '}\n            <Icon\n              icon={visibilityIconsMap[visibility]}\n              alt={visibilityText[visibility]}\n              size=\"s\"\n            />{' '}\n            {isReblog ? (\n              'boosted'\n            ) : isFollowedTags ? (\n              <span>\n                {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\n                  <span key={tag} class=\"status-followed-tag-item\">\n                    #{tag}\n                  </span>\n                ))}\n              </span>\n            ) : (\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\n            )}\n          </span>\n          <span class=\"status-filtered-info-2\">\n            {isReblog && (\n              <>\n                <Avatar\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\n                  squircle={bot}\n                />{' '}\n              </>\n            )}\n            {statusPeekText}\n          </span>\n        </span>\n      </article>\n      {!!showPeek && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowPeek(false);\n            }\n          }}\n        >\n          <div id=\"filtered-status-peek\" class=\"sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowPeek(false)}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\n            </header>\n            <main tabIndex=\"-1\">\n              <Link\n                ref={statusPeekRef}\n                class=\"status-link\"\n                to={url}\n                onClick={() => {\n                  setShowPeek(false);\n                }}\n                data-read-more=\"Read more →\"\n              >\n                <Status status={status} instance={instance} size=\"s\" readOnly />\n              </Link>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\n  if (!id || !instance) return;\n  const snapStates = useSnapshot(states);\n  const sKey = statusKey(id, instance);\n  const quotes = snapStates.statusQuotes[sKey];\n  const uniqueQuotes = quotes?.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n\n  if (!uniqueQuotes?.length) return;\n  if (level > 2) return;\n\n  return uniqueQuotes.map((q) => {\n    return (\n      <LazyShazam>\n        <Link\n          key={q.instance + q.id}\n          to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\n          class=\"status-card-link\"\n          data-read-more=\"Read more →\"\n        >\n          <Status\n            statusID={q.id}\n            instance={q.instance}\n            size=\"s\"\n            quoted={level + 1}\n            enableCommentHint\n          />\n        </Link>\n      </LazyShazam>\n    );\n  });\n});\n\nexport default memo(Status, (oldProps, newProps) => {\n  // Shallow equal all props except 'status'\n  // This will be pure static until status ID changes\n  const { status, ...restOldProps } = oldProps;\n  const { status: newStatus, ...restNewProps } = newProps;\n  return (\n    status?.id === newStatus?.id && shallowEqual(restOldProps, restNewProps)\n  );\n});\n","import './account-block.css';\n\n// import { useNavigate } from 'react-router-dom';\nimport enhanceContent from '../utils/enhance-content';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\n\nfunction AccountBlock({\n  skeleton,\n  account,\n  avatarSize = 'xl',\n  useAvatarStatic = false,\n  instance,\n  external,\n  internal,\n  onClick,\n  showActivity = false,\n  showStats = false,\n  accountInstance,\n  hideDisplayName = false,\n  relationship = {},\n  excludeRelationshipAttrs = [],\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"account-block skeleton\">\n        <Avatar size={avatarSize} />\n        <span>\n          <b>████████</b>\n          <br />\n          <span class=\"account-block-acct\">██████</span>\n        </span>\n      </div>\n    );\n  }\n\n  if (!account) {\n    return null;\n  }\n\n  // const navigate = useNavigate();\n\n  const {\n    id,\n    acct,\n    avatar,\n    avatarStatic,\n    displayName,\n    username,\n    emojis,\n    url,\n    statusesCount,\n    lastStatusAt,\n    bot,\n    fields,\n    note,\n    group,\n    followersCount,\n    createdAt,\n    locked,\n  } = account;\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n  if (accountInstance) {\n    acct2 = `@${accountInstance}`;\n  }\n\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\n\n  const excludedRelationship = {};\n  for (const r in relationship) {\n    if (!excludeRelationshipAttrs.includes(r)) {\n      excludedRelationship[r] = relationship[r];\n    }\n  }\n  const hasRelationship =\n    excludedRelationship.following ||\n    excludedRelationship.followedBy ||\n    excludedRelationship.requested;\n\n  return (\n    <a\n      class=\"account-block\"\n      href={url}\n      target={external ? '_blank' : null}\n      title={acct2 ? acct : `@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        if (internal) {\n          // navigate(`/${instance}/a/${id}`);\n          location.hash = `/${instance}/a/${id}`;\n        } else {\n          states.showAccount = {\n            account,\n            instance,\n          };\n        }\n      }}\n    >\n      <Avatar\n        url={useAvatarStatic ? avatarStatic : avatar || avatarStatic}\n        size={avatarSize}\n        squircle={bot}\n      />\n      <span class=\"account-block-content\">\n        {!hideDisplayName && (\n          <>\n            {displayName ? (\n              <b>\n                <EmojiText text={displayName} emojis={emojis} />\n              </b>\n            ) : (\n              <b>{username}</b>\n            )}\n          </>\n        )}{' '}\n        <span class=\"account-block-acct\">\n          {acct2 ? '' : '@'}\n          {acct1}\n          <wbr />\n          {acct2}\n          {locked && (\n            <>\n              {' '}\n              <Icon icon=\"lock\" size=\"s\" alt=\"Locked\" />\n            </>\n          )}\n        </span>\n        {showActivity && (\n          <>\n            <br />\n            <small class=\"last-status-at insignificant\">\n              Posts: {statusesCount}\n              {!!lastStatusAt && (\n                <>\n                  {' '}\n                  &middot; Last posted:{' '}\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </>\n              )}\n            </small>\n          </>\n        )}\n        {showStats && (\n          <div class=\"account-block-stats\">\n            {bot && (\n              <>\n                <span class=\"tag collapsed\">\n                  <Icon icon=\"bot\" /> Automated\n                </span>\n              </>\n            )}\n            {!!group && (\n              <>\n                <span class=\"tag collapsed\">\n                  <Icon icon=\"group\" /> Group\n                </span>\n              </>\n            )}\n            {hasRelationship && (\n              <div key={relationship.id} class=\"shazam-container-horizontal\">\n                <div class=\"shazam-container-inner\">\n                  {excludedRelationship.following &&\n                  excludedRelationship.followedBy ? (\n                    <span class=\"tag minimal\">Mutual</span>\n                  ) : excludedRelationship.requested ? (\n                    <span class=\"tag minimal\">Requested</span>\n                  ) : excludedRelationship.following ? (\n                    <span class=\"tag minimal\">Following</span>\n                  ) : excludedRelationship.followedBy ? (\n                    <span class=\"tag minimal\">Follows you</span>\n                  ) : null}\n                </div>\n              </div>\n            )}\n            {!!followersCount && (\n              <span class=\"ib\">\n                {shortenNumber(followersCount)}{' '}\n                {followersCount === 1 ? 'follower' : 'followers'}\n              </span>\n            )}\n            {!!verifiedField && (\n              <span class=\"verified-field\">\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(verifiedField.value, { emojis }),\n                  }}\n                />\n              </span>\n            )}\n            {!bot &&\n              !group &&\n              !hasRelationship &&\n              !followersCount &&\n              !verifiedField &&\n              !!createdAt && (\n                <span class=\"created-at\">\n                  Joined{' '}\n                  <time datetime={createdAt}>\n                    {niceDateTime(createdAt, {\n                      hideTime: true,\n                    })}\n                  </time>\n                </span>\n              )}\n          </div>\n        )}\n      </span>\n    </a>\n  );\n}\n\nexport default AccountBlock;\n","import { satisfies } from 'compare-versions';\n\nimport features from '../data/features.json';\n\nimport { getCurrentInstance } from './store-utils';\n\nconst supportsCache = {};\n\nfunction supports(feature) {\n  try {\n    const { version, domain } = getCurrentInstance();\n    const key = `${domain}-${feature}`;\n    if (supportsCache[key]) return supportsCache[key];\n    const range = features[feature];\n    if (!range) return false;\n    return (supportsCache[key] = satisfies(version, range, {\n      includePrerelease: true,\n      loose: true,\n    }));\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default supports;\n","import {\n  clear,\n  createStore,\n  del,\n  delMany,\n  get,\n  getMany,\n  keys,\n  set,\n} from 'idb-keyval';\n\nfunction initDB(dbName, storeName) {\n  const store = createStore(dbName, storeName);\n  return {\n    set: (key, val) => set(key, val, store),\n    get: (key) => get(key, store),\n    getMany: (keys) => getMany(keys, store),\n    del: (key) => del(key, store),\n    delMany: (keys) => delMany(keys, store),\n    clear: () => clear(store),\n    keys: () => keys(store),\n  };\n}\n\nexport default {\n  drafts: initDB('drafts-db', 'drafts-store'),\n  catchup: initDB('catchup-db', 'catchup-store'),\n};\n"],"file":"assets/db-09TCbh_p.js"}