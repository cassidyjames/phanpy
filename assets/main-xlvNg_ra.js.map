{"version":3,"file":"main-xlvNg_ra.js","sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../src/pages/accounts.jsx","../../src/assets/logo.svg","../../src/components/lang-selector.jsx","../../src/utils/push-notifications.js","../../src/pages/settings.jsx","../../src/utils/focus-deck.js","../../src/utils/useLocationChange.js","../../src/utils/lists.js","../../src/components/list-add-edit.jsx","../../src/components/account-info.jsx","../../src/components/account-sheet.jsx","../../src/components/drafts.jsx","../../src/components/embed-modal.jsx","../../src/components/generic-accounts.jsx","../../src/components/media-alt-modal.jsx","../../node_modules/chroma-js/src/utils/limit.js","../../node_modules/chroma-js/src/utils/type.js","../../node_modules/chroma-js/src/utils/unpack.js","../../node_modules/chroma-js/src/utils/index.js","../../node_modules/chroma-js/src/utils/multiply-matrices.js","../../node_modules/chroma-js/src/io/lab/lab-constants.js","../../node_modules/chroma-js/src/io/lab/lab2rgb.js","../../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","../../node_modules/chroma-js/src/io/lab/rgb2lab.js","../../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","../../node_modules/chroma-js/src/io/lch/lch2lab.js","../../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","../../node_modules/chroma-js/src/io/lch/lab2lch.js","../../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","../../src/components/media-modal.jsx","../../src/components/report-modal.jsx","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/modals.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../src/components/shortcuts.jsx","../../src/utils/timeline-utils.js","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/annual-report.jsx","../../src/pages/bookmarks.jsx","../../src/assets/features/catch-up.png","../../src/pages/catchup.jsx","../../src/pages/favourites.jsx","../../src/pages/filters.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/utils/group-notifications.js","../../src/pages/mentions.jsx","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/pages/search.jsx","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/data/instances.json?url","../../src/utils/oauth-pkce.js","../../src/utils/auth.js","../../src/pages/login.jsx","../../src/pages/scheduled-posts.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 20_000; // 20 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  const { t } = useLingui();\n\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  const visibleTimeout = useRef();\n  usePageVisibility((visible) => {\n    clearTimeout(visibleTimeout.current);\n    if (visible) {\n      setVisible(true);\n    } else {\n      visibleTimeout.current = setTimeout(() => {\n        setVisible(false);\n      }, POLL_INTERVAL);\n    }\n  });\n\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications.list({\n        limit: 1,\n        sinceId: states.notificationsLast.id,\n      });\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let streamTimeout;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          streamTimeout = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(streamTimeout);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys(\n    'shift+alt+k',\n    (e) => {\n      // Need modifers check due to useKey: true\n      if (!e.shiftKey || !e.altKey) return;\n\n      const currentCloakMode = states.settings.cloakMode;\n      states.settings.cloakMode = !currentCloakMode;\n      showToast({\n        text: currentCloakMode ? t`Cloak mode disabled` : t`Cloak mode enabled`,\n      });\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport openOSK from '../utils/open-osk';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport showCompose from '../utils/show-compose';\nimport states from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport SubMenu2 from './submenu2';\n\n// Function to fetch the latest posts from the current user\n// Use pmem to memoize fetch results for 1 minute\nconst fetchLatestPostsMemoized = pmem(\n  async (masto, currentAccountID) => {\n    const statusesIterator = masto.v1.accounts\n      .$select(currentAccountID)\n      .statuses.list({\n        limit: 3,\n        exclude_replies: true,\n        exclude_reblogs: true,\n      });\n    const { value } = await statusesIterator.next();\n    return value || [];\n  },\n  { maxAge: 60000 },\n); // 1 minute cache\n\nexport default function ComposeButton() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto } = api();\n\n  // Context menu state\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const buttonRef = useRef(null);\n  const menuRef = useRef(null);\n\n  function handleButton(e) {\n    if (snapStates.composerState.minimized) {\n      states.composerState.minimized = false;\n      openOSK();\n      return;\n    }\n\n    if (e.shiftKey) {\n      const newWin = openCompose();\n\n      if (!newWin) {\n        states.showCompose = true;\n      }\n    } else {\n      openOSK();\n      states.showCompose = true;\n    }\n  }\n\n  useHotkeys(\n    'c, shift+c',\n    handleButton,\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  // Setup longpress handler to open context menu\n  const bindLongPress = useLongPress(\n    () => {\n      setMenuOpen(true);\n    },\n    {\n      threshold: 600,\n    },\n  );\n\n  const fetchLatestPosts = useCallback(async () => {\n    try {\n      setLoadingPosts(true);\n      const currentAccountID = getCurrentAccountID();\n      if (!currentAccountID) {\n        return;\n      }\n      const posts = await fetchLatestPostsMemoized(masto, currentAccountID);\n      setLatestPosts(posts);\n    } catch (error) {\n    } finally {\n      setLoadingPosts(false);\n    }\n  }, [masto]);\n\n  // Function to handle opening the compose window to reply to a post\n  const handleReplyToPost = useCallback((post) => {\n    showCompose({\n      replyToStatus: post,\n    });\n    setMenuOpen(false);\n  }, []);\n\n  useEffect(() => {\n    if (menuOpen) {\n      fetchLatestPosts();\n    }\n  }, [fetchLatestPosts, menuOpen]);\n\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        id=\"compose-button\"\n        onClick={handleButton}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          setMenuOpen(true);\n        }}\n        {...bindLongPress()}\n        class={`${snapStates.composerState.minimized ? 'min' : ''} ${\n          snapStates.composerState.publishing ? 'loading' : ''\n        } ${snapStates.composerState.publishingError ? 'error' : ''}`}\n      >\n        <Icon icon=\"quill\" size=\"xl\" alt={t`Compose`} />\n      </button>\n      <ControlledMenu\n        ref={menuRef}\n        state={menuOpen ? 'open' : undefined}\n        anchorRef={buttonRef}\n        onClose={() => setMenuOpen(false)}\n        direction=\"top\"\n        gap={8} // Add gap between menu and button\n        unmountOnClose\n        portal={{\n          target: document.body,\n        }}\n        boundingBoxPadding={safeBoundingBoxPadding()}\n        containerProps={{\n          style: {\n            zIndex: 19,\n          },\n          onClick: () => {\n            menuRef.current?.closeMenu?.();\n          },\n        }}\n        submenuOpenDelay={600}\n      >\n        <MenuLink to=\"/sp\">\n          <Icon icon=\"schedule\" />{' '}\n          <span>\n            <Trans>Scheduled Posts</Trans>\n          </span>\n        </MenuLink>\n        <MenuDivider />\n        <SubMenu2\n          align=\"end\"\n          direction=\"top\"\n          shift={-8}\n          disabled={loadingPosts || latestPosts.length === 0}\n          label={\n            <>\n              <Icon icon=\"comment\" />{' '}\n              <span className=\"menu-grow\">\n                <Trans>Add to thread</Trans>\n              </span>\n              {loadingPosts ? '…' : <Icon icon=\"chevron-right\" />}\n            </>\n          }\n        >\n          {latestPosts.length > 0 &&\n            latestPosts.map((post) => {\n              const createdDate = new Date(post.createdAt);\n              const isWithinDay =\n                new Date().getTime() - createdDate.getTime() < 86400000;\n\n              return (\n                <MenuItem key={post.id} onClick={() => handleReplyToPost(post)}>\n                  <small>\n                    <div class=\"menu-post-text\">{statusPeek(post)}</div>\n                    <span className=\"more-insignificant\">\n                      {/* Show relative time if within a day */}\n                      {isWithinDay && (\n                        <>\n                          <RelativeTime datetime={createdDate} format=\"micro\" />{' '}\n                          ‒{' '}\n                        </>\n                      )}\n                      <time\n                        className=\"created\"\n                        dateTime={createdDate.toISOString()}\n                        title={createdDate.toLocaleString()}\n                      >\n                        {niceDateTime(post.createdAt)}\n                      </time>\n                    </span>\n                  </small>\n                </MenuItem>\n              );\n            })}\n        </SubMenu2>\n      </ControlledMenu>\n    </>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?',\n    () => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => {\n        const isCatchUpPage = /\\/catchup/i.test(location.hash);\n        return isCatchUpPage;\n        // const hasModal = !!document.querySelector('#modal-container > *');\n        // return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <h2>\n              <Trans>Keyboard shortcuts</Trans>\n            </h2>\n          </header>\n          <main>\n            <table>\n              <tbody>\n                {[\n                  {\n                    action: t`Keyboard shortcuts help`,\n                    keys: <kbd>?</kbd>,\n                  },\n                  {\n                    action: t`Next post`,\n                    keys: <kbd>j</kbd>,\n                  },\n                  {\n                    action: t`Previous post`,\n                    keys: <kbd>k</kbd>,\n                  },\n                  {\n                    action: t`Skip carousel to next post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>j</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Skip carousel to previous post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Load new posts`,\n                    keys: <kbd>.</kbd>,\n                  },\n                  {\n                    action: t`Open post details`,\n                    keys: (\n                      <Trans>\n                        <kbd>Enter</kbd> or <kbd>o</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: (\n                      <Trans>\n                        Expand content warning or\n                        <br />\n                        toggle expanded/collapsed thread\n                      </Trans>\n                    ),\n                    keys: <kbd>x</kbd>,\n                  },\n                  {\n                    action: t`Close post or dialogs`,\n                    keys: (\n                      <Trans>\n                        <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus column in multi-column mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>1</kbd> to <kbd>9</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus next column in multi-column mode`,\n                    keys: <kbd>]</kbd>,\n                  },\n                  {\n                    action: t`Focus previous column in multi-column mode`,\n                    keys: <kbd>[</kbd>,\n                  },\n                  {\n                    action: t`Compose new post`,\n                    keys: <kbd>c</kbd>,\n                  },\n                  {\n                    action: t`Compose new post (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>c</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Send post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                        <kbd>Enter</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Search`,\n                    keys: <kbd>/</kbd>,\n                  },\n                  {\n                    action: t`Reply`,\n                    keys: <kbd>r</kbd>,\n                  },\n                  {\n                    action: t`Reply (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>r</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Like (favourite)`,\n                    keys: (\n                      <Trans>\n                        <kbd>l</kbd> or <kbd>f</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Boost`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>b</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Bookmark`,\n                    keys: <kbd>d</kbd>,\n                  },\n                  {\n                    action: t`Toggle Cloak mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                ].map(({ action, className, keys }) => (\n                  <tr key={action}>\n                    <th class={className}>{action}</th>\n                    <td>{keys}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","import './accounts.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useReducer } from 'preact/hooks';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, setCurrentAccountID } from '../utils/store-utils';\n\nconst isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n\nfunction Accounts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  // Accounts\n  const accounts = store.local.getJSON('accounts');\n  const currentAccount = getCurrentAccountID();\n  const moreThanOneAccount = accounts.length > 1;\n\n  const [_, reload] = useReducer((x) => x + 1, 0);\n  const [accountsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"accounts-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Accounts</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul class=\"accounts-list\" ref={accountsListParent}>\n            {accounts.map((account, i) => {\n              const isCurrent = account.info.id === currentAccount;\n              const isDefault = i === 0; // first account is always default\n              return (\n                <li key={account.info.id}>\n                  <div>\n                    {moreThanOneAccount && (\n                      <span class={`current ${isCurrent ? 'is-current' : ''}`}>\n                        <Icon icon=\"check-circle\" alt={t`Current`} />\n                      </span>\n                    )}\n                    <Avatar\n                      url={account.info.avatarStatic}\n                      size=\"xxl\"\n                      onDblClick={async () => {\n                        if (isCurrent) {\n                          try {\n                            const info = await masto.v1.accounts\n                              .$select(account.info.id)\n                              .fetch();\n                            console.log('fetched account info', info);\n                            account.info = info;\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          } catch (e) {}\n                        }\n                      }}\n                    />\n                    <NameText\n                      account={\n                        moreThanOneAccount\n                          ? {\n                              ...account.info,\n                              acct: /@/.test(account.info.acct)\n                                ? account.info.acct\n                                : `${account.info.acct}@${account.instanceURL}`,\n                            }\n                          : account.info\n                      }\n                      showAcct\n                      onClick={() => {\n                        if (isCurrent) {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        } else {\n                          setCurrentAccountID(account.info.id);\n                          location.reload();\n                        }\n                      }}\n                    />\n                  </div>\n                  <div class=\"actions\">\n                    {isDefault && moreThanOneAccount && (\n                      <>\n                        <span class=\"tag\">\n                          <Trans>Default</Trans>\n                        </span>{' '}\n                      </>\n                    )}\n                    <Menu2\n                      align=\"end\"\n                      menuButton={\n                        <button type=\"button\" class=\"plain more-button\">\n                          <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                        </button>\n                      }\n                    >\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isCurrent}\n                            onClick={() => {\n                              setCurrentAccountID(account.info.id);\n                              location.reload();\n                            }}\n                          >\n                            <Icon icon=\"transfer\" />{' '}\n                            <Trans>Switch to this account</Trans>\n                          </MenuItem>\n                          {!isStandalone && !isCurrent && (\n                            <MenuLink\n                              href={`./?account=${account.info.id}`}\n                              target=\"_blank\"\n                            >\n                              <Icon icon=\"external\" />\n                              <span>\n                                <Trans>Switch in new tab/window</Trans>\n                              </span>\n                            </MenuLink>\n                          )}\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuItem\n                        onClick={() => {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        }}\n                      >\n                        <Icon icon=\"user\" />\n                        <span>\n                          <Trans>View profile…</Trans>\n                        </span>\n                      </MenuItem>\n                      <MenuDivider />\n                      {moreThanOneAccount && (\n                        <MenuItem\n                          disabled={isDefault}\n                          onClick={() => {\n                            // Move account to the top of the list\n                            accounts.splice(i, 1);\n                            accounts.unshift(account);\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          }}\n                        >\n                          <Icon icon=\"check-circle\" />\n                          <span>\n                            <Trans>Set as default</Trans>\n                          </span>\n                        </MenuItem>\n                      )}\n                      <MenuConfirm\n                        subMenu\n                        confirmLabel={\n                          <>\n                            <Icon icon=\"exit\" />\n                            <span>\n                              <Trans>\n                                Log out{' '}\n                                <span class=\"bidi-isolate\">\n                                  @{account.info.acct}\n                                </span>\n                                ?\n                              </Trans>\n                            </span>\n                          </>\n                        }\n                        disabled={!isCurrent}\n                        menuItemClassName=\"danger\"\n                        onClick={() => {\n                          // const yes = confirm('Log out?');\n                          // if (!yes) return;\n                          accounts.splice(i, 1);\n                          store.local.setJSON('accounts', accounts);\n                          // location.reload();\n                          location.href = location.pathname || '/';\n                        }}\n                      >\n                        <Icon icon=\"exit\" />\n                        <span>\n                          <Trans>Log out…</Trans>\n                        </span>\n                      </MenuConfirm>\n                    </Menu2>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n          <p>\n            <Link to=\"/login\" class=\"button plain2\" onClick={onClose}>\n              <Icon icon=\"plus\" />{' '}\n              <span>\n                <Trans>Add an existing account</Trans>\n              </span>\n            </Link>\n          </p>\n          {moreThanOneAccount && (\n            <p>\n              <small>\n                <Trans>\n                  Note: <i>Default</i> account will always be used for first\n                  load. Switched accounts will persist during the session.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Accounts;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","import { useLingui } from '@lingui/react';\nimport { useMemo } from 'preact/hooks';\n\nimport { CATALOGS, DEFAULT_LANG, DEV_LOCALES, LOCALES } from '../locales';\nimport { activateLang } from '../utils/lang';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport store from '../utils/store';\n\nconst regionMaps = {\n  'zh-CN': 'zh-Hans',\n  'zh-TW': 'zh-Hant',\n  'pt-BR': 'pt-BR',\n};\n\nexport default function LangSelector() {\n  const { i18n } = useLingui();\n\n  // Sorted on render, so the order won't suddenly change based on current locale\n  const populatedLocales = useMemo(() => {\n    return LOCALES.map((lang) => {\n      // Don't need regions for now, it makes text too noisy\n      // Wait till there's too many languages and there are regional clashes\n      const regionlessCode = regionMaps[lang] || lang.replace(/-[a-z]+$/i, '');\n\n      const native = localeCode2Text({\n        code: regionlessCode,\n        locale: lang,\n        fallback: CATALOGS.find((c) => c.code === lang)?.nativeName,\n      });\n\n      // Not used when rendering because it'll change based on current locale\n      // Only used for sorting on render\n      const _common = localeCode2Text({\n        code: regionlessCode,\n        locale: i18n.locale,\n        fallback: CATALOGS.find((c) => c.code === lang)?.name,\n      });\n\n      return {\n        code: lang,\n        regionlessCode,\n        _common,\n        native,\n      };\n    }).sort((a, b) => {\n      // Sort by common name\n      const order = a._common.localeCompare(b._common, i18n.locale);\n      if (order !== 0) return order;\n      // Sort by code (fallback)\n      if (a.code < b.code) return -1;\n      if (a.code > b.code) return 1;\n      return 0;\n    });\n  }, []);\n\n  return (\n    <label class=\"lang-selector\">\n      🌐{' '}\n      <select\n        class=\"small\"\n        value={i18n.locale || DEFAULT_LANG}\n        onChange={(e) => {\n          store.local.set('lang', e.target.value);\n          activateLang(e.target.value);\n        }}\n      >\n        {populatedLocales.map(({ code, regionlessCode, native }) => {\n          // Common name changes based on current locale\n          const common = localeCode2Text({\n            code: regionlessCode,\n            locale: i18n.locale,\n            fallback: CATALOGS.find((c) => c.code === code)?.name,\n          });\n          const showCommon = !!common && common !== native;\n          return (\n            <option\n              value={code}\n              data-regionless-code={regionlessCode}\n              key={code}\n            >\n              {showCommon ? `${native} - ${common}` : native}\n            </option>\n          );\n        })}\n        {(import.meta.env.DEV || import.meta.env.PHANPY_SHOW_DEV_LOCALES) && (\n          <optgroup label=\"🚧 Development (<50% translated)\">\n            {DEV_LOCALES.map((code) => {\n              if (code === 'pseudo-LOCALE') {\n                return (\n                  <>\n                    <hr />\n                    <option value={code} key={code}>\n                      Pseudolocalization (test)\n                    </option>\n                  </>\n                );\n              }\n              const nativeName = CATALOGS.find(\n                (c) => c.code === code,\n              )?.nativeName;\n              const completion = CATALOGS.find(\n                (c) => c.code === code,\n              )?.completion;\n              return (\n                <option value={code} key={code}>\n                  {nativeName || code} &lrm;[{completion}%]\n                </option>\n              );\n            })}\n          </optgroup>\n        )}\n      </select>\n    </label>\n  );\n}\n","// Utils for push notifications\nimport { api } from './api';\nimport { getVapidKey } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const vapidKey = getVapidKey();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const vapidKey = getVapidKey();\n    if (vapidKey) {\n      const { applicationServerKey } = subscription.options;\n      const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n      const applicationServerKeyStr = new Uint8Array(\n        applicationServerKey,\n      ).toString();\n      const sameKey = vapidKeyStr === applicationServerKeyStr;\n      if (sameKey) {\n        // Subscription didn't change\n      } else {\n        // Subscription changed\n        console.error('🔔 Subscription changed', {\n          vapidKeyStr,\n          applicationServerKeyStr,\n          sameKey,\n        });\n        // Unsubscribe since backend doesn't have a subscription\n        await subscription.unsubscribe();\n        throw new Error('Subscription key and vapid key changed');\n      }\n    } else {\n      console.warn('No vapidKey found');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const vapidKey = getVapidKey();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './settings.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport logo from '../assets/logo.svg';\n\nimport Icon from '../components/icon';\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport RelativeTime from '../components/relative-time';\nimport languages from '../data/translang-languages';\nimport { api } from '../utils/api';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport prettyBytes from '../utils/pretty-bytes';\nimport {\n  initSubscription,\n  isPushSupported,\n  removeSubscription,\n  updateSubscription,\n} from '../utils/push-notifications';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getAPIVersions } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nconst DEFAULT_TEXT_SIZE = 16;\nconst TEXT_SIZES = [14, 15, 16, 17, 18, 19, 20];\nconst {\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_TRANSLANG_INSTANCES: TRANSLANG_INSTANCES,\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nconst targetLanguages = Object.entries(languages.tl).map(([code, name]) => ({\n  code,\n  name,\n}));\n\nconst TRANSLATION_API_NAME = 'TransLang API';\n\nfunction Settings({ onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const currentTheme = store.local.get('theme') || 'auto';\n  const themeFormRef = useRef();\n  const targetLanguage =\n    snapStates.settings.contentTranslationTargetLanguage || null;\n  const systemTargetLanguage = getTranslateTargetLanguage();\n  const systemTargetLanguageText = localeCode2Text(systemTargetLanguage);\n  const currentTextSize = store.local.get('textSize') || DEFAULT_TEXT_SIZE;\n\n  const [prefs, setPrefs] = useState(store.account.get('preferences') || {});\n  const { masto, authenticated, instance } = api();\n  // Get preferences every time Settings is opened\n  // NOTE: Disabled for now because I don't expect this to change often. Also for some reason, the /api/v1/preferences endpoint is cached for a while and return old prefs if refresh immediately after changing them.\n  // useEffect(() => {\n  //   const { masto } = api();\n  //   (async () => {\n  //     try {\n  //       const preferences = await masto.v1.preferences.fetch();\n  //       setPrefs(preferences);\n  //       store.account.set('preferences', preferences);\n  //     } catch (e) {\n  //       // Silently fail\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  return (\n    <div\n      id=\"settings-container\"\n      class=\"sheet\"\n      tabIndex=\"-1\"\n      style={{\n        '--current-text-size': `${currentTextSize}px`,\n      }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Settings</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul>\n            <li>\n              <div>\n                <label>\n                  <Trans>Appearance</Trans>\n                </label>\n              </div>\n              <div>\n                <form\n                  ref={themeFormRef}\n                  onInput={(e) => {\n                    console.log(e);\n                    e.preventDefault();\n                    const formData = new FormData(themeFormRef.current);\n                    const theme = formData.get('theme');\n                    const html = document.documentElement;\n\n                    if (theme === 'auto') {\n                      html.classList.remove('is-light', 'is-dark');\n\n                      // Disable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = '';\n                      }\n                      // Enable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = 'theme-color';\n                      });\n                    } else {\n                      html.classList.toggle('is-light', theme === 'light');\n                      html.classList.toggle('is-dark', theme === 'dark');\n\n                      // Enable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = 'theme-color';\n                        $manualMeta.content =\n                          theme === 'light'\n                            ? $manualMeta.dataset.themeLightColor\n                            : $manualMeta.dataset.themeDarkColor;\n                      }\n                      // Disable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = '';\n                      });\n                    }\n                    document\n                      .querySelector('meta[name=\"color-scheme\"]')\n                      .setAttribute(\n                        'content',\n                        theme === 'auto' ? 'dark light' : theme,\n                      );\n\n                    if (theme === 'auto') {\n                      store.local.del('theme');\n                    } else {\n                      store.local.set('theme', theme);\n                    }\n                  }}\n                >\n                  <div class=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"light\"\n                        defaultChecked={currentTheme === 'light'}\n                      />\n                      <span>\n                        <Trans>Light</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"dark\"\n                        defaultChecked={currentTheme === 'dark'}\n                      />\n                      <span>\n                        <Trans>Dark</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"auto\"\n                        defaultChecked={\n                          currentTheme !== 'light' && currentTheme !== 'dark'\n                        }\n                      />\n                      <span>\n                        <Trans>Auto</Trans>\n                      </span>\n                    </label>\n                  </div>\n                </form>\n              </div>\n            </li>\n            <li>\n              <div>\n                <label>\n                  <Trans>Text size</Trans>\n                </label>\n              </div>\n              <div class=\"range-group\">\n                <span style={{ fontSize: TEXT_SIZES[0] }}>\n                  <Trans comment=\"Preview of one character, in smallest size\">\n                    A\n                  </Trans>\n                </span>{' '}\n                <input\n                  type=\"range\"\n                  min={TEXT_SIZES[0]}\n                  max={TEXT_SIZES[TEXT_SIZES.length - 1]}\n                  step=\"1\"\n                  value={currentTextSize}\n                  list=\"sizes\"\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value, 10);\n                    const html = document.documentElement;\n                    // set CSS variable\n                    html.style.setProperty('--text-size', `${value}px`);\n                    // save to local storage\n                    if (value === DEFAULT_TEXT_SIZE) {\n                      store.local.del('textSize');\n                    } else {\n                      store.local.set('textSize', e.target.value);\n                    }\n                  }}\n                />{' '}\n                <span style={{ fontSize: TEXT_SIZES[TEXT_SIZES.length - 1] }}>\n                  <Trans comment=\"Preview of one character, in largest size\">\n                    A\n                  </Trans>\n                </span>\n                <datalist id=\"sizes\">\n                  {TEXT_SIZES.map((size) => (\n                    <option value={size} />\n                  ))}\n                </datalist>\n              </div>\n            </li>\n            <li>\n              <span>\n                <label>\n                  <Trans>Display language</Trans>\n                </label>\n                <br />\n                <small>\n                  <a\n                    href=\"https://crowdin.com/project/phanpy\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <Trans>Volunteer translations</Trans>\n                  </a>\n                </small>\n              </span>\n              <LangSelector />\n            </li>\n          </ul>\n        </section>\n        {authenticated && (\n          <>\n            <h3>\n              <Trans>Posting</Trans>\n            </h3>\n            <section>\n              <ul>\n                <li>\n                  <div>\n                    <label for=\"posting-privacy-field\">\n                      <Trans>Default visibility</Trans>{' '}\n                      <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />\n                    </label>\n                  </div>\n                  <div>\n                    <select\n                      id=\"posting-privacy-field\"\n                      value={prefs['posting:default:visibility'] || 'public'}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        (async () => {\n                          try {\n                            await masto.v1.accounts.updateCredentials({\n                              source: {\n                                privacy: value,\n                              },\n                            });\n                            setPrefs({\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                            store.account.set('preferences', {\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                          } catch (e) {\n                            alert(t`Failed to update posting privacy`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <option value=\"public\">\n                        <Trans>Public</Trans>\n                      </option>\n                      <option value=\"unlisted\">\n                        <Trans>Unlisted</Trans>\n                      </option>\n                      <option value=\"private\">\n                        <Trans>Followers only</Trans>\n                      </option>\n                    </select>\n                  </div>\n                </li>\n              </ul>\n            </section>\n            <p class=\"section-postnote\">\n              <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />{' '}\n              <small>\n                <Trans>\n                  Synced to your instance server's settings.{' '}\n                  <a\n                    href={`https://${instance}/`}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    Go to your instance ({instance}) for more settings.\n                  </a>\n                </Trans>\n              </small>\n            </p>\n          </>\n        )}\n        <h3>\n          <Trans>Experiments</Trans>\n        </h3>\n        <section>\n          <ul>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.autoRefresh}\n                  onChange={(e) => {\n                    states.settings.autoRefresh = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Auto refresh timeline posts</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.boostsCarousel}\n                  onChange={(e) => {\n                    states.settings.boostsCarousel = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Boosts carousel</Trans>\n              </label>\n            </li>\n            {!!TRANSLANG_INSTANCES && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.contentTranslation}\n                    onChange={(e) => {\n                      const { checked } = e.target;\n                      states.settings.contentTranslation = checked;\n                      if (!checked) {\n                        states.settings.contentTranslationTargetLanguage = null;\n                      }\n                    }}\n                  />{' '}\n                  <Trans>Post translation</Trans>\n                </label>\n                <div\n                  class={`sub-section ${\n                    !snapStates.settings.contentTranslation\n                      ? 'more-insignificant'\n                      : ''\n                  }`}\n                >\n                  <div>\n                    <label>\n                      <Trans>Translate to </Trans>{' '}\n                      <select\n                        value={targetLanguage || ''}\n                        disabled={!snapStates.settings.contentTranslation}\n                        style={{ width: '10em' }}\n                        onChange={(e) => {\n                          states.settings.contentTranslationTargetLanguage =\n                            e.target.value || null;\n                        }}\n                      >\n                        <option value=\"\">\n                          <Trans>\n                            System language ({systemTargetLanguageText})\n                          </Trans>\n                        </option>\n                        <option disabled>──────────</option>\n                        {targetLanguages.map((lang) => {\n                          const common = localeCode2Text({\n                            code: lang.code,\n                            fallback: lang.name,\n                          });\n                          const native = localeCode2Text({\n                            code: lang.code,\n                            locale: lang.code,\n                          });\n                          const showCommon = native && common !== native;\n                          return (\n                            <option value={lang.code}>\n                              {showCommon ? `${native} - ${common}` : common}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </label>\n                  </div>\n                  <hr />\n                  <div class=\"checkbox-fieldset\">\n                    <Plural\n                      value={\n                        snapStates.settings.contentTranslationHideLanguages\n                          .length\n                      }\n                      _0={`Hide \"Translate\" button for:`}\n                      other={`Hide \"Translate\" button for (#):`}\n                    />\n                    <div class=\"checkbox-fields\">\n                      {targetLanguages.map((lang) => {\n                        const common = localeCode2Text({\n                          code: lang.code,\n                          fallback: lang.name,\n                        });\n                        const native = localeCode2Text({\n                          code: lang.code,\n                          locale: lang.code,\n                        });\n                        const showCommon = native && common !== native;\n                        return (\n                          <label>\n                            <input\n                              type=\"checkbox\"\n                              checked={snapStates.settings.contentTranslationHideLanguages.includes(\n                                lang.code,\n                              )}\n                              onChange={(e) => {\n                                const { checked } = e.target;\n                                if (checked) {\n                                  states.settings.contentTranslationHideLanguages.push(\n                                    lang.code,\n                                  );\n                                } else {\n                                  states.settings.contentTranslationHideLanguages =\n                                    snapStates.settings.contentTranslationHideLanguages.filter(\n                                      (code) => code !== lang.code,\n                                    );\n                                }\n                              }}\n                            />{' '}\n                            {showCommon ? (\n                              <span>\n                                {native}{' '}\n                                <span class=\"insignificant ib\">- {common}</span>\n                              </span>\n                            ) : (\n                              common\n                            )}\n                          </label>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  <p class=\"insignificant\">\n                    <small>\n                      <Trans>\n                        Note: This feature uses external translation services,\n                        powered by{' '}\n                        <a\n                          href=\"https://github.com/cheeaun/translang-api\"\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                        >\n                          {TRANSLATION_API_NAME}\n                        </a>\n                        .\n                      </Trans>\n                    </small>\n                  </p>\n                  <hr />\n                  <div>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={\n                          snapStates.settings.contentTranslationAutoInline\n                        }\n                        disabled={!snapStates.settings.contentTranslation}\n                        onChange={(e) => {\n                          states.settings.contentTranslationAutoInline =\n                            e.target.checked;\n                        }}\n                      />{' '}\n                      <Trans>Auto inline translation</Trans>\n                    </label>\n                    <p class=\"insignificant\">\n                      <small>\n                        <Trans>\n                          Automatically show translation for posts in timeline.\n                          Only works for <b>short</b> posts without content\n                          warning, media and poll.\n                        </Trans>\n                      </small>\n                    </p>\n                  </div>\n                </div>\n              </li>\n            )}\n            {!!GIPHY_API_KEY && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.composerGIFPicker}\n                    onChange={(e) => {\n                      states.settings.composerGIFPicker = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>GIF Picker for composer</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external GIF search service,\n                      powered by{' '}\n                      <a\n                        href=\"https://developers.giphy.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        GIPHY\n                      </a>\n                      . G-rated (suitable for viewing by all ages), tracking\n                      parameters are stripped, referrer information is omitted\n                      from requests, but search queries and IP address\n                      information will still reach their servers.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {!!IMG_ALT_API_URL && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.mediaAltGenerator}\n                    onChange={(e) => {\n                      states.settings.mediaAltGenerator = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Image description generator</Trans>{' '}\n                  <Icon icon=\"sparkles2\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Only for new images while composing new posts.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external AI service, powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/img-alt-api\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        img-alt-api\n                      </a>\n                      . May not work well. Only for images and in English.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated &&\n              supports('@mastodon/grouped-notifications') &&\n              getAPIVersions()?.mastodon >= 2 && (\n                <li class=\"block\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={snapStates.settings.groupedNotificationsAlpha}\n                      onChange={(e) => {\n                        states.settings.groupedNotificationsAlpha =\n                          e.target.checked;\n                      }}\n                    />{' '}\n                    <Trans>Server-side grouped notifications</Trans>\n                  </label>\n                  <div class=\"sub-section insignificant\">\n                    <small>\n                      <Trans>\n                        Alpha-stage feature. Potentially improved grouping\n                        window but basic grouping logic.\n                      </Trans>\n                    </small>\n                  </div>\n                </li>\n              )}\n            {authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      snapStates.settings.shortcutSettingsCloudImportExport\n                    }\n                    onChange={(e) => {\n                      states.settings.shortcutSettingsCloudImportExport =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>\"Cloud\" import/export for shortcuts settings</Trans>{' '}\n                  <Icon icon=\"cloud\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      ⚠️⚠️⚠️ Very experimental.\n                      <br />\n                      Stored in your own profile’s notes. Profile (private)\n                      notes are mainly used for other profiles, and hidden for\n                      own profile.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses currently-logged-in instance\n                      server API.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.cloakMode}\n                  onChange={(e) => {\n                    states.settings.cloakMode = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>\n                  Cloak mode{' '}\n                  <span class=\"insignificant\">\n                    (<samp>Text</samp> → <samp>████</samp>)\n                  </span>\n                </Trans>\n              </label>\n              <div class=\"sub-section insignificant\">\n                <small>\n                  <Trans>\n                    Replace text as blocks, useful when taking screenshots, for\n                    privacy reasons.\n                  </Trans>\n                </small>\n              </div>\n            </li>\n            {authenticated && (\n              <li>\n                <button\n                  type=\"button\"\n                  class=\"light\"\n                  onClick={() => {\n                    states.showDrafts = true;\n                    states.showSettings = false;\n                  }}\n                >\n                  <Trans>Unsent drafts</Trans>\n                </button>\n              </li>\n            )}\n          </ul>\n        </section>\n        {authenticated && <PushNotificationsSection onClose={onClose} />}\n        <h3>\n          <Trans>About</Trans>\n        </h3>\n        <section>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 8,\n              lineHeight: 1.25,\n              alignItems: 'center',\n              marginTop: 8,\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"64\"\n              height=\"64\"\n              style={{\n                aspectRatio: '1/1',\n                verticalAlign: 'middle',\n                background: '#b7cdf9',\n                borderRadius: 12,\n              }}\n            />\n            <div>\n              <b>Phanpy</b>{' '}\n              <a\n                href=\"https://hachyderm.io/@phanpy\"\n                // target=\"_blank\"\n                rel=\"noopener\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.showAccount = 'phanpy@hachyderm.io';\n                }}\n              >\n                @phanpy\n              </a>\n              <br />\n              <Trans>\n                <a\n                  href=\"https://github.com/cheeaun/phanpy\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Built\n                </a>{' '}\n                by{' '}\n                <a\n                  href=\"https://mastodon.social/@cheeaun\"\n                  // target=\"_blank\"\n                  rel=\"noopener\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = 'cheeaun@mastodon.social';\n                  }}\n                >\n                  @cheeaun\n                </a>\n              </Trans>\n            </div>\n          </div>\n          <p>\n            <a\n              href=\"https://github.com/sponsors/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Sponsor</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Donate</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://patreon.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              Patreon\n            </a>{' '}\n            &middot;{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\" rel=\"noopener\">\n              <Trans>Privacy Policy</Trans>\n            </a>\n          </p>\n          {__BUILD_TIME__ && (\n            <p>\n              {WEBSITE && (\n                <>\n                  <Trans>\n                    <span class=\"insignificant\">Site:</span>{' '}\n                    {WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')}\n                  </Trans>\n                  <br />\n                </>\n              )}\n              <Trans>\n                <span class=\"insignificant\">Version:</span>{' '}\n                <input\n                  type=\"text\"\n                  class=\"version-string\"\n                  readOnly\n                  size=\"18\" // Manually calculated here\n                  value={`${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n                    __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n                  }`}\n                  onClick={(e) => {\n                    e.target.select();\n                    // Copy to clipboard\n                    try {\n                      navigator.clipboard.writeText(e.target.value);\n                      showToast(t`Version string copied`);\n                    } catch (e) {\n                      console.warn(e);\n                      showToast(t`Unable to copy version string`);\n                    }\n                  }}\n                />{' '}\n                {!__FAKE_COMMIT_HASH__ && (\n                  <span class=\"ib insignificant\">\n                    (\n                    <a\n                      href={`https://github.com/cheeaun/phanpy/commit/${__COMMIT_HASH__}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <RelativeTime datetime={new Date(__BUILD_TIME__)} />\n                    </a>\n                    )\n                  </span>\n                )}\n              </Trans>\n            </p>\n          )}\n        </section>\n        {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n          <details class=\"debug-info\">\n            <summary></summary>\n            <p>Debugging</p>\n            {__BENCH_RESULTS?.size > 0 && (\n              <ul>\n                {Array.from(__BENCH_RESULTS.entries()).map(\n                  ([name, duration]) => (\n                    <li>\n                      <b>{name}</b>: {duration}ms\n                    </li>\n                  ),\n                )}\n              </ul>\n            )}\n            <p>Service Worker Cache</p>\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesKeys())}\n            >\n              Show keys count\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesSize())}\n            >\n              Show cache size\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                const key = prompt('Enter cache key');\n                if (!key) return;\n                try {\n                  clearCacheKey(key);\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear cache key\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                try {\n                  clearCaches();\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear all caches\n            </button>\n          </details>\n        )}\n      </main>\n    </div>\n  );\n}\n\nasync function getCachesKeys() {\n  const keys = await caches.keys();\n  const total = {};\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    total[key] = k.length;\n  }\n  return total;\n}\n\nasync function getCachesSize() {\n  const keys = await caches.keys();\n  let total = {};\n  let TOTAL = 0;\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    for (const item of k) {\n      try {\n        const response = await cache.match(item);\n        const blob = await response.blob();\n        total[key] = (total[key] || 0) + blob.size;\n        TOTAL += blob.size;\n      } catch (e) {\n        alert('Failed to get cache size for ' + item);\n        alert(e);\n      }\n    }\n  }\n  return {\n    ...Object.fromEntries(\n      Object.entries(total).map(([k, v]) => [k, prettyBytes(v)]),\n    ),\n    TOTAL: prettyBytes(TOTAL),\n  };\n}\n\nfunction clearCacheKey(key) {\n  return caches.delete(key);\n}\n\nasync function clearCaches() {\n  const keys = await caches.keys();\n  for (const key of keys) {\n    await caches.delete(key);\n  }\n}\n\nfunction PushNotificationsSection({ onClose }) {\n  const { t } = useLingui();\n  if (!isPushSupported()) return null;\n\n  const { instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const pushFormRef = useRef();\n  const [allowNotifications, setAllowNotifications] = useState(false);\n  const [needRelogin, setNeedRelogin] = useState(false);\n  const previousPolicyRef = useRef();\n  useEffect(() => {\n    (async () => {\n      setUIState('loading');\n      try {\n        const { subscription, backendSubscription } = await initSubscription();\n        if (\n          backendSubscription?.policy &&\n          backendSubscription.policy !== 'none'\n        ) {\n          setAllowNotifications(true);\n          const { alerts, policy } = backendSubscription;\n          console.log('backendSubscription', backendSubscription);\n          previousPolicyRef.current = policy;\n          const { elements } = pushFormRef.current;\n          const policyEl = elements.namedItem('policy');\n          if (policyEl) policyEl.value = policy;\n          // alerts is {}, iterate it\n          Object.entries(alerts).forEach(([alert, value]) => {\n            const el = elements.namedItem(alert);\n            if (el?.type === 'checkbox') {\n              el.checked = !!value;\n            }\n          });\n        }\n        setUIState('default');\n      } catch (err) {\n        console.warn(err);\n        if (/outside.*authorized/i.test(err.message)) {\n          setNeedRelogin(true);\n        } else {\n          alert(err?.message || err);\n        }\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const isLoading = uiState === 'loading';\n\n  return (\n    <form\n      ref={pushFormRef}\n      onChange={() => {\n        setTimeout(() => {\n          const values = Object.fromEntries(new FormData(pushFormRef.current));\n          const allowNotifications = !!values['policy-allow'];\n          const params = {\n            data: {\n              policy: values.policy,\n              alerts: {\n                mention: !!values.mention,\n                favourite: !!values.favourite,\n                reblog: !!values.reblog,\n                follow: !!values.follow,\n                follow_request: !!values.followRequest,\n                poll: !!values.poll,\n                update: !!values.update,\n                status: !!values.status,\n              },\n            },\n          };\n\n          let alertsCount = 0;\n          // Remove false values from data.alerts\n          // API defaults to false anyway\n          Object.keys(params.data.alerts).forEach((key) => {\n            if (!params.data.alerts[key]) {\n              delete params.data.alerts[key];\n            } else {\n              alertsCount++;\n            }\n          });\n          const policyChanged =\n            previousPolicyRef.current !== params.data.policy;\n\n          console.log('PN Form', {\n            values,\n            allowNotifications: allowNotifications,\n            params,\n          });\n\n          if (allowNotifications && alertsCount > 0) {\n            if (policyChanged) {\n              console.debug('Policy changed.');\n              removeSubscription()\n                .then(() => {\n                  updateSubscription(params);\n                })\n                .catch((err) => {\n                  console.warn(err);\n                  alert(t`Failed to update subscription. Please try again.`);\n                });\n            } else {\n              updateSubscription(params).catch((err) => {\n                console.warn(err);\n                alert(t`Failed to update subscription. Please try again.`);\n              });\n            }\n          } else {\n            removeSubscription().catch((err) => {\n              console.warn(err);\n              alert(t`Failed to remove subscription. Please try again.`);\n            });\n          }\n        }, 100);\n      }}\n    >\n      <h3>\n        <Trans>Push Notifications (beta)</Trans>\n      </h3>\n      <section>\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"checkbox\"\n                disabled={isLoading || needRelogin}\n                name=\"policy-allow\"\n                checked={allowNotifications}\n                onChange={async (e) => {\n                  const { checked } = e.target;\n                  if (checked) {\n                    // Request permission\n                    const permission = await Notification.requestPermission();\n                    if (permission === 'granted') {\n                      setAllowNotifications(true);\n                    } else {\n                      setAllowNotifications(false);\n                      if (permission === 'denied') {\n                        alert(\n                          t`Push notifications are blocked. Please enable them in your browser settings.`,\n                        );\n                      }\n                    }\n                  } else {\n                    setAllowNotifications(false);\n                  }\n                }}\n              />{' '}\n              <Trans>\n                Allow from{' '}\n                <select\n                  name=\"policy\"\n                  disabled={isLoading || needRelogin || !allowNotifications}\n                >\n                  {[\n                    {\n                      value: 'all',\n                      label: t`anyone`,\n                    },\n                    {\n                      value: 'followed',\n                      label: t`people I follow`,\n                    },\n                    {\n                      value: 'follower',\n                      label: t`followers`,\n                    },\n                  ].map((type) => (\n                    <option value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </Trans>\n            </label>\n            <div\n              class=\"shazam-container no-animation\"\n              style={{\n                width: '100%',\n              }}\n              hidden={!allowNotifications}\n            >\n              <div class=\"shazam-container-inner\">\n                <div class=\"sub-section\">\n                  <ul>\n                    {[\n                      {\n                        value: 'mention',\n                        label: t`Mentions`,\n                      },\n                      {\n                        value: 'favourite',\n                        label: t`Likes`,\n                      },\n                      {\n                        value: 'reblog',\n                        label: t`Boosts`,\n                      },\n                      {\n                        value: 'follow',\n                        label: t`Follows`,\n                      },\n                      {\n                        value: 'followRequest',\n                        label: t`Follow requests`,\n                      },\n                      {\n                        value: 'poll',\n                        label: t`Polls`,\n                      },\n                      {\n                        value: 'update',\n                        label: t`Post edits`,\n                      },\n                      {\n                        value: 'status',\n                        label: t`New posts`,\n                      },\n                    ].map((alert) => (\n                      <li>\n                        <label>\n                          <input type=\"checkbox\" name={alert.value} />{' '}\n                          {alert.label}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {needRelogin && (\n              <div class=\"sub-section\">\n                <p>\n                  <Trans>\n                    Push permission was not granted since your last login.\n                    You'll need to{' '}\n                    <Link to={`/login?instance=${instance}`} onClick={onClose}>\n                      <b>log in</b> again to grant push permission\n                    </Link>\n                    .\n                  </Trans>\n                </p>\n              </div>\n            )}\n          </li>\n        </ul>\n      </section>\n      <p class=\"section-postnote\">\n        <small>\n          <Trans>\n            NOTE: Push notifications only work for <b>one account</b>.\n          </Trans>\n        </small>\n      </p>\n    </form>\n  );\n}\n\nexport default Settings;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus focused column\n      const focusedColumn = columns.querySelector('.deck-container.focus');\n      if (focusedColumn) {\n        focusedColumn.focus();\n      } else {\n        // Focus first column within viewport\n        const firstVisibleColumn = Array.from(\n          columns.querySelectorAll('.deck-container'),\n        ).find((column) => {\n          const columnRect = column.getBoundingClientRect();\n          return columnRect.left >= 0;\n        });\n        if (firstVisibleColumn) {\n          firstVisibleColumn.focus();\n        } else {\n          // Focus first column\n          columns.querySelector('.deck-container')?.focus?.();\n        }\n      }\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\n// Hook that runs a callback when the location changes\n// Won't run on the first render\n\nexport default function useLocationChange(fn) {\n  if (!fn) return;\n  const location = useLocation();\n  const currentLocationRef = useRef(location.pathname);\n  useEffect(() => {\n    // console.log('location', {\n    //   current: currentLocationRef.current,\n    //   next: location.pathname,\n    // });\n    if (\n      currentLocationRef.current &&\n      location.pathname !== currentLocationRef.current\n    ) {\n      fn?.();\n    }\n  }, [location.pathname, fn]);\n}\n","import { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\n\nexport const fetchLists = pmem(\n  async () => {\n    const { masto } = api();\n    const lists = await masto.v1.lists.list();\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n\n    if (lists.length) {\n      setTimeout(() => {\n        // Save to local storage, with saved timestamp\n        store.account.set('lists', {\n          lists,\n          updatedAt: Date.now(),\n        });\n      }, 1);\n    }\n\n    return lists;\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getLists() {\n  try {\n    const { lists, updatedAt } = store.account.get('lists') || {};\n    if (!lists?.length) return await fetchLists();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchLists();\n      return lists;\n    }\n    return lists;\n  } catch (e) {\n    return [];\n  }\n}\n\nexport const fetchList = pmem(\n  (id) => {\n    const { masto } = api();\n    return masto.v1.lists.$select(id).fetch();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getList(id) {\n  const { lists } = store.account.get('lists') || {};\n  console.log({ lists });\n  if (lists?.length) {\n    const theList = lists.find((l) => l.id === id);\n    if (theList) return theList;\n  }\n  try {\n    return fetchList(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getListTitle(id) {\n  const list = await getList(id);\n  return list?.title || '';\n}\n\nexport function addListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    lists.push(list);\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n    store.account.set('lists', {\n      lists,\n      updatedAt: Date.now(),\n    });\n  }\n}\n\nexport function updateListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === list.id);\n    if (index !== -1) {\n      lists[index] = list;\n      lists.sort((a, b) => a.title.localeCompare(b.title));\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n\nexport function deleteListStore(listID) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === listID);\n    if (index !== -1) {\n      lists.splice(index, 1);\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { addListStore, deleteListStore, updateListStore } from '../utils/lists';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive =\n    supports('@mastodon/list-exclusive') ||\n    supports('@gotosocial/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? t`Edit list` : t`New list`}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n\n                setTimeout(() => {\n                  if (editMode) {\n                    updateListStore(listResult);\n                  } else {\n                    addListStore(listResult);\n                  }\n                }, 1);\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit list.`\n                    : t`Unable to create list.`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              <Trans>Name</Trans>{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">\n                <Trans>Show replies to list members</Trans>\n              </option>\n              <option value=\"followed\">\n                <Trans>Show replies to people I follow</Trans>\n              </option>\n              <option value=\"none\">\n                <Trans>Don't show replies</Trans>\n              </option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                <Trans>Hide posts on this list from Home/Following</Trans>\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? t`Save` : t`Create`}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this list?`}\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                      setTimeout(() => {\n                        deleteListStore(list.id);\n                      }, 1);\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete list.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import './account-info.css';\n\nimport { msg, plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getLists } from '../utils/lists';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport showCompose from '../utils/show-compose';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, updateAccount } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport Link from './link';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport SubMenu2 from './submenu2';\nimport TranslationBlock from './translation-block';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  60 * 60 * 24 * 30, // 30 days\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: msg`Forever`,\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n  2592_000: i18nDuration(30, 'day'),\n};\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - new Date(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n}) {\n  const { i18n, t } = useLingui();\n  const { masto, authenticated: currentAuthenticated } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n    hideCollections,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(() => id === getCurrentAccountID(), [id]);\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = store.local.getJSON('accounts');\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        store.local.setJSON('accounts', accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = useMemo(() => {\n    if (!url) return null;\n    const hostname = URL.parse(url)?.hostname;\n    if (!hostname) return null;\n    const domain = punycode.toUnicode(hostname);\n    return domain;\n  }, [url]);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts.$select(id).followers.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      let familiarFollowers = [];\n      try {\n        familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch({\n          id: [id],\n        });\n      } catch (e) {}\n      familiarFollowersCache.current = familiarFollowers?.[0]?.accounts || [];\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts.$select(id).following.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  const onProfileUpdate = useCallback(\n    (newAccount) => {\n      if (newAccount.id === id) {\n        console.log('Updated account info', newAccount);\n        setInfo(newAccount);\n        states.accounts[`${newAccount.id}@${instance}`] = newAccount;\n      }\n    },\n    [id, instance],\n  );\n\n  const isStringURL = isString && account && /^https?:\\/\\//.test(account);\n\n  const [showEditProfile, setShowEditProfile] = useState(false);\n\n  return (\n    <>\n      <div\n        tabIndex=\"-1\"\n        class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n        style={{\n          '--header-color-1': headerCornerColors[0],\n          '--header-color-2': headerCornerColors[1],\n          '--header-color-3': headerCornerColors[2],\n          '--header-color-4': headerCornerColors[3],\n        }}\n      >\n        {uiState === 'error' && (\n          <div class=\"ui-state\">\n            <p>\n              <Trans>Unable to load account.</Trans>\n            </p>\n            {isString ? (\n              <p>\n                {isStringURL ? (\n                  <a href={account} target=\"_blank\" rel=\"noopener\">\n                    {account}\n                  </a>\n                ) : (\n                  <code class=\"insignificant\">{account}</code>\n                )}\n              </p>\n            ) : (\n              <p>\n                <a href={url} target=\"_blank\" rel=\"noopener\">\n                  <Trans>Go to account page</Trans> <Icon icon=\"external\" />\n                </a>\n              </p>\n            )}\n          </div>\n        )}\n        {uiState === 'loading' ? (\n          <>\n            <header>\n              <AccountBlock avatarSize=\"xxxl\" skeleton />\n            </header>\n            <main>\n              <div class=\"note\">\n                <p>███████ ████ ████</p>\n                <p>████ ████████ ██████ █████████ ████ ██</p>\n              </div>\n              <div class=\"account-metadata-box\">\n                <div class=\"profile-metadata\">\n                  <div class=\"profile-field\">\n                    <b class=\"more-insignificant\">███</b>\n                    <p>██████</p>\n                  </div>\n                  <div class=\"profile-field\">\n                    <b class=\"more-insignificant\">████</b>\n                    <p>███████████</p>\n                  </div>\n                </div>\n                <div class=\"stats\">\n                  <div>\n                    <span>██</span> <Trans>Followers</Trans>\n                  </div>\n                  <div>\n                    <span>██</span>{' '}\n                    <Trans id=\"following.stats\">Following</Trans>\n                  </div>\n                  <div>\n                    <span>██</span> <Trans>Posts</Trans>\n                  </div>\n                </div>\n              </div>\n              <div class=\"actions\">\n                <span />\n                <span class=\"buttons\">\n                  <button type=\"button\" class=\"plain\" disabled>\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                </span>\n              </div>\n            </main>\n          </>\n        ) : (\n          info && (\n            <>\n              {!!moved && (\n                <div class=\"account-moved\">\n                  <p>\n                    <Trans>\n                      <b>{displayName}</b> has indicated that their new account\n                      is now:\n                    </Trans>\n                  </p>\n                  <AccountBlock\n                    account={moved}\n                    instance={instance}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      states.showAccount = moved;\n                    }}\n                  />\n                </div>\n              )}\n              {!!header && !/missing\\.png$/.test(header) && (\n                <img\n                  src={header}\n                  alt=\"\"\n                  class={`header-banner ${\n                    headerIsAvatar ? 'header-is-avatar' : ''\n                  }`}\n                  onError={(e) => {\n                    if (e.target.crossOrigin) {\n                      if (e.target.src !== headerStatic) {\n                        e.target.src = headerStatic;\n                      } else {\n                        e.target.removeAttribute('crossorigin');\n                        e.target.src = header;\n                      }\n                    } else if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.remove();\n                    }\n                  }}\n                  crossOrigin=\"anonymous\"\n                  onLoad={(e) => {\n                    e.target.classList.add('loaded');\n                    try {\n                      // Get color from four corners of image\n                      const canvas = window.OffscreenCanvas\n                        ? new OffscreenCanvas(1, 1)\n                        : document.createElement('canvas');\n                      const ctx = canvas.getContext('2d', {\n                        willReadFrequently: true,\n                      });\n                      canvas.width = e.target.width;\n                      canvas.height = e.target.height;\n                      ctx.imageSmoothingEnabled = false;\n                      ctx.drawImage(e.target, 0, 0);\n                      // const colors = [\n                      //   ctx.getImageData(0, 0, 1, 1).data,\n                      //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                      //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                      //   ctx.getImageData(\n                      //     e.target.width - 1,\n                      //     e.target.height - 1,\n                      //     1,\n                      //     1,\n                      //   ).data,\n                      // ];\n                      // Get 10x10 pixels from corners, get average color from each\n                      const pixelDimension = 10;\n                      const colors = [\n                        ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                          .data,\n                        ctx.getImageData(\n                          e.target.width - pixelDimension,\n                          0,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                        ctx.getImageData(\n                          0,\n                          e.target.height - pixelDimension,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                        ctx.getImageData(\n                          e.target.width - pixelDimension,\n                          e.target.height - pixelDimension,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                      ].map((data) => {\n                        let r = 0;\n                        let g = 0;\n                        let b = 0;\n                        let a = 0;\n                        for (let i = 0; i < data.length; i += 4) {\n                          r += data[i];\n                          g += data[i + 1];\n                          b += data[i + 2];\n                          a += data[i + 3];\n                        }\n                        const dataLength = data.length / 4;\n                        return [\n                          r / dataLength,\n                          g / dataLength,\n                          b / dataLength,\n                          a / dataLength,\n                        ];\n                      });\n                      const rgbColors = colors.map((color) => {\n                        const [r, g, b, a] = lightenRGB(color);\n                        return `rgba(${r}, ${g}, ${b}, ${a})`;\n                      });\n                      setHeaderCornerColors(rgbColors);\n                      console.log({ colors, rgbColors });\n                    } catch (e) {\n                      // Silently fail\n                    }\n                  }}\n                />\n              )}\n              <header>\n                {standalone ? (\n                  <Menu2\n                    shift={\n                      window.matchMedia('(min-width: calc(40em))').matches\n                        ? 114\n                        : 64\n                    }\n                    menuButton={\n                      <div>\n                        <AccountBlock\n                          account={info}\n                          instance={instance}\n                          avatarSize=\"xxxl\"\n                          onClick={() => {}}\n                        />\n                      </div>\n                    }\n                  >\n                    <div class=\"szh-menu__header\">\n                      <AccountHandleInfo acct={acct} instance={instance} />\n                    </div>\n                    <MenuItem\n                      onClick={() => {\n                        const handleWithInstance = acct.includes('@')\n                          ? `@${acct}`\n                          : `@${acct}@${instance}`;\n                        try {\n                          navigator.clipboard.writeText(handleWithInstance);\n                          showToast(t`Handle copied`);\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Unable to copy handle`);\n                        }\n                      }}\n                    >\n                      <Icon icon=\"link\" />\n                      <span>\n                        <Trans>Copy handle</Trans>\n                      </span>\n                    </MenuItem>\n                    <MenuItem href={url} target=\"_blank\">\n                      <Icon icon=\"external\" />\n                      <span>\n                        <Trans>Go to original profile page</Trans>\n                      </span>\n                    </MenuItem>\n                    <MenuDivider />\n                    <MenuItem\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: [\n                            {\n                              type: 'image',\n                              url: avatarStatic,\n                            },\n                          ],\n                        };\n                      }}\n                    >\n                      <Icon icon=\"user\" />\n                      <span>\n                        <Trans>View profile image</Trans>\n                      </span>\n                    </MenuItem>\n                    {!!headerStatic && !headerIsAvatar && (\n                      <MenuItem\n                        onClick={() => {\n                          states.showMediaModal = {\n                            mediaAttachments: [\n                              {\n                                type: 'image',\n                                url: headerStatic,\n                              },\n                            ],\n                          };\n                        }}\n                      >\n                        <Icon icon=\"media\" />\n                        <span>\n                          <Trans>View profile header</Trans>\n                        </span>\n                      </MenuItem>\n                    )}\n                    {currentAuthenticated &&\n                      isSelf &&\n                      supports('@mastodon/profile-edit') && (\n                        <>\n                          <MenuDivider />\n                          <MenuItem\n                            onClick={() => {\n                              setShowEditProfile(true);\n                            }}\n                          >\n                            <Icon icon=\"pencil\" />\n                            <span>\n                              <Trans>Edit profile</Trans>\n                            </span>\n                          </MenuItem>\n                        </>\n                      )}\n                  </Menu2>\n                ) : (\n                  <AccountBlock\n                    account={info}\n                    instance={instance}\n                    avatarSize=\"xxxl\"\n                    internal\n                  />\n                )}\n              </header>\n              <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n              <main>\n                {!!memorial && (\n                  <span class=\"tag\">\n                    <Trans>In Memoriam</Trans>\n                  </span>\n                )}\n                {!!bot && (\n                  <span class=\"tag\">\n                    <Icon icon=\"bot\" /> <Trans>Automated</Trans>\n                  </span>\n                )}\n                {!!group && (\n                  <span class=\"tag\">\n                    <Icon icon=\"group\" /> <Trans>Group</Trans>\n                  </span>\n                )}\n                {roles?.map((role) => (\n                  <span class=\"tag\">\n                    {role.name}\n                    {!!accountInstance && (\n                      <>\n                        {' '}\n                        <span class=\"more-insignificant\">\n                          {accountInstance}\n                        </span>\n                      </>\n                    )}\n                  </span>\n                ))}\n                <div\n                  class=\"note\"\n                  dir=\"auto\"\n                  onClick={handleContentLinks({\n                    instance: currentInstance,\n                  })}\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(note, { emojis }),\n                  }}\n                />\n                <div class=\"account-metadata-box\">\n                  {fields?.length > 0 && (\n                    <div class=\"profile-metadata\">\n                      {fields.map(({ name, value, verifiedAt }, i) => (\n                        <div\n                          class={`profile-field ${\n                            verifiedAt ? 'profile-verified' : ''\n                          }`}\n                          key={name + i}\n                          dir=\"auto\"\n                        >\n                          <b>\n                            <EmojiText text={name} emojis={emojis} />{' '}\n                            {!!verifiedAt && (\n                              <Icon\n                                icon=\"check-circle\"\n                                size=\"s\"\n                                alt={t`Verified`}\n                              />\n                            )}\n                          </b>\n                          <p\n                            dangerouslySetInnerHTML={{\n                              __html: enhanceContent(value, { emojis }),\n                            }}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  <div class=\"stats\">\n                    <LinkOrDiv\n                      tabIndex={0}\n                      to={accountLink}\n                      onClick={() => {\n                        // states.showAccount = false;\n                        setTimeout(() => {\n                          states.showGenericAccounts = {\n                            id: 'followers',\n                            heading: t`Followers`,\n                            fetchAccounts: fetchFollowers,\n                            instance,\n                            excludeRelationshipAttrs: isSelf\n                              ? ['followedBy']\n                              : [],\n                            blankCopy: hideCollections\n                              ? t`This user has chosen to not make this information available.`\n                              : undefined,\n                          };\n                        }, 0);\n                      }}\n                    >\n                      {!!familiarFollowers.length && (\n                        <span class=\"shazam-container-horizontal\">\n                          <span class=\"shazam-container-inner stats-avatars-bunch\">\n                            {familiarFollowers.map((follower) => (\n                              <Avatar\n                                url={follower.avatarStatic}\n                                size=\"s\"\n                                alt={`${follower.displayName} @${follower.acct}`}\n                                squircle={follower?.bot}\n                              />\n                            ))}\n                          </span>\n                        </span>\n                      )}\n                      <span title={followersCount}>\n                        {shortenNumber(followersCount)}\n                      </span>{' '}\n                      <Trans>Followers</Trans>\n                    </LinkOrDiv>\n                    <LinkOrDiv\n                      class=\"insignificant\"\n                      tabIndex={0}\n                      to={accountLink}\n                      onClick={() => {\n                        // states.showAccount = false;\n                        setTimeout(() => {\n                          states.showGenericAccounts = {\n                            heading: t({\n                              id: 'following.stats',\n                              message: 'Following',\n                            }),\n                            fetchAccounts: fetchFollowing,\n                            instance,\n                            excludeRelationshipAttrs: isSelf\n                              ? ['following']\n                              : [],\n                            blankCopy: hideCollections\n                              ? t`This user has chosen to not make this information available.`\n                              : undefined,\n                          };\n                        }, 0);\n                      }}\n                    >\n                      <span title={followingCount}>\n                        {shortenNumber(followingCount)}\n                      </span>{' '}\n                      <Trans id=\"following.stats\">Following</Trans>\n                      <br />\n                    </LinkOrDiv>\n                    <LinkOrDiv\n                      class=\"insignificant\"\n                      to={accountLink}\n                      // onClick={\n                      //   standalone\n                      //     ? undefined\n                      //     : () => {\n                      //         hideAllModals();\n                      //       }\n                      // }\n                    >\n                      <span title={statusesCount}>\n                        {shortenNumber(statusesCount)}\n                      </span>{' '}\n                      <Trans>Posts</Trans>\n                    </LinkOrDiv>\n                    {!!createdAt && (\n                      <div class=\"insignificant\">\n                        <Trans>\n                          Joined{' '}\n                          <time datetime={createdAt}>\n                            {niceDateTime(createdAt, {\n                              hideTime: true,\n                            })}\n                          </time>\n                        </Trans>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {!!postingStats && (\n                  <LinkOrDiv\n                    to={accountLink}\n                    class=\"account-metadata-box\"\n                    // onClick={() => {\n                    //   states.showAccount = false;\n                    // }}\n                  >\n                    <div class=\"shazam-container\">\n                      <div class=\"shazam-container-inner\">\n                        {hasPostingStats ? (\n                          <div\n                            class=\"posting-stats\"\n                            title={t`${(\n                              postingStats.originals / postingStats.total\n                            ).toLocaleString(i18n.locale || undefined, {\n                              style: 'percent',\n                            })} original posts, ${(\n                              postingStats.replies / postingStats.total\n                            ).toLocaleString(i18n.locale || undefined, {\n                              style: 'percent',\n                            })} replies, ${(\n                              postingStats.boosts / postingStats.total\n                            ).toLocaleString(i18n.locale || undefined, {\n                              style: 'percent',\n                            })} boosts`}\n                          >\n                            <div>\n                              {postingStats.daysSinceLastPost < 365\n                                ? plural(postingStats.total, {\n                                    one: plural(\n                                      postingStats.daysSinceLastPost,\n                                      {\n                                        one: `Last 1 post in the past 1 day`,\n                                        other: `Last 1 post in the past ${postingStats.daysSinceLastPost} days`,\n                                      },\n                                    ),\n                                    other: plural(\n                                      postingStats.daysSinceLastPost,\n                                      {\n                                        one: `Last ${postingStats.total} posts in the past 1 day`,\n                                        other: `Last ${postingStats.total} posts in the past ${postingStats.daysSinceLastPost} days`,\n                                      },\n                                    ),\n                                  })\n                                : plural(postingStats.total, {\n                                    one: 'Last 1 post in the past year(s)',\n                                    other: `Last ${postingStats.total} posts in the past year(s)`,\n                                  })}\n                            </div>\n                            <div\n                              class=\"posting-stats-bar\"\n                              style={{\n                                // [originals | replies | boosts]\n                                '--originals-percentage': `${\n                                  (postingStats.originals /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                                '--replies-percentage': `${\n                                  ((postingStats.originals +\n                                    postingStats.replies) /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                              }}\n                            />\n                            <div class=\"posting-stats-legends\">\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                                <Trans>Original</Trans>\n                              </span>{' '}\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                                <Trans>Replies</Trans>\n                              </span>{' '}\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                                <Trans>Boosts</Trans>\n                              </span>\n                            </div>\n                          </div>\n                        ) : (\n                          <div class=\"posting-stats\">\n                            <Trans>Post stats unavailable.</Trans>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </LinkOrDiv>\n                )}\n                {!moved && (\n                  <div class=\"account-metadata-box\">\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!!postingStats}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <button\n                          type=\"button\"\n                          class=\"posting-stats-button\"\n                          disabled={postingStatsUIState === 'loading'}\n                          onClick={() => {\n                            renderPostingStats();\n                          }}\n                        >\n                          <div\n                            class={`posting-stats-bar posting-stats-icon ${\n                              postingStatsUIState === 'loading' ? 'loading' : ''\n                            }`}\n                            style={{\n                              '--originals-percentage': '33%',\n                              '--replies-percentage': '66%',\n                            }}\n                          />\n                          <Trans>View post stats</Trans>{' '}\n                          {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </main>\n              <footer>\n                <RelatedActions\n                  info={info}\n                  instance={instance}\n                  standalone={standalone}\n                  authenticated={authenticated}\n                  onRelationshipChange={onRelationshipChange}\n                  onProfileUpdate={onProfileUpdate}\n                  setShowEditProfile={setShowEditProfile}\n                />\n              </footer>\n            </>\n          )\n        )}\n      </div>\n      {!!showEditProfile && (\n        <Modal\n          onClose={() => {\n            setShowEditProfile(false);\n          }}\n        >\n          <EditProfileSheet\n            onClose={({ state, account } = {}) => {\n              setShowEditProfile(false);\n              if (state === 'success' && account) {\n                onProfileUpdate(account);\n              }\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction RelatedActions({\n  info,\n  instance,\n  standalone,\n  authenticated,\n  onRelationshipChange = () => {},\n  onProfileUpdate = () => {},\n  setShowEditProfile = () => {},\n}) {\n  if (!info) return null;\n  const { _, t } = useLingui();\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  const acctWithInstance = acct.includes('@') ? acct : `${acct}@${instance}`;\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = getCurrentAccountID();\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.fetch({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        // if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">\n              <Trans>Follows you</Trans>\n            </span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              <Trans>\n                Last post:{' '}\n                <span class=\"ib\">\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </span>\n              </Trans>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && (\n            <span class=\"tag danger\">\n              <Trans>Muted</Trans>\n            </span>\n          )}\n          {blocking && (\n            <span class=\"tag danger\">\n              <Trans>Blocked</Trans>\n            </span>\n          )}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title={t`Private note`}\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\" disabled={loading}>\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf && (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    showCompose({\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    });\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>\n                    <Trans>\n                      Mention <span class=\"bidi-isolate\">@{username}</span>\n                    </Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>\n                    <Trans>Translate bio</Trans>\n                  </span>\n                </MenuItem>\n                {supports('@mastodon/profile-private-note') && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowPrivateNoteModal(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      {privateNote ? t`Edit private note` : t`Add private note`}\n                    </span>\n                  </MenuItem>\n                )}\n                {following && !!relationship && (\n                  <>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                notify: !notifying,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.notifying\n                                ? t`Notifications enabled for @${username}'s posts.`\n                                : t` Notifications disabled for @${username}'s posts.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"notification\" />\n                      <span>\n                        {notifying\n                          ? t`Disable notifications`\n                          : t`Enable notifications`}\n                      </span>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                reblogs: !showingReblogs,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.showingReblogs\n                                ? t`Boosts from @${username} enabled.`\n                                : t`Boosts from @${username} disabled.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {showingReblogs ? t`Disable boosts` : t`Enable boosts`}\n                      </span>\n                    </MenuItem>\n                  </>\n                )}\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          <Trans>Add/Remove from Lists</Trans>\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>\n                        <Trans>Add/Remove from Lists</Trans>\n                      </span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acctWithInstance}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast(t`Handle copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy handle`);\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                <Trans>Copy handle</Trans>\n                <br />\n                <span class=\"more-insignificant bidi-isolate\">\n                  @{currentInfo?.acct || acctWithInstance}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast(t`Link copied`);\n                  } catch (e) {\n                    console.error(e);\n                    showToast(t`Unable to copy link`);\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>\n                  <Trans>Copy</Trans>\n                </span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Sharing doesn't seem to work.`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>\n                      <Trans>Share…</Trans>\n                    </span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>\n                      <Trans>\n                        Unmute <span class=\"bidi-isolate\">@{username}</span>\n                      </Trans>\n                    </span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu2\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">\n                          <Trans>\n                            Mute <span class=\"bidi-isolate\">@{username}</span>…\n                          </Trans>\n                        </span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  t`Muted @${username} for ${\n                                    typeof MUTE_DURATIONS_LABELS[duration] ===\n                                    'function'\n                                      ? MUTE_DURATIONS_LABELS[duration]()\n                                      : _(MUTE_DURATIONS_LABELS[duration])\n                                  }`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(t`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {typeof MUTE_DURATIONS_LABELS[duration] === 'function'\n                            ? MUTE_DURATIONS_LABELS[duration]()\n                            : _(MUTE_DURATIONS_LABELS[duration])}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu2>\n                )}\n                {followedBy && (\n                  <MenuConfirm\n                    subMenu\n                    menuItemClassName=\"danger\"\n                    confirmLabel={\n                      <>\n                        <Icon icon=\"user-x\" />\n                        <span>\n                          <Trans>\n                            Remove <span class=\"bidi-isolate\">@{username}</span>{' '}\n                            from followers?\n                          </Trans>\n                        </span>\n                      </>\n                    }\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .removeFromFollowers();\n                          console.log(\n                            'removing from followers',\n                            newRelationship,\n                          );\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`@${username} removed from followers`);\n                          states.reloadGenericAccounts.id = 'followers';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"user-x\" />\n                    <span>\n                      <Trans>Remove follower…</Trans>\n                    </span>\n                  </MenuConfirm>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>?\n                        </Trans>\n                      </span>\n                    </>\n                  }\n                  itemProps={{\n                    className: 'danger',\n                  }}\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(t`Unable to unblock @${username}`);\n                        } else {\n                          showToast(t`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>\n                        <Trans>\n                          Unblock <span class=\"bidi-isolate\">@{username}</span>\n                        </Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>…\n                        </Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>\n                    <Trans>\n                      Report <span class=\"bidi-isolate\">@{username}</span>…\n                    </Trans>\n                  </span>\n                </MenuItem>\n              </>\n            )}\n            {currentAuthenticated &&\n              isSelf &&\n              standalone &&\n              supports('@mastodon/profile-edit') && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      setShowEditProfile(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      <Trans>Edit profile</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && !moved && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? t`Withdraw follow request?`\n                    : t`Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) setRelationship(newRelationship);\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>\n                      <Trans>Following</Trans>\n                    </span>\n                    <span>\n                      <Trans>Unfollow…</Trans>\n                    </span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>\n                      <Trans>Requested</Trans>\n                    </span>\n                    <span>\n                      <Trans>Withdraw…</Trans>\n                    </span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                ) : (\n                  t`Follow`\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// Apply more alpha if high luminence\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = URL.parse(url);\n  if (!urlObj) return;\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{punycode.toUnicode(host)}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const { t } = useLingui();\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Translated Bio</Trans>\n        </h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await getLists();\n        setLists(lists);\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Add/Remove from Lists</Trans>\n        </h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? t`Unable to remove from list.`\n                              : t`Unable to add to list.`,\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" alt=\"☑️\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Unable to load lists.</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state\">\n            <Trans>No lists.</Trans>\n          </p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" />{' '}\n          <span>\n            <Trans>New list</Trans>\n          </span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>\n            Private note about{' '}\n            <span class=\"bidi-isolate\">\n              @{account?.username || account?.acct}\n            </span>\n          </Trans>\n        </b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || t`Unable to update private note.`);\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n            dir=\"auto\"\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              <Trans>Cancel</Trans>\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                <Trans>Save &amp; close</Trans>\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nconst SUPPORTED_IMAGE_FORMATS = [\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'image/webp',\n];\nconst SUPPORTED_IMAGE_FORMATS_STR = SUPPORTED_IMAGE_FORMATS.join(',');\n\nfunction EditProfileSheet({ onClose = () => {} }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('loading');\n  const [account, setAccount] = useState(null);\n  const [headerPreview, setHeaderPreview] = useState(null);\n  const [avatarPreview, setAvatarPreview] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await masto.v1.accounts.verifyCredentials();\n        setAccount(acc);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  console.log('EditProfileSheet', account);\n  const { displayName, source, avatar, header } = account || {};\n  const { note, fields } = source || {};\n  const fieldsAttributesRef = useRef(null);\n\n  const avatarMediaAttachments = [\n    ...(avatar ? [{ type: 'image', url: avatar }] : []),\n    ...(avatarPreview ? [{ type: 'image', url: avatarPreview }] : []),\n  ];\n  const headerMediaAttachments = [\n    ...(header ? [{ type: 'image', url: header }] : []),\n    ...(headerPreview ? [{ type: 'image', url: headerPreview }] : []),\n  ];\n\n  return (\n    <div class=\"sheet\" id=\"edit-profile-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>Edit profile</Trans>\n        </b>\n      </header>\n      <main>\n        {uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const header = formData.get('header');\n              const avatar = formData.get('avatar');\n              const displayName = formData.get('display_name');\n              const note = formData.get('note');\n              const fieldsAttributesFields =\n                fieldsAttributesRef.current.querySelectorAll(\n                  'input[name^=\"fields_attributes\"]',\n                );\n              const fieldsAttributes = [];\n              fieldsAttributesFields.forEach((field) => {\n                const name = field.name;\n                const [_, index, key] =\n                  name.match(/fields_attributes\\[(\\d+)\\]\\[(.+)\\]/) || [];\n                const value = field.value ? field.value.trim() : '';\n                if (index && key && value) {\n                  if (!fieldsAttributes[index]) fieldsAttributes[index] = {};\n                  fieldsAttributes[index][key] = value;\n                }\n              });\n              // Fill in the blanks\n              fieldsAttributes.forEach((field) => {\n                if (field.name && !field.value) {\n                  field.value = '';\n                }\n              });\n\n              (async () => {\n                try {\n                  const newAccount = await masto.v1.accounts.updateCredentials({\n                    header,\n                    avatar,\n                    displayName,\n                    note,\n                    fieldsAttributes,\n                  });\n                  console.log('updated account', newAccount);\n                  onClose?.({\n                    state: 'success',\n                    account: newAccount,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(e?.message || t`Unable to update profile.`);\n                }\n              })();\n            }}\n          >\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Header picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"header\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setHeaderPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {header ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: headerMediaAttachments,\n                        index: 0,\n                      };\n                    }}\n                  >\n                    <img src={header} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {headerPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: headerMediaAttachments,\n                          index: 1,\n                        };\n                      }}\n                    >\n                      <img src={headerPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Profile picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"avatar\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setAvatarPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {avatar ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: avatarMediaAttachments,\n                        index: 0,\n                      };\n                    }}\n                  >\n                    <img src={avatar} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {avatarPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: avatarMediaAttachments,\n                          index: 1,\n                        };\n                      }}\n                    >\n                      <img src={avatarPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <p>\n              <label>\n                <Trans>Name</Trans>{' '}\n                <input\n                  type=\"text\"\n                  name=\"display_name\"\n                  defaultValue={displayName}\n                  maxLength={30}\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            <p>\n              <label>\n                <Trans>Bio</Trans>\n                <textarea\n                  defaultValue={note}\n                  name=\"note\"\n                  maxLength={500}\n                  rows=\"5\"\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            {/* Table for fields; name and values are in fields, min 4 rows */}\n            <p>\n              <Trans>Extra fields</Trans>\n            </p>\n            <table ref={fieldsAttributesRef}>\n              <thead>\n                <tr>\n                  <th>\n                    <Trans>Label</Trans>\n                  </th>\n                  <th>\n                    <Trans>Content</Trans>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from({ length: Math.max(4, fields.length) }).map(\n                  (_, i) => {\n                    const { name = '', value = '' } = fields[i] || {};\n                    return (\n                      <FieldsAttributesRow\n                        key={i}\n                        name={name}\n                        value={value}\n                        index={i}\n                        disabled={uiState === 'loading'}\n                      />\n                    );\n                  },\n                )}\n              </tbody>\n            </table>\n            <footer>\n              <button\n                type=\"button\"\n                class=\"light\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  onClose?.();\n                }}\n              >\n                <Trans>Cancel</Trans>\n              </button>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                <Trans>Save</Trans>\n              </button>\n            </footer>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction FieldsAttributesRow({ name, value, disabled, index: i }) {\n  const [hasValue, setHasValue] = useState(!!value);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][name]`}\n          defaultValue={name}\n          disabled={disabled}\n          maxLength={255}\n          required={hasValue}\n          dir=\"auto\"\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][value]`}\n          defaultValue={value}\n          disabled={disabled}\n          maxLength={255}\n          onChange={(e) => setHasValue(!!e.currentTarget.value)}\n          dir=\"auto\"\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction AccountHandleInfo({ acct, instance }) {\n  // acct = username or username@server\n  let [username, server] = acct.split('@');\n  if (!server) server = instance;\n  const encodedAcct = punycode.toASCII(acct);\n  return (\n    <div class=\"handle-info\">\n      <span class=\"handle-handle\" title={encodedAcct}>\n        <b class=\"handle-username\">{username}</b>\n        <span class=\"handle-at\">@</span>\n        <b class=\"handle-server\">{server}</b>\n      </span>\n      <div class=\"handle-legend\">\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon username\" /> <Trans>username</Trans>\n        </span>{' '}\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon server\" />{' '}\n          <Trans>server domain name</Trans>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountInfo from './account-info';\nimport Icon from './icon';\n\nfunction AccountSheet({ account, instance: propInstance, onClose }) {\n  const { t } = useLingui();\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const isString = typeof account === 'string';\n\n  useEffect(() => {\n    if (!isString) {\n      states.accounts[`${account.id}@${instance}`] = account;\n    }\n  }, [account]);\n\n  useLocationChange(onClose);\n\n  return (\n    <div\n      class=\"sheet\"\n      // onClick={(e) => {\n      //   const accountBlock = e.target.closest('.account-block');\n      //   if (accountBlock) {\n      //     onClose({\n      //       destination: 'account-statuses',\n      //     });\n      //   }\n      // }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <AccountInfo\n        instance={instance}\n        authenticated={authenticated}\n        account={account}\n        fetchAccount={async () => {\n          if (isString) {\n            try {\n              const info = await masto.v1.accounts.lookup({\n                acct: account,\n                skip_webfinger: false,\n              });\n              return info;\n            } catch (e) {\n              const result = await masto.v2.search.fetch({\n                q: account,\n                type: 'accounts',\n                limit: 1,\n                resolve: authenticated,\n              });\n              if (result.accounts.length) {\n                return result.accounts[0];\n              } else if (/https?:\\/\\/[^/]+\\/@/.test(account)) {\n                const accountURL = URL.parse(account);\n                if (accountURL) {\n                  const { hostname, pathname } = accountURL;\n                  const acct =\n                    pathname.replace(/^\\//, '').replace(/\\/$/, '') +\n                    '@' +\n                    hostname;\n                  const result = await masto.v2.search.fetch({\n                    q: acct,\n                    type: 'accounts',\n                    limit: 1,\n                    resolve: authenticated,\n                  });\n                  if (result.accounts.length) {\n                    return result.accounts[0];\n                  }\n                }\n              }\n            }\n          } else {\n            return account;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountSheet;\n","import './drafts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\n\nfunction Drafts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [drafts, setDrafts] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const keys = await db.drafts.keys();\n        if (keys.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = keys.filter((key) => key.startsWith(ns));\n          if (ownKeys.length) {\n            const drafts = await db.drafts.getMany(ownKeys);\n            drafts.sort(\n              (a, b) =>\n                new Date(b.updatedAt).getTime() -\n                new Date(a.updatedAt).getTime(),\n            );\n            setDrafts(drafts);\n          } else {\n            setDrafts([]);\n          }\n        } else {\n          setDrafts([]);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const hasDrafts = drafts?.length > 0;\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Unsent drafts</Trans>{' '}\n          <Loader abrupt hidden={uiState !== 'loading'} />\n        </h2>\n        {hasDrafts && (\n          <div class=\"insignificant\">\n            <Trans>\n              Looks like you have unsent drafts. Let's continue where you left\n              off.\n            </Trans>\n          </div>\n        )}\n      </header>\n      <main>\n        {hasDrafts ? (\n          <>\n            <ul class=\"drafts-list\">\n              {drafts.map((draft) => {\n                const { updatedAt, key, draftStatus, replyTo } = draft;\n                const updatedAtDate = new Date(updatedAt);\n                return (\n                  <li key={updatedAt}>\n                    <div class=\"mini-draft-meta\">\n                      <b>\n                        <Icon icon={replyTo ? 'reply' : 'quill'} size=\"s\" />{' '}\n                        <time>\n                          {!!replyTo && (\n                            <>\n                              <span class=\"bidi-isolate\">\n                                @{replyTo.account.acct}\n                              </span>\n                              <br />\n                            </>\n                          )}\n                          {niceDateTime(updatedAtDate)}\n                        </time>\n                      </b>\n                      <MenuConfirm\n                        confirmLabel={\n                          <span>\n                            <Trans>Delete this draft?</Trans>\n                          </span>\n                        }\n                        menuItemClassName=\"danger\"\n                        align=\"end\"\n                        disabled={uiState === 'loading'}\n                        onClick={() => {\n                          (async () => {\n                            try {\n                              // const yes = confirm('Delete this draft?');\n                              // if (yes) {\n                              await db.drafts.del(key);\n                              reload();\n                              // }\n                            } catch (e) {\n                              alert(t`Error deleting draft! Please try again.`);\n                            }\n                          })();\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"small light\"\n                          disabled={uiState === 'loading'}\n                        >\n                          <Trans>Delete…</Trans>\n                        </button>\n                      </MenuConfirm>\n                    </div>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      class=\"draft-item\"\n                      onClick={async () => {\n                        // console.log({ draftStatus });\n                        let replyToStatus;\n                        if (replyTo) {\n                          setUIState('loading');\n                          try {\n                            replyToStatus = await masto.v1.statuses\n                              .$select(replyTo.id)\n                              .fetch();\n                          } catch (e) {\n                            console.error(e);\n                            alert(t`Error fetching reply-to status!`);\n                            setUIState('default');\n                            return;\n                          }\n                          setUIState('default');\n                        }\n                        window.__COMPOSE__ = {\n                          draftStatus,\n                          replyToStatus,\n                        };\n                        states.showCompose = true;\n                        states.showDrafts = false;\n                      }}\n                    >\n                      <MiniDraft draft={draft} />\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            {drafts.length > 1 && (\n              <p>\n                <MenuConfirm\n                  confirmLabel={\n                    <span>\n                      <Trans>Delete all drafts?</Trans>\n                    </span>\n                  }\n                  menuItemClassName=\"danger\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    (async () => {\n                      // const yes = confirm('Delete all drafts?');\n                      // if (yes) {\n                      setUIState('loading');\n                      try {\n                        await db.drafts.delMany(\n                          drafts.map((draft) => draft.key),\n                        );\n                        setUIState('default');\n                        reload();\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Error deleting drafts! Please try again.`);\n                        setUIState('error');\n                      }\n                      // }\n                    })();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"light danger\"\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Delete all…</Trans>\n                  </button>\n                </MenuConfirm>\n              </p>\n            )}\n          </>\n        ) : (\n          <p>\n            <Trans>No drafts found.</Trans>\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction MiniDraft({ draft }) {\n  const { t } = useLingui();\n  const { draftStatus, replyTo } = draft;\n  const { status, spoilerText, poll, mediaAttachments } = draftStatus;\n  const hasPoll = poll?.options?.length > 0;\n  const hasMedia = mediaAttachments?.length > 0;\n  const hasPollOrMedia = hasPoll || hasMedia;\n  const firstImageMedia = useMemo(() => {\n    if (!hasMedia) return;\n    const image = mediaAttachments.find((media) => /image/.test(media.type));\n    if (!image) return;\n    const { file } = image;\n    const objectURL = URL.createObjectURL(file);\n    return objectURL;\n  }, [hasMedia, mediaAttachments]);\n  return (\n    <>\n      <div class=\"mini-draft\">\n        {hasPollOrMedia && (\n          <div\n            class={`mini-draft-aside ${firstImageMedia ? 'has-image' : ''}`}\n            style={\n              firstImageMedia\n                ? {\n                    '--bg-image': `url(${firstImageMedia})`,\n                  }\n                : {}\n            }\n          >\n            {hasPoll && <Icon icon=\"poll\" alt={t`Poll`} />}\n            {hasMedia && (\n              <span>\n                <Icon icon=\"attachment\" alt={t`Media`} />{' '}\n                <small>{mediaAttachments?.length}</small>\n              </span>\n            )}\n          </div>\n        )}\n        <div class=\"mini-draft-main\">\n          {!!spoilerText && <div class=\"mini-draft-spoiler\">{spoilerText}</div>}\n          {!!status && <div class=\"mini-draft-status\">{status}</div>}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Drafts;\n","import './embed-modal.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport Icon from './icon';\n\nfunction EmbedModal({ html, url, width, height, onClose = () => {} }) {\n  const { t } = useLingui();\n  return (\n    <div class=\"embed-modal-container\">\n      <div class=\"top-controls\">\n        <button type=\"button\" class=\"light\" onClick={() => onClose()}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n        {url && (\n          <a href={url} target=\"_blank\" rel=\"noopener\" class=\"button plain\">\n            <span>\n              <Trans>Open in new window</Trans>\n            </span>{' '}\n            <Icon icon=\"external\" />\n          </a>\n        )}\n      </div>\n      <div\n        class=\"embed-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{\n          '--width': width + 'px',\n          '--height': height + 'px',\n          '--aspect-ratio': `${width}/${height}`,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EmbedModal;\n","import './generic-accounts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Link from './link';\nimport Loader from './loader';\nimport Status from './status';\n\nexport default function GenericAccounts({\n  instance,\n  excludeRelationshipAttrs = [],\n  postID,\n  onClose = () => {},\n  blankCopy,\n}) {\n  const { t } = useLingui();\n  const { masto, instance: currentInstance } = api();\n  const isCurrentInstance = instance ? instance === currentInstance : true;\n  const snapStates = useSnapshot(states);\n  ``;\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  useLocationChange(onClose);\n\n  if (!snapStates.showGenericAccounts) {\n    return null;\n  }\n\n  const {\n    id,\n    heading,\n    fetchAccounts,\n    accounts: staticAccounts,\n    showReactions,\n  } = snapStates.showGenericAccounts;\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    if (!isCurrentInstance) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (firstLoad) => {\n    if (!fetchAccounts) return;\n    if (firstLoad) setAccounts([]);\n    setUIState('loading');\n    (async () => {\n      try {\n        const { done, value } = await fetchAccounts(firstLoad);\n        if (Array.isArray(value)) {\n          if (firstLoad) {\n            const accounts = [];\n            for (let i = 0; i < value.length; i++) {\n              const account = value[i];\n              const theAccount = accounts.find(\n                (a, j) => a.id === account.id && i !== j,\n              );\n              if (!theAccount) {\n                accounts.push({\n                  _types: [],\n                  ...account,\n                });\n              } else {\n                theAccount._types.push(...account._types);\n              }\n            }\n            setAccounts(accounts);\n          } else {\n            // setAccounts((prev) => [...prev, ...value]);\n            // Merge accounts by id and _types\n            setAccounts((prev) => {\n              const newAccounts = prev;\n              for (const account of value) {\n                const theAccount = newAccounts.find((a) => a.id === account.id);\n                if (!theAccount) {\n                  newAccounts.push(account);\n                } else {\n                  theAccount._types.push(...account._types);\n                }\n              }\n              return newAccounts;\n            });\n          }\n          setShowMore(!done);\n\n          loadRelationships(value);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (staticAccounts?.length > 0) {\n      setAccounts(staticAccounts);\n      loadRelationships(staticAccounts);\n    } else {\n      loadAccounts(true);\n      firstLoad.current = false;\n    }\n  }, [staticAccounts, fetchAccounts]);\n\n  useEffect(() => {\n    if (firstLoad.current) return;\n    // reloadGenericAccounts contains value like {id: 'mute', counter: 1}\n    // We only need to reload if the id matches\n    if (snapStates.reloadGenericAccounts?.id === id) {\n      loadAccounts(true);\n    }\n  }, [snapStates.reloadGenericAccounts.counter]);\n\n  const post = states.statuses[postID];\n\n  return (\n    <div id=\"generic-accounts-container\" class=\"sheet\" tabindex=\"-1\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>{heading || t`Accounts`}</h2>\n      </header>\n      <main>\n        {post && (\n          <Link\n            to={`/${instance || currentInstance}/s/${post.id}`}\n            class=\"post-preview\"\n          >\n            <Status status={post} size=\"s\" readOnly />\n          </Link>\n        )}\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"accounts-list\">\n              {accounts.map((account) => {\n                const relationship = relationshipsMap[account.id];\n                const key = `${account.id}-${account._types?.length || ''}`;\n                return (\n                  <li key={key}>\n                    {showReactions && account._types?.length > 0 && (\n                      <div class=\"reactions-block\">\n                        {account._types.map((type) => (\n                          <Icon\n                            icon={\n                              {\n                                reblog: 'rocket',\n                                favourite: 'heart',\n                              }[type]\n                            }\n                            class={`${type}-icon`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <div class=\"account-relationships\">\n                      <AccountBlock\n                        account={account}\n                        showStats\n                        relationship={relationship}\n                        excludeRelationshipAttrs={excludeRelationshipAttrs}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      loadAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => loadAccounts()}\n                  >\n                    <Trans>Show more…</Trans>\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">\n                  <Trans>The end.</Trans>\n                </p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Error loading accounts</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state insignificant\">\n            {blankCopy || t`Nothing to show`}\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeMatch from '../utils/locale-match';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Menu2 from './menu2';\nimport TranslationBlock from './translation-block';\n\nexport default function MediaAltModal({ alt, lang, onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [forceTranslate, setForceTranslate] = useState(false);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const differentLanguage =\n    !!lang &&\n    lang !== targetLanguage &&\n    !localeMatch([lang], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => lang === l || localeMatch([lang], [l]),\n    );\n\n  return (\n    <div class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Media description</Trans>\n        </h2>\n        <div class=\"header-side\">\n          <Menu2\n            align=\"end\"\n            menuButton={\n              <button type=\"button\" class=\"plain4\">\n                <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={forceTranslate}\n              onClick={() => {\n                setForceTranslate(true);\n              }}\n            >\n              <Icon icon=\"translate\" />\n              <span>\n                <Trans>Translate</Trans>\n              </span>\n            </MenuItem>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  speak(alt, lang);\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>\n                  <Trans>Speak</Trans>\n                </span>\n              </MenuItem>\n            )}\n          </Menu2>\n        </div>\n      </header>\n      <main lang={lang} dir=\"auto\">\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n            textWrap: 'pretty',\n          }}\n        >\n          {alt}\n        </p>\n        {(differentLanguage || forceTranslate) && (\n          <TranslationBlock\n            forceTranslate={forceTranslate}\n            sourceLanguage={lang}\n            text={alt}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklch2rgb, rgb2oklch } from '../utils/color-utils';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.focus();\n    carouselRef.current.scrollTo({\n      left: scrollLeft * (isRTL() ? -1 : 1),\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = () => {\n      onClose();\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, []);\n\n  useHotkeys(\n    'esc',\n    onClose,\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(Math.abs(scrollLeft) / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaOkColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        return rgb2oklch(averageColor);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentColors = useMemo(() => {\n    return mediaOkColors?.map((okColor) => {\n      if (okColor) {\n        return {\n          light: oklch2rgb([0.95, 0.01, okColor[2]]),\n          dark: oklch2rgb([0.35, 0.01, okColor[2]]),\n          default: oklch2rgb([0.6, okColor[1], okColor[2]]),\n        };\n      }\n      return null;\n    });\n  });\n  const mediaAccentGradients = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    const colors = mediaAccentColors.map((color, i) => {\n      const start = i * range + gap;\n      const end = (i + 1) * range - gap;\n      if (color?.light && color?.dark) {\n        return {\n          light: `\n                rgb(${color.light?.join(',')}) ${start}%, \n                rgb(${color.light?.join(',')}) ${end}%\n              `,\n          dark: `\n                rgb(${color.dark?.join(',')}) ${start}%, \n                rgb(${color.dark?.join(',')}) ${end}%\n              `,\n        };\n      }\n\n      return {\n        light: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n        dark: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n      };\n    });\n    const lightGradient = colors.map((color) => color.light).join(', ');\n    const darkGradient = colors.map((color) => color.dark).join(', ');\n    return {\n      light: lightGradient,\n      dark: darkGradient,\n    };\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const currentColor = mediaAccentColors[currentIndex];\n    let $meta;\n    let metaColor;\n    if (currentColor) {\n      const theme = store.local.get('theme');\n      if (theme) {\n        const mediaColor = `rgb(${currentColor[theme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      } else {\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        const mediaColor = `rgb(${currentColor[colorScheme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      }\n    }\n    return () => {\n      // Reset meta color\n      if ($meta && metaColor) {\n        $meta.content = metaColor;\n      }\n    };\n  }, [currentIndex, mediaAccentColors]);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose();\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                '--accent-gradient-light': mediaAccentGradients?.light,\n                '--accent-gradient-dark': mediaAccentGradients?.dark,\n                //     backgroundImage: `linear-gradient(\n                // to ${isRTL() ? 'left' : 'right'}, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor.default.join(',')})`,\n                      '--accent-light-color': `rgb(${accentColor.light?.join(\n                        ',',\n                      )})`,\n                      '--accent-dark-color': `rgb(${accentColor.dark?.join(\n                        ',',\n                      )})`,\n                      '--accent-alpha-color': `rgba(${accentColor.default.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={() => onClose()}\n          >\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const left =\n                    carouselRef.current.clientWidth * i * (isRTL() ? -1 : 1);\n                  carouselRef.current.focus();\n                  carouselRef.current.scrollTo({ left, behavior: 'smooth' });\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" alt=\"⸱\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title={t`Open original media in new window`}\n            >\n              <Icon icon=\"popout\" />\n              <span>\n                <Trans>Open original media</Trans>\n              </span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: t`Attempting to describe image. Please wait…`,\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Failed to describe image`);\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>\n                      <Trans>Describe image…</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          {!!statusID && (\n            <Link\n              to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n                window.matchMedia('(min-width: calc(40em + 350px))').matches\n                  ? `?media=${currentIndex + 1}`\n                  : ''\n              }`}\n              class=\"button carousel-button media-post-link\"\n              // onClick={() => {\n              //   // if small screen (not media query min-width 40em + 350px), run onClose\n              //   if (\n              //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n              //   ) {\n              //     onClose();\n              //   }\n              // }}\n            >\n              <span class=\"button-label\">\n                <Trans>View post</Trans>{' '}\n              </span>\n              &raquo;\n            </Link>\n          )}\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex - 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" alt={t`Previous`} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex + 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" alt={t`Next`} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './report-modal.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport { getCurrentInstance } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Status from './status';\n\n// NOTE: `dislike` hidden for now, it's actually not used for reporting\n// Mastodon shows another screen for unfollowing, muting or blocking instead of reporting\n\nconst CATEGORIES = [, /*'dislike'*/ 'spam', 'legal', 'violation', 'other'];\n// `violation` will be set if there are `rule_ids[]`\n\nconst CATEGORIES_INFO = {\n  // dislike: {\n  //   label: 'Dislike',\n  //   description: 'Not something you want to see',\n  // },\n  spam: {\n    label: msg`Spam`,\n    description: msg`Malicious links, fake engagement, or repetitive replies`,\n  },\n  legal: {\n    label: msg`Illegal`,\n    description: msg`Violates the law of your or the server's country`,\n  },\n  violation: {\n    label: msg`Server rule violation`,\n    description: msg`Breaks specific server rules`,\n    stampLabel: msg`Violation`,\n  },\n  other: {\n    label: msg`Other`,\n    description: msg`Issue doesn't fit other categories`,\n    excludeStamp: true,\n  },\n};\n\nfunction ReportModal({ account, post, onClose }) {\n  const { _, t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [username, domain] = account.acct.split('@');\n\n  const [rules, currentDomain] = useMemo(() => {\n    const { rules, domain } = getCurrentInstance();\n    return [rules || [], domain];\n  });\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  const rulesRef = useRef(null);\n  const [hasRules, setHasRules] = useState(false);\n\n  return (\n    <div class=\"report-modal-container\">\n      <div class=\"top-controls\">\n        <h1>{post ? t`Report Post` : t`Report @${username}`}</h1>\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          disabled={uiState === 'loading'}\n          onClick={() => onClose()}\n        >\n          <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n        </button>\n      </div>\n      <main>\n        <div class=\"report-preview\">\n          {post ? (\n            <Status status={post} size=\"s\" previewMode />\n          ) : (\n            <AccountBlock\n              account={account}\n              avatarSize=\"xxl\"\n              useAvatarStatic\n              showStats\n              showActivity\n            />\n          )}\n        </div>\n        {!!selectedCategory &&\n          !CATEGORIES_INFO[selectedCategory].excludeStamp && (\n            <span\n              class=\"rubber-stamp\"\n              key={selectedCategory}\n              aria-hidden=\"true\"\n            >\n              {_(\n                CATEGORIES_INFO[selectedCategory].stampLabel ||\n                  _(CATEGORIES_INFO[selectedCategory].label),\n              )}\n              <small>\n                <Trans>Pending review</Trans>\n              </small>\n            </span>\n          )}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n\n            let { category, comment, forward } = entries;\n            if (!comment) comment = undefined;\n            if (forward === 'on') forward = true;\n            const ruleIds =\n              category === 'violation'\n                ? Object.entries(entries)\n                    .filter(([key]) => key.startsWith('rule_ids'))\n                    .map(([key, value]) => value)\n                : undefined;\n\n            const params = {\n              category,\n              comment,\n              forward,\n              ruleIds,\n            };\n            console.log('PARAMS', params);\n\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.reports.create({\n                  accountId: account.id,\n                  statusIds: post?.id ? [post.id] : undefined,\n                  category,\n                  comment,\n                  ruleIds,\n                  forward,\n                });\n                setUIState('success');\n                showToast(post ? t`Post reported` : t`Profile reported`);\n                onClose();\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                showToast(\n                  error?.message ||\n                    (post\n                      ? t`Unable to report post`\n                      : t`Unable to report profile`),\n                );\n              }\n            })();\n          }}\n        >\n          <p>\n            {post\n              ? t`What's the issue with this post?`\n              : t`What's the issue with this profile?`}\n          </p>\n          <section class=\"report-categories\">\n            {CATEGORIES.map((category) =>\n              category === 'violation' && !rules?.length ? null : (\n                <Fragment key={category}>\n                  <label class=\"report-category\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category}\n                      required\n                      disabled={uiState === 'loading'}\n                      onChange={(e) => {\n                        setSelectedCategory(e.target.value);\n                        setShowRules(e.target.value === 'violation');\n                      }}\n                    />\n                    <span>\n                      {_(CATEGORIES_INFO[category].label)} &nbsp;\n                      <small class=\"ib insignificant\">\n                        {_(CATEGORIES_INFO[category].description)}\n                      </small>\n                    </span>\n                  </label>\n                  {category === 'violation' && !!rules?.length && (\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!showRules}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <div class=\"report-rules\" ref={rulesRef}>\n                          {rules.map((rule, i) => (\n                            <label class=\"report-rule\" key={rule.id}>\n                              <input\n                                type=\"checkbox\"\n                                name={`rule_ids[${i}]`}\n                                value={rule.id}\n                                required={showRules && !hasRules}\n                                disabled={uiState === 'loading'}\n                                onChange={(e) => {\n                                  const { checked } = e.target;\n                                  if (checked) {\n                                    setHasRules(true);\n                                  } else {\n                                    const checkedInputs =\n                                      rulesRef.current.querySelectorAll(\n                                        'input:checked',\n                                      );\n                                    if (!checkedInputs.length) {\n                                      setHasRules(false);\n                                    }\n                                  }\n                                }}\n                              />\n                              <span>{rule.text}</span>\n                            </label>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </section>\n          <section class=\"report-comment\">\n            <p>\n              <label for=\"report-comment\">\n                <Trans>Additional info</Trans>\n              </label>\n            </p>\n            <textarea\n              maxlength=\"1000\"\n              rows=\"1\"\n              name=\"comment\"\n              id=\"report-comment\"\n              disabled={uiState === 'loading'}\n              required={!post} // Required if not reporting a post\n            />\n          </section>\n          {!!domain && domain !== currentDomain && (\n            <section>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    switch\n                    name=\"forward\"\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <span>\n                    <Trans>\n                      Forward to <i>{domain}</i>\n                    </Trans>\n                  </span>\n                </label>\n              </p>\n            </section>\n          )}\n          <footer>\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              <Trans>Send Report</Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).mute(); // Infinite duration\n                  showToast(t`Muted ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to mute ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Mute profile</small>\n              </Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).block();\n                  showToast(t`Blocked ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to block ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Block profile</small>\n              </Trans>\n            </button>\n            <Loader hidden={uiState !== 'loading'} />\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ReportModal;\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags.list({\n    limit: LIMIT,\n  });\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { msg, t } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport { getLists, getListTitle } from '../utils/lists';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: msg`Home / Following`,\n  notifications: msg`Notifications`,\n  list: msg`Lists`,\n  public: msg`Public (Local / Federated)`,\n  search: msg`Search`,\n  'account-statuses': msg`Account`,\n  bookmarks: msg`Bookmarks`,\n  favourites: msg`Likes`,\n  hashtag: msg`Hashtag`,\n  trending: msg`Trending`,\n  mentions: msg`Mentions`,\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: msg`List ID`,\n      name: 'id',\n      notRequired: true,\n    },\n  ],\n  public: [\n    {\n      text: msg`Local only`,\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: msg`Search term`,\n      name: 'query',\n      type: 'text',\n      placeholder: msg`Optional, unless for multi-column mode`,\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: msg`e.g. PixelArt (Max 5, space-separated)`,\n      pattern: '[^#]+',\n    },\n    {\n      text: msg`Media only`,\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n};\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) =>\n      index === 0\n        ? t`Home`\n        : t({ id: 'following.title', message: 'Following' }),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: msg`Mentions`,\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: msg`Notifications`,\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: ({ id }) => (id ? 'list' : 'lists'),\n    title: ({ id }) => (id ? getListTitle(id) : t`Lists`),\n    path: ({ id }) => (id ? `/l/${id}` : '/l'),\n    icon: 'list',\n    excludeViewMode: ({ id }) => (!id ? ['multi-column'] : []),\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? t`Local` : t`Federated`),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: msg`Trending`,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : t`Search`),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: msg`Bookmarks`,\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: msg`Likes`,\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> <Trans>Shortcuts</Trans>{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            <Trans>beta</Trans>\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>\n          <Trans>Specify a list of shortcuts that'll appear&nbsp;as:</Trans>\n        </p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: t`Floating button`,\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: t`Tab/Menu bar`,\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: t`Multi-column`,\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                } else {\n                  title = _(title);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                } else {\n                  subtitle = _(subtitle);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          <Trans>Not available in current view mode</Trans>\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt={t`Move up`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt={t`Move down`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt={t`Edit`} />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    <Trans>\n                      Add more than one shortcut/column to make this work.\n                    </Trans>\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`No columns yet. Tap on the Add column button.`\n                : t`No shortcuts yet. Tap on the Add shortcut button.`}\n            </p>\n            <p>\n              <Trans>\n                Not sure what to add?\n                <br />\n                Try adding{' '}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.shortcuts = [\n                      {\n                        type: 'following',\n                      },\n                      {\n                        type: 'notifications',\n                      },\n                    ];\n                  }}\n                >\n                  Home / Following and Notifications\n                </a>{' '}\n                first.\n              </Trans>\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? t`Max ${SHORTCUTS_LIMIT} columns`\n              : t`Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            <Trans>Import/export</Trans>\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`Add column…`\n                : t`Add shortcut…`}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FORM_NOTES = {\n  list: msg`Specific list is optional. For multi-column mode, list is required, else the column will not be shown.`,\n  search: msg`For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: msg`Multiple hashtags are supported. Space-separated.`,\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  const { _ } = useLingui();\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await getLists();\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit shortcut` : t`Add shortcut`}</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>\n                <Trans>Timeline</Trans>\n              </span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n                dir=\"auto\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{_(TYPE_TEXT[type])}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>\n                        <Trans>List</Trans>\n                      </span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                        dir=\"auto\"\n                      >\n                        <option value=\"\"></option>\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{_(text)}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={_(placeholder)}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                      dir=\"auto\"\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {_(FORM_NOTES[currentType])}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? t`Save` : t`Add`}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                <Trans>Remove</Trans>\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>\n            Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n          </Trans>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Import</Trans>\n            </span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder={t`Paste shortcuts here`}\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n              dir=\"auto\"\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = getCurrentAccountID();\n                  showToast(\n                    t`Downloading saved shortcuts from instance server…`,\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to download shortcuts`);\n                  }\n                }}\n                title={t`Download shortcuts from instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {_(TYPE_TEXT[shortcut.type])}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>\n                    <Trans>* Exists in current shortcuts</Trans>\n                  </small>\n                  <br />\n                  <small>\n                    ⚠️{' '}\n                    <Trans>\n                      List may not work if it's from a different account.\n                    </Trans>\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>\n                ⚠️ <Trans>Invalid settings format</Trans>\n              </small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel={t`Append to current shortcuts?`}\n                  menuFooter={\n                    <div class=\"footer\">\n                      <Trans>\n                        Only shortcuts that don’t exist in current shortcuts\n                        will be appended.\n                      </Trans>\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast(t`No new shortcuts to import`);\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? t`Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : t`Shortcuts imported`,\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    <Trans>Import & append…</Trans>\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? t`Override current shortcuts?`\n                  : t`Import shortcuts?`\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast(t`Shortcuts imported`);\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? t`or override…` : t`Import…`}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Export</Trans>\n            </span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast(t`Shortcuts copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcuts`);\n                }\n              }}\n              dir=\"auto\"\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast(t`Shortcut settings copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcut settings`);\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" />{' '}\n              <span>\n                <Trans>Copy</Trans>\n              </span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Sharing doesn't seem to work.`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" />{' '}\n                  <span>\n                    <Trans>Share</Trans>\n                  </span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = getCurrentAccountID();\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      const settingsJSON = JSON.stringify({\n                        v: '1', // version\n                        dt: Date.now(), // datetime stamp\n                        data: shortcutsStr, // shortcuts settings string\n                      });\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast(t`Saving shortcuts to instance server…`);\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast(t`Shortcuts saved`);\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to save shortcuts`);\n                  }\n                }}\n                title={t`Sync to instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                <Plural\n                  value={shortcutsStr.length}\n                  one=\"# character\"\n                  other=\"# characters\"\n                />\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>\n                  <Trans>Raw Shortcuts JSON</Trans>\n                </small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" />{' '}\n              <Trans>\n                Import/export settings from/to instance server (Very\n                experimental)\n              </Trans>\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { subscribe, useSnapshot } from 'valtio';\n\nimport Accounts from '../pages/accounts';\nimport Settings from '../pages/settings';\nimport focusDeck from '../utils/focus-deck';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport AccountSheet from './account-sheet';\nimport ComposeSuspense, { preload } from './compose-suspense';\nimport Drafts from './drafts';\nimport EmbedModal from './embed-modal';\nimport GenericAccounts from './generic-accounts';\nimport MediaAltModal from './media-alt-modal';\nimport MediaModal from './media-modal';\nimport Modal from './modal';\nimport ReportModal from './report-modal';\nimport ShortcutsSettings from './shortcuts-settings';\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // When closing modal, focus on deck\n    if (/^show/i.test(path) && !value) {\n      focusDeck();\n    }\n  }\n});\n\nexport default function Modals() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(preload, 1000);\n  }, []);\n\n  return (\n    <>\n      {!!snapStates.showCompose && (\n        <Modal\n          class={`solid ${snapStates.composerState.minimized ? 'min' : ''}`}\n          minimized={!!snapStates.composerState.minimized}\n        >\n          <ComposeSuspense\n            replyToStatus={\n              typeof snapStates.showCompose !== 'boolean'\n                ? snapStates.showCompose.replyToStatus\n                : window.__COMPOSE__?.replyToStatus || null\n            }\n            editStatus={\n              states.showCompose?.editStatus ||\n              window.__COMPOSE__?.editStatus ||\n              null\n            }\n            draftStatus={\n              states.showCompose?.draftStatus ||\n              window.__COMPOSE__?.draftStatus ||\n              null\n            }\n            onClose={(results) => {\n              const { newStatus, instance, type, scheduledAt } = results || {};\n              states.showCompose = false;\n              window.__COMPOSE__ = null;\n              if (newStatus) {\n                states.reloadStatusPage++;\n                if (scheduledAt) states.reloadScheduledPosts++;\n                showToast({\n                  text: {\n                    post: scheduledAt\n                      ? t`Post scheduled`\n                      : t`Post published. Check it out.`,\n                    reply: scheduledAt\n                      ? t`Reply scheduled`\n                      : t`Reply posted. Check it out.`,\n                    edit: t`Post updated. Check it out.`,\n                  }[type || 'post'],\n                  delay: 1000,\n                  duration: 10_000, // 10 seconds\n                  onClick: (toast) => {\n                    toast.hideToast();\n                    states.prevLocation = location;\n                    if (scheduledAt) {\n                      navigate('/sp');\n                    } else {\n                      navigate(\n                        instance\n                          ? `/${instance}/s/${newStatus.id}`\n                          : `/s/${newStatus.id}`,\n                      );\n                    }\n                  },\n                });\n              }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showSettings && (\n        <Modal\n          onClose={() => {\n            states.showSettings = false;\n          }}\n        >\n          <Settings\n            onClose={() => {\n              states.showSettings = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccounts && (\n        <Modal\n          onClose={() => {\n            states.showAccounts = false;\n          }}\n        >\n          <Accounts\n            onClose={() => {\n              states.showAccounts = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccount && (\n        <Modal\n          onClose={() => {\n            states.showAccount = false;\n          }}\n        >\n          <AccountSheet\n            account={snapStates.showAccount?.account || snapStates.showAccount}\n            instance={snapStates.showAccount?.instance}\n            onClose={({ destination } = {}) => {\n              states.showAccount = false;\n              // states.showGenericAccounts = false;\n              // if (destination) {\n              //   states.showAccounts = false;\n              // }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showDrafts && (\n        <Modal\n          onClose={() => {\n            states.showDrafts = false;\n          }}\n        >\n          <Drafts onClose={() => (states.showDrafts = false)} />\n        </Modal>\n      )}\n      {!!snapStates.showMediaModal && (\n        <Modal\n          onClick={(e) => {\n            if (\n              e.target === e.currentTarget ||\n              e.target.classList.contains('media')\n            ) {\n              states.showMediaModal = false;\n            }\n          }}\n        >\n          <MediaModal\n            mediaAttachments={snapStates.showMediaModal.mediaAttachments}\n            instance={snapStates.showMediaModal.instance}\n            index={snapStates.showMediaModal.index}\n            statusID={snapStates.showMediaModal.statusID}\n            onClose={() => {\n              states.showMediaModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showShortcutsSettings && (\n        <Modal\n          onClose={() => {\n            states.showShortcutsSettings = false;\n          }}\n        >\n          <ShortcutsSettings\n            onClose={() => (states.showShortcutsSettings = false)}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showGenericAccounts && (\n        <Modal\n          onClose={() => {\n            states.showGenericAccounts = false;\n          }}\n        >\n          <GenericAccounts\n            instance={snapStates.showGenericAccounts.instance}\n            excludeRelationshipAttrs={\n              snapStates.showGenericAccounts.excludeRelationshipAttrs\n            }\n            postID={snapStates.showGenericAccounts.postID}\n            onClose={() => (states.showGenericAccounts = false)}\n            blankCopy={snapStates.showGenericAccounts.blankCopy}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showMediaAlt && (\n        <Modal\n          onClose={(e) => {\n            states.showMediaAlt = false;\n          }}\n        >\n          <MediaAltModal\n            alt={snapStates.showMediaAlt.alt || snapStates.showMediaAlt}\n            lang={snapStates.showMediaAlt?.lang}\n            onClose={() => {\n              states.showMediaAlt = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showEmbedModal && (\n        <Modal\n          class=\"solid\"\n          onClose={() => {\n            states.showEmbedModal = false;\n          }}\n        >\n          <EmbedModal\n            html={snapStates.showEmbedModal.html}\n            url={snapStates.showEmbedModal.url}\n            width={snapStates.showEmbedModal.width}\n            height={snapStates.showEmbedModal.height}\n            onClose={() => {\n              states.showEmbedModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showReportModal && (\n        <Modal\n          onClose={() => {\n            states.showReportModal = false;\n          }}\n        >\n          <ReportModal\n            account={snapStates.showReportModal.account}\n            post={snapStates.showReportModal.post}\n            onClose={() => {\n              states.showReportModal = false;\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        <Trans>Accept</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        <Trans>Reject</Trans>\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon\n              icon=\"check-circle\"\n              alt={t`Accepted`}\n              class=\"follow-accepted\"\n            />\n          ) : (\n            <Icon icon=\"x-circle\" alt={t`Rejected`} class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { msg, t } from '@lingui/core/macro';\nimport { Plural, Select, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { api } from '../utils/api';\nimport { isFiltered } from '../utils/filters';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { statusKey } from '../utils/states';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport CustomEmoji from './custom-emoji';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n  severed_relationships: 'heart-break',\n  moderation_warning: 'alert',\n  emoji_reaction: 'emoji2',\n  'pleroma:emoji_reaction': 'emoji2',\n  annual_report: 'celebrate',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\nsevered_relationships = Severed relationships\nmoderation_warning = Moderation warning\n*/\n\nfunction emojiText({ account, emoji, emoji_url }) {\n  let url;\n  let staticUrl;\n  if (typeof emoji_url === 'string') {\n    url = emoji_url;\n  } else {\n    url = emoji_url?.url;\n    staticUrl = emoji_url?.staticUrl;\n  }\n  const emojiObject = url ? (\n    <CustomEmoji url={url} staticUrl={staticUrl} alt={emoji} />\n  ) : (\n    emoji\n  );\n  return (\n    <Trans>\n      {account} reacted to your post with {emojiObject}\n    </Trans>\n  );\n}\n\nconst contentText = {\n  status: ({ account }) => <Trans>{account} published a post.</Trans>,\n  reblog: ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted your reply.</Trans>}\n              other={<Trans>{account} boosted your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  follow: ({ account, count, components: { Subject } }) => (\n    <Plural\n      value={count}\n      _1={<Trans>{account} followed you.</Trans>}\n      other={\n        <Trans>\n          <Subject clickable={count > 1}>\n            <span title={count}>{shortenNumber(count)}</span> people\n          </Subject>{' '}\n          followed you.\n        </Trans>\n      }\n    />\n  ),\n  follow_request: ({ account }) => (\n    <Trans>{account} requested to follow you.</Trans>\n  ),\n  favourite: ({\n    account,\n    count,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} liked your reply.</Trans>}\n              other={<Trans>{account} liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  poll: () => t`A poll you have voted in or created has ended.`,\n  'poll-self': () => t`A poll you have created has ended.`,\n  'poll-voted': () => t`A poll you have voted in has ended.`,\n  update: () => t`A post you interacted with has been edited.`,\n  'favourite+reblog': ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted & liked your reply.</Trans>}\n              other={<Trans>{account} boosted & liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted & liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  'admin.sign_up': ({ account }) => <Trans>{account} signed up.</Trans>,\n  'admin.report': ({ account, targetAccount }) => (\n    <Trans>\n      {account} reported {targetAccount}\n    </Trans>\n  ),\n  severed_relationships: ({ name }) => (\n    <Trans>\n      Lost connections with <i>{name}</i>.\n    </Trans>\n  ),\n  moderation_warning: () => (\n    <b>\n      <Trans>Moderation warning</Trans>\n    </b>\n  ),\n  emoji_reaction: emojiText,\n  'pleroma:emoji_reaction': emojiText,\n  annual_report: ({ year }) => <Trans>Your {year} #Wrapstodon is here!</Trans>,\n};\n\n// account_suspension, domain_block, user_domain_block\nconst SEVERED_RELATIONSHIPS_TEXT = {\n  account_suspension: ({ from, targetName }) => (\n    <Trans>\n      An admin from <i>{from}</i> has suspended <i>{targetName}</i>, which means\n      you can no longer receive updates from them or interact with them.\n    </Trans>\n  ),\n  domain_block: ({ from, targetName, followersCount, followingCount }) => (\n    <Trans>\n      An admin from <i>{from}</i> has blocked <i>{targetName}</i>. Affected\n      followers: {followersCount}, followings: {followingCount}.\n    </Trans>\n  ),\n  user_domain_block: ({ targetName, followersCount, followingCount }) => (\n    <Trans>\n      You have blocked <i>{targetName}</i>. Removed followers: {followersCount},\n      followings: {followingCount}.\n    </Trans>\n  ),\n};\n\nconst MODERATION_WARNING_TEXT = {\n  none: msg`Your account has received a moderation warning.`,\n  disable: msg`Your account has been disabled.`,\n  mark_statuses_as_sensitive: msg`Some of your posts have been marked as sensitive.`,\n  delete_statuses: msg`Some of your posts have been deleted.`,\n  sensitive: msg`Your posts will be marked as sensitive from now on.`,\n  silence: msg`Your account has been limited.`,\n  suspend: msg`Your account has been suspended.`,\n};\n\nconst AVATARS_LIMIT = 30;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const {\n    id,\n    status,\n    account,\n    report,\n    event,\n    moderation_warning,\n    annualReport,\n    // Client-side grouped notification\n    _ids,\n    _accounts,\n    _statuses,\n    _groupKeys,\n    // Server-side grouped notification\n    sampleAccounts,\n    notificationsCount,\n    groupKey,\n  } = notification;\n  let { type } = notification;\n\n  if (type === 'mention' && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = getCurrentAccountID();\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    if (_accounts) {\n      for (const account of _accounts) {\n        if (account._types?.includes('favourite')) {\n          favsCount++;\n        }\n        if (account._types?.includes('reblog')) {\n          reblogsCount++;\n        }\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = t`[Unknown notification type: ${type}]`;\n  }\n\n  const Subject = ({ clickable, ...props }) =>\n    clickable ? (\n      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts} {...props} />\n    ) : (\n      <b {...props} />\n    );\n\n  if (typeof text === 'function') {\n    const count =\n      _accounts?.length || sampleAccounts?.length || (account ? 1 : 0);\n    const postsCount = _statuses?.length || (status ? 1 : 0);\n    if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text({\n          account: <NameText account={account} showAvatar />,\n          targetAccount: <NameText account={targetAccount} showAvatar />,\n        });\n      }\n    } else if (type === 'severed_relationships') {\n      const targetName = event?.targetName;\n      if (targetName) {\n        text = text({ name: targetName });\n      }\n    } else if (\n      (type === 'emoji_reaction' || type === 'pleroma:emoji_reaction') &&\n      notification.emoji\n    ) {\n      const emojiURL =\n        notification.emoji_url || // This is string\n        status?.emojis?.find?.(\n          (emoji) =>\n            emoji?.shortcode ===\n            notification.emoji.replace(/^:/, '').replace(/:$/, ''),\n        ); // Emoji object instead of string\n      text = text({\n        account: <NameText account={account} showAvatar />,\n        emoji: notification.emoji,\n        emojiURL,\n      });\n    } else if (type === 'annual_report') {\n      text = text({\n        ...notification.annualReport,\n      });\n    } else {\n      text = text({\n        account: account ? (\n          <NameText account={account} showAvatar />\n        ) : (\n          sampleAccounts?.[0] && (\n            <NameText account={sampleAccounts[0]} showAvatar />\n          )\n        ),\n        count,\n        postsCount,\n        postType: isReplyToOthers ? 'reply' : 'post',\n        components: { Subject },\n      });\n    }\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': t`Boosted/Liked by…`,\n      favourite: t`Liked by…`,\n      reblog: t`Boosted by…`,\n      follow: t`Followed by…`,\n    }[type] || t`Accounts`;\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n      postID: statusKey(actualStatusID, instance),\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  const diffCount =\n    notificationsCount > 0 && notificationsCount > sampleAccounts?.length;\n  const expandAccounts = diffCount ? 'remote' : 'local';\n\n  // If there's a status and filter action is 'hide', then the notification is hidden\n  if (!!status?.filtered) {\n    const isOwnPost = status?.account?.id === currentAccount;\n    const filterInfo = isFiltered(status.filtered, 'notifications');\n    if (!isSelf && !isOwnPost && filterInfo?.action === 'hide') {\n      return null;\n    }\n  }\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={_ids || id}\n      data-group-key={_groupKeys?.join(' ') || groupKey}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {type !== 'mention' && (\n          <>\n            <p>{text}</p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n            {type === 'severed_relationships' && (\n              <div>\n                {SEVERED_RELATIONSHIPS_TEXT[event.type]({\n                  from: instance,\n                  ...event,\n                })}\n                <br />\n                <a\n                  href={`https://${instance}/severed_relationships`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n                .\n              </div>\n            )}\n            {type === 'moderation_warning' && !!moderation_warning && (\n              <div>\n                {_(MODERATION_WARNING_TEXT[moderation_warning.action]())}\n                <br />\n                <a\n                  href={`/disputes/strikes/${moderation_warning.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n              </div>\n            )}\n            {type === 'annual_report' && (\n              <div>\n                <Link to={`/annual_report/${annualReport?.year}`}>\n                  <Trans>View #Wrapstodon</Trans>\n                </Link>\n              </div>\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                          ? 'xl'\n                          : 'l'\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {type === 'favourite+reblog' && expandAccounts === 'remote' ? (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                data-group-keys={_groupKeys?.join(' ')}\n                onClick={() => {\n                  states.showGenericAccounts = {\n                    heading: genericAccountsHeading,\n                    fetchAccounts: async () => {\n                      const keyAccounts = await Promise.allSettled(\n                        _groupKeys.map(async (gKey) => {\n                          const iterator = masto.v2.notifications\n                            .$select(gKey)\n                            .accounts.list();\n                          return [gKey, (await iterator.next()).value];\n                        }),\n                      );\n                      const accounts = [];\n                      for (const keyAccount of keyAccounts) {\n                        const [key, _accounts] = keyAccount.value;\n                        const type = /^favourite/.test(key)\n                          ? 'favourite'\n                          : /^reblog/.test(key)\n                            ? 'reblog'\n                            : null;\n                        if (!type) continue;\n                        for (const account of _accounts) {\n                          const theAccount = accounts.find(\n                            (a) => a.id === account.id,\n                          );\n                          if (theAccount) {\n                            theAccount._types.push(type);\n                          } else {\n                            account._types = [type];\n                            accounts.push(account);\n                          }\n                        }\n                      }\n                      return {\n                        done: true,\n                        value: accounts,\n                      };\n                    },\n                    showReactions: true,\n                    postID: statusKey(actualStatusID, instance),\n                  };\n                }}\n              >\n                <Icon icon=\"chevron-down\" />\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                onClick={handleOpenGenericAccounts}\n              >\n                {_accounts.length > AVATARS_LIMIT &&\n                  `+${_accounts.length - AVATARS_LIMIT}`}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            )}\n          </p>\n        )}\n        {!_accounts?.length && sampleAccounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {sampleAccounts.map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size=\"xxl\"\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {/* {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )} */}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {notificationsCount > sampleAccounts.length && (\n              <Link\n                to={\n                  instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                }\n                class=\"button small plain centered\"\n              >\n                +{notificationsCount - sampleAccounts.length}\n                <Icon icon=\"chevron-right\" />\n              </Link>\n            )}\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                    allowFilters\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n                allowFilters\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n                allowFilters\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more={t`Read more →`} ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  const { t } = useLingui();\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <b>\n              <Trans>Notification</Trans>\n            </b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>\n                <Trans>This notification is from your other account.</Trans>\n              </p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>\n                  <Trans>View all notifications</Trans>\n                </span>{' '}\n                <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { t } = useLingui();\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder={t`Search`}\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          formRef.current\n            ?.querySelector('.search-popover-item')\n            ?.classList.add('focus');\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const lastItem = document.querySelector(\n                    '.search-popover-item:last-child',\n                  );\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen || !query}>\n        {/* {!!query && (\n          <Link\n            to={`/search?q=${encodeURIComponent(query)}`}\n            class=\"search-popover-item focus\"\n            onClick={(e) => {\n              props?.onSubmit?.(e);\n            }}\n          >\n            <Icon icon=\"search\" />\n            <span>{query}</span>\n          </Link>\n        )} */}\n        {!!query &&\n          [\n            {\n              label: (\n                <Trans>\n                  {query}{' '}\n                  <small class=\"insignificant\">\n                    ‒ accounts, hashtags &amp; posts\n                  </small>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}`,\n              top: !type && !/\\s/.test(query),\n              hidden: !!type,\n            },\n            {\n              label: (\n                <Trans>\n                  Posts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=statuses`,\n              hidden: /^https?:/.test(query),\n              top: /\\s/.test(query),\n              icon: 'document',\n              queryType: 'statuses',\n            },\n            {\n              label: (\n                <Trans>\n                  Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n                </Trans>\n              ),\n              to: `/${instance}/t/${query.replace(/^#/, '')}`,\n              hidden:\n                /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n              top: /^#/.test(query),\n              type: 'link',\n              icon: 'hashtag',\n              queryType: 'hashtags',\n            },\n            {\n              label: (\n                <Trans>\n                  Look up <mark>{query}</mark>\n                </Trans>\n              ),\n              to: `/${query}`,\n              hidden: !/^https?:/.test(query),\n              top: /^https?:/.test(query),\n              type: 'link',\n            },\n            {\n              label: (\n                <Trans>\n                  Accounts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=accounts`,\n              icon: 'group',\n              queryType: 'accounts',\n            },\n          ]\n            .sort((a, b) => {\n              if (type) {\n                if (a.queryType === type) return -1;\n                if (b.queryType === type) return 1;\n              }\n              if (a.top && !b.top) return -1;\n              if (!a.top && b.top) return 1;\n              return 0;\n            })\n            .filter(({ hidden }) => !hidden)\n            .map(({ label, to, icon, type }, i) => (\n              <Link\n                to={to}\n                class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                // hidden={hidden}\n                onClick={(e) => {\n                  console.log('onClick', e);\n                  props?.onSubmit?.(e);\n                }}\n              >\n                <Icon\n                  icon={icon || (type === 'link' ? 'arrow-right' : 'search')}\n                  class=\"more-insignificant\"\n                />\n                <span>{label}</span>{' '}\n              </Link>\n            ))}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return isSearchPage || hasModal;\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n    },\n  );\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={!showSearch}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","import './shortcuts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction Shortcuts() {\n  const { t, _ } = useLingui();\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  const isMultiColumnMode =\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode);\n  if (isMultiColumnMode) {\n    return null;\n  }\n\n  const menuRef = useRef();\n\n  const hasLists = useRef(false);\n  const formattedShortcuts = shortcuts\n    .map((pin, i) => {\n      const { type, ...data } = pin;\n      if (!SHORTCUTS_META[type]) return null;\n      let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n      if (typeof id === 'function') {\n        id = id(data, i);\n      }\n      if (typeof path === 'function') {\n        path = path(\n          {\n            ...data,\n            instance: data.instance || instance,\n          },\n          i,\n        );\n      }\n      if (typeof title === 'function') {\n        title = title(data, i);\n      } else {\n        title = _(title);\n      }\n      if (typeof subtitle === 'function') {\n        subtitle = subtitle(data, i);\n      } else {\n        subtitle = _(subtitle);\n      }\n      if (typeof icon === 'function') {\n        icon = icon(data, i);\n      }\n\n      if (id === 'lists') {\n        hasLists.current = true;\n      }\n\n      return {\n        id,\n        path,\n        title,\n        subtitle,\n        icon,\n      };\n    })\n    .filter(Boolean);\n\n  const navigate = useNavigate();\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e, handler) => {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      if (index < formattedShortcuts.length) {\n        const { path } = formattedShortcuts[index];\n        if (path) {\n          navigate(path);\n          menuRef.current?.closeMenu?.();\n        }\n      }\n    },\n    {\n      enabled: !isMultiColumnMode,\n    },\n  );\n\n  const [lists, setLists] = useState([]);\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" alt={title} />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          onMenuChange={(e) => {\n            if (e.open && hasLists.current) {\n              getLists().then(setLists);\n            }\n          }}\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt={t`Shortcuts`} />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            if (id === 'lists') {\n              return (\n                <SubMenu2\n                  menuClassName=\"glass-menu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon={icon} size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <AsyncText>{title}</AsyncText>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuDivider />\n                  {lists?.map((list) => (\n                    <MenuLink key={list.id} to={`/l/${list.id}`}>\n                      <span>{list.title}</span>\n                    </MenuLink>\n                  ))}\n                </SubMenu2>\n              );\n            }\n\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\nimport supports from './supports';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  const inReplyToIds = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          const aDate = new Date(a.createdAt);\n          const bDate = new Date(b.createdAt);\n          return aDate - bDate;\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    // PREPARE FOR REPLY HINTS\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        inReplyToIds.push({\n          sKey,\n          inReplyToId: item.inReplyToId,\n        });\n        // queueMicrotask(async () => {\n        //   try {\n        //     const { masto } = api({ instance });\n        //     // const replyToStatus = await masto.v1.statuses\n        //     //   .$select(item.inReplyToId)\n        //     //   .fetch();\n        //     const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n        //     saveStatus(replyToStatus, instance, {\n        //       skipThreading: true,\n        //       skipUnfurling: true,\n        //     });\n        //     states.statusReply[sKey] = {\n        //       id: replyToStatus.id,\n        //       instance,\n        //     };\n        //   } catch (e) {\n        //     // Silently fail\n        //     console.error(e);\n        //   }\n        // });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  // FETCH AND SHOW REPLY HINTS\n  if (inReplyToIds?.length) {\n    queueMicrotask(() => {\n      const { masto } = api({ instance });\n      console.log('REPLYHINT', inReplyToIds);\n\n      // Fallback if batch fetch fails or returns nothing or not supported\n      async function fallbackFetch() {\n        for (let i = 0; i < inReplyToIds.length; i++) {\n          const { sKey, inReplyToId } = inReplyToIds[i];\n          try {\n            const replyToStatus = await fetchStatus(inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n            // Pause 1s\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        }\n      }\n\n      if (supports('@mastodon/fetch-multiple-statuses')) {\n        // This is batch fetching yooo, woot\n        // Limit 20, returns 422 if exceeded https://github.com/mastodon/mastodon/pull/27871\n        const ids = inReplyToIds.map(({ inReplyToId }) => inReplyToId);\n        (async () => {\n          try {\n            const replyToStatuses = await masto.v1.statuses.list({ id: ids });\n            if (replyToStatuses?.length) {\n              for (const replyToStatus of replyToStatuses) {\n                saveStatus(replyToStatus, instance, {\n                  skipThreading: true,\n                });\n                const sKey = inReplyToIds.find(\n                  ({ inReplyToId }) => inReplyToId === replyToStatus.id,\n                )?.sKey;\n                if (sKey) {\n                  states.statusReply[sKey] = {\n                    id: replyToStatus.id,\n                    instance,\n                  };\n                }\n              }\n            } else {\n              fallbackFetch();\n            }\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n            fallbackFetch();\n          }\n        })();\n      } else {\n        fallbackFetch();\n      }\n    });\n  }\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  const { t } = useLingui();\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media']?.toLowerCase() || 'default';\n  }, []);\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? t`Sensitive media` : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? filterTitleStr\n              ? t`Filtered: ${filterTitleStr}`\n              : t`Filtered`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport MenuLink from './menu-link';\nimport SubMenu2 from './submenu2';\n\nfunction NavMenu(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, moreThanOneAccount] = useMemo(() => {\n    const accounts = store.local.getJSON('accounts') || [];\n    const acc =\n      accounts.find((account) => account.info.id === getCurrentAccountID()) ||\n      accounts[0];\n    return [acc, accounts.length > 1];\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes.list({\n        limit: 80,\n      });\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks.list({\n        limit: 80,\n      });\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${menuState === 'open' ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} alt={t`Menu`} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm(t`Reload page now to update?`);\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>\n                  <Trans>New update available…</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" />{' '}\n            <span>\n              <Trans>Home</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" />{' '}\n                  <span>\n                    <Trans id=\"following.title\">Following</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>\n                  <Trans>Catch-up</Trans>\n                </span>\n              </MenuLink>\n              {supports('@mastodon/mentions') && (\n                <MenuLink to=\"/mentions\">\n                  <Icon icon=\"at\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Mentions</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Notifications</Trans>\n                </span>\n                {snapStates.notificationsShowNew && (\n                  <sup title={t`New`} style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Profile</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <ListMenu menuState={menuState} />\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Bookmarks</Trans>\n                </span>\n              </MenuLink>\n              <SubMenu2\n                menuClassName=\"nav-submenu\"\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">\n                      <Trans>More…</Trans>\n                    </span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Likes</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/fh\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Followed Hashtags</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/sp\">\n                  <Icon icon=\"schedule\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Scheduled Posts</Trans>\n                  </span>\n                </MenuLink>\n                <MenuDivider />\n                {supports('@mastodon/filters') && (\n                  <MenuLink to=\"/ft\">\n                    <Icon icon=\"filters\" size=\"l\" />{' '}\n                    <span>\n                      <Trans>Filters</Trans>\n                    </span>\n                  </MenuLink>\n                )}\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: t`Muted users`,\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Muted users…</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: t`Blocked users`,\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Blocked users…</Trans>\n                  </span>\n                </MenuItem>{' '}\n              </SubMenu2>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Accounts…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Log in</Trans>\n                </span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" />{' '}\n            <span>\n              <Trans>Search</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" />{' '}\n            <span>\n              <Trans>Trending</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" />{' '}\n            <span>\n              <Trans>Local</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" />{' '}\n            <span>\n              <Trans>Federated</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Keyboard shortcuts</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Shortcuts / Columns…</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nfunction ListMenu({ menuState }) {\n  const supportsLists = supports('@mastodon/lists');\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!supportsLists) return;\n    if (menuState === 'open') {\n      getLists().then(setLists);\n    }\n  }, [menuState, supportsLists]);\n\n  return lists.length > 0 ? (\n    <SubMenu2\n      menuClassName=\"nav-submenu\"\n      overflow=\"auto\"\n      gap={-8}\n      label={\n        <>\n          <Icon icon=\"list\" size=\"l\" />\n          <span class=\"menu-grow\">\n            <Trans>Lists</Trans>\n          </span>\n          <Icon icon=\"chevron-right\" />\n        </>\n      }\n    >\n      <MenuLink to=\"/l\">\n        <span>\n          <Trans>All Lists</Trans>\n        </span>\n      </MenuLink>\n      {lists?.length > 0 && (\n        <>\n          <MenuDivider />\n          {lists.map((list) => (\n            <MenuLink key={list.id} to={`/l/${list.id}`}>\n              <span>{list.title}</span>\n            </MenuLink>\n          ))}\n        </>\n      )}\n    </SubMenu2>\n  ) : (\n    supportsLists && (\n      <MenuLink to=\"/l\">\n        <Icon icon=\"list\" size=\"l\" />\n        <span>\n          <Trans>Lists</Trans>\n        </span>\n      </MenuLink>\n    )\n  );\n}\n\nexport default memo(NavMenu);\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\n\nconst scrollIntoViewOptions = {\n  block: 'start',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n  clearWhenRefresh,\n}) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('start');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n  __BENCHMARK.start(`timeline-${id}-load`);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const allowGrouping = view !== 'media';\n  const loadItemsTS = useRef(0); // Ensures only one loadItems at a time\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      // if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          const ts = (loadItemsTS.current = Date.now());\n          let { done, value } = await fetchItems(firstLoad);\n          if (ts !== loadItemsTS.current) return;\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n          __BENCHMARK.end(`timeline-${id}-load`);\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          if (firstLoad && !items.length && errorText) {\n            showToast(errorText);\n          }\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1_000,\n    {\n      leading: true,\n      // trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys(\n    'j, shift+j',\n    (e, handler) => {\n      // Fix bug: shift+j is fired even when j is pressed due to useKey: true\n      if (e.shiftKey !== handler.shift) return;\n\n      // focus on next status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      ).filter((item) => !!item.offsetHeight);\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (handler.shift) {\n          // get next status that's not .timeline-item-alt\n          nextItem = allItems.find(\n            (item, index) =>\n              index > activeItemIndex &&\n              !item.classList.contains('timeline-item-alt'),\n          );\n        }\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k, shift+k',\n    (e, handler) => {\n      // Fix bug: shift+k is fired even when k is pressed due to useKey: true\n      if (e.shiftKey !== handler.shift) return;\n\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      ).filter((item) => !!item.offsetHeight);\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (handler.shift) {\n          // get prev status that's not .timeline-item-alt\n          prevItem = allItems.findLast(\n            (item, index) =>\n              index < activeItemIndex &&\n              !item.classList.contains('timeline-item-alt'),\n          );\n        }\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const oRef = useHotkeys(\n    ['enter', 'o'],\n    () => {\n      // open active status\n      const activeItem = document.activeElement;\n      if (activeItem?.matches(itemsSelector)) {\n        activeItem.click();\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    if (showNewPostsIndicator) loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems, showNewPostsIndicator]);\n  const dotRef = useHotkeys('.', handleLoadNewPosts);\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (firstLoad.current) {\n      firstLoad.current = false;\n      return;\n    }\n    if (clearWhenRefresh && items?.length) {\n      loadItems.cancel?.();\n      setItems([]);\n    }\n    loadItems(true);\n  }, [clearWhenRefresh, refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class={`deck-container ${\n          mediaFirst ? 'deck-container-media-first' : ''\n        }`}\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef.current = node;\n          kRef.current = node;\n          oRef.current = node;\n          dotRef.current = node;\n        }}\n        tabIndex=\"-1\"\n        onClick={(e) => {\n          // If click on timeline item, unhide header\n          if (\n            headerRef.current &&\n            e.target.closest('.timeline-item, .timeline-item-alt')\n          ) {\n            setTimeout(() => {\n              headerRef.current.hidden = false;\n            }, 250);\n          }\n        }}\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> <Trans>New posts</Trans>\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                    mediaFirst={mediaFirst}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      <Trans>Show more…</Trans>\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">\n                    <Trans>The end.</Trans>\n                  </p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton mediaFirst={mediaFirst} />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' &&\n            uiState !== 'start' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n    mediaFirst,\n  }) => {\n    const { t } = useLingui();\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n\n    if (items) {\n      let fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = plural(fItems.length, {\n          one: '# Boost',\n          other: '# Boosts',\n        });\n      } else if (type === 'pinned') {\n        title = t`Pinned posts`;\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        const filteredItemsIDs = new Set();\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered && aFiltered?.action !== 'blur') {\n            filteredItemsIDs.add(a.id);\n          }\n          if (bFiltered && bFiltered?.action !== 'blur') {\n            filteredItemsIDs.add(b.id);\n          }\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n\n        if (filteredItemsIDs.size >= 2) {\n          const GROUP_SIZE = 5;\n          // If 2 or more, group filtered items into one, limit to GROUP_SIZE in a group\n          const unfiltered = [];\n          const filtered = [];\n          fItems.forEach((item) => {\n            if (filteredItemsIDs.has(item.id)) {\n              filtered.push(item);\n            } else {\n              unfiltered.push(item);\n            }\n          });\n          const filteredItems = [];\n          for (let i = 0; i < filtered.length; i += GROUP_SIZE) {\n            filteredItems.push({\n              _grouped: true,\n              posts: filtered.slice(i, i + GROUP_SIZE),\n            });\n          }\n          fItems = unfiltered.concat(filteredItems);\n        }\n\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned, _grouped } = item;\n                if (_grouped) {\n                  return (\n                    <li key={statusID} class=\"timeline-item-carousel-group\">\n                      {item.posts.map((item) => {\n                        const { id: statusID, reblog, _pinned } = item;\n                        const actualStatusID = reblog?.id || statusID;\n                        const url = instance\n                          ? `/${instance}/s/${actualStatusID}`\n                          : `/s/${actualStatusID}`;\n                        if (_pinned) useItemID = false;\n                        return (\n                          <Link\n                            class=\"status-carousel-link timeline-item-alt\"\n                            to={url}\n                          >\n                            {useItemID ? (\n                              <Status\n                                statusID={statusID}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            ) : (\n                              <Status\n                                status={item}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            )}\n                          </Link>\n                        );\n                      })}\n                    </li>\n                  );\n                }\n\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact\n                  status={item}\n                  instance={instance}\n                  filterContext={filterContext}\n                />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const { t } = useLingui();\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? 1 : -1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" alt={t`Previous`} />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? -1 : 1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" alt={t`Next`} />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance, filterContext }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  const filterInfo = isFiltered(status.filtered, filterContext);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      {!!snapStates.statusThreadNumber[sKey] ? (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n          {snapStates.statusThreadNumber[sKey]\n            ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n            : ''}\n        </div>\n      ) : (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n        </div>\n      )}\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {!!filterInfo && filterInfo?.action !== 'blur' ? (\n          <b\n            class=\"status-filtered-badge badge-meta horizontal\"\n            title={filterInfo?.titlesStr || ''}\n          >\n            {filterInfo?.titlesStr ? (\n              <Trans>\n                <span>Filtered</span>: <span>{filterInfo.titlesStr}</span>\n              </Trans>\n            ) : (\n              <span>\n                <Trans>Filtered</Trans>\n              </span>\n            )}\n          </b>\n        ) : (\n          <>\n            {statusPeekText}\n            {status.sensitive && status.spoilerText && (\n              <>\n                {' '}\n                <span class=\"spoiler-badge\">\n                  <Icon icon=\"eye-close\" size=\"s\" alt={t`Content warning`} />\n                </span>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = (() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n})();\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.fetch({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const { i18n, t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.fetch({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    let results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media || undefined,\n          tagged,\n        });\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      // Check if value is same as pinned post (results)\n      // If the index for every post is the same, means API might not support pinned posts\n      if (results.length) {\n        let pinnedStatusesIds = [];\n        if (results[0]?.type === 'pinned') {\n          pinnedStatusesIds = results[0].id;\n        } else {\n          pinnedStatusesIds = results\n            .filter((status) => status._pinned)\n            .map((status) => status.id);\n        }\n        const containsAllPinned = pinnedStatusesIds.every((postId) =>\n          value.some((status) => status.id === postId),\n        );\n        if (containsAllPinned) {\n          // Remove pinned posts\n          results = [];\n        }\n      }\n\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  let title = t`Account posts`;\n  if (account?.acct) {\n    const acctDisplay = (/@/.test(account.acct) ? '' : '@') + account.acct;\n    const accountDisplay = account?.displayName\n      ? `${account.displayName} (${acctDisplay})`\n      : `${acctDisplay}`;\n    if (!excludeReplies) {\n      title = t`${accountDisplay} (+ Replies)`;\n    } else if (excludeBoosts) {\n      title = t`${accountDisplay} (- Boosts)`;\n    } else if (tagged) {\n      title = t`${accountDisplay} (#${tagged})`;\n    } else if (media) {\n      title = t`${accountDisplay} (Media)`;\n    } else if (month) {\n      const monthYear = new Date(month).toLocaleString(i18n.locale, {\n        month: 'long',\n        year: 'numeric',\n      });\n      title = t`${accountDisplay} (${monthYear})`;\n    } else {\n      title = accountDisplay;\n    }\n  }\n  useTitle(title, '/:instance?/a/:id');\n\n  const fetchAccount = useCallback(() => {\n    return memFetchAccount(id, masto);\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      // No need, because the whole filter bar is hidden\n      // TODO: Revisit this\n      if (!mediaFirst) {\n        try {\n          const featuredTags = await masto.v1.accounts\n            .$select(id)\n            .featuredTags.list();\n          console.log({ featuredTags });\n          setFeaturedTags(featuredTags);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })();\n  }, [id, mediaFirst]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n        />\n        {!mediaFirst && (\n          <div\n            class=\"filter-bar\"\n            ref={filterBarRef}\n            style={{\n              position: 'relative',\n            }}\n          >\n            {filtered ? (\n              <Link\n                to={`/${instance}/a/${id}`}\n                class=\"insignificant filter-clear\"\n                title={t`Clear filters`}\n                key=\"clear-filters\"\n              >\n                <Icon icon=\"x\" size=\"l\" alt={t`Clear`} />\n              </Link>\n            ) : (\n              <Icon\n                icon=\"filter\"\n                class=\"insignificant\"\n                size=\"l\"\n                alt={t`Filters`}\n              />\n            )}\n            <Link\n              to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n              onClick={() => {\n                if (excludeReplies) {\n                  showToast(t`Showing post with replies`);\n                }\n              }}\n              class={excludeReplies ? '' : 'is-active'}\n            >\n              <Trans>+ Replies</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n              onClick={() => {\n                if (!excludeBoosts) {\n                  showToast(t`Showing posts without boosts`);\n                }\n              }}\n              class={!excludeBoosts ? '' : 'is-active'}\n            >\n              <Trans>- Boosts</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n              onClick={() => {\n                if (!media) {\n                  showToast(t`Showing posts with media`);\n                }\n              }}\n              class={media ? 'is-active' : ''}\n            >\n              <Trans>Media</Trans>\n            </Link>\n            {featuredTags.map((tag) => (\n              <Link\n                key={tag.id}\n                to={`/${instance}/a/${id}${\n                  tagged === tag.name\n                    ? ''\n                    : `?tagged=${encodeURIComponent(tag.name)}`\n                }`}\n                onClick={() => {\n                  if (tagged !== tag.name) {\n                    showToast(t`Showing posts tagged with #${tag.name}`);\n                  }\n                }}\n                class={tagged === tag.name ? 'is-active' : ''}\n              >\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {tag.name}\n                </span>\n                {\n                  // The count differs based on instance 😅\n                }\n                {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n              </Link>\n            ))}\n            {searchEnabled &&\n              (supportsInputMonth ? (\n                <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                  <Icon icon=\"month\" size=\"l\" />\n                  <input\n                    type=\"month\"\n                    disabled={!account?.acct}\n                    value={month || ''}\n                    min={MIN_YEAR_MONTH}\n                    max={new Date().toISOString().slice(0, 7)}\n                    onInput={(e) => {\n                      const { value, validity } = e.currentTarget;\n                      if (!validity.valid) return;\n                      setSearchParams(\n                        value\n                          ? {\n                              month: value,\n                            }\n                          : {},\n                      );\n                      const [year, month] = value.split('-');\n                      const monthIndex = parseInt(month, 10) - 1;\n                      const date = new Date(year, monthIndex);\n                      showToast(\n                        t`Showing posts in ${date.toLocaleString(i18n.locale, {\n                          month: 'long',\n                          year: 'numeric',\n                        })}`,\n                      );\n                    }}\n                  />\n                </label>\n              ) : (\n                // Fallback to <select> for month and <input type=\"number\"> for year\n                <MonthPicker\n                  class={`filter-field ${month ? 'is-active' : ''}`}\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = URL.parse(account.url)?.hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <Timeline\n      key={id}\n      title={`${account?.acct ? '@' + account.acct : t`Posts`}`}\n      titleComponent={\n        <h1\n          class=\"header-double-lines header-account\"\n          // onClick={() => {\n          //   states.showAccount = {\n          //     account,\n          //     instance,\n          //   };\n          // }}\n        >\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          <div>\n            <span class=\"bidi-isolate\">@{acct}</span>\n          </div>\n        </h1>\n      }\n      id=\"account-statuses\"\n      instance={instance}\n      emptyText={t`Nothing to see here yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchAccountStatuses}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      timelineStart={TimelineStart}\n      refresh={[\n        excludeReplies,\n        excludeBoosts,\n        tagged,\n        media,\n        month + account?.acct,\n      ].toString()}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            disabled={!allowSwitch}\n            onClick={() => {\n              (async () => {\n                try {\n                  const { masto } = api({\n                    instance: accountInstance,\n                  });\n                  const acc = await masto.v1.accounts.lookup({\n                    acct: account.acct,\n                  });\n                  const { id } = acc;\n                  location.hash = `/${accountInstance}/a/${id}`;\n                } catch (e) {\n                  console.error(e);\n                  alert(t`Unable to fetch account info`);\n                }\n              })();\n            }}\n          >\n            <Icon icon=\"transfer\" />{' '}\n            <small class=\"menu-double-lines\">\n              <Trans>\n                Switch to account's instance{' '}\n                {accountInstance ? (\n                  <>\n                    {' '}\n                    (<b>{punycode.toUnicode(accountInstance)}</b>)\n                  </>\n                ) : null}\n              </Trans>\n            </small>\n          </MenuItem>\n          {!sameCurrentInstance && (\n            <MenuItem\n              onClick={() => {\n                (async () => {\n                  try {\n                    const acc = await currentMasto.v1.accounts.lookup({\n                      acct: account.acct + '@' + instance,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${currentInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert(t`Unable to fetch account info`);\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Switch to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nfunction MonthPicker(props) {\n  const { i18n } = useLingui();\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">\n          <Trans>Month</Trans>\n        </option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1).toString().padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString(i18n.locale, {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount, {\n  maxAge: 30 * 60 * 1000, // 30 minutes\n});\n\nexport default AccountStatuses;\n","import './annual-report.css';\n\nimport { Trans } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NameText from '../components/name-text';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nexport default function AnnualReport() {\n  const params = useParams();\n  const { year } = params;\n  useTitle(year ? `Annual Report: ${year}` : 'Annual Report');\n  const { masto, instance } = api();\n  const [results, setResults] = useState(null);\n  const [uiState, setUIState] = useState('default');\n\n  useEffect(() => {\n    if (year) {\n      (async () => {\n        setUIState('loading');\n        const results = await masto.v1.annualReports.$select(year).fetch();\n        console.log('REPORT', results);\n        setResults(results);\n        setUIState('default');\n      })();\n    }\n  }, [year]);\n\n  const { accounts, annualReports, statuses } = results || {};\n  const report = annualReports?.find((report) => report.year == year)?.data;\n\n  const datePlaceholder = new Date();\n\n  return (\n    <div id=\"annual-report-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"report\">\n        <h1>{year} #Wrapstodon</h1>\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> <Trans>Loading…</Trans>\n          </p>\n        )}\n        {!!report && (\n          <dl>\n            {Object.entries(report).map(([key, value]) => (\n              <>\n                <dt>{key}</dt>\n                <dd class={`report-${key}`}>\n                  {Array.isArray(value) ? (\n                    <table>\n                      <thead>\n                        <tr>\n                          {Object.entries(value[0]).map(([key, value]) => (\n                            <th\n                              class={\n                                key !== 'month' && typeof value === 'number'\n                                  ? 'number'\n                                  : ''\n                              }\n                            >\n                              {key}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {value.map((item) => (\n                          <tr>\n                            {Object.entries(item).map(([k, value]) => (\n                              <td\n                                class={\n                                  k !== 'month' && typeof value === 'number'\n                                    ? 'number'\n                                    : ''\n                                }\n                              >\n                                {value &&\n                                /(accountId)/i.test(k) &&\n                                /^(mostRebloggedAccounts|commonlyInteractedWithAccounts)$/i.test(\n                                  key,\n                                ) ? (\n                                  <NameText\n                                    account={accounts?.find(\n                                      (a) => a.id === value,\n                                    )}\n                                    showAvatar\n                                  />\n                                ) : k === 'month' ? (\n                                  datePlaceholder.setMonth(value - 1) &&\n                                  datePlaceholder.toLocaleString(undefined, {\n                                    month: 'long',\n                                  })\n                                ) : typeof value === 'number' ? (\n                                  value.toLocaleString()\n                                ) : (\n                                  value\n                                )}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : typeof value === 'object' ? (\n                    /^(topStatuses)$/i.test(key) ? (\n                      <dl>\n                        {Object.entries(value).map(([k, value]) => (\n                          <>\n                            <dt>{k}</dt>\n                            <dd>\n                              {value && (\n                                <Link to={`/${instance}/s/${value}`}>\n                                  <Status\n                                    status={statuses?.find(\n                                      (s) => s.id === value,\n                                    )}\n                                    size=\"s\"\n                                    readOnly\n                                  />\n                                </Link>\n                              )}\n                            </dd>\n                          </>\n                        ))}\n                      </dl>\n                    ) : (\n                      <table>\n                        <tbody>\n                          {Object.entries(value).map(([k, value]) => (\n                            <tr>\n                              <th>{k}</th>\n                              <td\n                                class={\n                                  typeof value === 'number' ? 'number' : ''\n                                }\n                              >\n                                {value}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    )\n                  ) : typeof value === 'string' ? (\n                    value\n                  ) : (\n                    // Last resort\n                    JSON.stringify(value, null, 2)\n                  )}\n                </dd>\n              </>\n            ))}\n          </dl>\n        )}\n      </div>\n      <hr />\n      <p style={{ textAlign: 'center' }}>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  const { t } = useLingui();\n  useTitle(t`Bookmarks`, '/bookmarks');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks.list({ limit: LIMIT });\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Bookmarks`}\n      id=\"bookmarks\"\n      emptyText={t`No bookmarks yet. Go bookmark something!`}\n      errorText={t`Unable to load bookmarks.`}\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","export default \"__VITE_ASSET__BL_1JinT__\"","import '../components/links-bar.css';\nimport './catchup.css';\n\nimport autoAnimate from '@formkit/auto-animate';\nimport { msg, select } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSearchParams } from 'react-router-dom';\nimport { uid } from 'uid/single';\n\nimport catchupUrl from '../assets/features/catch-up.png';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport { isFiltered } from '../utils/filters';\nimport getDomain from '../utils/get-domain';\nimport htmlContentLength from '../utils/html-content-length';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport { getCurrentAccountID, getCurrentAccountNS } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport { assignFollowedTags } from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = 'home';\n\nconst RANGES = [\n  { label: msg`last 1 hour`, value: 1 },\n  { label: msg`last 2 hours`, value: 2 },\n  { label: msg`last 3 hours`, value: 3 },\n  { label: msg`last 4 hours`, value: 4 },\n  { label: msg`last 5 hours`, value: 5 },\n  { label: msg`last 6 hours`, value: 6 },\n  { label: msg`last 7 hours`, value: 7 },\n  { label: msg`last 8 hours`, value: 8 },\n  { label: msg`last 9 hours`, value: 9 },\n  { label: msg`last 10 hours`, value: 10 },\n  { label: msg`last 11 hours`, value: 11 },\n  { label: msg`last 12 hours`, value: 12 },\n  { label: msg`beyond 12 hours`, value: 13 },\n];\n\nconst FILTER_KEYS = {\n  original: msg`Original`,\n  replies: msg`Replies`,\n  boosts: msg`Boosts`,\n  followedTags: msg`Followed tags`,\n  groups: msg`Groups`,\n  filtered: msg`Filtered`,\n};\nconst FILTER_SORTS = [\n  'createdAt',\n  'repliesCount',\n  'favouritesCount',\n  'reblogsCount',\n  'density',\n];\nconst FILTER_GROUPS = [null, 'account'];\n\nconst DTF = mem(\n  (locale) =>\n    new Intl.DateTimeFormat(locale || undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n);\n\nfunction Catchup() {\n  const { i18n, _, t } = useLingui();\n  const dtf = DTF(i18n.locale);\n\n  useTitle(`Catch-up`, '/catchup');\n  const { masto, instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [uiState, setUIState] = useState('start');\n  const [showTopLinks, setShowTopLinks] = useState(false);\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = (accountID) => accountID === currentAccount;\n\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome({ maxCreatedAt }) {\n    const maxCreatedAtDate = maxCreatedAt ? new Date(maxCreatedAt) : null;\n    console.debug('fetchHome', maxCreatedAtDate);\n    const allResults = [];\n    const homeIterator = masto.v1.timelines.home.list({ limit: 40 });\n    mainloop: while (true) {\n      try {\n        if (supportsPixelfed && homeIterator.nextParams) {\n          if (typeof homeIterator.nextParams === 'string') {\n            homeIterator.nextParams += '&include_reblogs=true';\n          } else {\n            homeIterator.nextParams.include_reblogs = true;\n          }\n        }\n        const results = await homeIterator.next();\n        const { value } = results;\n        if (value?.length) {\n          // This ignores maxCreatedAt filter, but it's ok for now\n          await assignFollowedTags(value, instance);\n          let addedResults = false;\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const createdAtDate = new Date(item.createdAt);\n            if (!maxCreatedAtDate || createdAtDate >= maxCreatedAtDate) {\n              // Filtered\n              const selfPost = isSelf(\n                item.reblog?.account?.id || item.account.id,\n              );\n              const filterInfo =\n                !selfPost &&\n                isFiltered(\n                  item.reblog?.filtered || item.filtered,\n                  FILTER_CONTEXT,\n                );\n              if (filterInfo?.action === 'hide') continue;\n              item._filtered = filterInfo;\n\n              // Followed tags\n              const sKey = statusKey(item.id, instance);\n              item._followedTags = states.statusFollowedTags[sKey]\n                ? [...states.statusFollowedTags[sKey]]\n                : [];\n\n              allResults.push(item);\n              addedResults = true;\n            } else {\n              // Don't immediately stop, still add the other items that might still be within range\n              // break mainloop;\n            }\n            // Only stop when ALL items are outside of range\n            if (!addedResults) {\n              break mainloop;\n            }\n          }\n        } else {\n          break mainloop;\n        }\n        // Pause 1s\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.error(e);\n        break mainloop;\n      }\n    }\n\n    // Post-process all results\n    // 1. Threadify - tag 1st-post in a thread\n    allResults.forEach((status) => {\n      if (status?.inReplyToId) {\n        const replyToStatus = allResults.find(\n          (s) => s.id === status.inReplyToId,\n        );\n        if (replyToStatus && !replyToStatus.inReplyToId) {\n          replyToStatus._thread = true;\n        }\n      }\n    });\n\n    return allResults;\n  }\n\n  const [posts, setPosts] = useState([]);\n  const catchupRangeRef = useRef();\n  const catchupLastRef = useRef();\n  const NS = useMemo(() => getCurrentAccountNS(), []);\n  const handleCatchupClick = useCallback(async ({ duration } = {}) => {\n    const now = Date.now();\n    const maxCreatedAt = duration ? now - duration : null;\n    setUIState('loading');\n    const results = await fetchHome({ maxCreatedAt });\n    // Namespaced by account ID\n    // Possible conflict if ID matches between different accounts from different instances\n    const catchupID = `${NS}-${uid()}`;\n    try {\n      await db.catchup.set(catchupID, {\n        id: catchupID,\n        posts: results,\n        count: results.length,\n        startAt: maxCreatedAt,\n        endAt: now,\n      });\n      setSearchParams({ id: catchupID });\n    } catch (e) {\n      console.error(e, results);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        const catchup = await db.catchup.get(id);\n        if (catchup) {\n          catchup.posts.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\n          setPosts(catchup.posts);\n          setUIState('results');\n        }\n      })();\n    } else if (uiState === 'results') {\n      setPosts([]);\n      setUIState('start');\n    }\n  }, [id]);\n\n  const [reloadCatchupsCount, reloadCatchups] = useReducer((c) => c + 1, 0);\n  const [lastCatchupEndAt, setLastCatchupEndAt] = useState(null);\n  const [prevCatchups, setPrevCatchups] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const catchups = await db.catchup.keys();\n        if (catchups.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = catchups.filter((key) => key.startsWith(`${ns}-`));\n          if (ownKeys.length) {\n            let ownCatchups = await db.catchup.getMany(ownKeys);\n            ownCatchups.sort((a, b) => b.endAt - a.endAt);\n\n            // Split to 1st 3 last catchups, and the rest\n            let lastCatchups = ownCatchups.slice(0, 3);\n            let restCatchups = ownCatchups.slice(3);\n\n            const trimmedCatchups = lastCatchups.map((c) => {\n              const { id, count, startAt, endAt } = c;\n              return {\n                id,\n                count,\n                startAt,\n                endAt,\n              };\n            });\n            setPrevCatchups(trimmedCatchups);\n            setLastCatchupEndAt(lastCatchups[0].endAt);\n\n            // GC time\n            ownCatchups = null;\n            lastCatchups = null;\n\n            queueMicrotask(() => {\n              if (restCatchups.length) {\n                // delete them\n                db.catchup\n                  .delMany(restCatchups.map((c) => c.id))\n                  .then(() => {\n                    // GC time\n                    restCatchups = null;\n                  })\n                  .catch((e) => {\n                    console.error(e);\n                  });\n              }\n            });\n\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      setPrevCatchups([]);\n    })();\n  }, [reloadCatchupsCount]);\n  useEffect(() => {\n    if (uiState === 'start') {\n      reloadCatchups();\n    }\n  }, [uiState === 'start']);\n\n  const [filterCounts, links] = useMemo(() => {\n    let filtered = 0,\n      groups = 0,\n      boosts = 0,\n      replies = 0,\n      followedTags = 0,\n      original = 0;\n    const links = {};\n    for (const post of posts) {\n      if (post._filtered && post._filtered?.action !== 'blur') {\n        filtered++;\n        post.__FILTER = 'filtered';\n      } else if (post.group) {\n        groups++;\n        post.__FILTER = 'groups';\n      } else if (post.reblog) {\n        boosts++;\n        post.__FILTER = 'boosts';\n      } else if (post._followedTags?.length) {\n        followedTags++;\n        post.__FILTER = 'followedTags';\n      } else if (\n        post.inReplyToId &&\n        post.inReplyToAccountId !== post.account?.id\n      ) {\n        replies++;\n        post.__FILTER = 'replies';\n      } else {\n        original++;\n        post.__FILTER = 'original';\n      }\n\n      const thePost = post.reblog || post;\n      if (\n        post.__FILTER !== 'filtered' &&\n        thePost.card?.url &&\n        thePost.card?.image &&\n        thePost.card?.type === 'link'\n      ) {\n        const { card, favouritesCount, reblogsCount } = thePost;\n        let { url } = card;\n        url = url.replace(/\\/$/, '');\n        if (!links[url]) {\n          links[url] = {\n            postID: thePost.id,\n            card,\n            shared: 1,\n            sharers: [post.account],\n            likes: favouritesCount,\n            boosts: reblogsCount,\n          };\n        } else {\n          if (links[url].sharers.find((a) => a.id === post.account.id)) {\n            continue;\n          }\n          links[url].shared++;\n          links[url].sharers.push(post.account);\n          if (links[url].postID !== thePost.id) {\n            links[url].likes += favouritesCount;\n            links[url].boosts += reblogsCount;\n          }\n        }\n      }\n    }\n\n    let topLinks = [];\n    for (const link in links) {\n      topLinks.push({\n        url: link,\n        ...links[link],\n      });\n    }\n    topLinks.sort((a, b) => {\n      if (a.shared > b.shared) return -1;\n      if (a.shared < b.shared) return 1;\n      if (a.boosts > b.boosts) return -1;\n      if (a.boosts < b.boosts) return 1;\n      if (a.likes > b.likes) return -1;\n      if (a.likes < b.likes) return 1;\n      return 0;\n    });\n\n    // Slice links to shared > 1 but min 10 links\n    if (topLinks.length > 10) {\n      linksLoop: for (let i = 10; i < topLinks.length; i++) {\n        const { shared } = topLinks[i];\n        if (shared <= 1) {\n          topLinks = topLinks.slice(0, i);\n          break linksLoop;\n        }\n      }\n    }\n\n    return [\n      {\n        filtered,\n        groups,\n        boosts,\n        replies,\n        followedTags,\n        original,\n      },\n      topLinks,\n    ];\n  }, [posts]);\n\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState('all');\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const [range, setRange] = useState(1);\n\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [groupBy, setGroupBy] = useState(null);\n\n  const [filteredPosts, authors, authorCounts] = useMemo(() => {\n    const authorsHash = {};\n    const authorCountsMap = new Map();\n\n    let filteredPosts = posts.filter((post) => {\n      const postFilterMatches =\n        selectedFilterCategory === 'all' ||\n        post.__FILTER === selectedFilterCategory;\n\n      if (postFilterMatches) {\n        authorsHash[post.account.id] = post.account;\n        authorCountsMap.set(\n          post.account.id,\n          (authorCountsMap.get(post.account.id) || 0) + 1,\n        );\n      }\n\n      return postFilterMatches;\n    });\n\n    // Deduplicate boosts\n    const boostedPosts = {};\n    filteredPosts.forEach((post) => {\n      if (post.reblog) {\n        if (boostedPosts[post.reblog.id]) {\n          if (boostedPosts[post.reblog.id].__BOOSTERS) {\n            boostedPosts[post.reblog.id].__BOOSTERS.add(post.account);\n          } else {\n            boostedPosts[post.reblog.id].__BOOSTERS = new Set([post.account]);\n          }\n          post.__HIDDEN = true;\n        } else {\n          boostedPosts[post.reblog.id] = post;\n        }\n      }\n    });\n\n    if (selectedAuthor && authorCountsMap.has(selectedAuthor)) {\n      filteredPosts = filteredPosts.filter(\n        (post) =>\n          post.account.id === selectedAuthor ||\n          [...(post.__BOOSTERS || [])].find((a) => a.id === selectedAuthor),\n      );\n    }\n\n    return [filteredPosts, authorsHash, Object.fromEntries(authorCountsMap)];\n  }, [selectedFilterCategory, selectedAuthor, posts]);\n\n  const filteredPostsMap = useMemo(() => {\n    const map = {};\n    filteredPosts.forEach((post) => {\n      map[post.id] = post;\n    });\n    return map;\n  }, [filteredPosts]);\n\n  const authorCountsList = useMemo(\n    () =>\n      Object.keys(authorCounts).sort(\n        (a, b) => authorCounts[b] - authorCounts[a],\n      ),\n    [authorCounts],\n  );\n\n  const sortedFilteredPosts = useMemo(() => {\n    const authorIndices = {};\n    authorCountsList.forEach((authorID, index) => {\n      authorIndices[authorID] = index;\n    });\n    return filteredPosts\n      .filter((post) => !post.__HIDDEN)\n      .sort((a, b) => {\n        if (groupBy === 'account') {\n          const aAccountID = a.account.id;\n          const bAccountID = b.account.id;\n          const aIndex = authorIndices[aAccountID];\n          const bIndex = authorIndices[bAccountID];\n          const order = aIndex - bIndex;\n          if (order !== 0) {\n            return order;\n          }\n        }\n        if (sortBy !== 'createdAt') {\n          a = a.reblog || a;\n          b = b.reblog || b;\n          if (sortBy !== 'density' && a[sortBy] === b[sortBy]) {\n            return a.createdAt > b.createdAt ? 1 : -1;\n          }\n        }\n        if (sortBy === 'density') {\n          const aDensity = postDensity(a);\n          const bDensity = postDensity(b);\n          if (sortOrder === 'asc') {\n            return aDensity > bDensity ? 1 : -1;\n          } else {\n            return bDensity > aDensity ? 1 : -1;\n          }\n        }\n        if (sortOrder === 'asc') {\n          return a[sortBy] > b[sortBy] ? 1 : -1;\n        } else {\n          return b[sortBy] > a[sortBy] ? 1 : -1;\n        }\n      });\n  }, [filteredPosts, sortBy, sortOrder, groupBy, authorCountsList]);\n\n  const prevGroup = useRef(null);\n\n  const authorsListParent = useRef(null);\n  const autoAnimated = useRef(false);\n  useEffect(() => {\n    if (posts.length > 100 || autoAnimated.current) return;\n    if (authorsListParent.current) {\n      autoAnimate(authorsListParent.current, {\n        duration: 200,\n      });\n      autoAnimated.current = true;\n    }\n  }, [posts, authorsListParent]);\n\n  const postsBarType = posts.length > 160 ? '3d' : '2d';\n\n  const postsBar = useMemo(() => {\n    if (postsBarType !== '2d') return null;\n    return posts.map((post) => {\n      // If part of filteredPosts\n      const isFiltered = filteredPostsMap[post.id];\n      return (\n        <span\n          key={post.id}\n          class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n        />\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const postsBins = useMemo(() => {\n    if (postsBarType !== '3d') return null;\n    if (!posts?.length) return null;\n    const bins = binByTime(posts, 'createdAt', 320);\n    return bins.map((posts, i) => {\n      return (\n        <div class=\"posts-bin\" key={i}>\n          {posts.map((post) => {\n            const isFiltered = filteredPostsMap[post.id];\n            return (\n              <span\n                key={post.id}\n                class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const scrollableRef = useRef(null);\n\n  // if range value exceeded lastCatchupEndAt, show error\n  const lastCatchupRange = useMemo(() => {\n    // return hour, not ms\n    if (!lastCatchupEndAt) return null;\n    return (Date.now() - lastCatchupEndAt) / 1000 / 60 / 60;\n  }, [lastCatchupEndAt, range]);\n\n  useEffect(() => {\n    if (uiState !== 'results') return;\n    const authorUsername =\n      selectedAuthor && authors[selectedAuthor]\n        ? authors[selectedAuthor].username\n        : '';\n    const sortOrderIndex = sortOrder === 'asc' ? 0 : 1;\n    const groupByText = {\n      account: 'authors',\n    };\n    let toast = showToast({\n      duration: 5_000, // 5 seconds\n      // Note: I'm sorry, translators\n      text: t`Showing ${select(selectedFilterCategory, {\n        all: 'all posts',\n        original: 'original posts',\n        replies: 'replies',\n        boosts: 'boosts',\n        followedTags: 'followed tags',\n        groups: 'groups',\n        filtered: 'filtered posts',\n      })}, ${select(sortBy, {\n        createdAt: select(sortOrder, {\n          asc: 'oldest',\n          desc: 'latest',\n        }),\n        reblogsCount: select(sortOrder, {\n          asc: 'fewest boosts',\n          desc: 'most boosts',\n        }),\n        favouritesCount: select(sortOrder, {\n          asc: 'fewest likes',\n          desc: 'most likes',\n        }),\n        repliesCount: select(sortOrder, {\n          asc: 'fewest replies',\n          desc: 'most replies',\n        }),\n        density: select(sortOrder, { asc: 'least dense', desc: 'most dense' }),\n      })} first${select(groupBy, {\n        account: ', grouped by authors',\n        other: '',\n      })}`,\n    });\n    return () => {\n      toast?.hideToast?.();\n    };\n  }, [\n    uiState,\n    selectedFilterCategory,\n    selectedAuthor,\n    sortBy,\n    sortOrder,\n    groupBy,\n    authors,\n  ]);\n\n  useEffect(() => {\n    if (selectedAuthor) {\n      if (authors[selectedAuthor]) {\n        // Check if author is visible and within the scrollable area viewport\n        const authorElement = authorsListParent.current.querySelector(\n          `[data-author=\"${selectedAuthor}\"]`,\n        );\n        const scrollableRect =\n          authorsListParent.current?.getBoundingClientRect();\n        const authorRect = authorElement?.getBoundingClientRect();\n        console.log({\n          sLeft: scrollableRect.left,\n          sRight: scrollableRect.right,\n          aLeft: authorRect.left,\n          aRight: authorRect.right,\n        });\n        if (\n          authorRect.left < scrollableRect.left ||\n          authorRect.right > scrollableRect.right\n        ) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        } else if (authorRect.top < 0) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  }, [selectedAuthor, authors]);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const itemsSelector = '.catchup-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        const nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const hlRef = useHotkeys(\n    'h, l',\n    (_, handler) => {\n      // Go next/prev selectedAuthor in authorCountsList list\n      const key = handler.keys[0];\n      if (selectedAuthor) {\n        const index = authorCountsList.indexOf(selectedAuthor);\n        if (key === 'h') {\n          if (index > 0 && index < authorCountsList.length) {\n            setSelectedAuthor(authorCountsList[index - 1]);\n            scrollableRef.current?.focus();\n          }\n        } else if (key === 'l') {\n          if (index < authorCountsList.length - 1 && index >= 0) {\n            setSelectedAuthor(authorCountsList[index + 1]);\n            scrollableRef.current?.focus();\n          }\n        }\n      } else if (key === 'l') {\n        setSelectedAuthor(authorCountsList[0]);\n        scrollableRef.current?.focus();\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setSelectedAuthor(null);\n      scrollableRef.current?.focus();\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const dotRef = useHotkeys(\n    '.',\n    () => {\n      scrollableRef.current?.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const handleArrowKeys = useCallback((e) => {\n    const activeElement = document.activeElement;\n    const isRadio =\n      activeElement?.tagName === 'INPUT' && activeElement.type === 'radio';\n    const isArrowKeys =\n      e.key === 'ArrowDown' ||\n      e.key === 'ArrowUp' ||\n      e.key === 'ArrowLeft' ||\n      e.key === 'ArrowRight';\n    if (isArrowKeys && isRadio) {\n      // Note: page scroll won't trigger on first arrow key press due to this. Subsequent presses will.\n      activeElement.blur();\n      return;\n    }\n  }, []);\n\n  return (\n    <div\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        hlRef.current = node;\n        escRef.current = node;\n        dotRef.current = node;\n      }}\n      id=\"catchup-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n    >\n      <div class=\"timeline-deck deck wide\">\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n          }}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              {uiState === 'results' && (\n                <Link to=\"/catchup\" class=\"button plain\">\n                  <Icon icon=\"history2\" size=\"l\" alt={t`Catch-up`} />\n                </Link>\n              )}\n              {uiState === 'start' && (\n                <Link to=\"/\" class=\"button plain\">\n                  <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                </Link>\n              )}\n            </div>\n            <h1>\n              {uiState !== 'start' && (\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              {uiState !== 'start' && uiState !== 'loading' && (\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    setShowHelp(true);\n                  }}\n                >\n                  <Trans>Help</Trans>\n                </button>\n              )}\n            </div>\n          </div>\n        </header>\n        <main onKeyDown={handleArrowKeys}>\n          {uiState === 'start' && (\n            <div class=\"catchup-start\">\n              <h1>\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              </h1>\n              <details>\n                <summary>\n                  <Trans>What is this?</Trans>\n                </summary>\n                <p>\n                  <Trans>\n                    Catch-up is a separate timeline for your followings,\n                    offering a high-level view at a glance, with a simple,\n                    email-inspired interface to effortlessly sort and filter\n                    through posts.\n                  </Trans>\n                </p>\n                <img\n                  src={catchupUrl}\n                  width=\"1200\"\n                  height=\"900\"\n                  alt={t`Preview of Catch-up UI`}\n                />\n                <p>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.target.closest('details').open = false;\n                    }}\n                  >\n                    <Trans>Let's catch up</Trans>\n                  </button>\n                </p>\n              </details>\n              <p>\n                <Trans>Let's catch up on the posts from your followings.</Trans>\n              </p>\n              <p>\n                <b>\n                  <Trans>Show me all posts from…</Trans>\n                </b>\n              </p>\n              <div class=\"catchup-form\">\n                <input\n                  ref={catchupRangeRef}\n                  type=\"range\"\n                  value={range}\n                  min={RANGES[0].value}\n                  max={RANGES[RANGES.length - 1].value}\n                  step=\"1\"\n                  list=\"catchup-ranges\"\n                  onChange={(e) => setRange(+e.target.value)}\n                />{' '}\n                <span\n                  style={{\n                    width: '8em',\n                  }}\n                >\n                  {_(RANGES[range - 1].label)}\n                  <br />\n                  <small class=\"insignificant\">\n                    {range == RANGES[RANGES.length - 1].value\n                      ? t`until the max`\n                      : niceDateTime(\n                          new Date(Date.now() - range * 60 * 60 * 1000),\n                        )}\n                  </small>\n                </span>\n                <datalist id=\"catchup-ranges\">\n                  {RANGES.map(({ label, value }) => (\n                    <option value={value} label={_(label)} />\n                  ))}\n                </datalist>{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (range < RANGES[RANGES.length - 1].value) {\n                      let duration;\n                      if (\n                        range === RANGES[RANGES.length - 1].value &&\n                        catchupLastRef.current?.checked\n                      ) {\n                        duration = Date.now() - lastCatchupEndAt;\n                      } else {\n                        duration = range * 60 * 60 * 1000;\n                      }\n                      handleCatchupClick({ duration });\n                    } else {\n                      handleCatchupClick();\n                    }\n                  }}\n                >\n                  <Trans>Catch up</Trans>\n                </button>\n              </div>\n              {lastCatchupRange && range > lastCatchupRange ? (\n                <p class=\"catchup-info\">\n                  <Icon icon=\"info\" />{' '}\n                  <Trans>Overlaps with your last catch-up</Trans>\n                </p>\n              ) : range === RANGES[RANGES.length - 1].value &&\n                lastCatchupEndAt ? (\n                <p class=\"catchup-info\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      switch\n                      checked\n                      ref={catchupLastRef}\n                    />{' '}\n                    <Trans>\n                      Until the last catch-up (\n                      {dtf.format(new Date(lastCatchupEndAt))})\n                    </Trans>\n                  </label>\n                </p>\n              ) : null}\n              <p class=\"insignificant\">\n                <small>\n                  <Trans>\n                    Note: your instance might only show a maximum of 800 posts\n                    in the Home timeline regardless of the time range. Could be\n                    less or more.\n                  </Trans>\n                </small>\n              </p>\n              {!!prevCatchups?.length && (\n                <div class=\"catchup-prev\">\n                  <p>\n                    <Trans>Previously…</Trans>\n                  </p>\n                  <ul>\n                    {prevCatchups.map((pc) => (\n                      <li key={pc.id}>\n                        <Link to={`/catchup?id=${pc.id}`}>\n                          <Icon icon=\"history2\" />{' '}\n                          <span>\n                            {pc.startAt\n                              ? dtf.formatRange(\n                                  new Date(pc.startAt),\n                                  new Date(pc.endAt),\n                                )\n                              : `… – ${dtf.format(new Date(pc.endAt))}`}\n                          </span>\n                        </Link>{' '}\n                        <span>\n                          <small class=\"ib insignificant\">\n                            <Plural\n                              value={pc.count}\n                              one=\"# post\"\n                              other=\"# posts\"\n                            />\n                          </small>{' '}\n                          <button\n                            type=\"button\"\n                            class=\"light danger small\"\n                            onClick={async () => {\n                              const yes = confirm(t`Remove this catch-up?`);\n                              if (yes) {\n                                let st = showToast(\n                                  t`Removing Catch-up ${pc.id}`,\n                                );\n                                await db.catchup.del(pc.id);\n                                st?.hideToast?.();\n                                showToast(t`Catch-up ${pc.id} removed`);\n                                reloadCatchups();\n                              }\n                            }}\n                          >\n                            <Icon icon=\"x\" alt={t`Remove`} />\n                          </button>\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                  {prevCatchups.length >= 3 && (\n                    <p>\n                      <small>\n                        <Trans>\n                          Note: Only max 3 will be stored. The rest will be\n                          automatically removed.\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {uiState === 'loading' && (\n            <div class=\"ui-state catchup-start\">\n              <Loader abrupt />\n              <p class=\"insignificant\">\n                <Trans>Fetching posts…</Trans>\n              </p>\n              <p class=\"insignificant\">\n                <Trans>This might take a while.</Trans>\n              </p>\n            </div>\n          )}\n          {uiState === 'results' && (\n            <>\n              <div class=\"catchup-header\">\n                {posts.length > 0 && (\n                  <p>\n                    <b class=\"ib\">\n                      {dtf.formatRange(\n                        new Date(posts[0].createdAt),\n                        new Date(posts[posts.length - 1].createdAt),\n                      )}\n                    </b>\n                  </p>\n                )}\n                <aside>\n                  <button\n                    hidden={\n                      selectedFilterCategory === 'all' &&\n                      !selectedAuthor &&\n                      sortBy === 'createdAt' &&\n                      sortOrder === 'asc'\n                    }\n                    type=\"button\"\n                    class=\"plain4 small\"\n                    onClick={() => {\n                      setSelectedFilterCategory('all');\n                      setSelectedAuthor(null);\n                      setSortBy('createdAt');\n                      setGroupBy(null);\n                      setSortOrder('asc');\n                    }}\n                  >\n                    <Trans>Reset filters</Trans>\n                  </button>\n                  {links?.length > 0 && (\n                    <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => setShowTopLinks(!showTopLinks)}\n                    >\n                      <Trans>Top links</Trans>{' '}\n                      <Icon\n                        icon=\"chevron-down\"\n                        style={{\n                          transform: showTopLinks\n                            ? 'rotate(180deg)'\n                            : 'rotate(0deg)',\n                        }}\n                      />\n                    </button>\n                  )}\n                </aside>\n              </div>\n              <div class=\"shazam-container no-animation\" hidden={!showTopLinks}>\n                <div class=\"shazam-container-inner\">\n                  <div class=\"catchup-top-links links-bar\">\n                    {links.map((link) => {\n                      const { card, shared, sharers, likes, boosts } = link;\n                      const {\n                        blurhash,\n                        title,\n                        description,\n                        url,\n                        image,\n                        imageDescription,\n                        language,\n                        width,\n                        height,\n                        publishedAt,\n                      } = card;\n                      const domain = getDomain(url);\n                      let accentColor;\n                      if (blurhash) {\n                        const averageColor = getBlurHashAverageColor(blurhash);\n                        const labAverageColor = rgb2oklab(averageColor);\n                        accentColor = oklab2rgb([\n                          0.6,\n                          labAverageColor[1],\n                          labAverageColor[2],\n                        ]);\n                      }\n\n                      return (\n                        <a\n                          key={url}\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                          class=\"link-block\"\n                          style={\n                            accentColor\n                              ? {\n                                  '--accent-color': `rgb(${accentColor.join(\n                                    ',',\n                                  )})`,\n                                  '--accent-alpha-color': `rgba(${accentColor.join(\n                                    ',',\n                                  )}, 0.4)`,\n                                }\n                              : {}\n                          }\n                        >\n                          <article>\n                            <figure>\n                              <img\n                                src={image}\n                                alt={imageDescription}\n                                width={width}\n                                height={height}\n                                loading=\"lazy\"\n                              />\n                            </figure>\n                            <div class=\"article-body\">\n                              <header>\n                                <div class=\"article-meta\">\n                                  <span class=\"domain\">{domain}</span>{' '}\n                                  {!!publishedAt && <>&middot; </>}\n                                  {!!publishedAt && (\n                                    <>\n                                      <RelativeTime\n                                        datetime={publishedAt}\n                                        format=\"micro\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {!!title && (\n                                  <h1\n                                    class=\"title\"\n                                    lang={language}\n                                    dir=\"auto\"\n                                    title={title}\n                                  >\n                                    {title}\n                                  </h1>\n                                )}\n                              </header>\n                              {!!description && (\n                                <p\n                                  class=\"description\"\n                                  lang={language}\n                                  dir=\"auto\"\n                                  title={description}\n                                >\n                                  {description}\n                                </p>\n                              )}\n                              <hr />\n                              <p\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                }}\n                              >\n                                <Trans>\n                                  Shared by{' '}\n                                  {sharers.map((s) => {\n                                    const { avatarStatic, displayName } = s;\n                                    return (\n                                      <button\n                                        type=\"button\"\n                                        class=\"plain\"\n                                        style={{\n                                          padding: 0,\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          e.stopPropagation();\n                                          // Reset and filter to author\n                                          const { id } = s;\n                                          setSelectedAuthor(id);\n                                          setSelectedFilterCategory('all');\n                                        }}\n                                      >\n                                        <Avatar\n                                          url={avatarStatic}\n                                          size=\"s\"\n                                          alt={displayName}\n                                        />\n                                      </button>\n                                    );\n                                  })}\n                                </Trans>\n                              </p>\n                            </div>\n                          </article>\n                        </a>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              {posts.length >= 5 &&\n                (postsBarType === '3d' ? (\n                  <div class=\"catchup-posts-viz-time-bar\">{postsBins}</div>\n                ) : (\n                  <div class=\"catchup-posts-viz-bar\">{postsBar}</div>\n                ))}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <label class=\"filter-cat\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter-cat\"\n                      checked={selectedFilterCategory.toLowerCase() === 'all'}\n                      onChange={() => {\n                        setSelectedFilterCategory('all');\n                      }}\n                    />\n                    <Trans>All</Trans> <span class=\"count\">{posts.length}</span>\n                  </label>\n                  {Object.entries(FILTER_KEYS).map(\n                    ([key, label]) =>\n                      !!filterCounts[key] && (\n                        <label\n                          class=\"filter-cat\"\n                          key={_(label)}\n                          title={\n                            ((filterCounts[key] / posts.length) * 100).toFixed(\n                              2,\n                            ) + '%'\n                          }\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"filter-cat\"\n                            checked={\n                              selectedFilterCategory.toLowerCase() ===\n                              key.toLowerCase()\n                            }\n                            onChange={() => {\n                              setSelectedFilterCategory(key);\n                              if (key === 'boosts') {\n                                setSortBy('reblogsCount');\n                                setSortOrder('desc');\n                                setGroupBy(null);\n                              }\n                              // setSelectedAuthor(null);\n                            }}\n                          />\n                          {_(label)}{' '}\n                          <span class=\"count\">{filterCounts[key]}</span>\n                        </label>\n                      ),\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && !!authorCounts && (\n                <div\n                  class=\"catchup-filters authors-filters\"\n                  ref={authorsListParent}\n                >\n                  {authorCountsList.map((author) => (\n                    <label\n                      class=\"filter-author\"\n                      data-author={author}\n                      key={`${author}-${authorCounts[author]}`}\n                      // Preact messed up the order sometimes, need additional key besides just `author`\n                      // https://github.com/preactjs/preact/issues/2849\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"filter-author\"\n                        checked={selectedAuthor === author}\n                        onChange={() => {\n                          setSelectedAuthor(author);\n                          // setGroupBy(null);\n                        }}\n                        onClick={() => {\n                          if (selectedAuthor === author) {\n                            setSelectedAuthor(null);\n                          }\n                        }}\n                      />\n                      <Avatar\n                        url={\n                          authors[author].avatarStatic || authors[author].avatar\n                        }\n                        size=\"xxl\"\n                        alt={`${authors[author].displayName} (@${authors[author].acct})`}\n                      />{' '}\n                      <span class=\"count\">{authorCounts[author]}</span>\n                      <span class=\"username\">{authors[author].username}</span>\n                    </label>\n                  ))}\n                  {authorCountsList.length > 5 && (\n                    <small\n                      key=\"authors-count\"\n                      style={{\n                        whiteSpace: 'nowrap',\n                        paddingInline: '1em',\n                        opacity: 0.33,\n                      }}\n                    >\n                      <Plural\n                        value={authorCountsList.length}\n                        one=\"# author\"\n                        other=\"# authors\"\n                      />\n                    </small>\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <span class=\"filter-label\">\n                    <Trans>Sort</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_SORTS.map((key) => (\n                      <label\n                        class=\"filter-sort\"\n                        key={key}\n                        onClick={(e) => {\n                          if (sortBy === key) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-cat\"\n                          checked={sortBy === key}\n                          onChange={() => {\n                            setSortBy(key);\n                            const order = /(replies|favourites|reblogs)/.test(\n                              key,\n                            )\n                              ? 'desc'\n                              : 'asc';\n                            setSortOrder(order);\n                          }}\n                        />\n                        {\n                          {\n                            createdAt: t`Date`,\n                            repliesCount: t`Replies`,\n                            favouritesCount: t`Likes`,\n                            reblogsCount: t`Boosts`,\n                            density: t`Density`,\n                          }[key]\n                        }\n                        {sortBy === key && (sortOrder === 'asc' ? ' ↑' : ' ↓')}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {/* <fieldset class=\"radio-field-group\">\n                    {['asc', 'desc'].map((key) => (\n                      <label class=\"filter-sort\" key={key}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-dir\"\n                          checked={sortOrder === key}\n                          onChange={() => {\n                            setSortOrder(key);\n                          }}\n                        />\n                        {key === 'asc' ? '↑' : '↓'}\n                      </label>\n                    ))}\n                  </fieldset> */}\n                  <span class=\"filter-label\">\n                    <Trans id=\"group.filter\">Group</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_GROUPS.map((key) => (\n                      <label class=\"filter-group\" key={key || 'none'}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-group\"\n                          checked={groupBy === key}\n                          onChange={() => {\n                            setGroupBy(key);\n                          }}\n                          disabled={key === 'account' && selectedAuthor}\n                        />\n                        {{\n                          account: t`Authors`,\n                        }[key] || t`None`}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {\n                    selectedAuthor && authorCountsList.length > 1 ? (\n                      <button\n                        type=\"button\"\n                        class=\"plain6 small\"\n                        onClick={() => {\n                          setSelectedAuthor(null);\n                        }}\n                        style={{\n                          whiteSpace: 'nowrap',\n                        }}\n                      >\n                        <Trans>Show all authors</Trans>\n                      </button>\n                    ) : null\n                    // <button\n                    //   type=\"button\"\n                    //   class=\"plain4 small\"\n                    //   onClick={() => {}}\n                    // >\n                    //   Group by authors\n                    // </button>\n                  }\n                </div>\n              )}\n              <ul\n                class={`catchup-list catchup-filter-${\n                  selectedFilterCategory || ''\n                } ${sortBy ? `catchup-sort-${sortBy}` : ''} ${\n                  selectedAuthor && authors[selectedAuthor]\n                    ? `catchup-selected-author`\n                    : ''\n                } ${groupBy ? `catchup-group-${groupBy}` : ''}`}\n              >\n                {sortedFilteredPosts.map((post, i) => {\n                  const id = post.reblog?.id || post.id;\n                  let showSeparator = false;\n                  if (groupBy === 'account') {\n                    if (\n                      prevGroup.current &&\n                      post.account.id !== prevGroup.current &&\n                      i > 0\n                    ) {\n                      showSeparator = true;\n                    }\n                    prevGroup.current = post.account.id;\n                  }\n                  return (\n                    <Fragment key={`${post.id}-${showSeparator}`}>\n                      {showSeparator && <li class=\"separator\" />}\n                      <IntersectionPostLineItem\n                        to={`/${instance}/s/${id}`}\n                        post={post}\n                        root={scrollableRef.current}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </ul>\n              <footer>\n                {filteredPosts.length > 5 && (\n                  <p>\n                    {selectedFilterCategory === 'boosts'\n                      ? t`You don't have to read everything.`\n                      : t`That's all.`}{' '}\n                    <button\n                      type=\"button\"\n                      class=\"textual\"\n                      onClick={() => {\n                        scrollableRef.current.scrollTop = 0;\n                      }}\n                    >\n                      <Trans>Back to top</Trans>\n                    </button>\n                    .\n                  </p>\n                )}\n              </footer>\n            </>\n          )}\n        </main>\n      </div>\n      {showHelp && (\n        <Modal onClose={() => setShowHelp(false)}>\n          <div class=\"sheet\" id=\"catchup-help-sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowHelp(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Help</Trans>\n              </h2>\n            </header>\n            <main>\n              <dl>\n                <dt>\n                  <Trans>Top links</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Links shared by followings, sorted by shared counts, boosts\n                    and likes.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Sort: Density</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are sorted by information density or depth. Shorter\n                    posts are \"lighter\" while longer posts are \"heavier\". Posts\n                    with photos are \"heavier\" than posts without photos.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Group: Authors</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are grouped by authors, sorted by posts count per\n                    author.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Keyboard shortcuts</Trans>\n                </dt>\n                {/* <dd>\n                  <kbd>j</kbd>: <Trans>Next post</Trans>\n                </dd>\n                <dd>\n                  <kbd>k</kbd>: <Trans>Previous post</Trans>\n                </dd>\n                <dd>\n                  <kbd>l</kbd>: <Trans>Next author</Trans>\n                </dd>\n                <dd>\n                  <kbd>h</kbd>: <Trans>Previous author</Trans>\n                </dd>\n                <dd>\n                  <kbd>Enter</kbd>: <Trans>Open post details</Trans>\n                </dd>\n                <dd>\n                  <kbd>.</kbd>: <Trans>Scroll to top</Trans>\n                </dd> */}\n                <dd>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Trans>Next post</Trans>\n                        </td>\n                        <td>\n                          <kbd>j</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous post</Trans>\n                        </td>\n                        <td>\n                          <kbd>k</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Next author</Trans>\n                        </td>\n                        <td>\n                          <kbd>l</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous author</Trans>\n                        </td>\n                        <td>\n                          <kbd>h</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Open post details</Trans>\n                        </td>\n                        <td>\n                          <kbd>Enter</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Scroll to top</Trans>\n                        </td>\n                        <td>\n                          <kbd>.</kbd>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </dd>\n              </dl>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst PostLine = memo(\n  function ({ post }) {\n    const {\n      id,\n      account,\n      group,\n      reblog,\n      inReplyToId,\n      inReplyToAccountId,\n      _followedTags: isFollowedTags,\n      _filtered: filterInfo,\n      visibility,\n      __BOOSTERS,\n    } = post;\n    const isReplyTo = inReplyToId && inReplyToAccountId !== account.id;\n    const isFiltered = !!filterInfo && filterInfo?.action !== 'blur';\n\n    const debugHover = (e) => {\n      if (e.shiftKey) {\n        console.log({\n          ...post,\n        });\n      }\n    };\n\n    return (\n      <article\n        class={`post-line ${\n          group\n            ? 'group'\n            : reblog\n              ? 'reblog'\n              : isFollowedTags?.length\n                ? 'followed-tags'\n                : ''\n        } ${isReplyTo ? 'reply-to' : ''} ${\n          isFiltered ? 'filtered' : ''\n        } visibility-${visibility}`}\n        onMouseEnter={debugHover}\n      >\n        <span class=\"post-author\">\n          {reblog ? (\n            <span class=\"post-reblog-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />\n              {__BOOSTERS?.size > 0\n                ? [...__BOOSTERS].map((b) => (\n                    <Avatar url={b.avatarStatic || b.avatar} squircle={b.bot} />\n                  ))\n                : ''}{' '}\n              <Icon icon=\"rocket\" />{' '}\n              {/* <Avatar\n              url={reblog.account.avatarStatic || reblog.account.avatar}\n              squircle={reblog.account.bot}\n            /> */}\n              <NameText account={reblog.account} showAvatar />\n            </span>\n          ) : (\n            <NameText account={account} showAvatar />\n          )}\n        </span>\n        <PostPeek post={reblog || post} filterInfo={filterInfo} />\n        <span class=\"post-meta\">\n          <PostStats post={reblog || post} />{' '}\n          <RelativeTime\n            datetime={new Date(reblog?.createdAt || post.createdAt)}\n            format=\"micro\"\n          />\n        </span>\n      </article>\n    );\n  },\n  (oldProps, newProps) => {\n    return oldProps?.post?.id === newProps?.post?.id;\n  },\n);\n\nconst IntersectionPostLineItem = ({ root, to, ...props }) => {\n  const ref = useRef();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          queueMicrotask(() => setShow(true));\n          observer.unobserve(ref.current);\n        }\n      },\n      {\n        root,\n        rootMargin: `${Math.max(320, screen.height * 0.75)}px`,\n      },\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n\n  return show ? (\n    <li>\n      <Link to={to}>\n        <PostLine {...props} />\n      </Link>\n    </li>\n  ) : (\n    <li ref={ref} style={{ height: '4em' }} />\n  );\n};\n\n// A media speak a thousand words\nconst MEDIA_DENSITY = 8;\nconst CARD_DENSITY = 8;\nfunction postDensity(post) {\n  const { spoilerText, content, poll, mediaAttachments, card } = post;\n  const pollContent = poll?.options?.length\n    ? poll.options.reduce((acc, cur) => acc + cur.title, '')\n    : '';\n  const density =\n    (spoilerText.length + htmlContentLength(content) + pollContent.length) /\n      140 +\n    (mediaAttachments?.length\n      ? MEDIA_DENSITY * mediaAttachments.length\n      : card?.image\n        ? CARD_DENSITY\n        : 0);\n  return density;\n}\n\nconst MEDIA_SIZE = 48;\n\nfunction PostPeek({ post, filterInfo }) {\n  const { t } = useLingui();\n  const {\n    spoilerText,\n    sensitive,\n    content,\n    emojis,\n    poll,\n    mediaAttachments,\n    card,\n    inReplyToId,\n    inReplyToAccountId,\n    account,\n    _thread,\n  } = post;\n  const isThread =\n    (inReplyToId && inReplyToAccountId === account.id) || !!_thread;\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  // const readingExpandSpoilers = true;\n  const showMedia =\n    readingExpandSpoilers ||\n    (!spoilerText && !sensitive && filterInfo?.action !== 'blur');\n  const postText = content ? statusPeek(post) : '';\n\n  const showPostContent = !spoilerText || readingExpandSpoilers;\n\n  return (\n    <div class=\"post-peek\" title={!spoilerText ? postText : ''}>\n      <span class=\"post-peek-content\">\n        {isThread && !showPostContent && (\n          <>\n            <span class=\"post-peek-tag post-peek-thread\">Thread</span>{' '}\n          </>\n        )}\n        {!!filterInfo && filterInfo?.action !== 'blur' ? (\n          <span class=\"post-peek-filtered\">\n            {/* Filtered{filterInfo?.titlesStr ? `: ${filterInfo.titlesStr}` : ''} */}\n            {filterInfo?.titlesStr\n              ? t`Filtered: ${filterInfo.titlesStr}`\n              : t`Filtered`}\n          </span>\n        ) : (\n          <>\n            {!!spoilerText && (\n              <span class=\"post-peek-spoiler\">\n                <Icon\n                  icon={`${readingExpandSpoilers ? 'eye-open' : 'eye-close'}`}\n                />{' '}\n                {spoilerText}\n              </span>\n            )}\n            {showPostContent && (\n              <div class=\"post-peek-html\">\n                {isThread && (\n                  <>\n                    <span class=\"post-peek-tag post-peek-thread\">\n                      <Trans>Thread</Trans>\n                    </span>{' '}\n                  </>\n                )}\n                {!!content && (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: emojifyText(content, emojis),\n                    }}\n                  />\n                )}\n                {!!poll?.options?.length &&\n                  poll.options.map((o) => (\n                    <div>\n                      {poll.multiple ? '▪️' : '•'} {o.title}\n                    </div>\n                  ))}\n                {!content &&\n                  mediaAttachments?.length === 1 &&\n                  mediaAttachments[0].description && (\n                    <>\n                      <span class=\"post-peek-tag post-peek-alt\">ALT</span>{' '}\n                      <div>{mediaAttachments[0].description}</div>\n                    </>\n                  )}\n              </div>\n            )}\n          </>\n        )}\n      </span>\n      {(!filterInfo || filterInfo?.action === 'blur') && (\n        <span class=\"post-peek-post-content\">\n          {!!poll && (\n            <span class=\"post-peek-tag post-peek-poll\">\n              <Icon icon=\"poll\" size=\"s\" />\n              <Trans>Poll</Trans>\n            </span>\n          )}\n          {!!mediaAttachments?.length\n            ? mediaAttachments.map((m) => {\n                const mediaURL = m.previewUrl || m.url;\n                const remoteMediaURL = m.previewRemoteUrl || m.remoteUrl;\n                const width = m.meta?.original\n                  ? m.meta.original.width\n                  : m.meta?.small?.width || m.meta?.original?.width;\n                const height = m.meta?.original\n                  ? m.meta.original.height\n                  : m.meta?.small?.height || m.meta?.original?.height;\n                return (\n                  <span key={m.id} class=\"post-peek-media\">\n                    {{\n                      image:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                            style={{\n                              '--anim-duration': `${Math.min(\n                                Math.max(Math.max(width, height) / 100, 5),\n                                120,\n                              )}s`,\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🖼</span>\n                        ),\n                      gifv:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🎞️</span>\n                        ),\n                      video:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">📹</span>\n                        ),\n                      audio: <span class=\"post-peek-faux-media\">🎵</span>,\n                    }[m.type] || null}\n                  </span>\n                );\n              })\n            : !!card &&\n              card.image &&\n              showMedia && (\n                <span\n                  class={`post-peek-media post-peek-card card-${\n                    card.type || ''\n                  }`}\n                >\n                  {card.image ? (\n                    <img\n                      src={card.image}\n                      width={MEDIA_SIZE}\n                      height={MEDIA_SIZE}\n                      alt={\n                        card.title || card.description || card.imageDescription\n                      }\n                      loading=\"lazy\"\n                      style={{\n                        '--anim-duration':\n                          card.width &&\n                          card.height &&\n                          `${Math.min(\n                            Math.max(\n                              Math.max(card.width, card.height) / 100,\n                              5,\n                            ),\n                            120,\n                          )}s`,\n                      }}\n                    />\n                  ) : (\n                    <span class=\"post-peek-faux-media\">🔗</span>\n                  )}\n                </span>\n              )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction PostStats({ post }) {\n  const { t } = useLingui();\n  const { reblogsCount, repliesCount, favouritesCount } = post;\n  return (\n    <span class=\"post-stats\">\n      {repliesCount > 0 && (\n        <span class=\"post-stat-replies\">\n          <Icon icon=\"comment2\" size=\"s\" alt={t`Replies`} />{' '}\n          {shortenNumber(repliesCount)}\n        </span>\n      )}\n      {favouritesCount > 0 && (\n        <span class=\"post-stat-likes\">\n          <Icon icon=\"heart\" size=\"s\" alt={t`Likes`} />{' '}\n          {shortenNumber(favouritesCount)}\n        </span>\n      )}\n      {reblogsCount > 0 && (\n        <span class=\"post-stat-boosts\">\n          <Icon icon=\"rocket\" size=\"s\" alt={t`Boosts`} />{' '}\n          {shortenNumber(reblogsCount)}\n        </span>\n      )}\n    </span>\n  );\n}\n\nfunction binByTime(data, key, numBins) {\n  // Extract dates from data objects\n  const dates = data.map((item) => new Date(item[key]));\n\n  // Find minimum and maximum dates directly (avoiding Math.min/max)\n  const minDate = dates.reduce(\n    (acc, date) => (date < acc ? date : acc),\n    dates[0],\n  );\n  const maxDate = dates.reduce(\n    (acc, date) => (date > acc ? date : acc),\n    dates[0],\n  );\n\n  // Calculate the time span in milliseconds\n  const range = Math.min(maxDate.getTime(), Date.now()) - minDate.getTime();\n\n  // Create empty bins and loop through data\n  const bins = Array.from({ length: numBins }, () => []);\n  data.forEach((item) => {\n    const date = new Date(item[key]);\n    if (date.getTime() > Date.now()) {\n      // Future dates go into the last bin\n      bins[bins.length - 1].push(item);\n    } else {\n      const normalized = (date.getTime() - minDate.getTime()) / range;\n      const binIndex = Math.floor(normalized * (numBins - 1));\n      bins[binIndex].push(item);\n    }\n  });\n\n  return bins;\n}\n\nexport default Catchup;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  const { t } = useLingui();\n  useTitle(t`Likes`, '/favourites');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites.list({ limit: LIMIT });\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Likes`}\n      id=\"favourites\"\n      emptyText={t`No likes yet. Go like something!`}\n      errorText={t`Unable to load likes.`}\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import './filters.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getAPIVersions } from '../utils/store-utils';\nimport useInterval from '../utils/useInterval';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = ['home', 'public', 'notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_UNIMPLEMENTED = ['thread', 'account'];\nconst FILTER_CONTEXT_LABELS = {\n  home: msg`Home and lists`,\n  notifications: msg`Notifications`,\n  public: msg`Public timelines`,\n  thread: msg`Conversations`,\n  account: msg`Profiles`,\n};\n\nconst EXPIRY_DURATIONS = [\n  0, // forever\n  30 * 60, // 30 minutes\n  60 * 60, // 1 hour\n  6 * 60 * 60, // 6 hours\n  12 * 60 * 60, // 12 hours\n  60 * 60 * 24, // 24 hours\n  60 * 60 * 24 * 7, // 7 days\n  60 * 60 * 24 * 30, // 30 days\n];\n\nconst EXPIRY_DURATIONS_LABELS = {\n  0: msg`Never`,\n  1800: i18nDuration(30, 'minute'),\n  3600: i18nDuration(1, 'hour'),\n  21600: i18nDuration(6, 'hour'),\n  43200: i18nDuration(12, 'hour'),\n  86_400: i18nDuration(24, 'hour'),\n  604_800: i18nDuration(7, 'day'),\n  2_592_000: i18nDuration(30, 'day'),\n};\n\nfunction Filters() {\n  const { t } = useLingui();\n  const { masto } = api();\n  useTitle(t`Filters`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n  const [showFiltersAddEditModal, setShowFiltersAddEditModal] = useState(false);\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const filters = await masto.v2.filters.list();\n        filters.sort((a, b) => a.title.localeCompare(b.title));\n        filters.forEach((filter) => {\n          if (filter.keywords?.length) {\n            filter.keywords.sort((a, b) => a.id - b.id);\n          }\n        });\n        console.log(filters);\n        setFilters(filters);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"filters-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Filters</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  setShowFiltersAddEditModal(true);\n                }}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New filter`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {filters.length > 0 ? (\n            <>\n              <ul class=\"filters-list\">\n                {filters.map((filter) => {\n                  const { id, title, expiresAt, keywords } = filter;\n                  return (\n                    <li key={id}>\n                      <div>\n                        <h2>{title}</h2>\n                        {keywords?.length > 0 && (\n                          <div>\n                            {keywords.map((k) => (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {k.wholeWord ? `“${k.keyword}”` : k.keyword}\n                                </span>{' '}\n                              </>\n                            ))}\n                          </div>\n                        )}\n                        <small class=\"insignificant\">\n                          <ExpiryStatus expiresAt={expiresAt} />\n                        </small>\n                      </div>\n                      <button\n                        type=\"button\"\n                        class=\"plain\"\n                        onClick={() => {\n                          setShowFiltersAddEditModal({\n                            filter,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" size=\"l\" alt=\"Edit filter\" />\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n              {filters.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={filters.length}\n                      one=\"# filter\"\n                      other=\"# filters\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load filters.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No filters yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {!!showFiltersAddEditModal && (\n        <Modal\n          title={t`Add filter`}\n          onClose={() => {\n            setShowFiltersAddEditModal(false);\n          }}\n        >\n          <FiltersAddEdit\n            filter={showFiltersAddEditModal?.filter}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowFiltersAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nlet _id = 1;\nconst incID = () => _id++;\nfunction FiltersAddEdit({ filter, onClose }) {\n  const { _, t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!filter;\n  const { context, expiresAt, id, keywords, title, filterAction } =\n    filter || {};\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const [editKeywords, setEditKeywords] = useState(keywords || []);\n  const keywordsRef = useRef();\n\n  // Hacky way of handling removed keywords for both existing and new ones\n  const [removedKeywordIDs, setRemovedKeywordIDs] = useState([]);\n  const [removedKeyword_IDs, setRemovedKeyword_IDs] = useState([]);\n\n  const filteredEditKeywords = editKeywords.filter(\n    (k) =>\n      !removedKeywordIDs.includes(k.id) && !removedKeyword_IDs.includes(k._id),\n  );\n\n  return (\n    <div class=\"sheet\" id=\"filters-add-edit-modal\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit filter` : t`New filter`}</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const keywordIDs = formData.getAll('keyword_attributes[][id]');\n            const keywordKeywords = formData.getAll(\n              'keyword_attributes[][keyword]',\n            );\n            // const keywordWholeWords = formData.getAll(\n            //   'keyword_attributes[][whole_word]',\n            // );\n            // Not using getAll because it skips the empty checkboxes\n            const keywordWholeWords = [\n              ...keywordsRef.current.querySelectorAll(\n                'input[name=\"keyword_attributes[][whole_word]\"]',\n              ),\n            ].map((i) => i.checked);\n            const keywordsAttributes = keywordKeywords.map((k, i) => ({\n              id: keywordIDs[i] || undefined,\n              keyword: k,\n              wholeWord: keywordWholeWords[i],\n            }));\n            // if (editMode && keywords?.length) {\n            //   // Find which one got deleted and add to keywordsAttributes\n            //   keywords.forEach((k) => {\n            //     if (!keywordsAttributes.find((ka) => ka.id === k.id)) {\n            //       keywordsAttributes.push({\n            //         ...k,\n            //         _destroy: true,\n            //       });\n            //     }\n            //   });\n            // }\n            if (editMode && removedKeywordIDs?.length) {\n              removedKeywordIDs.forEach((id) => {\n                keywordsAttributes.push({\n                  id,\n                  _destroy: true,\n                });\n              });\n            }\n            const context = formData.getAll('context');\n            let expiresIn = formData.get('expires_in');\n            const filterAction = formData.get('filter_action');\n            console.log({\n              title,\n              keywordIDs,\n              keywords: keywordKeywords,\n              wholeWords: keywordWholeWords,\n              keywordsAttributes,\n              context,\n              expiresIn,\n              filterAction,\n            });\n\n            // Required fields\n            if (!title || !context?.length) {\n              return;\n            }\n\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let filterResult;\n\n                if (editMode) {\n                  if (expiresIn === '' || expiresIn === null) {\n                    // No value\n                    // Preserve existing expiry if not specified\n                    // Seconds from now to expiresAtDate\n                    // Other clients don't do this\n                    if (hasExpiry) {\n                      expiresIn = Math.floor(\n                        (expiresAtDate - new Date()) / 1000,\n                      );\n                    } else {\n                      expiresIn = null;\n                    }\n                  } else if (expiresIn === '0' || expiresIn === 0) {\n                    // 0 = Never\n                    expiresIn = null;\n                  } else {\n                    expiresIn = +expiresIn;\n                  }\n                  filterResult = await masto.v2.filters.$select(id).update({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                } else {\n                  expiresIn = +expiresIn || null;\n                  filterResult = await masto.v2.filters.create({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                }\n                console.log({ filterResult });\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  filter: filterResult,\n                });\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit filter`\n                    : t`Unable to create filter`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"filter-form-row\">\n            <label>\n              <b>\n                <Trans>Title</Trans>\n              </b>\n              <input\n                type=\"text\"\n                name=\"title\"\n                defaultValue={title}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n                required\n              />\n            </label>\n          </div>\n          <div class=\"filter-form-keywords\" ref={keywordsRef}>\n            {filteredEditKeywords.length ? (\n              <ul class=\"filter-keywords\">\n                {filteredEditKeywords.map((k) => {\n                  const { id, keyword, wholeWord, _id } = k;\n                  return (\n                    <li key={`${id}-${_id}`}>\n                      <input\n                        type=\"hidden\"\n                        name=\"keyword_attributes[][id]\"\n                        value={id}\n                      />\n                      <input\n                        name=\"keyword_attributes[][keyword]\"\n                        type=\"text\"\n                        defaultValue={keyword}\n                        disabled={uiState === 'loading'}\n                        required\n                        dir=\"auto\"\n                      />\n                      <div class=\"filter-keyword-actions\">\n                        <label>\n                          <input\n                            name=\"keyword_attributes[][whole_word]\"\n                            type=\"checkbox\"\n                            value={id} // Hacky way to map checkbox boolean to the keyword id\n                            defaultChecked={wholeWord}\n                            disabled={uiState === 'loading'}\n                          />{' '}\n                          <Trans>Whole word</Trans>\n                        </label>\n                        <button\n                          type=\"button\"\n                          class=\"light danger small\"\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            if (id) {\n                              removedKeywordIDs.push(id);\n                              setRemovedKeywordIDs([...removedKeywordIDs]);\n                            } else if (_id) {\n                              removedKeyword_IDs.push(_id);\n                              setRemovedKeyword_IDs([...removedKeyword_IDs]);\n                            }\n                          }}\n                        >\n                          <Icon icon=\"x\" alt={t`Remove`} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <div class=\"filter-keywords\">\n                <div class=\"insignificant\">\n                  <Trans>No keywords. Add one.</Trans>\n                </div>\n              </div>\n            )}\n            <footer class=\"filter-keywords-footer\">\n              <button\n                type=\"button\"\n                class=\"light\"\n                onClick={() => {\n                  setEditKeywords([\n                    ...editKeywords,\n                    {\n                      _id: incID(),\n                      keyword: '',\n                      wholeWord: true,\n                    },\n                  ]);\n                  setTimeout(() => {\n                    // Focus last input\n                    const fields =\n                      keywordsRef.current.querySelectorAll(\n                        'input[type=\"text\"]',\n                      );\n                    fields[fields.length - 1]?.focus?.();\n                  }, 10);\n                }}\n              >\n                <Trans>Add keyword</Trans>\n              </button>{' '}\n              {filteredEditKeywords?.length > 1 && (\n                <small class=\"insignificant\">\n                  <Plural\n                    value={filteredEditKeywords.length}\n                    one=\"# keyword\"\n                    other=\"# keywords\"\n                  />\n                </small>\n              )}\n            </footer>\n          </div>\n          <div class=\"filter-form-cols\">\n            <div class=\"filter-form-col\">\n              <div>\n                <b>\n                  <Trans>Filter from…</Trans>\n                </b>\n              </div>\n              {FILTER_CONTEXT.map((ctx) => (\n                <div>\n                  <label\n                    class={\n                      FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx)\n                        ? 'insignificant'\n                        : ''\n                    }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name=\"context\"\n                      value={ctx}\n                      defaultChecked={!!context ? context.includes(ctx) : true}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    {_(FILTER_CONTEXT_LABELS[ctx])}\n                    {FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx) ? '*' : ''}\n                  </label>{' '}\n                </div>\n              ))}\n              <p>\n                <small class=\"insignificant\">\n                  <Trans>* Not implemented yet</Trans>\n                </small>\n              </p>\n            </div>\n            <div class=\"filter-form-col\">\n              {editMode && (\n                <Trans>\n                  Status:{' '}\n                  <b>\n                    <ExpiryStatus expiresAt={expiresAt} showNeverExpires />\n                  </b>\n                </Trans>\n              )}\n              <div>\n                <label for=\"filters-expires_in\">\n                  {editMode ? t`Change expiry` : t`Expiry`}\n                </label>\n                <select\n                  id=\"filters-expires_in\"\n                  name=\"expires_in\"\n                  disabled={uiState === 'loading'}\n                  defaultValue={editMode ? undefined : 0}\n                >\n                  {editMode && <option></option>}\n                  {EXPIRY_DURATIONS.map((v) => (\n                    <option value={v}>\n                      {typeof EXPIRY_DURATIONS_LABELS[v] === 'function'\n                        ? EXPIRY_DURATIONS_LABELS[v]()\n                        : _(EXPIRY_DURATIONS_LABELS[v])}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <p>\n                <Trans>Filtered post will be…</Trans>\n                <br />\n                {getAPIVersions()?.mastodon >= 5 && (\n                  <label class=\"ib\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter_action\"\n                      value=\"blur\"\n                      defaultChecked={filterAction === 'blur'}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    <Trans>obscured (media only)</Trans>\n                  </label>\n                )}{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"warn\"\n                    defaultChecked={\n                      (filterAction !== 'hide' && filterAction !== 'blur') ||\n                      !editMode\n                    }\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>minimized</Trans>\n                </label>{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"hide\"\n                    defaultChecked={filterAction === 'hide'}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>hidden</Trans>\n                </label>\n              </p>\n            </div>\n          </div>\n          <footer class=\"filter-form-footer\">\n            <span>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                {editMode ? t`Save` : t`Create`}\n              </button>{' '}\n              <Loader abrupt hidden={uiState !== 'loading'} />\n            </span>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this filter?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await masto.v2.filters.$select(id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'success',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete filter.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  onClick={() => {}}\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ExpiryStatus({ expiresAt, showNeverExpires }) {\n  const { t } = useLingui();\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const expired = hasExpiry && expiresAtDate <= new Date();\n\n  // If less than a minute left, re-render interval every second, else every minute\n  const [_, rerender] = useReducer((c) => c + 1, 0);\n  useInterval(rerender, expired || 30_000);\n\n  return expired ? (\n    t`Expired`\n  ) : hasExpiry ? (\n    <Trans>\n      Expiring <RelativeTime datetime={expiresAtDate} />\n    </Trans>\n  ) : (\n    showNeverExpires && t`Never expires`\n  );\n}\n\nexport default Filters;\n","import { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  useTitle(t`Followed Hashtags`, `/fh`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Followed Hashtags</Trans>\n            </h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" alt=\"#\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={followedHashtags.length}\n                      one=\"# hashtag\"\n                      other=\"# hashtags\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load followed hashtags.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No hashtags followed yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { getStatus, saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  const { t } = useLingui();\n  useTitle(\n    title ||\n      t({\n        id: 'following.title',\n        message: 'Following',\n      }),\n    path || '/following',\n  );\n  const { masto, streaming, instance } = api();\n  const snapStates = useSnapshot(states);\n  const homeIterator = useRef();\n  const latestItem = useRef();\n  __BENCHMARK.end('time-to-following');\n\n  console.debug('RENDER Following', title, id);\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      __BENCHMARK.start('fetch-home-first');\n      homeIterator.current = masto.v1.timelines.home.list({ limit: LIMIT });\n    }\n    if (supportsPixelfed && homeIterator.current?.nextParams) {\n      if (typeof homeIterator.current.nextParams === 'string') {\n        homeIterator.current.nextParams += '&include_reblogs=true';\n      } else {\n        homeIterator.current.nextParams.include_reblogs = true;\n      }\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      assignFollowedTags(value, instance);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        const aDate = new Date(a.createdAt);\n        const bDate = new Date(b.createdAt);\n        return bDate - aDate;\n      });\n    }\n    __BENCHMARK.end('fetch-home-first');\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const opts = {\n        limit: 5,\n        since_id: latestItem.current,\n      };\n      if (supports('@pixelfed/home-include-reblogs')) {\n        opts.include_reblogs = true;\n      }\n      const results = await masto.v1.timelines.home.list(opts).next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streaming) {\n        sub = streaming.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streaming]);\n\n  return (\n    <Timeline\n      title={title || t({ id: 'following.title', message: 'Following' })}\n      id={id || 'following'}\n      emptyText={t`Nothing to see here.`}\n      errorText={t`Unable to load posts.`}\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  const { t } = useLingui();\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const title = instance\n    ? media\n      ? t`${hashtagTitle} (Media only) on ${instance}`\n      : t`${hashtagTitle} on ${instance}`\n    : media\n      ? t`${hashtagTitle} (Media only)`\n      : t`${hashtagTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   });\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media ? true : undefined,\n      })\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media || mediaFirst, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  const [featuredUIState, setFeaturedUIState] = useState('default');\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const [isFeaturedTag, setIsFeaturedTag] = useState(false);\n  useEffect(() => {\n    if (!authenticated) return;\n    (async () => {\n      try {\n        const featuredTags = await masto.v1.featuredTags.list();\n        setFeaturedTags(featuredTags);\n        setIsFeaturedTag(\n          featuredTags.some(\n            (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n          ),\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <Timeline\n      key={instance + hashtagTitle}\n      title={title}\n      titleComponent={\n        !!instance && (\n          <h1 class=\"header-double-lines\">\n            <b dir=\"auto\">{hashtagTitle}</b>\n            <div>{instance}</div>\n          </h1>\n        )\n      }\n      id=\"hashtag\"\n      instance={instance}\n      emptyText={t`No one has posted anything with this tag yet.`}\n      errorText={t`Unable to load posts with this tag`}\n      fetchItems={fetchHashtags}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      refresh={media}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          setDownOverflow\n          overflow=\"auto\"\n          // viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          {!!info && hashtags.length === 1 && (\n            <>\n              <MenuConfirm\n                subMenu\n                confirm={info.following}\n                confirmLabel={t`Unfollow #${hashtag}?`}\n                disabled={followUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFollowUIState('loading');\n                  if (info.following) {\n                    // const yes = confirm(`Unfollow #${hashtag}?`);\n                    // if (!yes) {\n                    //   setFollowUIState('default');\n                    //   return;\n                    // }\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .unfollow()\n                      .then(() => {\n                        setInfo({ ...info, following: false });\n                        showToast(t`Unfollowed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  } else {\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .follow()\n                      .then(() => {\n                        setInfo({ ...info, following: true });\n                        showToast(t`Followed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  }\n                }}\n              >\n                {info.following ? (\n                  <>\n                    <Icon icon=\"check-circle\" />{' '}\n                    <span>\n                      <Trans>Following…</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"plus\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuConfirm>\n              <MenuItem\n                type=\"checkbox\"\n                checked={isFeaturedTag}\n                disabled={featuredUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFeaturedUIState('loading');\n                  if (isFeaturedTag) {\n                    const featuredTagID = featuredTags.find(\n                      (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n                    ).id;\n                    if (featuredTagID) {\n                      masto.v1.featuredTags\n                        .$select(featuredTagID)\n                        .remove()\n                        .then(() => {\n                          setIsFeaturedTag(false);\n                          showToast(t`Unfeatured on profile`);\n                          setFeaturedTags(\n                            featuredTags.filter(\n                              (tag) => tag.id !== featuredTagID,\n                            ),\n                          );\n                        })\n                        .catch((e) => {\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFeaturedUIState('default');\n                        });\n                    } else {\n                      showToast(t`Unable to unfeature on profile`);\n                    }\n                  } else {\n                    masto.v1.featuredTags\n                      .create({\n                        name: hashtag,\n                      })\n                      .then((value) => {\n                        setIsFeaturedTag(true);\n                        showToast(t`Featured on profile`);\n                        setFeaturedTags(featuredTags.concat(value));\n                      })\n                      .catch((e) => {\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFeaturedUIState('default');\n                      });\n                  }\n                }}\n              >\n                {isFeaturedTag ? (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Featured on profile</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Feature on profile</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          {!mediaFirst && (\n            <>\n              <MenuHeader className=\"plain\">\n                <Trans>Filters</Trans>\n              </MenuHeader>\n              <MenuItem\n                type=\"checkbox\"\n                checked={!!media}\n                onClick={() => {\n                  if (media) {\n                    searchParams.delete('media');\n                  } else {\n                    searchParams.set('media', '1');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon icon=\"check-circle\" alt=\"☑️\" />{' '}\n                <span class=\"menu-grow\">\n                  <Trans>Media only</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n            {({ ref }) => (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const newHashtag = e.target[0].value?.trim?.();\n                  // Use includes but need to be case insensitive\n                  if (\n                    newHashtag &&\n                    !hashtags.some(\n                      (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                    )\n                  ) {\n                    hashtags.push(newHashtag);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }\n                }}\n              >\n                <Icon icon=\"hashtag\" />\n                <input\n                  ref={ref}\n                  type=\"text\"\n                  placeholder={\n                    reachLimit\n                      ? plural(TOTAL_TAGS_LIMIT, {\n                          other: 'Max # tags',\n                        })\n                      : t`Add hashtag`\n                  }\n                  required\n                  autocorrect=\"off\"\n                  autocapitalize=\"off\"\n                  spellCheck={false}\n                  // no spaces, no hashtags\n                  pattern=\"[^#][^\\s#]+[^#]\"\n                  disabled={reachLimit}\n                  dir=\"auto\"\n                />\n              </form>\n            )}\n          </FocusableItem>\n          <MenuGroup takeOverflow>\n            {hashtags.map((tag, i) => (\n              <MenuItem\n                key={tag}\n                disabled={hashtags.length === 1}\n                onClick={(e) => {\n                  hashtags.splice(i, 1);\n                  hashtags.sort();\n                  // navigate(\n                  //   instance\n                  //     ? `/${instance}/t/${hashtags.join('+')}`\n                  //     : `/t/${hashtags.join('+')}`,\n                  // );\n                  location.hash = instance\n                    ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                    : `/t/${hashtags.join('+')}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"x\" alt={t`Remove hashtag`} class=\"danger-icon\" />\n                <span class=\"bidi-isolate\">\n                  <span class=\"more-insignificant\">#</span>\n                  {tag}\n                </span>\n              </MenuItem>\n            ))}\n          </MenuGroup>\n          <MenuDivider />\n          <MenuItem\n            disabled={!currentAuthenticated}\n            onClick={() => {\n              if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                alert(\n                  plural(SHORTCUTS_LIMIT, {\n                    one: 'Max # shortcut reached. Unable to add shortcut.',\n                    other: 'Max # shortcuts reached. Unable to add shortcut.',\n                  }),\n                );\n                return;\n              }\n              const shortcut = {\n                type: 'hashtag',\n                hashtag: hashtags.join(' '),\n                instance,\n                media: media ? 'on' : undefined,\n              };\n              // Check if already exists\n              const exists = states.shortcuts.some(\n                (s) =>\n                  s.type === shortcut.type &&\n                  s.hashtag\n                    .split(/[\\s+]+/)\n                    .sort()\n                    .join(' ') ===\n                    shortcut.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') &&\n                  (s.instance ? s.instance === shortcut.instance : true) &&\n                  (s.media ? !!s.media === !!shortcut.media : true),\n              );\n              if (exists) {\n                alert(t`This shortcut already exists`);\n              } else {\n                states.shortcuts.push(shortcut);\n                showToast(t`Hashtag shortcut added`);\n              }\n            }}\n          >\n            <Icon icon=\"shortcut\" />{' '}\n            <span>\n              <Trans>Add to Shortcuts</Trans>\n            </span>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                location.hash = `/${newInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport { getList, getLists } from '../utils/lists';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list.$select(id).list({\n        limit: LIMIT,\n      });\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'home');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    getLists().then(setLists);\n  }, []);\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await getList(id);\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText={t`Nothing yet.`}\n        errorText={t`Unable to load posts.`}\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          // <Link to=\"/l\" class=\"button plain\">\n          //   <Icon icon=\"list\" size=\"l\" />\n          // </Link>\n          <Menu2\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"list\" size=\"l\" alt={t`Lists`} />\n                <Icon icon=\"chevron-down\" size=\"s\" />\n              </button>\n            }\n          >\n            <MenuLink to=\"/l\">\n              <span>\n                <Trans>All Lists</Trans>\n              </span>\n            </MenuLink>\n            {lists?.length > 0 && (\n              <>\n                <MenuDivider />\n                {lists.map((list) => (\n                  <MenuLink key={list.id} to={`/l/${list.id}`}>\n                    <span>{list.title}</span>\n                  </MenuLink>\n                ))}\n              </>\n            )}\n          </Menu2>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>\n                <Trans>Edit</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>\n                <Trans>Manage members</Trans>\n              </span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\nfunction ListManageMembers({ listID, onClose }) {\n  const { t } = useLingui();\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            });\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Manage members</Trans>\n        </h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                <Trans>Show more…</Trans>\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={\n        <span>\n          <Trans>\n            Remove <span class=\"bidi-isolate\">@{account.username}</span> from\n            list?\n          </Trans>\n        </span>\n      }\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? t`Add` : t`Remove…`}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\n\nconst GROUP_TYPES = ['favourite', 'reblog', 'follow'];\nconst groupable = (type) => GROUP_TYPES.includes(type);\n\nexport function fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nexport function massageNotifications2(notifications) {\n  if (notifications?.notificationGroups) {\n    const {\n      accounts = [],\n      notificationGroups = [],\n      statuses = [],\n    } = notifications;\n    return notificationGroups.map((group) => {\n      const { sampleAccountIds, statusId } = group;\n      const sampleAccounts =\n        sampleAccountIds?.map((id) => accounts.find((a) => a.id === id)) || [];\n      const status = statuses?.find((s) => s.id === statusId) || null;\n      return {\n        ...group,\n        sampleAccounts,\n        status,\n      };\n    });\n  }\n  return notifications;\n}\n\nexport function groupNotifications2(groupNotifications) {\n  // Make grouped notifications to look like faux grouped notifications\n  const newGroupNotifications = groupNotifications.map((gn) => {\n    const {\n      latestPageNotificationAt,\n      mostRecentNotificationId,\n      sampleAccounts,\n      notificationsCount,\n    } = gn;\n\n    return {\n      id: '' + mostRecentNotificationId,\n      createdAt: latestPageNotificationAt,\n      account: sampleAccounts[0],\n      ...gn,\n    };\n  });\n\n  // Merge favourited and reblogged of same status into a single notification\n  // - new type: \"favourite+reblog\"\n  // - sum numbers for `notificationsCount` and `sampleAccounts`\n  const notificationsMap = {};\n  const newGroupNotifications1 = [];\n  for (let i = 0; i < newGroupNotifications.length; i++) {\n    const gn = newGroupNotifications[i];\n    const {\n      type,\n      status,\n      createdAt,\n      notificationsCount,\n      sampleAccounts,\n      groupKey,\n    } = gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    // const sameCount =\n    notificationsCount > 0 && notificationsCount === sampleAccounts?.length;\n    // if (sameCount && (type === 'favourite' || type === 'reblog')) {\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    // const key = `${status?.id}-${virtualType}-${date}-${sameCount ? 1 : 0}`;\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      newGroupNotifications1.push(gn);\n    } else if (mappedNotification) {\n      // Merge sampleAccounts + merge _types\n      sampleAccounts.forEach((a) => {\n        const mappedAccount = mappedNotification.sampleAccounts.find(\n          (ma) => ma.id === a.id,\n        );\n        if (!mappedAccount) {\n          mappedNotification.sampleAccounts.push({\n            ...a,\n            _types: [type],\n          });\n        } else {\n          mappedAccount._types.push(type);\n          mappedAccount._types.sort().reverse();\n        }\n      });\n      // mappedNotification.notificationsCount =\n      //   mappedNotification.sampleAccounts.length;\n      mappedNotification.notificationsCount = Math.min(\n        mappedNotification.notificationsCount,\n        notificationsCount,\n      );\n      mappedNotification._notificationsCount.push(notificationsCount);\n      mappedNotification._accounts = mappedNotification.sampleAccounts;\n      mappedNotification._groupKeys.push(groupKey);\n    } else {\n      const accounts = sampleAccounts.map((a) => ({\n        ...a,\n        _types: [type],\n      }));\n      notificationsMap[key] = {\n        ...gn,\n        sampleAccounts: accounts,\n        type: virtualType,\n        _accounts: accounts,\n        _groupKeys: groupKey ? [groupKey] : [],\n        _notificationsCount: [notificationsCount],\n      };\n      newGroupNotifications1.push(notificationsMap[key]);\n    }\n  }\n\n  // 2nd pass.\n  // - Group 1 account favourte/reblog multiple posts\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const newGroupNotifications2 = [];\n  for (let i = 0; i < newGroupNotifications1.length; i++) {\n    const gn = newGroupNotifications1[i];\n    const { type, account, _accounts, sampleAccounts, createdAt, groupKey } =\n      gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    const hasOneAccount =\n      sampleAccounts?.length === 1 || _accounts?.length === 1;\n    if (\n      (type === 'favourite' ||\n        type === 'reblog' ||\n        type === 'favourite+reblog') &&\n      hasOneAccount\n    ) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(gn.status);\n        mappedNotification._ids += `-${gn.id}`;\n        mappedNotification._groupKeys.push(groupKey);\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...gn,\n          type,\n          _ids: gn.id,\n          _statuses: [gn.status],\n          _groupKeys: groupKey ? [groupKey] : [],\n        });\n        newGroupNotifications2.push(n);\n      }\n    } else {\n      newGroupNotifications2.push(gn);\n    }\n  }\n\n  console.log('newGroupNotifications2', newGroupNotifications2);\n\n  return newGroupNotifications2;\n}\n\nexport default function groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification._ids += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification._ids += `-${id}`;\n      }\n    } else {\n      if (account) account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _ids: id,\n        _accounts: account ? [account] : [],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification._ids += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _ids: id,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { fixNotifications } from '../utils/group-notifications';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(type === 'private' ? t`Private mentions` : t`Mentions`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications.list({\n        limit: LIMIT,\n        types: ['mention'],\n      });\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = fixNotifications(value);\n\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        const valueContainsLatestItem =\n          value[0]?.id === latestConversationItem.current; // since_id might not be supported\n        if (value?.length && !valueContainsLatestItem) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          <Trans>All</Trans>\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          <Trans>Private</Trans>\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title={t`Mentions`}\n      id=\"mentions\"\n      emptyText={t`No one mentioned you :(`}\n      errorText={t`Unable to load mentions.`}\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n      filterContext=\"notifications\"\n    />\n  );\n}\n\nexport default Mentions;\n","import './notifications.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport FilterContext from '../utils/filter-context';\nimport groupNotifications, {\n  groupNotifications2,\n  massageNotifications2,\n} from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst NOTIFICATIONS_LIMIT = 80;\nconst NOTIFICATIONS_GROUPED_LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nconst memSupportsGroupedNotifications = mem(\n  () => supports('@mastodon/grouped-notifications'),\n  {\n    maxAge: 1000 * 60 * 5, // 5 minutes\n  },\n);\n\nexport function mastoFetchNotifications(opts = {}) {\n  const { masto } = api();\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    // https://github.com/mastodon/mastodon/pull/29889\n    return masto.v2.notifications.list({\n      limit: NOTIFICATIONS_GROUPED_LIMIT,\n      ...opts,\n    });\n  } else {\n    return masto.v1.notifications.list({\n      limit: NOTIFICATIONS_LIMIT,\n      ...opts,\n    });\n  }\n}\n\nexport function getGroupedNotifications(notifications) {\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    return groupNotifications2(notifications);\n  } else {\n    return groupNotifications(notifications);\n  }\n}\n\nconst NOTIFICATIONS_POLICIES = [\n  'forNotFollowing',\n  'forNotFollowers',\n  'forNewAccounts',\n  'forPrivateMentions',\n  'forLimitedAccounts',\n];\nconst NOTIFICATIONS_POLICIES_TEXT = {\n  forNotFollowing: msg`You don't follow`,\n  forNotFollowers: msg`Who don't follow you`,\n  forNewAccounts: msg`With a new account`,\n  forPrivateMentions: msg`Who unsolicitedly private mention you`,\n  forLimitedAccounts: msg`Who are limited by server moderators`,\n};\n\nfunction Notifications({ columnMode }) {\n  const { _, t } = useLingui();\n  useTitle(t`Notifications`, '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterator.current = mastoFetchNotifications({\n        excludeTypes: ['follow_request'],\n      });\n    }\n    if (/max_id=($|&)/i.test(notificationsIterator.current?.nextParams)) {\n      // Pixelfed returns next paginationed link with empty max_id\n      // I assume, it's done (end of list)\n      return {\n        done: true,\n      };\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      // TEST: Slot in a fake notification to test 'severed_relationships'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'severed_relationships',\n      //   createdAt: '2024-03-22T19:20:08.316Z',\n      //   event: {\n      //     type: 'account_suspension',\n      //     targetName: 'mastodon.dev',\n      //     followersCount: 0,\n      //     followingCount: 0,\n      //   },\n      // });\n\n      // TEST: Slot in a fake notification to test 'moderation_warning'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'moderation_warning',\n      //   createdAt: new Date().toISOString(),\n      //   moderation_warning: {\n      //     id: '1231234',\n      //     action: 'mark_statuses_as_sensitive',\n      //   },\n      // });\n\n      // console.log({ notifications });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = groupedNotifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: groupedNotifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const supportsFilteredNotifications = supports(\n    '@mastodon/filtered-notifications',\n  );\n  const [showNotificationsSettings, setShowNotificationsSettings] =\n    useState(false);\n  const [notificationsPolicy, setNotificationsPolicy] = useState({});\n  function fetchNotificationsPolicy() {\n    return masto.v2.notifications.policy.fetch().catch(() => {});\n  }\n  function loadNotificationsPolicy() {\n    fetchNotificationsPolicy()\n      .then((policy) => {\n        console.log('✨ Notifications policy', policy);\n        setNotificationsPolicy(policy);\n      })\n      .catch(() => {});\n  }\n  const [notificationsRequests, setNotificationsRequests] = useState(null);\n  function fetchNotificationsRequest() {\n    return masto.v1.notifications.requests.list();\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                const aDate = new Date(a.updatedAt || a.createdAt);\n                const bDate = new Date(b.updatedAt || b.createdAt);\n                return bDate - aDate;\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n\n          if (supportsFilteredNotifications) {\n            loadNotificationsPolicy();\n          }\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    let unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n      if (firstLoad.current) {\n        firstLoad.current = false;\n        return;\n      }\n      if (uiState === 'loading') return;\n      if (v) loadUpdates();\n      setShowNew(v);\n    });\n    return () => unsub?.();\n  }, []);\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const [annualReportNotification, setAnnualReportNotification] =\n    useState(null);\n  useEffect(async () => {\n    // Skip this if not in December\n    const date = new Date();\n    if (date.getMonth() !== 11) return;\n\n    // Skip if doesn't support annual report\n    if (!supports('@mastodon/annual-report')) return;\n\n    let annualReportNotification = store.account.get(\n      'annualReportNotification',\n    );\n    if (annualReportNotification) {\n      setAnnualReportNotification(annualReportNotification);\n      return;\n    }\n    const notificationIterator = mastoFetchNotifications({\n      types: ['annual_report'],\n    });\n    try {\n      const notification = await notificationIterator.next();\n      annualReportNotification = notification?.value?.notificationGroups?.[0];\n      const annualReportYear = annualReportNotification?.annualReport?.year;\n      // If same year, show the annual report\n      if (annualReportYear == date.getFullYear()) {\n        console.log(\n          'ANNUAL REPORT',\n          annualReportYear,\n          annualReportNotification,\n        );\n        setAnnualReportNotification(annualReportNotification);\n        store.account.set('annualReportNotification', annualReportNotification);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const oRef = useHotkeys(\n    ['enter', 'o'],\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const statusLink = activeItem?.querySelector('.status-link');\n      if (statusLink) {\n        statusLink.click();\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const today = new Date();\n  const todaySubHeading = useMemo(() => {\n    return niceDateTime(today, {\n      forceOpts: {\n        weekday: 'long',\n      },\n    });\n  }, [today]);\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        oRef.current = node;\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Notifications</Trans>\n            </h1>\n            <div class=\"header-side\">\n              {supportsFilteredNotifications && (\n                <button\n                  type=\"button\"\n                  class=\"button plain4\"\n                  onClick={() => {\n                    setShowNotificationsSettings(true);\n                  }}\n                >\n                  <Icon\n                    icon=\"settings\"\n                    size=\"l\"\n                    alt={t`Notifications settings`}\n                  />\n                </button>\n              )}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> <Trans>New notifications</Trans>\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <Plural\n                      value={announcements.length}\n                      one=\"Announcement\"\n                      other=\"Announcements\"\n                    />{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">\n              <Trans>Follow requests</Trans>\n            </h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>\n                  <Plural\n                    value={followRequests.length}\n                    one=\"# follow request\"\n                    other=\"# follow requests\"\n                  />\n                </summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        {supportsFilteredNotifications &&\n          notificationsPolicy?.summary?.pendingRequestsCount > 0 && (\n            <div class=\"shazam-container\">\n              <div class=\"shazam-container-inner\">\n                <div class=\"filtered-notifications\">\n                  <details\n                    onToggle={async (e) => {\n                      const { open } = e.target;\n                      if (open) {\n                        const requests = await fetchNotificationsRequest();\n                        setNotificationsRequests(requests);\n                        console.log({ open, requests });\n                      }\n                    }}\n                  >\n                    <summary>\n                      <Plural\n                        value={notificationsPolicy.summary.pendingRequestsCount}\n                        one=\"Filtered notifications from # person\"\n                        other=\"Filtered notifications from # people\"\n                      />\n                    </summary>\n                    {!notificationsRequests ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      notificationsRequests?.length > 0 && (\n                        <ul>\n                          {notificationsRequests.map((request) => (\n                            <li key={request.id}>\n                              <div class=\"request-notifcations\">\n                                {!request.lastStatus?.id && (\n                                  <AccountBlock\n                                    useAvatarStatic\n                                    showStats\n                                    account={request.account}\n                                  />\n                                )}\n                                {request.lastStatus?.id && (\n                                  <div class=\"last-post\">\n                                    <Link\n                                      class=\"status-link\"\n                                      to={`/${instance}/s/${request.lastStatus.id}`}\n                                    >\n                                      <Status\n                                        status={request.lastStatus}\n                                        size=\"s\"\n                                        readOnly\n                                      />\n                                    </Link>\n                                  </div>\n                                )}\n                                <NotificationRequestModalButton\n                                  request={request}\n                                />\n                              </div>\n                              <NotificationRequestButtons\n                                request={request}\n                                onChange={() => {\n                                  loadNotifications(true);\n                                }}\n                              />\n                            </li>\n                          ))}\n                        </ul>\n                      )\n                    )}\n                  </details>\n                </div>\n              </div>\n            </div>\n          )}\n        {annualReportNotification && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <Notification notification={annualReportNotification} />\n            </div>\n          </div>\n        )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            <Trans>Only mentions</Trans>\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">\n          <Trans>Today</Trans>{' '}\n          <small class=\"insignificant bidi-isolate\">{todaySubHeading}</small>\n        </h2>\n        {showTodayEmpty && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? t`You're all caught up.` : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <FilterContext.Provider value=\"notifications\">\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? t`Yesterday`\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                const subHeading = niceDateTime(currentDay, {\n                  forceOpts: {\n                    weekday: 'long',\n                  },\n                });\n                return (\n                  <Fragment key={notification._ids || notification.id}>\n                    {differentDay && (\n                      <h2 class=\"timeline-header\">\n                        <span>{heading}</span>{' '}\n                        <small class=\"insignificant bidi-isolate\">\n                          {subHeading}\n                        </small>\n                      </h2>\n                    )}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification._ids || notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </FilterContext.Provider>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load notifications</Trans>\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <Trans>Show more…</Trans>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n      {supportsFilteredNotifications && showNotificationsSettings && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowNotificationsSettings(false);\n            }\n          }}\n        >\n          <div class=\"sheet\" id=\"notifications-settings\" tabIndex=\"-1\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowNotificationsSettings(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Notifications settings</Trans>\n              </h2>\n            </header>\n            <main>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const {\n                    forNotFollowing,\n                    forNotFollowers,\n                    forNewAccounts,\n                    forPrivateMentions,\n                    forLimitedAccounts,\n                  } = e.target;\n                  const newPolicy = {\n                    ...notificationsPolicy,\n                    forNotFollowing: forNotFollowing.value,\n                    forNotFollowers: forNotFollowers.value,\n                    forNewAccounts: forNewAccounts.value,\n                    forPrivateMentions: forPrivateMentions.value,\n                    forLimitedAccounts: forLimitedAccounts.value,\n                  };\n                  setNotificationsPolicy(newPolicy);\n                  setShowNotificationsSettings(false);\n                  (async () => {\n                    try {\n                      await masto.v2.notifications.policy.update(newPolicy);\n                      showToast(t`Notifications settings updated`);\n                    } catch (e) {\n                      console.error(e);\n                    }\n                  })();\n                }}\n              >\n                <p>\n                  <Trans>Filter out notifications from people:</Trans>\n                </p>\n                <div class=\"notification-policy-fields\">\n                  {NOTIFICATIONS_POLICIES.map((key) => {\n                    const value = notificationsPolicy[key];\n                    return (\n                      <div key={key}>\n                        <label>\n                          {_(NOTIFICATIONS_POLICIES_TEXT[key])}\n                          <select name={key} defaultValue={value} class=\"small\">\n                            <option value=\"accept\">\n                              <Trans>Accept</Trans>\n                            </option>\n                            <option value=\"filter\">\n                              <Trans>Filter</Trans>\n                            </option>\n                            <option value=\"drop\">\n                              <Trans>Ignore</Trans>\n                            </option>\n                          </select>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p>\n                  <button type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </p>\n              </form>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              <Trans>\n                Updated{' '}\n                <time datetime={updatedAtDate.toISOString()}>\n                  {niceDateTime(updatedAtDate)}\n                </time>\n              </Trans>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction fetchNotficationsByAccount(accountID) {\n  const { masto } = api();\n  return masto.v1.notifications.list({\n    accountID,\n  });\n}\nfunction NotificationRequestModalButton({ request }) {\n  const { instance } = api();\n  const [uiState, setUIState] = useState('loading');\n  const { account, lastStatus } = request;\n  const [showModal, setShowModal] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  function onClose() {\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    if (!request?.account?.id) return;\n    if (!showModal) return;\n    setUIState('loading');\n    (async () => {\n      const notifs = await fetchNotficationsByAccount(request.account.id);\n      setNotifications(notifs || []);\n      setUIState('default');\n    })();\n  }, [showModal, request?.account?.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        class=\"plain4 request-notifications-account\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      >\n        <Icon icon=\"notification\" class=\"more-insignificant\" />{' '}\n        <small>\n          <Trans>\n            View notifications from{' '}\n            <span class=\"bidi-isolate\">@{account.username}</span>\n          </Trans>\n        </small>{' '}\n        <Icon icon=\"chevron-down\" />\n      </button>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              onClose();\n            }\n          }}\n        >\n          <div class=\"sheet\" tabIndex=\"-1\">\n            <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <b>\n                <Trans>\n                  Notifications from{' '}\n                  <span class=\"bidi-isolate\">@{account.username}</span>\n                </Trans>\n              </b>\n            </header>\n            <main>\n              {uiState === 'loading' ? (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              ) : (\n                notifications.map((notification) => (\n                  <div\n                    class=\"notification-peek\"\n                    onClick={(e) => {\n                      const { target } = e;\n                      // If button or links\n                      if (\n                        e.target.tagName === 'BUTTON' ||\n                        e.target.tagName === 'A'\n                      ) {\n                        onClose();\n                      }\n                    }}\n                  >\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      isStatic\n                    />\n                  </div>\n                ))\n              )}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction NotificationRequestButtons({ request, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, dismiss\n  const hasRequestState = requestState !== null;\n\n  return (\n    <p class=\"notification-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .accept();\n              setRequestState('accept');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'accept',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not be filtered from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to accept notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Allow</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .dismiss();\n              setRequestState('dismiss');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'dismiss',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not show up in Filtered notifications from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to dismiss notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Dismiss</Trans>\n      </button>\n      <span class=\"notification-request-states\">\n        {uiState === 'loading' ? (\n          <Loader abrupt />\n        ) : requestState === 'accept' ? (\n          <Icon\n            icon=\"check-circle\"\n            alt={t`Accepted`}\n            class=\"notification-accepted\"\n          />\n        ) : (\n          requestState === 'dismiss' && (\n            <Icon\n              icon=\"x-circle\"\n              alt={t`Dismissed`}\n              class=\"notification-dismissed\"\n            />\n          )\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default memo(Notifications);\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = isLocal\n    ? t`Local timeline (${instance})`\n    : t`Federated timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      const opts = {\n        limit: LIMIT,\n        local: isLocal || undefined,\n      };\n      if (!isLocal && supports('@pixelfed/global-feed')) {\n        opts.remote = true;\n      }\n      publicIterator.current = masto.v1.timelines.public.list(opts);\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? t`Local timeline` : t`Federated timeline`}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText={t`No one has posted anything yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Federated</Trans>\n                </span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Local</Trans>\n                </span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Search({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  let title = t`Search`;\n  if (q) {\n    switch (type) {\n      case 'statuses':\n        title = t`Search: ${q} (Posts)`;\n        break;\n      case 'accounts':\n        title = t`Search: ${q} (Accounts)`;\n        break;\n      case 'hashtags':\n        title = t`Search: ${q} (Hashtags)`;\n        break;\n      default:\n        title = t`Search: ${q}`;\n    }\n  }\n  useTitle(title, `/search`);\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const typeResults = {\n    statuses: statusResults,\n    accounts: accountResults,\n    hashtags: hashtagResults,\n  };\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.fetch(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            // If first item is the same, it means API doesn't support offset\n            // I know this is a very basic check, but it works for now\n            if (results[type]?.[0]?.id === typeResults[type]?.[0]?.id) {\n              setShowMore(false);\n            } else {\n              setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n              const length = results[type]?.length;\n              offsetRef.current = offsetRef.current + LIMIT;\n              setShowMore(!!length);\n            }\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    let timer;\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      timer = setTimeout(() => {\n        searchFormRef.current?.focus?.();\n      }, 150); // Right after focusDeck runs\n    }\n    return () => clearTimeout(timer);\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n      searchFormRef.current?.select?.();\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n    },\n  );\n\n  const itemsSelector = '.timeline > li > a, .hashtag-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div\n      id=\"search-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n      }}\n    >\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" alt={t`Search`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  <Icon icon=\"chevron-left\" /> <Trans>All</Trans>\n                </Link>\n              )}\n              {[\n                {\n                  label: t`Accounts`,\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: t`Hashtags`,\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: t`Posts`,\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Accounts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            <Trans>See more accounts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No accounts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Hashtags</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" alt=\"#\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            <Trans>See more hashtags</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No hashtags found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Posts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            <Trans>See more posts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No posts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        <Trans>Show more…</Trans>\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">\n                      <Trans>The end.</Trans>\n                    </p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>\n                Enter your search term or paste a URL above to get started.\n              </Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import '../components/links-bar.css';\nimport './trending.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport getDomain from '../utils/get-domain';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst TREND_CACHE_TIME = 10 * 60 * 1000; // 10 minutes\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nconst fetchHashtags = pmem(\n  (masto) => {\n    return masto.v1.trends.tags.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nfunction fetchTrendsStatuses(masto) {\n  if (supports('@pixelfed/trending')) {\n    return masto.pixelfed.v2.discover.posts.trending.list({\n      range: 'daily',\n    });\n  }\n  return masto.v1.trends.statuses.list({\n    limit: LIMIT,\n  });\n}\n\nfunction fetchLinkList(masto, params) {\n  return masto.v1.timelines.link.list(params);\n}\n\nfunction Trending({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = t`Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const sameCurrentInstance = instance === currentInstance;\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n\n  async function fetchTrends(firstLoad) {\n    console.log('fetchTrend', firstLoad);\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = fetchTrendsStatuses(masto);\n\n      // Get hashtags\n      if (supports('@mastodon/trending-hashtags')) {\n        try {\n          // const iterator = masto.v1.trends.tags.list();\n          const { value: tags } = await fetchHashtags(masto);\n          console.log('tags', tags);\n          if (tags?.length) {\n            setHashtags(tags);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Get links\n      if (supports('@mastodon/trending-links')) {\n        try {\n          const { value } = await fetchLinks(masto, instance);\n          // 4 types available: link, photo, video, rich\n          // Only want links for now\n          const links = value?.filter?.((link) => link.type === 'link');\n          console.log('links', links);\n          if (links?.length) {\n            setLinks(links);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  // Link mentions\n  // https://github.com/mastodon/mastodon/pull/30381\n  const [currentLinkMentionsLoading, setCurrentLinkMentionsLoading] =\n    useState(false);\n  const currentLinkMentionsIterator = useRef();\n  const [currentLink, setCurrentLink] = useState(null);\n  const hasCurrentLink = !!currentLink;\n  const currentLinkRef = useRef();\n  const supportsTrendingLinkPosts =\n    sameCurrentInstance && supports('@mastodon/trending-link-posts');\n\n  useEffect(() => {\n    if (currentLink && currentLinkRef.current) {\n      currentLinkRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center',\n      });\n    }\n  }, [currentLink]);\n\n  const prevCurrentLink = useRef();\n  async function fetchLinkMentions(firstLoad) {\n    if (firstLoad || !currentLinkMentionsIterator.current) {\n      setCurrentLinkMentionsLoading(true);\n      currentLinkMentionsIterator.current = fetchLinkList(masto, {\n        url: currentLink,\n      });\n    }\n    prevCurrentLink.current = currentLink;\n    const results = await currentLinkMentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    if (prevCurrentLink.current === currentLink) {\n      setCurrentLinkMentionsLoading(false);\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span dir=\"auto\">\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>\n                <Trans>Trending News</Trans>\n              </h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authors,\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const author = authors?.[0]?.account?.id\n                ? authors[0].account\n                : null;\n              const isShortTitle = title.length < 30;\n              const hasAuthor = !!(authorName || author);\n              const domain = getDomain(url);\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <div key={url}>\n                  <a\n                    ref={currentLink === url ? currentLinkRef : null}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    class={`link-block ${\n                      hasCurrentLink\n                        ? currentLink === url\n                          ? 'active'\n                          : 'inactive'\n                        : ''\n                    }`}\n                    style={\n                      accentColor\n                        ? {\n                            '--accent-color': `rgb(${accentColor.join(',')})`,\n                            '--accent-alpha-color': `rgba(${accentColor.join(\n                              ',',\n                            )}, 0.4)`,\n                          }\n                        : {}\n                    }\n                  >\n                    <article>\n                      <figure>\n                        <img\n                          src={image}\n                          alt={imageDescription}\n                          width={width}\n                          height={height}\n                          loading=\"lazy\"\n                        />\n                      </figure>\n                      <div class=\"article-body\">\n                        <header>\n                          <div class=\"article-meta\">\n                            <span class=\"domain\">{domain}</span>{' '}\n                            {!!publishedAt && <>&middot; </>}\n                            {!!publishedAt && (\n                              <>\n                                <RelativeTime\n                                  datetime={publishedAt}\n                                  format=\"micro\"\n                                />\n                              </>\n                            )}\n                          </div>\n                          {!!title && (\n                            <h1\n                              class=\"title\"\n                              lang={language}\n                              dir=\"auto\"\n                              title={title}\n                            >\n                              {title}\n                            </h1>\n                          )}\n                        </header>\n                        {!!description && (\n                          <p\n                            class={`description ${\n                              hasAuthor && !isShortTitle ? '' : 'more-lines'\n                            }`}\n                            lang={language}\n                            dir=\"auto\"\n                            title={description}\n                          >\n                            {description}\n                          </p>\n                        )}\n                        {hasAuthor && (\n                          <>\n                            <hr />\n                            <p class=\"byline\">\n                              <small>\n                                <Trans comment=\"By [Author]\">\n                                  By{' '}\n                                  {author ? (\n                                    <NameText account={author} showAvatar />\n                                  ) : authorUrl ? (\n                                    <a\n                                      href={authorUrl}\n                                      target=\"_blank\"\n                                      rel=\"noopener\"\n                                    >\n                                      {authorName}\n                                    </a>\n                                  ) : (\n                                    authorName\n                                  )}\n                                </Trans>\n                              </small>\n                            </p>\n                          </>\n                        )}\n                      </div>\n                    </article>\n                  </a>\n                  {supportsTrendingLinkPosts && (\n                    <button\n                      type=\"button\"\n                      class=\"small plain4 block\"\n                      onClick={() => {\n                        setCurrentLink(url);\n                      }}\n                      disabled={url === currentLink}\n                    >\n                      <Icon icon=\"comment2\" />{' '}\n                      <span>\n                        <Trans>Mentions</Trans>\n                      </span>{' '}\n                      <Icon icon=\"chevron-down\" />\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {supportsTrendingLinkPosts && !!links.length && (\n          <div\n            class={`timeline-header-block ${hasCurrentLink ? 'blended' : ''}`}\n          >\n            {hasCurrentLink ? (\n              <>\n                <div style={{ width: 50, flexShrink: 0, textAlign: 'center' }}>\n                  {currentLinkMentionsLoading ? (\n                    <Loader abrupt />\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"light\"\n                      onClick={() => {\n                        setCurrentLink(null);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt={t`Back to showing trending posts`} />\n                    </button>\n                  )}\n                </div>\n                <p>\n                  <Trans>\n                    Showing posts mentioning{' '}\n                    <span class=\"link-text\">\n                      {currentLink\n                        .replace(/^https?:\\/\\/(www\\.)?/i, '')\n                        .replace(/\\/$/, '')}\n                    </span>\n                  </Trans>\n                </p>\n              </>\n            ) : (\n              <p class=\"insignificant\">\n                <Trans>Trending posts</Trans>\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links, currentLink, currentLinkMentionsLoading]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>\n            <Trans>Trending</Trans>\n          </b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText={t`No trending posts.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={hasCurrentLink ? fetchLinkMentions : fetchTrends}\n      checkForUpdates={hasCurrentLink ? undefined : checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      refresh={currentLink}\n      clearWhenRefresh\n      view={hasCurrentLink ? 'link-mentions' : undefined}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { useLingui } from '@lingui/react/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport isRTL from '../utils/is-rtl';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'nearest',\n  behavior: 'smooth',\n};\n\nfunction Columns() {\n  const { t } = useLingui();\n  useTitle(t`Home`, '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    // Don't show List column with no list, for now\n    if (type === 'list' && !params.id) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    try {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      const $column = document.querySelectorAll('#columns > *')[index];\n      if ($column) {\n        $column.focus();\n        $column.scrollIntoView(scrollIntoViewOptions);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  useHotkeys(\n    ['[', ']'],\n    (e, handler) => {\n      const key = handler.keys[0];\n      const currentFocusedColumn =\n        document.activeElement.closest('#columns > *');\n\n      const rtl = isRTL();\n      const prevColKey = rtl ? ']' : '[';\n      const nextColKey = rtl ? '[' : ']';\n      let $column;\n\n      if (key === prevColKey) {\n        // If [, focus on left of focused column, else first column\n        $column = currentFocusedColumn\n          ? currentFocusedColumn.previousElementSibling\n          : document.querySelectorAll('#columns > *')[0];\n      } else if (key === nextColKey) {\n        // If ], focus on right of focused column, else 2nd column\n        $column = currentFocusedColumn\n          ? currentFocusedColumn.nextElementSibling\n          : document.querySelectorAll('#columns > *')[1];\n      }\n      if ($column) {\n        $column.focus();\n        $column.scrollIntoView(scrollIntoViewOptions);\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n      onFocus={() => {\n        // Get current focused column\n        const currentFocusedColumn =\n          document.activeElement.closest('#columns > *');\n        if (currentFocusedColumn) {\n          // Remove focus classes from all columns\n          // Add focus class to current focused column\n          document.querySelectorAll('#columns > *').forEach((column) => {\n            column.classList.toggle('focus', column === currentFocusedColumn);\n          });\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport FilterContext from '../utils/filter-context';\nimport { massageNotifications2 } from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\nimport {\n  getGroupedNotifications,\n  mastoFetchNotifications,\n} from './notifications';\n\nfunction Home() {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  __BENCHMARK.end('time-to-home');\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title={_(msg`Home`)}\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt={t`Notifications`} />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = mastoFetchNotifications();\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      states.notificationsLast = groupedNotifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: groupedNotifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications() {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        const followRequests = await fetchFollowRequests();\n        setHasFollowRequests(!!followRequests?.length);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    if (state === 'open') loadNotifications();\n  }, [state]);\n\n  const menuRef = useRef();\n\n  return (\n    <ControlledMenu\n      ref={menuRef}\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      containerProps={{\n        onClick: () => {\n          menuRef.current?.closeMenu?.();\n        },\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>\n          <Trans>Notifications</Trans>\n        </h2>\n      </header>\n      <FilterContext.Provider value=\"notifications\">\n        <main>\n          {snapStates.notifications.length ? (\n            <>\n              {snapStates.notifications\n                .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n                .map((notification) => (\n                  <Notification\n                    key={notification._ids || notification.id}\n                    instance={instance}\n                    notification={notification}\n                    disableContextMenu\n                  />\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <div class=\"ui-state\">\n              <Loader abrupt />\n            </div>\n          ) : (\n            uiState === 'error' && (\n              <div class=\"ui-state\">\n                <p>\n                  <Trans>Unable to fetch notifications.</Trans>\n                </p>\n                <p>\n                  <button type=\"button\" onClick={loadNotifications}>\n                    <Trans>Try again</Trans>\n                  </button>\n                </p>\n              </div>\n            )\n          )}\n        </main>\n      </FilterContext.Provider>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" />{' '}\n          <span>\n            <Trans>Mentions</Trans>\n          </span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <Trans>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </Trans>\n          ) : (\n            <b>\n              <Trans>See all</Trans>\n            </b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+\\/post\\/([^\\/]+)/i, // Threads\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n  /^\\/p\\/[^\\/]+\\/([^\\/]+)/i, // Pixelfed\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const theURL = URL.parse(url);\n  if (!theURL) return {};\n  const { hostname, pathname } = theURL;\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { Trans } from '@lingui/react/macro';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        if (id) {\n          const { masto } = api({ instance });\n          const status = await masto.v1.statuses.$select(id).fetch();\n          if (status) {\n            window.location.hash = statusURL + '?view=full';\n            return;\n          }\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.fetch({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>\n            <Trans>Resolving…</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>\n            <Trans>Unable to resolve URL</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { fetchLists } from '../utils/lists';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  const { t } = useLingui();\n  useTitle(t`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await fetchLists();\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Lists</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New list`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <span>\n                        <Icon icon=\"list\" /> <span>{list.title}</span>\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural value={lists.length} one=\"# list\" other=\"# lists\" />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load lists.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No lists yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"__VITE_ASSET__Bj_CmqRM__\"","function dec2hex(dec) {\n  return ('0' + dec.toString(16)).slice(-2);\n}\nexport function verifier() {\n  var array = new Uint32Array(56 / 2);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nfunction sha256(plain) {\n  // returns promise ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n}\nfunction base64urlencode(a) {\n  let str = '';\n  const bytes = new Uint8Array(a);\n  const len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    str += String.fromCharCode(bytes[i]);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generateCodeChallenge(v) {\n  const hashed = await sha256(v);\n  return base64urlencode(hashed);\n}\n\n// If /.well-known/oauth-authorization-server exists and code_challenge_methods_supported includes \"S256\", means support PKCE\nexport async function supportsPKCE({ instanceURL }) {\n  if (!instanceURL) return false;\n  try {\n    const res = await fetch(\n      `https://${instanceURL}/.well-known/oauth-authorization-server`,\n    );\n    if (!res.ok || res.status !== 200) return false;\n    const json = await res.json();\n    if (json.code_challenge_methods_supported?.includes('S256')) return true;\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\n// For debugging\nwindow.__generateCodeChallenge = generateCodeChallenge;\n","import { generateCodeChallenge, verifier } from './oauth-pkce';\n\nconst {\n  DEV,\n  PHANPY_CLIENT_NAME: CLIENT_NAME,\n  PHANPY_WEBSITE: WEBSITE,\n} = import.meta.env;\n\nconst SCOPES = 'read write follow push';\n\n/*\n  PHANPY_WEBSITE is set to the default official site.\n  It's used in pre-built releases, so there's no way to change it dynamically\n  without rebuilding.\n  Therefore, we can't use it as redirect_uri.\n  We only use PHANPY_WEBSITE if it's \"same\" as current location URL.\n  \n  Very basic check based on location.hostname for now\n*/\nconst sameSite = WEBSITE\n  ? WEBSITE.toLowerCase().includes(location.hostname)\n  : false;\nconst currentLocation = location.origin + location.pathname;\nconst REDIRECT_URI = DEV || !sameSite ? currentLocation : WEBSITE;\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: REDIRECT_URI,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getPKCEAuthorizationURL({ instanceURL, client_id }) {\n  const codeVerifier = verifier();\n  const codeChallenge = await generateCodeChallenge(codeVerifier);\n  const params = new URLSearchParams({\n    client_id,\n    code_challenge_method: 'S256',\n    code_challenge: codeChallenge,\n    redirect_uri: REDIRECT_URI,\n    response_type: 'code',\n    scope: SCOPES,\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${params.toString()}`;\n  return [authorizationURL, codeVerifier];\n}\n\nexport async function getAuthorizationURL({ instanceURL, client_id }) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: REDIRECT_URI,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n  code_verifier,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    redirect_uri: REDIRECT_URI,\n    grant_type: 'authorization_code',\n    code,\n    // scope: SCOPES, // Not needed\n    // client_secret,\n    // code_verifier,\n  });\n  if (client_secret) {\n    params.append('client_secret', client_secret);\n  }\n  if (code_verifier) {\n    params.append('code_verifier', code_verifier);\n  }\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n","import './login.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport Fuse from 'fuse.js';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport {\n  getAuthorizationURL,\n  getPKCEAuthorizationURL,\n  registerApplication,\n} from '../utils/auth';\nimport { supportsPKCE } from '../utils/oauth-pkce';\nimport store from '../utils/store';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  const { t } = useLingui();\n  useTitle(t`Log in`, '/login');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  const searcher = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n        searcher.current = new Fuse(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n\n    (async () => {\n      // WEB_DOMAIN vs LOCAL_DOMAIN negotiation time\n      // https://docs.joinmastodon.org/admin/config/#web_domain\n      try {\n        const res = await fetch(`https://${instanceURL}/.well-known/host-meta`); // returns XML\n        const text = await res.text();\n        // Parse XML\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, 'text/xml');\n        // Get Link[template]\n        const link = xmlDoc.getElementsByTagName('Link')[0];\n        const template = link.getAttribute('template');\n        const url = URL.parse(template);\n        const { host } = url; // host includes the port\n        if (instanceURL !== host) {\n          console.log(`💫 ${instanceURL} -> ${host}`);\n          instanceURL = host;\n        }\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n\n      store.local.set('instanceURL', instanceURL);\n\n      setUIState('loading');\n      try {\n        const { client_id, client_secret, vapid_key } =\n          await registerApplication({\n            instanceURL,\n          });\n\n        const authPKCE = await supportsPKCE({ instanceURL });\n        console.log({ authPKCE });\n        if (authPKCE) {\n          if (client_id && client_secret) {\n            store.sessionCookie.set('clientID', client_id);\n            store.sessionCookie.set('clientSecret', client_secret);\n            store.sessionCookie.set('vapidKey', vapid_key);\n\n            const [url, verifier] = await getPKCEAuthorizationURL({\n              instanceURL,\n              client_id,\n            });\n            store.sessionCookie.set('codeVerifier', verifier);\n            location.href = url;\n          } else {\n            alert(t`Failed to register application`);\n          }\n        } else {\n          if (client_id && client_secret) {\n            store.sessionCookie.set('clientID', client_id);\n            store.sessionCookie.set('clientSecret', client_secret);\n            store.sessionCookie.set('vapidKey', vapid_key);\n\n            location.href = await getAuthorizationURL({\n              instanceURL,\n              client_id,\n            });\n          } else {\n            alert(t`Failed to register application`);\n          }\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? searcher.current\n        ?.search(cleanInstanceText, {\n          limit: 10,\n        })\n        ?.map((match) => match.item)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n      ? instancesSuggestions[0]\n      : instanceText\n        ? instancesList.find((instance) => instance.includes(instanceText))\n        : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          <Trans>Log in</Trans>\n        </h1>\n        <label>\n          <p>\n            <Trans>Instance</Trans>\n          </p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder={t`instance domain`}\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n            dir=\"auto\"\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">\n              <Trans>e.g. &ldquo;mastodon.social&rdquo;</Trans>\n            </div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            <Trans>\n              Failed to log in. Please try again or try another instance.\n            </Trans>\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? t`Continue with ${selectedInstanceText}`\n              : t`Continue`}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              <Trans>Don't have an account? Create one!</Trans>\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">\n            <Trans>Go home</Trans>\n          </Link>\n        </p>\n        <LangSelector />\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import './scheduled-posts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useMemo, useReducer, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport ScheduledAtField, {\n  getLocalTimezoneName,\n} from '../components/ScheduledAtField';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 40;\n\nexport default function ScheduledPosts() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  useTitle(t`Scheduled Posts`, '/sp');\n  const { masto } = api();\n  const [scheduledPosts, setScheduledPosts] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [showScheduledPostModal, setShowScheduledPostModal] = useState(false);\n\n  useEffect(reload, [snapStates.reloadScheduledPosts]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const postsIterator = masto.v1.scheduledStatuses.list({ limit: LIMIT });\n        const allPosts = [];\n        let posts;\n        do {\n          const result = await postsIterator.next();\n          posts = result.value;\n          if (posts?.length) {\n            allPosts.push(...posts);\n          }\n        } while (posts?.length);\n        setScheduledPosts(allPosts);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      } finally {\n        setUIState('default');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"scheduled-posts-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Scheduled Posts</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <Menu2\n                portal\n                setDownOverflow\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                position=\"anchor\"\n                menuButton={\n                  <button type=\"button\" class=\"plain\">\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                }\n              >\n                <MenuItem\n                  onClick={() => {\n                    reload();\n                  }}\n                >\n                  <Icon icon=\"refresh\" size=\"l\" />\n                  <span>\n                    <Trans>Refresh</Trans>\n                  </span>\n                </MenuItem>\n              </Menu2>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!scheduledPosts.length ? (\n            <p class=\"ui-state\">\n              {uiState === 'loading' ? <Loader /> : t`No scheduled posts.`}\n            </p>\n          ) : (\n            <ul class=\"posts-list\">\n              {scheduledPosts.map((post) => {\n                const { id, params, scheduledAt, mediaAttachments } = post;\n                const {\n                  inReplyToId,\n                  language,\n                  poll,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                } = params;\n                const status = {\n                  // account: account.info,\n                  id,\n                  inReplyToId,\n                  language,\n                  mediaAttachments,\n                  poll: poll\n                    ? {\n                        ...poll,\n                        expiresAt: new Date(Date.now() + poll.expiresIn * 1000),\n                        options: poll.options.map((option) => ({\n                          title: option,\n                          votesCount: 0,\n                        })),\n                      }\n                    : undefined,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                  content: `<p>${text}</p>`,\n                  // createdAt: scheduledAt,\n                };\n\n                return (\n                  <li key={id}>\n                    <ScheduledPostPreview\n                      status={status}\n                      scheduledAt={scheduledAt}\n                      onClick={() => {\n                        setShowScheduledPostModal({\n                          post: status,\n                          scheduledAt: new Date(scheduledAt),\n                        });\n                      }}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {showScheduledPostModal && (\n            <Modal\n              onClick={(e) => {\n                if (e.target === e.currentTarget) {\n                  setShowScheduledPostModal(false);\n                }\n              }}\n            >\n              <ScheduledPostEdit\n                post={showScheduledPostModal.post}\n                scheduledAt={showScheduledPostModal.scheduledAt}\n                onClose={() => setShowScheduledPostModal(false)}\n              />\n            </Modal>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction ScheduledPostPreview({ status, scheduledAt, onClick }) {\n  // Look at scheduledAt, if it's months away, ICON = 'month'. If it's days away, ICON = 'day', else ICON = 'time'\n  const icon = useMemo(() => {\n    const hours =\n      (new Date(scheduledAt).getTime() - Date.now()) / (1000 * 60 * 60);\n    if (hours < 24) {\n      return 'time';\n    } else if (hours < 720) {\n      // 30 days\n      return 'day';\n    } else {\n      return 'month';\n    }\n  }, [scheduledAt]);\n\n  return (\n    <button type=\"button\" class=\"textual block\" onClick={onClick}>\n      <div class={`post-schedule-meta post-schedule-${icon}`}>\n        <Icon icon={icon} class=\"insignificant\" />{' '}\n        <span>\n          <Trans comment=\"Scheduled [in 1 day] ([Thu, Feb 27, 6:30:00 PM])\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>{' '}\n            <small>\n              (\n              {niceDateTime(scheduledAt, {\n                formatOpts: {\n                  weekday: 'short',\n                  second: 'numeric',\n                },\n              })}\n              )\n            </small>\n          </Trans>\n        </span>\n      </div>\n      <Status status={status} size=\"s\" previewMode readOnly />\n    </button>\n  );\n}\n\nfunction ScheduledPostEdit({ post, scheduledAt, onClose }) {\n  const { masto } = api();\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const [newScheduledAt, setNewScheduledAt] = useState();\n  const differentScheduledAt =\n    newScheduledAt && newScheduledAt.getTime() !== scheduledAt.getTime();\n  const localTZ = getLocalTimezoneName();\n  const pastSchedule = scheduledAt && scheduledAt <= Date.now();\n\n  const { inReplyToId } = post;\n  const [replyToStatus, setReplyToStatus] = useState(null);\n  // TODO: Uncomment this once https://github.com/mastodon/mastodon/issues/34000 is fixed\n  // useEffect(() => {\n  //   if (inReplyToId) {\n  //     (async () => {\n  //       try {\n  //         const status = await masto.v1.statuses.$select(inReplyToId).fetch();\n  //         setReplyToStatus(status);\n  //       } catch (e) {\n  //         console.error(e);\n  //       }\n  //     })();\n  //   }\n  // }, [inReplyToId]);\n\n  return (\n    <div id=\"scheduled-post-sheet\" class=\"sheet\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" size=\"l\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>\n          <Trans comment=\"Scheduled [in 1 day]\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>\n          </Trans>\n          <br />\n          <small>\n            {niceDateTime(scheduledAt, {\n              formatOpts: {\n                weekday: 'short',\n                second: 'numeric',\n              },\n            })}\n          </small>\n        </h2>\n      </header>\n      <main tabIndex=\"-1\">\n        {!!replyToStatus && (\n          <div class=\"status-reply\">\n            <Status status={replyToStatus} size=\"s\" previewMode readOnly />\n          </div>\n        )}\n        <Status\n          status={post}\n          size=\"s\"\n          previewMode\n          readOnly\n          onMediaClick={(e, i, media, status) => {\n            e.preventDefault();\n            states.showMediaModal = {\n              mediaAttachments: post.mediaAttachments,\n              mediaIndex: i,\n            };\n          }}\n        />\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.scheduledStatuses.$select(post.id).update({\n                  scheduledAt: newScheduledAt.toISOString(),\n                });\n                showToast(t`Scheduled post rescheduled`);\n                onClose();\n                setUIState('default');\n                states.reloadScheduledPosts++;\n              } catch (e) {\n                setUIState('error');\n                console.error(e);\n                showToast(t`Failed to reschedule post`);\n              }\n            })();\n          }}\n        >\n          <footer>\n            <div class=\"row\">\n              <span>\n                <ScheduledAtField\n                  scheduledAt={scheduledAt}\n                  setScheduledAt={(date) => {\n                    setNewScheduledAt(date);\n                  }}\n                />{' '}\n                <small class=\"ib\">{localTZ}</small>\n              </span>\n            </div>\n            <div class=\"row\">\n              <button\n                disabled={\n                  !differentScheduledAt || uiState === 'loading' || pastSchedule\n                }\n              >\n                <Trans>Reschedule</Trans>\n              </button>\n              <span class=\"grow\" />\n              <MenuConfirm\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete scheduled post?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await api()\n                        .masto.v1.scheduledStatuses.$select(post.id)\n                        .remove();\n                      showToast(t`Scheduled post deleted`);\n                      onClose();\n                      setUIState('default');\n                      states.reloadScheduledPosts++;\n                    } catch (e) {\n                      setUIState('error');\n                      console.error(e);\n                      showToast(t`Failed to delete scheduled post`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading' || pastSchedule}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            </div>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n","import './status.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nfunction StatusPage(params) {\n  const { t } = useLingui();\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? snapStates.statuses[statusKey(mediaStatusID, instance)]?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const handleMediaClose = useCallback(() => {\n    if (\n      !window.matchMedia('(min-width: calc(40em + 350px))').matches &&\n      snapStates.prevLocation\n    ) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  useEffect(() => {\n    const $deckContainers = document.querySelectorAll('.deck-container');\n    $deckContainers.forEach(($deckContainer) => {\n      $deckContainer.setAttribute('inert', '');\n    });\n    return () => {\n      $deckContainers.forEach(($deckContainer) => {\n        $deckContainer.removeAttribute('inert');\n      });\n    };\n  }, []);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <StatusThread\n          id={id}\n          instance={params.instance}\n          closeLink={closeLink}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\n// oldest first\nfunction createdAtSort(a, b) {\n  return new Date(b.created_at) - new Date(a.created_at);\n}\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors, descendants } = context;\n\n        ancestors.sort(createdAtSort);\n        descendants.sort(createdAtSort);\n\n        totalDescendants.current = descendants?.length || 0;\n\n        const missingStatuses = new Set();\n        ancestors.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n          if (\n            status.inReplyToId &&\n            !ancestors.find((s) => s.id === status.inReplyToId)\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n        });\n        const ancestorsIsThread = ancestors.every(\n          (s) => s.account.id === heroStatus.account.id,\n        );\n        const nestedDescendants = [];\n        descendants.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n\n          if (\n            status.inReplyToId &&\n            !descendants.find((s) => s.id === status.inReplyToId) &&\n            status.inReplyToId !== heroStatus.id\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n\n          if (status.inReplyToAccountId === status.account.id) {\n            // If replying to self, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else if (status.inReplyToId === heroStatus.id) {\n            // If replying to the hero status, it's a reply, level 1\n            nestedDescendants.push(status);\n          } else if (\n            !status.inReplyToAccountId &&\n            nestedDescendants.find(\n              (s) =>\n                s.id === status.inReplyToId &&\n                s.account.id === heroStatus.account.id,\n            ) &&\n            status.account.id === heroStatus.account.id\n          ) {\n            // If replying to hero's own statuses, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else {\n            // If replying to someone else, it's a reply to a reply, level 2\n            const parent = descendants.find((s) => s.id === status.inReplyToId);\n            if (parent) {\n              if (!parent.__replies) {\n                parent.__replies = [];\n              }\n              parent.__replies.push(status);\n            } else {\n              // If no parent, something is wrong\n              console.warn('No parent found for', status);\n            }\n          }\n        });\n\n        // sort hero author to top\n        nestedDescendants.sort((a, b) => {\n          const heroAccountID = heroStatus.account.id;\n          if (a.account.id === heroAccountID && b.account.id !== heroAccountID)\n            return -1;\n          if (b.account.id === heroAccountID && a.account.id !== heroAccountID)\n            return 1;\n          return 0;\n        });\n\n        console.log({ ancestors, descendants, nestedDescendants });\n        if (missingStatuses.size) {\n          console.error('Missing statuses', [...missingStatuses]);\n        }\n\n        let descendantLevelsCount = 1;\n        function expandReplies(_replies, level) {\n          const nextLevel = level + 1;\n          if (nextLevel > descendantLevelsCount) {\n            descendantLevelsCount = level;\n          }\n          return _replies?.map((_r) => ({\n            id: _r.id,\n            account: _r.account,\n            repliesCount: _r.repliesCount,\n            content: _r.content,\n            weight: calcStatusWeight(_r),\n            level: nextLevel,\n            replies: expandReplies(_r.__replies, nextLevel),\n          }));\n        }\n\n        const allStatuses = [\n          ...ancestors.map((s) => ({\n            id: s.id,\n            ancestor: true,\n            isThread: ancestorsIsThread,\n            accountID: s.account.id,\n            account: s.account,\n            repliesCount: s.repliesCount,\n            weight: calcStatusWeight(s),\n          })),\n          {\n            id,\n            accountID: heroStatus.account.id,\n            weight: calcStatusWeight(heroStatus),\n          },\n          ...nestedDescendants.map((s) => ({\n            id: s.id,\n            account: s.account,\n            accountID: s.account.id,\n            descendant: true,\n            thread: s.account.id === heroStatus.account.id,\n            weight: calcStatusWeight(s),\n            level: 1,\n            replies: expandReplies(s.__replies, 1),\n          })),\n        ];\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        // const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        const heroLimit = ancestors.length || 0; // 0-indexed\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        console.log({ allStatuses, descendantLevelsCount });\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : t({\n          id: 'post.title',\n          message: 'Post',\n        }),\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return URL.parse(url)?.hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys('backspace', () => {\n    location.hash = closeLink;\n  });\n\n  useHotkeys(\n    'j',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      const activeStatusRect = activeStatus?.getBoundingClientRect();\n      const allStatusLinks = Array.from(\n        scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n      );\n      console.log({ allStatusLinks });\n      if (\n        activeStatus &&\n        activeStatusRect.top < scrollableRef.current.clientHeight &&\n        activeStatusRect.bottom > 0\n      ) {\n        const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n        let nextStatus = allStatusLinks[activeStatusIndex + 1];\n        if (nextStatus) {\n          nextStatus.focus();\n          nextStatus.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostStatusLink = allStatusLinks.find((statusLink) => {\n          const statusLinkRect = statusLink.getBoundingClientRect();\n          return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostStatusLink) {\n          topmostStatusLink.focus();\n          topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  useHotkeys(\n    'k',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      const activeStatusRect = activeStatus?.getBoundingClientRect();\n      const allStatusLinks = Array.from(\n        scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n      );\n      if (\n        activeStatus &&\n        activeStatusRect.top < scrollableRef.current.clientHeight &&\n        activeStatusRect.bottom > 0\n      ) {\n        const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n        let prevStatus = allStatusLinks[activeStatusIndex - 1];\n        if (prevStatus) {\n          prevStatus.focus();\n          prevStatus.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostStatusLink = allStatusLinks.find((statusLink) => {\n          const statusLinkRect = statusLink.getBoundingClientRect();\n          return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostStatusLink) {\n          topmostStatusLink.focus();\n          topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys(\n    'x',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      if (activeStatus) {\n        const details = activeStatus.nextElementSibling;\n        if (details && details.tagName.toLowerCase() === 'details') {\n          details.open = !details.open;\n        }\n      }\n    },\n    {\n      useKey: true,\n    },\n  );\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n        level,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    <Trans>\n                      You're not logged in. Interactions (reply, boost, etc) are\n                      not possible.\n                    </Trans>\n                  </p>\n                  <Link\n                    to={\n                      DEFAULT_INSTANCE\n                        ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                        : '/login'\n                    }\n                    class=\"button\"\n                  >\n                    <Trans>Log in</Trans>\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      <Trans>\n                        This post is from another instance (<b>{instance}</b>).\n                        Interactions (reply, boost, etc) are not possible.\n                      </Trans>\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.fetch({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert(t`Error: ${e}`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" />{' '}\n                      <Trans>\n                        Switch to my instance to enable interactions\n                      </Trans>\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={level}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                <Trans>Unable to load replies.</Trans>\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  const statusesList = useMemo(\n    () => statuses.slice(0, limit).map(renderStatus),\n    [statuses, limit, renderStatus],\n  );\n\n  // If there's spoiler in hero status, auto-expand it\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (!heroStatusRef.current) return;\n      const spoilerButton = heroStatusRef.current.querySelector(\n        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n      );\n      if (spoilerButton) spoilerButton.click();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      ref={scrollableRef}\n      class={`status-deck deck contained ${\n        statuses.length > 1 ? 'padded-bottom' : ''\n      } ${\n        initialPageState.current === 'status' && !firstLoad.current\n          ? 'slide-in'\n          : ''\n      } ${viewMode ? `deck-view-${viewMode}` : ''}`}\n      onAnimationEnd={(e) => {\n        // Fix the bounce effect when switching viewMode\n        // `slide-in` animation kicks in when switching viewMode\n        if (initialPageState.current === 'status') {\n          // e.target.classList.remove('slide-in');\n          initialPageState.current = null;\n        }\n      }}\n    >\n      <header\n        class={`${uiState === 'loading' ? 'loading' : ''}`}\n        onDblClick={(e) => {\n          // reload statuses\n          states.reloadStatusPage++;\n        }}\n      >\n        {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n        <div class=\"header-grid header-grid-2\">\n          <h1>\n            {prevLocationIsStatusPage && (\n              <button\n                type=\"button\"\n                class=\"plain deck-back\"\n                onClick={() => {\n                  history.back();\n                }}\n              >\n                <Icon icon=\"chevron-left\" size=\"xl\" alt={t`Back`} />\n              </button>\n            )}\n            {!heroInView && heroStatus && uiState !== 'loading' ? (\n              <>\n                <span class=\"hero-heading\">\n                  <NameText\n                    account={heroStatus.account}\n                    instance={instance}\n                    showAvatar\n                    short\n                  />{' '}\n                  <span class=\"insignificant\">\n                    &bull;{' '}\n                    <RelativeTime\n                      datetime={heroStatus.createdAt}\n                      format=\"micro\"\n                    />\n                  </span>\n                </span>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    heroStatusRef.current.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start',\n                    });\n                  }}\n                  title={t`Go to main post`}\n                >\n                  <Icon\n                    icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                  />\n                </button>\n              </>\n            ) : (\n              <>\n                <Trans id=\"post.title\">Post</Trans>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    // Scroll to top\n                    e.preventDefault();\n                    e.stopPropagation();\n                    scrollableRef.current.scrollTo({\n                      top: 0,\n                      behavior: 'smooth',\n                    });\n                  }}\n                  hidden={!ancestors.length || reachTopPost}\n                  title={t`${ancestors.length} posts above ‒ Go to top`}\n                >\n                  <Icon icon=\"arrow-up\" />\n                  {ancestors\n                    .filter(\n                      (a, i, arr) =>\n                        arr.findIndex((b) => b.accountID === a.accountID) === i,\n                    )\n                    .slice(0, 3)\n                    .map((ancestor) => (\n                      <Avatar\n                        key={ancestor.account.id}\n                        url={ancestor.account.avatar}\n                        alt={ancestor.account.displayName}\n                      />\n                    ))}\n                  {/* <Icon icon=\"comment\" />{' '} */}\n                  {ancestors.length > 3 && (\n                    <>\n                      {' '}\n                      <span class=\"insignificant\">\n                        {shortenNumber(ancestors.length)}\n                      </span>\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n          </h1>\n          <div class=\"header-side\">\n            <button\n              type=\"button\"\n              class=\"plain4 button-switch-view\"\n              style={{\n                display: viewMode === 'full' ? '' : 'none',\n              }}\n              onClick={() => {\n                setViewMode(null);\n                searchParams.delete('media');\n                searchParams.delete('media-only');\n                searchParams.delete('view');\n                setSearchParams(searchParams);\n              }}\n              title={t`Switch to Side Peek view`}\n            >\n              <Icon icon=\"layout4\" size=\"l\" />\n            </button>\n            {showRefresh && (\n              <button\n                type=\"button\"\n                class=\"plain button-refresh\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                  setShowRefresh(false);\n                }}\n              >\n                <Icon icon=\"refresh\" size=\"l\" alt={t`Refresh`} />\n              </button>\n            )}\n            <Menu2\n              align=\"end\"\n              portal={{\n                // Need this, else the menu click will cause scroll jump\n                target: scrollableRef.current,\n              }}\n              menuButton={\n                <button type=\"button\" class=\"button plain4\">\n                  <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n                </button>\n              }\n            >\n              <MenuItem\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Icon icon=\"refresh\" />\n                <span>\n                  <Trans>Refresh</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                className=\"menu-switch-view\"\n                onClick={() => {\n                  setViewMode(viewMode === 'full' ? null : 'full');\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  if (viewMode === 'full') {\n                    searchParams.delete('view');\n                  } else {\n                    searchParams.set('view', 'full');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon\n                  icon={\n                    {\n                      '': 'layout5',\n                      full: 'layout4',\n                    }[viewMode || '']\n                  }\n                />\n                <span>\n                  {viewMode === 'full'\n                    ? t`Switch to Side Peek view`\n                    : t`Switch to Full view`}\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  // Click all buttons with class .spoiler but not .spoiling\n                  const buttons = Array.from(\n                    scrollableRef.current.querySelectorAll(\n                      '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                    ),\n                  );\n                  buttons.forEach((button) => {\n                    button.click();\n                  });\n                }}\n              >\n                <Icon icon=\"eye-open\" />{' '}\n                <span>\n                  <Trans>Show all sensitive content</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n              <MenuHeader className=\"plain\">\n                <Trans>Experimental</Trans>\n              </MenuHeader>\n              <MenuItem\n                disabled={!postInstance || postSameInstance}\n                onClick={() => {\n                  const statusURL = getInstanceStatusURL(heroStatus.url);\n                  if (statusURL) {\n                    location.hash = statusURL;\n                  } else {\n                    alert(t`Unable to switch`);\n                  }\n                }}\n              >\n                <Icon icon=\"transfer\" />\n                <small class=\"menu-double-lines\">\n                  {postInstance\n                    ? t`Switch to post's instance (${punycode.toUnicode(\n                        postInstance,\n                      )})`\n                    : t`Switch to post's instance`}\n                </small>\n              </MenuItem>\n            </Menu2>\n            <Link class=\"button plain deck-close\" to={closeLink}>\n              <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n            </Link>\n          </div>\n        </div>\n      </header>\n      {!!statuses.length && heroStatus ? (\n        <ul\n          class={`timeline flat contextual grow ${\n            uiState === 'loading' ? 'loading' : ''\n          }`}\n        >\n          {statusesList}\n          {showMore > 0 && (\n            <li class=\"descendant descendant-more\">\n              <button\n                type=\"button\"\n                class=\"plain block show-more\"\n                disabled={uiState === 'loading'}\n                onClick={() => setLimit((l) => l + LIMIT)}\n                style={{ marginBlockEnd: '6em' }}\n                data-state-post-ids={moreStatusesKeys.join(' ')}\n              >\n                <div class=\"ib avatars-bunch\">\n                  {/* show avatars for first 5 statuses */}\n                  {statuses.slice(limit, limit + 5).map((status) => (\n                    <Avatar\n                      key={status.id}\n                      url={status.account.avatarStatic}\n                      // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                    />\n                  ))}\n                </div>{' '}\n                <div class=\"ib\">\n                  <Trans>Show more…</Trans>{' '}\n                  <span class=\"tag\">\n                    {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                  </span>\n                </div>\n              </button>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <>\n          {uiState === 'loading' && (\n            <ul class=\"timeline flat contextual grow loading\">\n              <li>\n                <Status skeleton size=\"l\" />\n              </li>\n            </ul>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              <Trans>Unable to load post</Trans>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      // NOTE: this scrollLeft works for RTL too\n      // Browsers do the magic for us\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // If not open, delay render replies\n  const [renderReplies, setRenderReplies] = useState(openBefore || open);\n  useEffect(() => {\n    let timer;\n    if (!openBefore && !open) {\n      timer = setTimeout(() => setRenderReplies(true), 100);\n    }\n    return () => clearTimeout(timer);\n  }, [openBefore, open]);\n\n  const Container = open ? 'div' : 'details';\n  const isDetails = Container === 'details';\n\n  return (\n    <Container\n      ref={detailsRef}\n      class=\"replies\"\n      open={isDetails ? openBefore || open : undefined}\n      onToggle={\n        isDetails\n          ? (e) => {\n              const { open } = e.target;\n              // use first reply as ID\n              cachedRepliesToggle[replies[0].id] = open;\n            }\n          : undefined\n      }\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      {!open && (\n        <summary class=\"replies-summary\" hidden={open}>\n          <span class=\"avatars\">\n            {accounts.map((a) => (\n              <Avatar\n                key={a.id}\n                url={a.avatarStatic}\n                title={`${a.displayName} @${a.username}`}\n                squircle={a?.bot}\n              />\n            ))}\n          </span>\n          <span class=\"replies-counts\">\n            <b>\n              <Plural\n                value={replies.length}\n                one=\"# reply\"\n                other={\n                  <Trans>\n                    <span title={replies.length}>\n                      {shortenNumber(replies.length)}\n                    </span>{' '}\n                    replies\n                  </Trans>\n                }\n              />\n            </b>\n            {!sameCount && totalComments > 1 && (\n              <>\n                {' '}\n                &middot;{' '}\n                <span>\n                  <Plural\n                    value={totalComments}\n                    one=\"# comment\"\n                    other={\n                      <Trans>\n                        <span title={totalComments}>\n                          {shortenNumber(totalComments)}\n                        </span>{' '}\n                        comments\n                      </Trans>\n                    }\n                  />\n                </span>\n              </>\n            )}\n          </span>\n          <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n          {!!parentLink && (\n            <Link\n              class=\"replies-parent-link\"\n              to={parentLink.to}\n              onClick={parentLink.onClick}\n              title={t`View post with its replies`}\n            >\n              &raquo;\n            </Link>\n          )}\n        </summary>\n      )}\n      {renderReplies && (\n        <ul>\n          {replies.map((r) => (\n            <li key={r.id}>\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n              <div class=\"status-focus\" tabIndex={0}>\n                <Status\n                  statusID={r.id}\n                  instance={instance}\n                  withinContext\n                  size=\"s\"\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  showActionsBar\n                />\n                {!r.replies?.length && r.repliesCount > 0 && (\n                  <div class=\"replies-link\">\n                    <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                    <span title={r.repliesCount}>\n                      {shortenNumber(r.repliesCount)}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {/* </Link> */}\n              {r.replies?.length && (\n                <SubComments\n                  instance={instance}\n                  replies={r.replies}\n                  level={r.level}\n                  accWeight={!open ? r.weight : totalWeight}\n                  openAll={openAll}\n                  parentLink={{\n                    to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                    onClick: () => {\n                      resetScrollPosition(r.id);\n                    },\n                  }}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__BbkKeAoc__\"","export default \"__VITE_ASSET__C$apFnmr__\"","export default \"__VITE_ASSET__MUCjVR2Z__\"","export default \"__VITE_ASSET__Pb$jWfr9__\"","export default \"__VITE_ASSET__DJIucEyS__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logoText from '../assets/logo-text.svg';\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  const { t } = useLingui();\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">\n            <Trans>A minimalistic opinionated Mastodon web client.</Trans>\n          </p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? t`Log in` : t`Log in with Mastodon`}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                <Trans>Sign up</Trans>\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                <Trans>\n                  Connect your existing Mastodon/Fediverse account.\n                  <br />\n                  Your credentials are not stored on this server.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <Trans>\n            <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n              Built\n            </a>{' '}\n            by{' '}\n            <a\n              href=\"https://mastodon.social/@cheeaun\"\n              target=\"_blank\"\n              onClick={(e) => {\n                e.preventDefault();\n                states.showAccount = 'cheeaun@mastodon.social';\n              }}\n            >\n              @cheeaun\n            </a>\n            .{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n              Privacy Policy\n            </a>\n            .\n          </Trans>\n        </p>\n        <div>\n          <LangSelector />\n        </div>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt={t`Screenshot of Boosts Carousel`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Boosts Carousel</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Visually separate original posts and re-shared posts (boosted\n                posts).\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt={t`Screenshot of nested comments thread`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Nested comments thread</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Effortlessly follow conversations. Semi-collapsible replies.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt={t`Screenshot of grouped notifications`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Grouped notifications</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Similar notifications are grouped and collapsed to reduce\n                clutter.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt={t`Screenshot of multi-column UI`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Single or multi-column</Trans>\n            </h4>\n            <p>\n              <Trans>\n                By default, single column for zen-mode seekers. Configurable\n                multi-column for power users.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt={t`Screenshot of multi-hashtag timeline with a form to add more hashtags`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Multi-hashtag timeline</Trans>\n            </h4>\n            <p>\n              <Trans>Up to 5 hashtags combined into a single timeline.</Trans>\n            </p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport { useLingui } from '@lingui/react';\nimport debounce from 'just-debounce-it';\nimport { memo } from 'preact/compat';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\n\nimport 'swiped-events';\n\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\nimport Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport AnnualReport from './pages/annual-report';\nimport Bookmarks from './pages/bookmarks';\nimport Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport Filters from './pages/filters';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport ScheduledPosts from './pages/scheduled-posts';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  hasInstance,\n  hasPreferences,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport {\n  getAccount,\n  getCurrentAccount,\n  setCurrentAccountID,\n} from './utils/store-utils';\n\nimport './utils/toast-alert';\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(\n  () => {\n    if (!window.__IDLE__) return;\n    const { statuses, unfurledLinks, notifications } = states;\n    let keysCount = 0;\n    const { instance } = api();\n    for (const key in statuses) {\n      if (!window.__IDLE__) break;\n      try {\n        const $post = document.querySelector(\n          `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n        );\n        const postInNotifications = notifications.some(\n          (n) => key === statusKey(n.status?.id, instance),\n        );\n        if (!$post && !postInNotifications) {\n          delete states.statuses[key];\n          delete states.statusQuotes[key];\n          for (const link in unfurledLinks) {\n            const unfurled = unfurledLinks[link];\n            const sKey = statusKey(unfurled.id, unfurled.instance);\n            if (sKey === key) {\n              delete states.unfurledLinks[link];\n              break;\n            }\n          }\n          keysCount++;\n        }\n      } catch (e) {}\n    }\n    if (keysCount) {\n      console.info(`GC: Removed ${keysCount} keys`);\n    }\n  },\n  15 * 60 * 1000,\n);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    setTimeout(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else if (typeof ICONS[icon] === 'object') {\n        ICONS[icon].module?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    }, 1);\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      // Don't reset theme color if media modal is showing\n      // Media modal will set its own theme color based on the media's color\n      const showingMediaModal =\n        document.getElementsByClassName('media-modal-container').length > 0;\n      if (showingMediaModal) return;\n\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'dark light');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nconst BENCHES = new Map();\nwindow.__BENCH_RESULTS = new Map();\nwindow.__BENCHMARK = {\n  start(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    // If already started, ignore\n    if (BENCHES.has(name)) return;\n    const start = performance.now();\n    BENCHES.set(name, start);\n  },\n  end(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    const start = BENCHES.get(name);\n    if (start) {\n      const end = performance.now();\n      const duration = end - start;\n      __BENCH_RESULTS.set(name, duration);\n      BENCHES.delete(name);\n    }\n  },\n};\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n  __BENCHMARK.start('app-init');\n  __BENCHMARK.start('time-to-following');\n  __BENCHMARK.start('time-to-home');\n  __BENCHMARK.start('time-to-isLoggedIn');\n  useLingui();\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const clientID = store.sessionCookie.get('clientID');\n      const clientSecret = store.sessionCookie.get('clientSecret');\n      const vapidKey = store.sessionCookie.get('vapidKey');\n      const verifier = store.sessionCookie.get('codeVerifier');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n          code_verifier: verifier || undefined,\n        });\n\n        if (accessToken) {\n          const client = initClient({ instance: instanceURL, accessToken });\n          await Promise.allSettled([\n            initPreferences(client),\n            initInstance(client, instanceURL),\n            initAccount(client, instanceURL, accessToken, vapidKey),\n          ]);\n          initStates();\n          window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n\n          setIsLoggedIn(true);\n          setUIState('default');\n        } else {\n          setUIState('error');\n        }\n        __BENCHMARK.end('app-init');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const searchAccount = decodeURIComponent(\n        (window.location.search.match(/account=([^&]+)/) || [, ''])[1],\n      );\n      let account;\n      if (searchAccount) {\n        account = getAccount(searchAccount);\n        console.log('searchAccount', searchAccount, account);\n        if (account) {\n          setCurrentAccountID(account.info.id);\n          window.history.replaceState(\n            {},\n            document.title,\n            window.location.pathname || '/',\n          );\n        }\n      }\n      if (!account) {\n        account = getCurrentAccount();\n      }\n      if (account) {\n        setCurrentAccountID(account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        setUIState('loading');\n        (async () => {\n          try {\n            if (hasPreferences() && hasInstance(instance)) {\n              // Non-blocking\n              initPreferences(client);\n              initInstance(client, instance);\n            } else {\n              await Promise.allSettled([\n                initPreferences(client),\n                initInstance(client, instance),\n              ]);\n            }\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n            __BENCHMARK.end('app-init');\n          }\n        })();\n      } else {\n        setUIState('default');\n        __BENCHMARK.end('app-init');\n      }\n    }\n\n    // Cleanup\n    store.sessionCookie.del('clientID');\n    store.sessionCookie.del('clientSecret');\n    store.sessionCookie.del('codeVerifier');\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  if (uiState === 'loading') {\n    return <Loader id=\"loader-root\" />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      <Routes>\n        <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n      </Routes>\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Modals />\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      <SearchCommand onClose={focusDeck} />\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction Root({ isLoggedIn }) {\n  if (isLoggedIn) {\n    __BENCHMARK.end('time-to-isLoggedIn');\n  }\n  return isLoggedIn ? <Home /> : <Welcome />;\n}\n\nconst PrimaryRoutes = memo(({ isLoggedIn }) => {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route path=\"/\" element={<Root isLoggedIn={isLoggedIn} />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n    </Routes>\n  );\n});\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/fh\" element={<FollowedHashtags />} />\n          <Route path=\"/sp\" element={<ScheduledPosts />} />\n          <Route path=\"/ft\" element={<Filters />} />\n          <Route path=\"/catchup\" element={<Catchup />} />\n          <Route path=\"/annual_report/:year\" element={<AnnualReport />} />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\nimport './cloak-mode.css';\nimport './polyfills';\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\n// import '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\nimport { initActivateLang } from './utils/lang';\n\ninitActivateLang();\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\nrender(\n  <I18nProvider i18n={i18n}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </I18nProvider>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\n// Service worker cache cleanup\nif ('serviceWorker' in navigator && typeof caches !== 'undefined') {\n  const MAX_SW_CACHE_SIZE = 50;\n  const IGNORE_CACHE_KEYS = ['icons'];\n  let clearRanOnce = false;\n  const FAST_INTERVAL = 10_000; // 10 seconds\n  const SLOW_INTERVAL = 60 * 60 * 1000; // 1 hour\n  async function clearCaches() {\n    if (window.__IDLE__) {\n      try {\n        const keys = await caches.keys();\n        for (const key of keys) {\n          if (IGNORE_CACHE_KEYS.includes(key)) continue;\n          const cache = await caches.open(key);\n          const _keys = await cache.keys();\n          if (_keys.length > MAX_SW_CACHE_SIZE) {\n            console.warn('Cleaning cache', key, _keys.length);\n            const deleteKeys = _keys.slice(MAX_SW_CACHE_SIZE);\n            for (const deleteKey of deleteKeys) {\n              await cache.delete(deleteKey);\n            }\n          }\n        }\n        clearRanOnce = true;\n      } catch (e) {} // Silent fail\n    }\n    // Once cleared, clear again at slower interval\n    setTimeout(clearCaches, clearRanOnce ? SLOW_INTERVAL : FAST_INTERVAL);\n  }\n  setTimeout(clearCaches, FAST_INTERVAL);\n}\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","t","_useLingui","visible","setVisible","useState","visibleTimeout","clearTimeout","setTimeout","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","streamTimeout","pollNotifications","streaming","api","hasStreaming","user","notification","subscribe","log","entry","_a","checkForUpdates","clearInterval","r","info","useInterval","lastCheckDate","useHotkeys","currentCloakMode","diff","showToast","_t","settings","fetchLatestPostsMemoized","pmem","currentAccountID","statusesIterator","accounts","$select","statuses","exclude_replies","exclude_reblogs","maxAge","ComposeButton","snapStates","useSnapshot","menuOpen","setMenuOpen","latestPosts","setLatestPosts","loadingPosts","setLoadingPosts","buttonRef","menuRef","handleButton","composerState","minimized","openOSK","shiftKey","openCompose","showCompose","ignoreEventWhen","querySelector","useKey","bindLongPress","useLongPress","threshold","fetchLatestPosts","useCallback","getCurrentAccountID","posts","handleReplyToPost","post","replyToStatus","_jsxs","_Fragment","children","_jsx","ref","type","onClick","onContextMenu","preventDefault","class","publishing","publishingError","Icon","icon","size","alt","ControlledMenu","state","undefined","anchorRef","onClose","direction","gap","unmountOnClose","portal","target","body","boundingBoxPadding","safeBoundingBoxPadding","containerProps","style","zIndex","closeMenu","submenuOpenDelay","MenuLink","to","_Trans","MenuDivider","SubMenu2","align","shift","disabled","label","className","map","createdDate","Date","createdAt","isWithinDay","getTime","MenuItem","statusPeek","RelativeTime","datetime","format","dateTime","toISOString","title","toLocaleString","niceDateTime","KeyboardShortcutsHelp","showKeyboardShortcutsHelp","isCatchUpPage","Modal","tabindex","keys","0","action","1","2","parents","coords","siblings","animations","intersections","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","forEach","lowPriority","poll","callback","resize","supportedBrowser","nodes","mutation","node","i","child","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","prev","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","element","useAutoAnimate","controller","setController","setEnabled","isStandalone","matchMedia","matches","Accounts","store","local","getJSON","currentAccount","moreThanOneAccount","_","reload","useReducer","accountsListParent","tabIndex","account","isCurrent","isDefault","Avatar","url","avatarStatic","onDblClick","NameText","test","showAcct","setCurrentAccountID","Menu2","menuButton","location","href","splice","MenuConfirm","subMenu","confirmLabel","menuItemClassName","Link","logo","regionMaps","LangSelector","i18n","useLingui","populatedLocales","useMemo","LOCALES","lang","regionlessCode","replace","native","localeCode2Text","code","locale","fallback","CATALOGS","find","c","nativeName","_common","name","sort","a","b","order","localeCompare","DEFAULT_LANG","onChange","set","common","import","createBackendPushSubscription","subscription","push","create","fetchBackendPushSubscription","updateBackendPushSubscription","update","removeBackendPushSubscription","isPushSupported","navigator","getRegistration","serviceWorker","getSubscription","registration","pushManager","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","sameKey","vapidKey","key2","applicationServerKey","vapidKeyStr","applicationServerKeyStr","updateSubscription","data","policy","removeSubscription","DEFAULT_TEXT_SIZE","TEXT_SIZES","PHANPY_WEBSITE","WEBSITE","PHANPY_PRIVACY_POLICY_URL","PRIVACY_POLICY_URL","PHANPY_TRANSLANG_INSTANCES","TRANSLANG_INSTANCES","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","targetLanguages","Object","languages","tl","TRANSLATION_API_NAME","Settings","currentTheme","get","themeFormRef","targetLanguage","contentTranslationTargetLanguage","systemTargetLanguage","getTranslateTargetLanguage","systemTargetLanguageText","currentTextSize","prefs","setPrefs","authenticated","onInput","formData","theme","documentElement","html","classList","$manualMeta","$autoMetas","querySelectorAll","m","toggle","defaultChecked","fontSize","min","max","step","parseInt","setProperty","rel","for","checked","autoRefresh","boostsCarousel","showCommon","contentTranslationHideLanguages","contentTranslation","composerGIFPicker","mediaAltGenerator","supports","getAPIVersions","groupedNotificationsAlpha","shortcutSettingsCloudImportExport","cloakMode","PushNotificationsSection","display","flexWrap","lineHeight","src","aspectRatio","verticalAlign","borderRadius","readOnly","__BUILD_TIME__","caches","uiState","setUIState","allowNotifications","setAllowNotifications","setNeedRelogin","pushFormRef","needRelogin","alerts","previousPolicyRef","policyEl","namedItem","isLoading","values","mention","favourite","reblog","follow","status","key","alertsCount","allowNotifications2","_t2","permission","components","alert2","alert","focusDeck","timer","columns","getElementById","focusedColumn","focus","firstVisibleColumn","Array","from","column","getBoundingClientRect","modals","modal","modalFocusElement","pages","page","useLocationChange","useLocation","currentLocationRef","pathname","FETCH_MAX_AGE","MAX_AGE","fetchLists","lists","updatedAt","now","getLists","fetchList","getList","theList","getListTitle","addListStore","updateListStore","index","deleteListStore","listID","findIndex","ListAddEdit","editMode","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","onSubmit","FormData","listResult","replies_policy","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","i18nDuration","LIMIT","ACCOUNT_INFO_MAX_AGE","fetchFamiliarFollowers","currentID","familiarFollowers","memFetchFamiliarFollowers","fetchPostingStats","accountID","fetchStatuses","total","originals","replies","stats","boosts","memFetchPostingStats","fetchAccount","standalone","currentAuthenticated","currentMasto","currentInstance","isString","setInfo","sameCurrentInstance","info2","acct","avatar","bot","displayName","emojis","fields","group","lastStatusAt","locked","note","statusesCount","username","memorial","moved","roles","hideCollections","header","headerStatic","headerIsAvatar","isSelf","infoHasEssentials","account2","updated","hostname","accountInstance","setHeaderCornerColors","domain","toUnicode","fetchFollowers","firstLoad","followersIterator","familiarFollowersCache","results","newValue","familiarFollowers2","familiar","followingIterator","LinkOrDiv","accountLink","postingStats","setPostingStats","renderFamiliarFollowers","setFamiliarFollowers","postingStatsUIState","setPostingStatsUIState","hasPostingStats","followers","renderPostingStats","onRelationshipChange","onProfileUpdate","newAccount","isStringURL","headerCornerColors","stopPropagation","onError","ctx","canvas","onLoad","pixelDimension","rgbColors","OffscreenCanvas","createElement","g","imageSmoothingEnabled","drawImage","colors","getImageData","dataLength","lightenRGB","color","AccountBlock","avatarSize","handleWithInstance","clipboard","setShowEditProfile","enhanceContent","verifiedAt","__html","EmojiText","text","blankCopy","follower","followersCount","shortenNumber","fetchFollowing","followingCount","excludeRelationshipAttrs","hideTime","_i18n","daysSinceLastPost","showEditProfile","sameInstance","setRelationshipUIState","relationship","setRelationship","following","showingReblogs","currentInfo","setCurrentInfo","notifying","followedBy","blocking","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","privateNote","acctWithInstance","setIsSelf","q","fetchRelationships","relationships","relationship2","showAddRemoveLists","setShowAddRemoveLists","showPrivateNoteModal","updateAccount","showTranslatedBio","setLists","setShowPrivateNoteModal","lists2","loading","onMenuChange","setShowTranslatedBio","handle","niceAccountURL","newRelationship","counter","duration","error","relationshipUIState","Loader","TranslatedBioSheet","luminence","alpha","AddRemoveListsSheet","urlObj","host","PrivateNoteSheet","fieldsText","getHTMLText","path","_t4","_t3","listsContainingAccount","setListsContainingAccount","reloadCount","listsContainingAccount2","setShowListAddEditModal","inList","showListAddEditModal","accountIds","result","initialNote","_t5","textareaRef","_b","e2","trim","SUPPORTED_IMAGE_FORMATS_STR","SUPPORTED_IMAGE_FORMATS","EditProfileSheet","_t6","setAccount","headerPreview","avatarPreview","setAvatarPreview","source","fieldsAttributesRef","avatarMediaAttachments","headerMediaAttachments","header2","note2","fieldsAttributes","fieldsAttributesFields","field","avatar2","displayName2","match","file","setHeaderPreview","blob","showMediaModal","files","FieldsAttributesRow","hasValue","setHasValue","AccountHandleInfo","server","encodedAcct","dir","AccountSheet","propInstance","AccountInfo","lookup","skip_webfinger","v2","search","resolve","accountURL","URL","parse","Drafts","drafts","setDrafts","db","ns","getCurrentAccountNS","ownKeys","filter","startsWith","getMany","hasDrafts","abrupt","draft","draftStatus","replyTo","updatedAtDate","MiniDraft","spoilerText","mediaAttachments","hasPoll","hasMedia","firstImageMedia","image","objectURL","createObjectURL","hasPollOrMedia","EmbedModal","dangerouslySetInnerHTML","GenericAccounts","postID","isCurrentInstance","setAccounts","showMore","setShowMore","showGenericAccounts","heading","fetchAccounts","staticAccounts","showReactions","relationshipsMap","setRelationshipsMap","loadRelationships","loadAccounts","done","isArray","theAccount","j","_types","newAccounts","reloadGenericAccounts","Status","showStats","InView","MediaAltModal","forceTranslate","setForceTranslate","differentLanguage","localeMatch","l","supportsTTS","speak","whiteSpace","textWrap","TranslationBlock","sourceLanguage","classToType","obj","unpack","keyOrder","k","PI","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","multiplyMatrices","A","B","B_cols","product","row","col","labConstants","compand","linear","sign","xyz2rgb","z","MtxAdaptMa","MtxAdaptMaI","MtxXYZ2RGB","RefWhiteRGB","Xn","Yn","Zn","LAB_CONSTANTS","As","Bs","Cs","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","oklab2rgb","L","rest","X","Y","Z","OKLab_to_XYZ","b_","OKLab","LMStoXYZ","OKLabtoLMS","LMSnl","gammaAdjustSRGB","companded","rgb2xyz","MtxRGB2XYZ","rgb2oklab","xyz","XYZ_to_OKLab","XYZ","XYZtoLMS","LMStoOKLab","LMS","sin","cos","lch2lab","h","oklch2rgb","sqrt","atan2","round","lab2lch","rgb2oklch","MediaModal","statusID","carouselRef","currentIndex","setCurrentIndex","carouselFocusItem","useLayoutEffect","scrollIntoView","prevStatusID","scrollLeft","clientWidth","differentStatusID","scrollTo","isRTL","behavior","showControls","setShowControls","handleSwipe","addEventListener","removeEventListener","handleScroll","Math","abs","passive","mediaOkColors","media","blurhash","averageColor","getBlurHashAverageColor","mediaAccentColors","okColor","light","dark","default","mediaAccentGradients","range","join","lightGradient","darkGradient","toastRef","hideToast","currentColor","$meta","metaColor","mediaColor","colorScheme","content","accentColor","description","showMediaAlt","CATEGORIES","CATEGORIES_INFO","spam","legal","violation","stampLabel","other","excludeStamp","ReportModal","split","rules","currentDomain","getCurrentInstance","selectedCategory","setSelectedCategory","showRules","setShowRules","rulesRef","hasRules","setHasRules","previewMode","useAvatarStatic","showActivity","fromEntries","category","comment","forward","ruleIds","reports","accountId","statusIds","Fragment","rule","required","maxlength","rows","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","res","compressed","uncompressed","buf","TotalLen","current_value","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","getFollowedTags","fauxDiv","extractTagsFromStatus","hashtagLinks","AsyncText","setText","Promise","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","public","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","placeholder","pattern","fetchAccountTitle","SHORTCUTS_META","excludeViewMode","subtitle","query","encodeURIComponent","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","opacity","textTransform","imgURL","multiColumnUrl","shortcutsViewMode","Boolean","shortcut","excludedViewMode","includes","shortcutsArr","temp","shortcutIndex","justifyContent","alignItems","currentTarget","ShortcutForm","mode","ImportExport","FORM_NOTES","currentType","setCurrentType","setFollowedHashtags","form","formRef","switch","followedHashtags","autocorrect","autocapitalize","tag","shortcutsStr","compressToEncodedURIComponent","importShortcutStr","setImportShortcutStr","parsedImportShortcutStr","setImportUIState","parsed","JSON","decompressFromEncodedURIComponent","hasCurrentSettings","shortcutsImportFieldRef","v","dt","s","importUIState","menuFooter","nonUniqueShortcuts","exceededLimit","newShortcuts","writeText","share","settingsJSON","newNote","changes","prevValue","Modals","navigate","useNavigate","preload","ComposeSuspense","__COMPOSE__","editStatus","newStatus","scheduledAt","reloadStatusPage","reloadScheduledPosts","reply","edit","toast","prevLocation","showSettings","showAccounts","showAccount","destination","showDrafts","contains","showShortcutsSettings","showEmbedModal","showReportModal","FollowRequestButtons","requestState","setRequestState","hasRelationship","followRequests","authorize","Error","NOTIFICATION_ICONS","follow_request","severed_relationships","moderation_warning","emoji_reaction","annual_report","emojiText","emoji","emoji_url","staticUrl","emojiObject","CustomEmoji","contentText","count","postsCount","postType","Subject","clickable","3","poll-self","poll-voted","favourite+reblog","admin.sign_up","admin.report","targetAccount","year","SEVERED_RELATIONSHIPS_TEXT","account_suspension","targetName","domain_block","user_domain_block","MODERATION_WARNING_TEXT","none","disable","mark_statuses_as_sensitive","delete_statuses","sensitive","silence","suspend","AVATARS_LIMIT","Notification","isStatic","disableContextMenu","report","annualReport","_ids","_accounts","_statuses","_groupKeys","sampleAccounts","notificationsCount","groupKey","actualStatus","actualStatusID","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","props","handleOpenGenericAccounts","showAvatar","emojiURL","shortcode","formattedCreatedAt","genericAccountsHeading","statusKey","diffCount","expandAccounts","_g","isOwnPost","isFiltered","filtered","type2","gKey","keyAccounts","keyAccount","_accounts2","status2","allowContextMenu","TruncatedLink","dispatchEvent","clientX","clientY","useTruncated","oldProps","newProps","accessToken","NotificationService","routeNotification","showNotificationSheet","notificationAccount","hasAccount","hasModal","hash","warn","id2","setShowNotificationSheet","tagName","instanceURL","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","setQuery","searchFieldRef","useImperativeHandle","setValue","select","blur","autocomplete","spellCheck","onSearch","onFocus","onBlur","onKeyDown","focusItem","nextItem","nextElementSibling","parentElement","firstItem","prevItem","previousElementSibling","lastItem","click","queryType","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enableOnFormTags","Shortcuts","isMultiColumnMode","shortcutsColumnsMode","hasLists","formattedShortcuts","pin","handler","updatesButton","instanceRef","overflow","viewScroll","menuClassName","position","groupBoosts","newValues","boostStash","serialBoosts","item","boostStashID","items","half","floor","slice","dedupeBoosts","boostedStatusIDs","filteredItems","boosterID","groupContext","contexts","contextIndex","repliedItem","self","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","inReplyToIds","contextItems","aDate","bDate","every","it","sKey","statusReply","queueMicrotask","fallbackFetch","fetchStatus","saveStatus","skipThreading","ids","replyToStatuses","assignFollowedTags","statusFollowedTags","statusWithFollowedTags","extractedTags","itemFollowedTags","acc","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","scrollTop","onScroll","scrollHeight","scrollWidth","clientHeight","scrollStart","scrollDimension","clientDimension","scrollDistance","init","Event","useScrollFn","useThrottledCallback","MediaPost","onMediaClick","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","visibility","language","editedAt","card","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","filterInfo","hasSpoiler","readingExpandMedia","mediaKey","toLowerCase","filterTitleStr","Media","showSpoilerMedia","NavMenu","showFollowing","detect","cancelOnMovement","menuState","setMenuState","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","buttonClickTS","squircle","appVersion","commitHash","__COMMIT_HASH__","confirm","ListMenu","supportsLists","scrollIntoViewOptions","block","inline","Timeline","titleComponent","emptyText","errorText","useItemID","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","clearWhenRefresh","setItems","showNew","setShowNew","debug","isMediaFirstInstance","mediaFirst","allowGrouping","loadItemsTS","firstLoad2","loadItems","useDebouncedCallback","ts","otherPosts","pinnedPosts","items2","itemsSelector","jRef","activeItem","closest","activeItemRect","allItems","activeItemIndex","indexOf","itemRect","topmostItem","kRef","findLast","oRef","showNewPostsIndicator","handleLoadNewPosts","dotRef","headerRef","nearReachStart2","hiddenUI","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","visible2","hasUpdate","lastHiddenTime","TimelineItem","skeleton","inView","fItems","filteredItemsIDs","aFiltered","bFiltered","isCarousel","unfiltered","filteredItems2","has","StatusCarousel","_pinned2","_grouped","item2","statusID3","_pinned3","actualStatusID3","reblog3","statusID2","actualStatusID2","reblog2","url2","showCompact","_differentAuthor","isSpoiler","manyItems","isMiddle","isStart","isEnd","TimelineStatusCompact","itemKey","enableCommentHint","startButtonRef","oldID","toString","setRender","render","endButtonRef","statusPeekText","statusThreadNumber","titlesStr","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","setAttribute","_isSearchEnabled","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","searchOffsetRef","searchEnabled","setSearchEnabled","isValidMonth","_year","_month","monthIndex","after","afterStr","before","beforeStr","searchResults","value2","offset","pinnedStatuses","pinnedStatusesIds","postId","containsAllPinned","setFeaturedTags","acctDisplay","accountDisplay","monthYear","fetchAccount2","memFetchAccount","featuredTags2","useTitle","cachedAccount","featuredTags","filterBarRef","TimelineStart","month2","date","validity","MonthPicker","active","allowSwitch","offsetLeft","fetchAccountStatuses","masto2","monthFieldRef","yearFieldRef","checkValidity","minYear","minMonth","maxYear","maxMonth","AnnualReport","setResults","annualReports","report2","datePlaceholder","Bookmarks","bookmarksIterator","fetchBookmarks","catchupUrl","FILTER_CONTEXT","RANGES","FILTER_KEYS","original","groups","FILTER_SORTS","FILTER_GROUPS","DTF","mem","Intl","DateTimeFormat","day","hour","minute","Catchup","dtf","showTopLinks","setShowTopLinks","supportsPixelfed","fetchHome","maxCreatedAt","maxCreatedAtDate","allResults","mainloop","homeIterator","nextParams","createdAtDate","selfPost","addedResults","catchupRangeRef","catchupLastRef","handleCatchupClick","catchupID","catchup","setPosts","reloadCatchups","setLastCatchupEndAt","prevCatchups","setPrevCatchups","lastCatchupEndAt","catchups","ownCatchups","trimmedCatchups","lastCatchups","restCatchups","endAt","startAt","reloadCatchupsCount","_filtered","_followedTags","_f","thePost","__FILTER","links","sharers","links2","link","topLinks","shared","linksLoop","likes","filteredPosts","authors","authorCounts","selectedFilterCategory","filteredPosts2","setSelectedAuthor","sortBy","authorsHash","setSortOrder","authorCountsMap","postFilterMatches","boostedPosts","__BOOSTERS","selectedAuthor","filteredPostsMap","authorID","authorCountsList","sortedFilteredPosts","aAccountID","authorIndices","bAccountID","aIndex","bIndex","postDensity","bDensity","aDensity","sortOrder","groupBy","prevGroup","authorsListParent","autoAnimated","isFiltered2","postsBar","postsBarType","posts2","postsBins","binByTime","lastCatchupRange","sortOrderIndex","authorElement","scrollableRect","authorRect","right","showHelp","setShowHelp","hlRef","_2","escRef","handleArrowKeys","isRadio","activeElement","isArrowKeys","setRange","pc","st","yes","del","setSelectedFilterCategory","setSortBy","formatRange","setGroupBy","transform","imageDescription","publishedAt","labAverageColor","filterCounts","author","paddingInline","showSeparator","IntersectionPostLineItem","isFollowedTags","PostLine","isReplyTo","show","setShow","IntersectionObserver","unobserve","MEDIA_DENSITY","CARD_DENSITY","pollContent","cur","htmlContentLength","PostPeek","density","_thread","readingExpandSpoilers","showMedia","showPostContent","isThread","emojifyText","o","multiple","remoteMediaURL","_h","_j","_i","mediaURL","MEDIA_SIZE","previewUrl","gifv","video","audio","PostStats","numBins","dates","minDate","maxDate","bins","normalized","binIndex","Favourites","favouritesIterator","fetchFavourites","FILTER_CONTEXT_UNIMPLEMENTED","FILTER_CONTEXT_LABELS","home","thread","EXPIRY_DURATIONS","EXPIRY_DURATIONS_LABELS","Filters","showFiltersAddEditModal","setShowFiltersAddEditModal","filters","setFilters","keywords","expiresAt","keyword","ExpiryStatus","_id","incID","FiltersAddEdit","filterAction","hasExpiry","expiresAtDate","editKeywords","setEditKeywords","keywordsRef","setRemovedKeyword_IDs","filteredEditKeywords","setRemovedKeywordIDs","removedKeyword_IDs","title2","keywordIDs","getAll","keywordKeywords","keywordWholeWords","wholeWord","removedKeywordIDs","keywordsAttributes","context2","expiresIn","filterResult","filterAction2","_id2","showNeverExpires","expired","rerender","FollowedHashtags","Following","latestItem","__BENCHMARK","latestItemChanged","clearFollowedTagsState","opts","payload","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","columnMode","hashtags","linkParams","hashtagTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","valueContainsLatestItem","followUIState","setFollowUIState","reachLimit","featuredUIState","setFeaturedUIState","isFeaturedTag","setIsFeaturedTag","finally","featuredTagID","catch","MenuHeader","delete","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","setList","showManageMembersModal","setShowManageMembersModal","list2","setDownOverflow","ListManageMembers","MEMBERS_LIMIT","members","setMembers","membersIterator","fetchMembers","member","as","RemoveAddButton","removed","setRemoved","notificationTypeKeys","GROUP_TYPES","groupable","fixNotifications","massageNotifications2","notificationGroups","sampleAccountIds","statusId","groupNotifications2","groupNotifications","newGroupNotifications","gn","latestPageNotificationAt","mostRecentNotificationId","newGroupNotifications1","notificationsMap","virtualType","mappedNotification","ma","mappedAccount","newGroupNotifications2","notificationsMap2","hasOneAccount","toLocaleDateString","n","cleanNotifications","cleanNotifications2","emptySearchParams","URLSearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","NOTIFICATIONS_LIMIT","NOTIFICATIONS_GROUPED_LIMIT","memSupportsGroupedNotifications","mastoFetchNotifications","getGroupedNotifications","NOTIFICATIONS_POLICIES","NOTIFICATIONS_POLICIES_TEXT","forNotFollowing","forNotFollowers","forNewAccounts","forPrivateMentions","forLimitedAccounts","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","excludeTypes","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","supportsFilteredNotifications","showNotificationsSettings","setNotificationsPolicy","fetchNotificationsPolicy","loadNotificationsPolicy","notificationsRequests","setNotificationsRequests","fetchNotificationsRequest","loadNotifications","fetchNotificationsPromise","fetchNotifications","loadUpdates","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","setAnnualReportNotification","annualReportNotification2","annualReportYear","getFullYear","statusLink","today","todaySubHeading","forceOpts","setShowNotificationsSettings","announcement","notificationsPolicy","open","onToggle","request","pendingRequestsCount","NotificationRequestModalButton","NotificationRequestButtons","annualReportNotification","differentDay","notificationDay","toDateString","subHeading","newPolicy","AnnouncementBlock","contact","contactAccount","startsAt","endsAt","published","allDay","reactions","publishedAtDate","read","publishedDateText","updatedAtText","reaction","me","fetchNotficationsByAccount","showModal","setShowModal","notifs","setNotifications","hasRequestState","Public","isLocal","publicIterator","fetchPublic","remote","prompt","SHORT_LIMIT","Search","offsetRef","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","typeResults","setTypeResultsFunc","loadResults","_c","_e","_d","filterBarParent","history","reduce","TREND_CACHE_TIME","fetchLinks","trends","fetchTrendsStatuses","pixelfed","discover","fetchLinkList","Trending","setHashtags","setLinks","trendIterator","fetchTrends","currentLinkMentionsLoading","setCurrentLinkMentionsLoading","currentLinkMentionsIterator","currentLink","setCurrentLink","supportsTrendingLinkPosts","currentLinkRef","hasCurrentLink","fetchLinkMentions","prevCurrentLink","authorUrl","authorName","providerName","providerUrl","isShortTitle","hasAuthor","flexShrink","textAlign","Columns","Hashtag","Component","$column","currentFocusedColumn","prevColKey","nextColKey","Home","NotificationsLink","notificationLinkRef","NotificationsMenu","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","Provider","statusPostRegexes","getInstanceStatusObject","theURL","regex","getInstanceStatusURL","HttpRoute","statusObject","statusURL","Lists","instancesListURL","dec2hex","dec","verifier","array","Uint32Array","crypto","getRandomValues","sha256","plain","TextEncoder","encode","subtle","digest","base64urlencode","bytes","len","byteLength","String","fromCharCode","btoa","generateCodeChallenge","hashed","supportsPKCE","ok","json","code_challenge_methods_supported","__generateCodeChallenge","DEV","PHANPY_CLIENT_NAME","CLIENT_NAME","SCOPES","sameSite","currentLocation","origin","REDIRECT_URI","registerApplication","registrationParams","client_name","redirect_uris","scopes","website","method","headers","getPKCEAuthorizationURL","registrationJSON","client_id","codeChallenge","code_challenge_method","code_challenge","authorizationParams","scope","authorizationURL","client_secret","code_verifier","append","PHANPY_DEFAULT_INSTANCE","DEFAULT_INSTANCE","Login","instanceURLRef","cachedInstanceURL","submit","instanceText","setInstanceText","instancesList","setInstancesList","searcher","Fuse","submitInstance","xmlDoc","parseFromString","template","vapid_key","authPKCE","sessionCookie","getAuthorizationURL","cleanInstanceText","instanceTextLooksLikeDomain","instancesSuggestions","instance2","selectedInstanceText","ScheduledPosts","scheduledPosts","setScheduledPosts","showScheduledPostModal","setShowScheduledPostModal","postsIterator","scheduledStatuses","allPosts","option","votesCount","ScheduledPostPreview","ScheduledPostEdit","hours","weekday","setNewScheduledAt","differentScheduledAt","newScheduledAt","localTZ","pastSchedule","ScheduledAtField","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaIndex","mediaStatusID","mediaStatus","getStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","matchStatusPath","matchPath","handleMediaClose","$carousel","$deckContainers","$deckContainer","StatusParent","linkable","restProps","createdAtSort","StatusThread","navigation","translate","setStatuses","heroStatusRef","totalDescendants","scrollOffsets","lastInitContextTS","reloadHero","heroTimer","cachedStatuses","reallyCachedStatuses","heroFetch","pRetry","contextFetch","hasStatus","heroStatus2","_replies","level","nextLevel","descendantLevelsCount","expandReplies","_r","weight","descendants","ancestors2","ancestors","missingStatuses","ancestorsIsThread","nestedDescendants","__replies","heroAccountID","ancestor","threadifyStatus","offsetTop","heroLimit","setLimit","showRefresh","setShowRefresh","allStatuses","scrollPosition","initContext","interval","newScrollOffsets","contextURL","newScrollTop","statusWeightCache","heroContentText","apiCache","heroDisplayName","postInstance","hasDescendants","div","innerHTML","activeStatusRect","activeStatus","postSameInstance","nextStatus","allStatusLinks","activeStatusIndex","some","heroPointer","topmostStatusLink","heroInView","prevStatus","details","statusLinkRect","reachTopPost","setReachTopPost","initialPageState","handleMediaClick","renderStatus","descendant","isHero","requestAnimationFrame","setHeroInView","handleStatusLinkClick","isLinkable","SubComments","enableTranslate","onStatusLinkClick","showActionsBar","prevLocationIsStatusPage","prevEntry","hasParentThread","openAll","getIDs","statusesList","spoilerButton","viewMode","moreStatusesKeys","onAnimationEnd","back","arr","setViewMode","button","full","buttons","accWeight","parentLink","diveDeep","replies2","replies3","totalComments","sameCount","totalWeight","calcStatusWeight","openBefore","detailsRef","renderReplies","Container","isDetails","shortReply","open2","dataset","setRenderReplies","MEDIA_VIRTUAL_LENGTH","CARD_VIRTUAL_LENGTH","cachedWeight","mediaLength","pollLength","POLL_VIRTUAL_LENGTH","cardLength","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL","DEFAULT_INSTANCE_REGISTRATION_URL","appSite","Welcome","marginBlockEnd","nativeAlert","__nativeAlert","Toastify","gravity","__STATES__","__STATES_STATS__","counts","unmountedPosts","setInterval","unfurledLinks","postInNotifications","$post","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","isIOS","tempColor","themeDarkColor","textSize","$app","BENCHES","setIsLoggedIn","decodeURIComponent","clientSecret","clientID","initStates","searchAccount","getAccount","client","hasPreferences","hasInstance","initPreferences","initInstance","PrimaryRoutes","Routes","Route","Root","nonRootLocation","getPrevLocation","SecondaryRoutes","backgroundLocation","isModalPage","initActivateLang","I18nProvider","HashRouter","App","localStorage","removeItem","sessionStorage","IGNORE_CACHE_KEYS","clearRanOnce","FAST_INTERVAL","SLOW_INTERVAL","clearCaches","cache","_keys","MAX_SW_CACHE_SIZE","deleteKeys"],"mappings":"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","x_google_ignoreList":[0,1,6,7,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39]}