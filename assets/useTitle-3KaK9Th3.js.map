{"version":3,"mappings":"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","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getAccountByInstance","instance","instanceURL","getCurrentAccount","window","__IGNORE_GET_ACCOUNT_ERROR__","currentAccount","account","getCurrentAccountNS","saveAccount","acc","updateAccount","accountInfo","displayName","currentInstance","getCurrentInstance","instances","e","location","getInstanceConfiguration","configuration","maxMediaAttachments","maxTootChars","pleroma","pollLimits","statuses","polls","maxCharactersPerOption","maxExpiration","getCurrentInstanceConfiguration","get","key","localStorage","getItem","console","JSON","value","set","setJSON","warn","session","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","toLowerCase","url","client","masto","createRestAPIClient","timeout","initInstance","uri","streamingApi","urls","domain","streaming","streamClient","createStreamingAPIClient","implementation","initAccount","vapidKey","mastoAccount","initPreferences","preferences","accountID","authenticated","_b","_c","instanceAccount","_e","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","isMastodonLinkMaybe","pathname","hash","URL","_moize","moize","mem","fn","opts","maxSize","isDeepEqual","pmem","isPromise","rateLimit","interval","queue","isRunning","executeNext","length","shift","args","callFn","apply","push","throttle","pThrottle","limit","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapStates","snapshot","states","RegExp","unfurledLinks","Promise","resolve","debug","remoteInstanceFetch","theURL","urlAfterHash","urlObj","hostname","statusRegex","path","statusMatch","masto2","status","mastoSearchFetch","q","type","results","then","handleFulfill","result","selfURL","instance2","saveStatus","reject","handleCatch","finalPromise","unfurlMastodonLink","proxy","appVersion","prevLocation","currentLocation","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","reloadGenericAccounts","counter","spoilers","spoilersMedia","scrollPositions","statusQuotes","statusFollowedTags","statusReply","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","showKeyboardShortcutsHelp","showGenericAccounts","showMediaAlt","showEmbedModal","showReportModal","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","shortcutSettingsCloudImportExport","mediaAltGenerator","cloakMode","states$1","initStates","subscribeKey","v","subscribe","changes","prevValue","statusKey","getStatus","statusID","skipThreading","skipUnfurling","override","oldStatus","deepEqual","_pinned","srKey","sKey","threadifyStatus","unfurlStatus","_threadifyStatus","propInstance","api","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","fauxDiv","content","document","i","splice","useInterval","deps","immediate","savedCallback","useRef","useEffect","current","setInterval","tick","clearInterval","openCompose","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","alert","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","comment2","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","more2","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","unpin","bus","link","history","share","sparkles","sparkles2","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","speak","building","arrows-right","SIZES","s","m","l","xl","xxl","ICONDATA","SVGICon","body","rotate","flip","_jsx","viewBox","dangerouslySetInnerHTML","__html","style","transform","isShallowEqual","Object","keys","matchesArg","cacheKeyArg","keyArg","icon","Icon","size","alt","title","class","iconSize","iconBlock","Array","iconData","setIconData","useState","currentIcon","iconB","useCloseWatcher","watcher","CloseWatcher","addEventListener","destroy","useCloseWatcher$1","$modalContainer","getElementById","Modal","children","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","supportsCloseWatcher","escRef","useHotkeys","enabled","keydown","keyup","ref","node","target","currentTarget","tabIndex","onFocus","isFocusable","getComputedStyle","pointerEvents","Loader","abrupt","hidden","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","Avatar","squircle","avatarRef","isMissing","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","queueMicrotask","drawImage","allPixels","getImageData","hasAlpha","pixel","classList","add","clearRect","Link","forwardRef","routerLocation","useLocation","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","encodeURIComponent","join","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","root","documentElement","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","requestAnimationFrame","safeBoundingBoxPadding","paddings","CSS","supports","passive","Menu2","containerProps","instanceRef","_instanceRef","useWindowSize","Menu","boundingBoxPadding","repositionFlag","unmountOnClose","closeMenu","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","menuRef","_jsxs","openTrigger","direction","overflow","gap","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","EmojiText","emojis","indexOf","regex","shortcode","elements","split","word","emoji","staticUrl","srcset","EmojiText$1","memo","oldProps","newProps","nameCollator","Intl","Collator","sensitivity","NameText","showAvatar","showAcct","short","acct","avatar","avatarStatic","username","_","acct1","acct2","match","trimmedUsername","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","compare","preventDefault","_Fragment","newAccount","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","DateTimeFormat","RelativeTime","datetime","format","date","useMemo","dateStr","now","diff","year","twitter","toDate","fromNow","dt","toISOString","_localeMatch","localeMatch","locales","resolvedOptions","locale","navigator","languages","localeTargetLanguages","translationTargetLanguages","code","getTranslateTargetLanguage","fromSettings","localeCode2Text","DisplayNames","of","emojifyText","forEach","whitelistLinkClasses","_enhanceContent","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","shortenLink","links","usernames","innerText","hasChildren","some","u","d","slice","textNodes","extractTextNodes","html","nodeValue","replaceWith","childNodes","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","URL_PREFIX_REGEX","URL_DISPLAY_LENGTH","prefix","displayURL","suffix","cutoff","rejectFilterMap","assign","reduce","cur","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","el","append","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","_DateTimeFormat","dateYear","hideTime","formatOpts","currentYear","Date","getFullYear","day","hour","minute","niceDateTime","dtfOpts","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","useAvatarStatic","internal","showActivity","showStats","accountInstance","hideDisplayName","relationship","excludeRelationshipAttrs","statusesCount","lastStatusAt","fields","note","followersCount","createdAt","verifiedField","f","verifiedAt","excludedRelationship","hasRelationship","followedBy","requested","supportsCache","feature","version","range","features","satisfies","includePrerelease","loose","define_import_meta_env_default","initDB","dbName","storeName","createStore","val","getMany","delMany","clear","db","drafts","catchup","visibilityIconsMap","public","unlisted","private","direct","Poll","lang","readOnly","votePoll","uiState","setUIState","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","dir","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","name","marginLeft","FilterContext","createContext","_isFiltered","filtered","filterContext","appliedFilters","hasContext","context","isHidden","filterAction","action","filterTitles","titles","titlesStr","isFiltered","filteredItem","item","currentAccountID","isSelf","filterState","filteredItems","items","htmlContentLength","supportsTTS","speechSynthesis","speaking","cancel","utterance","SpeechSynthesisUtterance","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","isSafari","userAgent","dataAltLabel","AltBadge","MEDIA_CAPTION_LIMIT","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","remoteMediaURLObj","isVideoMaybe","isAudioMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","fetch","mode","backgroundImage","backgroundSize","QuickPinchZoom","objectPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","showProgress","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","onTimeUpdate","container","currentTime","controls","autoplay","MenuLink","FocusableItem","detail","SHOW_COMMENT_COUNT_LIMIT","INLINE_TRANSLATE_LIMIT","fetchAccount","v1","$select","memFetchAccount","visibilityText","isIOS","ontouchstart","REACTIONS_LIMIT","getPollText","getPostText","PostContent","post","language","removeAttribute","oldPost","newPost","Status","contentTextWeight","enableCommentHint","withinContext","enableTranslate","forceTranslate","_forceTranslate","onMediaClick","quoted","onStatusLinkClick","showFollowedTags","allowContextMenu","showActionsBar","showReplyParent","sameInstance","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","editedAt","card","reblog","tags","_deleted","useContext","filterInfo","debugHover","FilteredStatus","editedAtDate","inReplyToAccountRef","createdAtDate","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","showSpoiler","readingExpandMedia","prefs","showSpoilerMedia","setForceTranslate","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","spoilerContentRef","statusRef","contentRef","mediaContainerRef","readMoreText","textWeight","editedDateText","_a","mediaNoDesc","replyToStatus","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","favouriteStatus","favouriteStatusNotify","done","bookmarkStatus","bookmarkStatusNotify","reblogIterator","firstLoad","favouriteIterator","differentLanguage","reblogResults","favouriteResults","_types","fetchBoostedLikedByAccounts","fetchAccounts","showReactions","replyStatus","canBoost","postText","MenuDivider","createdDateText","nicePostURL","cachedStatus","setIsContextMenuOpen","contextMenuProps","bindLongPressContext","useLongPress","showContextMenu","clientX","clientY","setContextMenuProps","isContextMenuOpen","hotkeysEnabled","fRef","dRef","threshold","bRef","confirmBoostStatus","rRef","xRef","activeStatus","spoilerButton","spoilerMediaButton","displayedMediaAttachments","captionChildren","attachments","indices","showMultipleMediaCaptions","showCommentCount","isThread","StatusCompact","containsQuestion","nodeRef","selection","anchorNode","toString","ControlledMenu","contextMenuRef","anchorPoint","state","portal","actionsRef","StatusButton","StatusMenuItems","showCommentHint","QuoteStatuses","newPoll","pollResponse","TranslationBlock","MultipleMediaFigure","count","checked","viewScroll","EditedAtModal","selfReferential","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","hasIframeHTML","setCardStatusURL","handleClick","imageData","blurhashPixels","blurhashImage","decodeBlurHash","w","putImageData","videoID","fetchStatusHistory","setEditHistory","editHistory2","editHistory","log","error","buttonTitle","iconAlt","hours","seconds","host","minutes","padStart","restPath","statusPeekText","showPeek","setShowPeek","isReblog","filterTitleStr","actualStatusID","bindLongPressPeek","isFollowedTags","ssKey","statusPeekRef","level","quotes","uniqueQuotes","arr","q2","restNewProps","shallowEqual","restOldProps"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/show-toast.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/mem.js","../../src/utils/pmem.js","../../src/utils/ratelimit.js","../../src/utils/unfurl-link.jsx","../../src/utils/states.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/ICONS.jsx","../../src/components/icon.jsx","../../src/utils/useCloseWatcher.js","../../src/components/modal.jsx","../../src/components/loader.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/components/menu2.jsx","../../src/components/menu-confirm.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/utils/visibility-icons-map.js","../../src/components/poll.jsx","../../src/utils/filter-context.js","../../src/utils/filters.jsx","../../src/utils/html-content-length.js","../../src/utils/speech.js","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\n\nexport function getAccount(id) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.info.id === id) || accounts[0];\n}\n\nexport function getAccountByAccessToken(accessToken) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.accessToken === accessToken);\n}\n\nexport function getAccountByInstance(instance) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.instanceURL === instance);\n}\n\nexport function getCurrentAccount() {\n  if (!window.__IGNORE_GET_ACCOUNT_ERROR__) {\n    // Track down getCurrentAccount() calls before account-based states are initialized\n    console.error('getCurrentAccount() called before states are initialized');\n    if (import.meta.env.DEV) console.trace();\n  }\n  const currentAccount = store.session.get('currentAccount');\n  const account = getAccount(currentAccount);\n  return account;\n}\n\nexport function getCurrentAccountNS() {\n  const account = getCurrentAccount();\n  const {\n    instanceURL,\n    info: { id },\n  } = account;\n  return `${id}@${instanceURL}`;\n}\n\nexport function saveAccount(account) {\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === account.info.id);\n  if (acc) {\n    acc.info = account.info;\n    acc.instanceURL = account.instanceURL;\n    acc.accessToken = account.accessToken;\n    acc.vapidKey = account.vapidKey;\n  } else {\n    accounts.push(account);\n  }\n  store.local.setJSON('accounts', accounts);\n  store.session.set('currentAccount', account.info.id);\n}\n\nexport function updateAccount(accountInfo) {\n  // Only update if displayName or avatar or avatar_static is different\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\n  if (acc) {\n    if (\n      acc.info.displayName !== accountInfo.displayName ||\n      acc.info.avatar !== accountInfo.avatar ||\n      acc.info.avatar_static !== accountInfo.avatar_static\n    ) {\n      acc.info = {\n        ...acc.info,\n        ...accountInfo,\n      };\n      store.local.setJSON('accounts', accounts);\n    }\n  }\n}\n\nlet currentInstance = null;\nexport function getCurrentInstance() {\n  if (currentInstance) return currentInstance;\n  try {\n    const account = getCurrentAccount();\n    const instances = store.local.getJSON('instances');\n    const instance = account.instanceURL.toLowerCase();\n    return (currentInstance = instances[instance]);\n  } catch (e) {\n    console.error(e);\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\n    // Temporary fix for corrupted data\n    store.local.del('instances');\n    location.reload();\n    return {};\n  }\n}\n\n// Massage these instance configurations to match the Mastodon API\n// - Pleroma\nfunction getInstanceConfiguration(instance) {\n  const {\n    configuration,\n    maxMediaAttachments,\n    maxTootChars,\n    pleroma,\n    pollLimits,\n  } = instance;\n\n  const statuses = configuration?.statuses || {};\n  if (maxMediaAttachments) {\n    statuses.maxMediaAttachments ??= maxMediaAttachments;\n  }\n  if (maxTootChars) {\n    statuses.maxCharacters ??= maxTootChars;\n  }\n\n  const polls = configuration?.polls || {};\n  if (pollLimits) {\n    polls.maxCharactersPerOption ??= pollLimits.maxOptionChars;\n    polls.maxExpiration ??= pollLimits.maxExpiration;\n    polls.maxOptions ??= pollLimits.maxOptions;\n    polls.minExpiration ??= pollLimits.minExpiration;\n  }\n\n  return {\n    ...configuration,\n    statuses,\n    polls,\n  };\n}\n\nexport function getCurrentInstanceConfiguration() {\n  const instance = getCurrentInstance();\n  return getInstanceConfiguration(instance);\n}\n","import { getCurrentAccountNS } from './store-utils';\n\nconst local = {\n  get: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(local.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return local.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nconst session = {\n  get: (key) => {\n    try {\n      return sessionStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(session.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return sessionStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return session.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return sessionStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\n// Store with account namespace (id@domain.tld) <- uses id, not username\nconst account = {\n  get: (key) => {\n    try {\n      return local.getJSON(key)[getCurrentAccountNS()];\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      const data = local.getJSON(key) || {};\n      data[getCurrentAccountNS()] = value;\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      const data = local.getJSON(key) || {};\n      delete data[getCurrentAccountNS()];\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nexport default { local, session, account };\n","import { createRestAPIClient, createStreamingAPIClient } from 'masto';\n\nimport store from './store';\nimport {\n  getAccount,\n  getAccountByAccessToken,\n  getAccountByInstance,\n  getCurrentAccount,\n  saveAccount,\n} from './store-utils';\n\n// Default *fallback* instance\nconst DEFAULT_INSTANCE = 'mastodon.social';\n\n// Per-instance masto instance\n// Useful when only one account is logged in\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\n// E.g. apis['mastodon.social']\nconst apis = {};\n\n// Per-account masto instance\n// Note: There can be many accounts per instance\n// Useful when multiple accounts are logged in or when certain actions require a specific account\n// Just in case if I need this one day.\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\nconst accountApis = {};\nwindow.__ACCOUNT_APIS__ = accountApis;\n\n// Current account masto instance\nlet currentAccountApi;\n\nexport function initClient({ instance, accessToken }) {\n  if (/^https?:\\/\\//.test(instance)) {\n    instance = instance\n      .replace(/^https?:\\/\\//, '')\n      .replace(/\\/+$/, '')\n      .toLowerCase();\n  }\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\n\n  const masto = createRestAPIClient({\n    url,\n    accessToken, // Can be null\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\n  });\n\n  const client = {\n    masto,\n    instance,\n    accessToken,\n  };\n  apis[instance] = client;\n  if (!accountApis[instance]) accountApis[instance] = {};\n  if (accessToken) accountApis[instance][accessToken] = client;\n\n  return client;\n}\n\n// Get the instance information\n// The config is needed for composing\nexport async function initInstance(client, instance) {\n  console.log('INIT INSTANCE', client, instance);\n  const { masto, accessToken } = client;\n  // Request v2, fallback to v1 if fail\n  let info;\n  try {\n    info = await masto.v2.instance.fetch();\n  } catch (e) {}\n  if (!info) {\n    try {\n      info = await masto.v1.instance.fetch();\n    } catch (e) {}\n  }\n  if (!info) return;\n  console.log(info);\n  const {\n    // v1\n    uri,\n    urls: { streamingApi } = {},\n    // v2\n    domain,\n    configuration: { urls: { streaming } = {} } = {},\n  } = info;\n  const instances = store.local.getJSON('instances') || {};\n  if (uri || domain) {\n    instances[\n      (domain || uri)\n        .replace(/^https?:\\/\\//, '')\n        .replace(/\\/+$/, '')\n        .toLowerCase()\n    ] = info;\n  }\n  if (instance) {\n    instances[instance.toLowerCase()] = info;\n  }\n  store.local.setJSON('instances', instances);\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\n  const supportsWebSocket = 'WebSocket' in window;\n  if (supportsWebSocket && (streamingApi || streaming)) {\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\n    // masto.config.props.streamingApiUrl = streaming || streamingApi;\n    // Legacy masto.ws\n    const streamClient = createStreamingAPIClient({\n      streamingApiUrl: streaming || streamingApi,\n      accessToken,\n      implementation: WebSocket,\n    });\n    client.streaming = streamClient;\n    // masto.ws = streamClient;\n    console.log('🎏 Streaming API client:', client);\n  }\n}\n\n// Get the account information and store it\nexport async function initAccount(client, instance, accessToken, vapidKey) {\n  const { masto } = client;\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\n\n  console.log('CURRENTACCOUNT SET', mastoAccount.id);\n  store.session.set('currentAccount', mastoAccount.id);\n\n  saveAccount({\n    info: mastoAccount,\n    instanceURL: instance.toLowerCase(),\n    accessToken,\n    vapidKey,\n  });\n}\n\n// Get preferences\nexport async function initPreferences(client) {\n  try {\n    const { masto } = client;\n    const preferences = await masto.v1.preferences.fetch();\n    store.account.set('preferences', preferences);\n  } catch (e) {\n    // silently fail\n    console.error(e);\n  }\n}\n\n// Get the masto instance\n// If accountID is provided, get the masto instance for that account\nexport function api({ instance, accessToken, accountID, account } = {}) {\n  // Always lowercase and trim the instance\n  if (instance) {\n    instance = instance.toLowerCase().trim();\n  }\n\n  // If instance and accessToken are provided, get the masto instance for that account\n  if (instance && accessToken) {\n    const client =\n      accountApis[instance]?.[accessToken] ||\n      initClient({ instance, accessToken });\n    const { masto, streaming } = client;\n    return {\n      masto,\n      streaming,\n      client,\n      authenticated: true,\n      instance,\n    };\n  }\n\n  if (accessToken) {\n    // If only accessToken is provided, get the masto instance for that accessToken\n    console.log('X 1', accountApis);\n    for (const instance in accountApis) {\n      if (accountApis[instance][accessToken]) {\n        console.log('X 2', accountApis, instance, accessToken);\n        const client = accountApis[instance][accessToken];\n        const { masto, streaming } = client;\n        return {\n          masto,\n          streaming,\n          client,\n          authenticated: true,\n          instance,\n        };\n      } else {\n        console.log('X 3', accountApis, instance, accessToken);\n        const account = getAccountByAccessToken(accessToken);\n        if (account) {\n          const accessToken = account.accessToken;\n          const instance = account.instanceURL.toLowerCase().trim();\n          const client = initClient({ instance, accessToken });\n          const { masto, streaming } = client;\n          return {\n            masto,\n            streaming,\n            client,\n            authenticated: true,\n            instance,\n          };\n        } else {\n          throw new Error(`Access token not found`);\n        }\n      }\n    }\n  }\n\n  // If account is provided, get the masto instance for that account\n  if (account || accountID) {\n    account = account || getAccount(accountID);\n    if (account) {\n      const accessToken = account.accessToken;\n      const instance = account.instanceURL.toLowerCase().trim();\n      const client =\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken });\n      const { masto, streaming } = client;\n      return {\n        masto,\n        streaming,\n        client,\n        authenticated: true,\n        instance,\n      };\n    } else {\n      throw new Error(`Account ${accountID} not found`);\n    }\n  }\n\n  const currentAccount = getCurrentAccount();\n\n  // If only instance is provided, get the masto instance for that instance\n  if (instance) {\n    if (currentAccountApi?.instance === instance) {\n      return {\n        masto: currentAccountApi.masto,\n        streaming: currentAccountApi.streaming,\n        client: currentAccountApi,\n        authenticated: true,\n        instance,\n      };\n    }\n\n    if (currentAccount?.instanceURL === instance) {\n      const { accessToken } = currentAccount;\n      currentAccountApi =\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken });\n      return {\n        masto: currentAccountApi.masto,\n        streaming: currentAccountApi.streaming,\n        client: currentAccountApi,\n        authenticated: true,\n        instance,\n      };\n    }\n\n    const instanceAccount = getAccountByInstance(instance);\n    if (instanceAccount) {\n      const accessToken = instanceAccount.accessToken;\n      const client =\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken });\n      const { masto, streaming } = client;\n      return {\n        masto,\n        streaming,\n        client,\n        authenticated: true,\n        instance,\n      };\n    }\n\n    const client = apis[instance] || initClient({ instance });\n    const { masto, streaming, accessToken } = client;\n    return {\n      masto,\n      streaming,\n      client,\n      authenticated: !!accessToken,\n      instance,\n    };\n  }\n\n  // If no instance is provided, get the masto instance for the current account\n  if (currentAccountApi) {\n    return {\n      masto: currentAccountApi.masto,\n      streaming: currentAccountApi.streaming,\n      client: currentAccountApi,\n      authenticated: true,\n      instance: currentAccountApi.instance,\n    };\n  }\n  if (currentAccount) {\n    const { accessToken, instanceURL: instance } = currentAccount;\n    currentAccountApi =\n      accountApis[instance]?.[accessToken] ||\n      initClient({ instance, accessToken });\n    return {\n      masto: currentAccountApi.masto,\n      streaming: currentAccountApi.streaming,\n      client: currentAccountApi,\n      authenticated: true,\n      instance,\n    };\n  }\n\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\n  const client =\n    apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE });\n  const { masto, streaming } = client;\n  return {\n    masto,\n    streaming,\n    client,\n    authenticated: false,\n    instance: DEFAULT_INSTANCE,\n  };\n}\n\nwindow.__API__ = {\n  currentAccountApi,\n  apis,\n  accountApis,\n};\n","import Toastify from 'toastify-js';\n\nwindow._showToast = showToast;\n\nfunction showToast(props) {\n  if (typeof props === 'string') {\n    props = { text: props };\n  }\n  const { onClick, delay, ...rest } = props;\n  const toast = Toastify({\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\n    gravity: 'bottom',\n    position: 'center',\n    ...rest,\n    onClick: () => {\n      onClick?.(toast); // Pass in the object itself!\n    },\n  });\n  if (delay) {\n    setTimeout(() => {\n      toast.showToast();\n    }, delay);\n  } else {\n    toast.showToast();\n  }\n  return toast;\n}\n\nexport default showToast;\n","export default function isMastodonLinkMaybe(url) {\n  try {\n    const { pathname, hash } = new URL(url);\n    return (\n      /^\\/.*\\/\\d+$/i.test(pathname) ||\n      /^\\/(@[^/]+|users\\/[^/]+)\\/(statuses|posts)\\/\\w+\\/?$/i.test(pathname) || // GoToSocial, Takahe\n      /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Firefish\n      /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) || // Pleroma\n      /#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(hash) // Phanpy 🫣\n    );\n  } catch (e) {\n    return false;\n  }\n}\n","import moize from 'moize';\n\nwindow._moize = moize;\n\nexport default function mem(fn, opts = {}) {\n  return moize(fn, { ...opts, maxSize: 50, isDeepEqual: true });\n}\n","import mem from './mem';\n\nexport default function pmem(fn, opts = {}) {\n  return mem(fn, { isPromise: true, ...opts });\n}\n","// Rate limit repeated function calls and queue them to set interval\nexport default function rateLimit(fn, interval) {\n  let queue = [];\n  let isRunning = false;\n\n  function executeNext() {\n    if (queue.length === 0) {\n      isRunning = false;\n      return;\n    }\n\n    const nextFn = queue.shift();\n    nextFn();\n    setTimeout(executeNext, interval);\n  }\n\n  return function (...args) {\n    const callFn = () => fn.apply(this, args);\n    queue.push(callFn);\n\n    if (!isRunning) {\n      isRunning = true;\n      setTimeout(executeNext, interval);\n    }\n  };\n}\n","import pThrottle from 'p-throttle';\nimport { snapshot } from 'valtio/vanilla';\n\nimport { api } from './api';\nimport states, { saveStatus } from './states';\n\nexport const throttle = pThrottle({\n  limit: 1,\n  interval: 1000,\n});\n\nconst denylistDomains = /(twitter|github)\\.com/i;\nconst failedUnfurls = {};\nfunction _unfurlMastodonLink(instance, url) {\n  const snapStates = snapshot(states);\n  if (denylistDomains.test(url)) {\n    return;\n  }\n  if (failedUnfurls[url]) {\n    return;\n  }\n  const instanceRegex = new RegExp(instance + '/');\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\n    return Promise.resolve(snapStates.unfurledLinks[url]);\n  }\n  console.debug('🦦 Unfurling URL', url);\n\n  let remoteInstanceFetch;\n  let theURL = url;\n\n  // https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\n  if (/\\/\\/elk\\.[^\\/]+\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\n  }\n\n  // https://trunks.social/status/domain.com/@stest/123 -> https://domain.com/@stest/123\n  if (/\\/\\/trunks\\.[^\\/]+\\/status\\/[^\\/]+\\.[^\\/]+/i.test(theURL)) {\n    theURL = theURL.replace(/trunks\\.[^\\/]+\\/status\\//i, '');\n  }\n\n  // https://phanpy.social/#/domain.com/s/123 -> https://domain.com/statuses/123\n  if (/\\/#\\/[^\\/]+\\.[^\\/]+\\/s\\/.+/i.test(theURL)) {\n    const urlAfterHash = theURL.split('/#/')[1];\n    const finalURL = urlAfterHash.replace(/\\/s\\//i, '/@fakeUsername/');\n    theURL = `https://${finalURL}`;\n  }\n\n  let urlObj;\n  try {\n    urlObj = new URL(theURL);\n  } catch (e) {\n    return;\n  }\n  const domain = urlObj.hostname;\n  const path = urlObj.pathname;\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\n  const statusMatch = statusRegex.exec(path);\n  if (statusMatch) {\n    const id = statusMatch[3];\n    const { masto } = api({ instance: domain });\n    remoteInstanceFetch = masto.v1.statuses\n      .$select(id)\n      .fetch()\n      .then((status) => {\n        if (status?.id) {\n          return {\n            status,\n            instance: domain,\n          };\n        } else {\n          throw new Error('No results');\n        }\n      });\n  }\n\n  const { masto } = api({ instance });\n  const mastoSearchFetch = masto.v2.search\n    .fetch({\n      q: theURL,\n      type: 'statuses',\n      resolve: true,\n      limit: 1,\n    })\n    .then((results) => {\n      if (results.statuses.length > 0) {\n        const status = results.statuses[0];\n        return {\n          status,\n          instance,\n        };\n      } else {\n        throw new Error('No results');\n      }\n    });\n\n  function handleFulfill(result) {\n    const { status, instance } = result;\n    const { id } = status;\n    const selfURL = `/${instance}/s/${id}`;\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\n    const data = {\n      id,\n      instance,\n      url: selfURL,\n    };\n    states.unfurledLinks[url] = data;\n    saveStatus(status, instance, {\n      skipThreading: true,\n    });\n    return data;\n  }\n  function handleCatch(e) {\n    failedUnfurls[url] = true;\n  }\n\n  if (remoteInstanceFetch) {\n    // return Promise.any([remoteInstanceFetch, mastoSearchFetch])\n    //   .then(handleFulfill)\n    //   .catch(handleCatch);\n    // If mastoSearchFetch is fulfilled within 3s, return it, else return remoteInstanceFetch\n    const finalPromise = Promise.race([\n      mastoSearchFetch,\n      new Promise((resolve, reject) => setTimeout(reject, 3000)),\n    ]).catch(() => {\n      // If remoteInstanceFetch is fullfilled, return it, else return mastoSearchFetch\n      return remoteInstanceFetch.catch(() => mastoSearchFetch);\n    });\n    return finalPromise.then(handleFulfill).catch(handleCatch);\n  } else {\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\n  }\n}\n\nconst unfurlMastodonLink = throttle(_unfurlMastodonLink);\nexport default unfurlMastodonLink;\n","import { deepEqual } from 'fast-equals';\nimport { proxy, subscribe } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport { api } from './api';\nimport isMastodonLinkMaybe from './isMastodonLinkMaybe';\nimport pmem from './pmem';\nimport rateLimit from './ratelimit';\nimport store from './store';\nimport unfurlMastodonLink from './unfurl-link';\n\nconst states = proxy({\n  appVersion: {},\n  // history: [],\n  prevLocation: null,\n  currentLocation: null,\n  statuses: {},\n  statusThreadNumber: {},\n  home: [],\n  // specialHome: [],\n  homeNew: [],\n  homeLast: null, // Last item in 'home' list\n  homeLastFetchTime: null,\n  notifications: [],\n  notificationsLast: null, // Last read notification\n  notificationsNew: [],\n  notificationsShowNew: false,\n  notificationsLastFetchTime: null,\n  reloadStatusPage: 0,\n  reloadGenericAccounts: {\n    id: null,\n    counter: 0,\n  },\n  spoilers: {},\n  spoilersMedia: {},\n  scrollPositions: {},\n  unfurledLinks: {},\n  statusQuotes: {},\n  statusFollowedTags: {},\n  statusReply: {},\n  accounts: {},\n  routeNotification: null,\n  // Modals\n  showCompose: false,\n  showSettings: false,\n  showAccount: false,\n  showAccounts: false,\n  showDrafts: false,\n  showMediaModal: false,\n  showShortcutsSettings: false,\n  showKeyboardShortcutsHelp: false,\n  showGenericAccounts: false,\n  showMediaAlt: false,\n  showEmbedModal: false,\n  showReportModal: false,\n  // Shortcuts\n  shortcuts: [],\n  // Settings\n  settings: {\n    autoRefresh: false,\n    shortcutsViewMode: null,\n    shortcutsColumnsMode: false,\n    boostsCarousel: true,\n    contentTranslation: true,\n    contentTranslationTargetLanguage: null,\n    contentTranslationHideLanguages: [],\n    contentTranslationAutoInline: false,\n    shortcutSettingsCloudImportExport: false,\n    mediaAltGenerator: false,\n    cloakMode: false,\n  },\n});\n\nexport default states;\n\nexport function initStates() {\n  // init all account based states\n  // all keys that uses store.account.get() should be initialized here\n  states.notificationsLast = store.account.get('notificationsLast') || null;\n  states.shortcuts = store.account.get('shortcuts') ?? [];\n  states.settings.autoRefresh =\n    store.account.get('settings-autoRefresh') ?? false;\n  states.settings.shortcutsViewMode =\n    store.account.get('settings-shortcutsViewMode') ?? null;\n  if (store.account.get('settings-shortcutsColumnsMode')) {\n    states.settings.shortcutsColumnsMode = true;\n  }\n  states.settings.boostsCarousel =\n    store.account.get('settings-boostsCarousel') ?? true;\n  states.settings.contentTranslation =\n    store.account.get('settings-contentTranslation') ?? true;\n  states.settings.contentTranslationTargetLanguage =\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\n  states.settings.contentTranslationHideLanguages =\n    store.account.get('settings-contentTranslationHideLanguages') || [];\n  states.settings.contentTranslationAutoInline =\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\n  states.settings.shortcutSettingsCloudImportExport =\n    store.account.get('settings-shortcutSettingsCloudImportExport') ?? false;\n  states.settings.mediaAltGenerator =\n    store.account.get('settings-mediaAltGenerator') ?? false;\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\n}\n\nsubscribeKey(states, 'notificationsLast', (v) => {\n  console.log('CHANGE', v);\n  store.account.set('notificationsLast', states.notificationsLast);\n});\nsubscribe(states, (changes) => {\n  console.debug('STATES change', changes);\n  for (const [action, path, value, prevValue] of changes) {\n    if (path.join('.') === 'settings.autoRefresh') {\n      store.account.set('settings-autoRefresh', !!value);\n    }\n    if (path.join('.') === 'settings.boostsCarousel') {\n      store.account.set('settings-boostsCarousel', !!value);\n    }\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      store.account.set('settings-shortcutsViewMode', value);\n    }\n    if (path.join('.') === 'settings.contentTranslation') {\n      store.account.set('settings-contentTranslation', !!value);\n    }\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\n      store.account.set('settings-contentTranslationAutoInline', !!value);\n    }\n    if (path.join('.') === 'settings.shortcutSettingsCloudImportExport') {\n      store.account.set('settings-shortcutSettingsCloudImportExport', !!value);\n    }\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\n      console.log('SET', value);\n      store.account.set('settings-contentTranslationTargetLanguage', value);\n    }\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\n      store.account.set(\n        'settings-contentTranslationHideLanguages',\n        states.settings.contentTranslationHideLanguages,\n      );\n    }\n    if (path.join('.') === 'settings.mediaAltGenerator') {\n      store.account.set('settings-mediaAltGenerator', !!value);\n    }\n    if (path?.[0] === 'shortcuts') {\n      store.account.set('shortcuts', states.shortcuts);\n    }\n    if (path.join('.') === 'settings.cloakMode') {\n      store.account.set('settings-cloakMode', !!value);\n    }\n  }\n});\n\nexport function hideAllModals() {\n  states.showCompose = false;\n  states.showSettings = false;\n  states.showAccount = false;\n  states.showAccounts = false;\n  states.showDrafts = false;\n  states.showMediaModal = false;\n  states.showShortcutsSettings = false;\n  states.showKeyboardShortcutsHelp = false;\n  states.showGenericAccounts = false;\n  states.showMediaAlt = false;\n  states.showEmbedModal = false;\n}\n\nexport function statusKey(id, instance) {\n  if (!id) return;\n  return instance ? `${instance}/${id}` : id;\n}\n\nexport function getStatus(statusID, instance) {\n  if (instance) {\n    const key = statusKey(statusID, instance);\n    return states.statuses[key];\n  }\n  return states.statuses[statusID];\n}\n\nexport function saveStatus(status, instance, opts) {\n  if (typeof instance === 'object') {\n    opts = instance;\n    instance = null;\n  }\n  const {\n    override = true,\n    skipThreading = false,\n    skipUnfurling = false,\n  } = opts || {};\n  if (!status) return;\n  const oldStatus = getStatus(status.id, instance);\n  if (!override && oldStatus) return;\n  if (deepEqual(status, oldStatus)) return;\n  queueMicrotask(() => {\n    const key = statusKey(status.id, instance);\n    if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\n    // if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\n    states.statuses[key] = status;\n    if (status.reblog?.id) {\n      const srKey = statusKey(status.reblog.id, instance);\n      states.statuses[srKey] = status.reblog;\n    }\n    if (status.quote?.id) {\n      const sKey = statusKey(status.quote.id, instance);\n      states.statuses[sKey] = status.quote;\n      states.statusQuotes[key] = [\n        {\n          id: status.quote.id,\n          instance,\n        },\n      ];\n    }\n  });\n\n  // THREAD TRAVERSER\n  if (!skipThreading) {\n    queueMicrotask(() => {\n      threadifyStatus(status.reblog || status, instance);\n    });\n  }\n\n  // UNFURLER\n  if (!skipUnfurling) {\n    queueMicrotask(() => {\n      unfurlStatus(status.reblog || status, instance);\n    });\n  }\n}\n\nfunction _threadifyStatus(status, propInstance) {\n  const { masto, instance } = api({ instance: propInstance });\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\n  let fetchIndex = 0;\n  async function traverse(status, index = 0) {\n    const { inReplyToId, inReplyToAccountId } = status;\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\n      return [status];\n    }\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\n      throw 'Not a thread';\n      // Possibly thread of replies by multiple people?\n    }\n    const key = statusKey(inReplyToId, instance);\n    let prevStatus = states.statuses[key];\n    if (!prevStatus) {\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\n      // prevStatus = await masto.v1.statuses.$.select(inReplyToId).fetch();\n      prevStatus = await fetchStatus(inReplyToId, masto);\n      saveStatus(prevStatus, instance, { skipThreading: true });\n    }\n    // Prepend so that first status in thread will be index 0\n    return [...(await traverse(prevStatus, ++index)), status];\n  }\n  return traverse(status)\n    .then((statuses) => {\n      if (statuses.length > 1) {\n        console.debug('THREAD', statuses);\n        statuses.forEach((status, index) => {\n          const key = statusKey(status.id, instance);\n          states.statusThreadNumber[key] = index + 1;\n        });\n      }\n    })\n    .catch((e) => {\n      console.error(e, status);\n    });\n}\nexport const threadifyStatus = rateLimit(_threadifyStatus, 100);\n\nconst fauxDiv = document.createElement('div');\nexport function unfurlStatus(status, instance) {\n  const { instance: currentInstance } = api();\n  const content = status?.content;\n  const hasLink = /<a/i.test(content);\n  if (hasLink) {\n    const sKey = statusKey(status?.id, instance);\n    fauxDiv.innerHTML = content;\n    const links = fauxDiv.querySelectorAll(\n      'a[href]:not(.u-url):not(.mention):not(.hashtag)',\n    );\n    [...links]\n      .filter((a) => {\n        const url = a.href;\n        const isPostItself = url === status.url || url === status.uri;\n        return !isPostItself && isMastodonLinkMaybe(url);\n      })\n      .forEach((a, i) => {\n        unfurlMastodonLink(currentInstance, a.href).then((result) => {\n          if (!result) return;\n          if (!sKey) return;\n          if (!Array.isArray(states.statusQuotes[sKey])) {\n            states.statusQuotes[sKey] = [];\n          }\n          if (!states.statusQuotes[sKey][i]) {\n            states.statusQuotes[sKey].splice(i, 0, result);\n          }\n        });\n      });\n  }\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n","import { useEffect, useRef } from 'preact/hooks';\n\nfunction useInterval(fn, delay, deps, immediate) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn, deps]);\n\n  useEffect(() => {\n    if (!immediate || delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  useEffect(() => {\n    if (delay === null || delay === false) return;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","export default function openCompose(opts) {\n  const url = new URL('/compose/', window.location);\n  const { width: screenWidth, height: screenHeight } = window.screen;\n  const left = Math.max(0, (screenWidth - 600) / 2);\n  const top = Math.max(0, (screenHeight - 450) / 2);\n  const width = Math.min(screenWidth, 600);\n  const height = Math.min(screenHeight, 450);\n  const winUID = opts?.uid || Math.random();\n  const newWin = window.open(\n    url,\n    'compose' + winUID,\n    `width=${width},height=${height},left=${left},top=${top}`,\n  );\n\n  if (newWin) {\n    // if (masto) {\n    //   newWin.masto = masto;\n    // }\n\n    newWin.__COMPOSE__ = opts;\n  } else {\n    alert('Looks like your browser is blocking popups.');\n  }\n\n  return newWin;\n}\n","export const ICONS = {\n  x: () => import('@iconify-icons/mingcute/close-line'),\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\n  message: () => import('@iconify-icons/mingcute/mail-line'),\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\n  comment2: () => import('@iconify-icons/mingcute/comment-2-line'),\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\n  at: () => import('@iconify-icons/mingcute/at-line'),\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\n  more2: () => import('@iconify-icons/mingcute/more-1-fill'),\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\n  reply: [\n    () => import('@iconify-icons/mingcute/share-forward-line'),\n    '180deg',\n    'horizontal',\n  ],\n  thread: () => import('@iconify-icons/mingcute/route-line'),\n  group: () => import('@iconify-icons/mingcute/group-line'),\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\n  info: () => import('@iconify-icons/mingcute/information-line'),\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\n  following: () => import('@iconify-icons/mingcute/walk-line'),\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\n  unpin: [() => import('@iconify-icons/mingcute/pin-line'), '180deg'],\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\n  history: () => import('@iconify-icons/mingcute/history-line'),\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\n  sparkles2: () => import('@iconify-icons/mingcute/sparkles-2-line'),\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\n  play: () => import('@iconify-icons/mingcute/play-fill'),\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\n  unblock: [\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\n    '180deg',\n  ],\n  flag: () => import('@iconify-icons/mingcute/flag-1-line'),\n  time: () => import('@iconify-icons/mingcute/time-line'),\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\n  react: () => import('@iconify-icons/mingcute/react-line'),\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\n  round: () => import('@iconify-icons/mingcute/round-fill'),\n  'arrow-up-circle': () =>\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\n  'arrow-down-circle': () =>\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\n  speak: () => import('@iconify-icons/mingcute/radar-line'),\n  building: () => import('@iconify-icons/mingcute/building-5-line'),\n  history: () => import('@iconify-icons/mingcute/history-2-line'),\n  document: () => import('@iconify-icons/mingcute/document-line'),\n  'arrows-right': () => import('@iconify-icons/mingcute/arrows-right-line'),\n};\n","import moize from 'moize';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { ICONS } from './ICONS';\n\nconst SIZES = {\n  s: 12,\n  m: 16,\n  l: 20,\n  xl: 24,\n  xxl: 32,\n};\n\nconst ICONDATA = {};\n\n// Memoize the dangerouslySetInnerHTML of the SVGs\nconst SVGICon = moize(\n  function ({ width, height, body, rotate, flip }) {\n    return (\n      <svg\n        viewBox={`0 0 ${width} ${height}`}\n        dangerouslySetInnerHTML={{ __html: body }}\n        style={{\n          transform: `${rotate ? `rotate(${rotate})` : ''} ${\n            flip ? `scaleX(-1)` : ''\n          }`,\n        }}\n      />\n    );\n  },\n  {\n    isShallowEqual: true,\n    maxSize: Object.keys(ICONS).length,\n    matchesArg: (cacheKeyArg, keyArg) =>\n      cacheKeyArg.icon === keyArg.icon && cacheKeyArg.body === keyArg.body,\n  },\n);\n\nfunction Icon({\n  icon,\n  size = 'm',\n  alt,\n  title,\n  class: className = '',\n  style = {},\n}) {\n  if (!icon) return null;\n\n  const iconSize = SIZES[size];\n  let iconBlock = ICONS[icon];\n  if (!iconBlock) {\n    console.warn(`Icon ${icon} not found`);\n    return null;\n  }\n\n  let rotate, flip;\n  if (Array.isArray(iconBlock)) {\n    [iconBlock, rotate, flip] = iconBlock;\n  }\n\n  const [iconData, setIconData] = useState(ICONDATA[icon]);\n  const currentIcon = useRef(icon);\n  useEffect(() => {\n    if (iconData && currentIcon.current === icon) return;\n    (async () => {\n      const iconB = await iconBlock();\n      setIconData(iconB.default);\n      ICONDATA[icon] = iconB.default;\n    })();\n    currentIcon.current = icon;\n  }, [icon]);\n\n  return (\n    <span\n      class={`icon ${className}`}\n      title={title || alt}\n      style={{\n        width: `${iconSize}px`,\n        height: `${iconSize}px`,\n        ...style,\n      }}\n    >\n      {iconData && (\n        // <svg\n        //   width={iconSize}\n        //   height={iconSize}\n        //   viewBox={`0 0 ${iconData.width} ${iconData.height}`}\n        //   dangerouslySetInnerHTML={{ __html: iconData.body }}\n        //   style={{\n        //     transform: `${rotate ? `rotate(${rotate})` : ''} ${\n        //       flip ? `scaleX(-1)` : ''\n        //     }`,\n        //   }}\n        // />\n        <SVGICon\n          icon={icon}\n          width={iconData.width}\n          height={iconData.height}\n          body={iconData.body}\n          rotate={rotate}\n          flip={flip}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default Icon;\n","import { useEffect } from 'preact/hooks';\n\nfunction useCloseWatcher(fn, deps = []) {\n  if (!fn || typeof fn !== 'function') return;\n  useEffect(() => {\n    const watcher = new CloseWatcher();\n    watcher.addEventListener('close', fn);\n    return () => {\n      watcher.destroy();\n    };\n  }, deps);\n}\n\nexport default window.CloseWatcher ? useCloseWatcher : () => {};\n","import './modal.css';\n\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport useCloseWatcher from '../utils/useCloseWatcher';\n\nconst $modalContainer = document.getElementById('modal-container');\n\nfunction Modal({ children, onClose, onClick, class: className }) {\n  if (!children) return null;\n\n  const modalRef = useRef();\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\n      if (focusElement) {\n        focusElement.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setTimeout(() => {\n        onClose?.();\n      }, 0);\n    },\n    {\n      enabled: !supportsCloseWatcher && !!onClose,\n      // Using keyup and setTimeout above\n      // This will run \"later\" to prevent clash with esc handlers from other components\n      keydown: false,\n      keyup: true,\n    },\n    [onClose],\n  );\n  useCloseWatcher(onClose, [onClose]);\n\n  const Modal = (\n    <div\n      ref={(node) => {\n        modalRef.current = node;\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\n      }}\n      className={className}\n      onClick={(e) => {\n        onClick?.(e);\n        if (e.target === e.currentTarget) {\n          onClose?.(e);\n        }\n      }}\n      tabIndex=\"-1\"\n      onFocus={(e) => {\n        try {\n          if (e.target === e.currentTarget) {\n            const focusElement =\n              modalRef.current?.querySelector('[tabindex=\"-1\"]');\n            const isFocusable =\n              getComputedStyle(focusElement)?.pointerEvents !== 'none';\n            if (focusElement && isFocusable) {\n              focusElement.focus();\n            }\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {children}\n    </div>\n  );\n\n  return createPortal(Modal, $modalContainer);\n\n  // return createPortal(children, $modalContainer);\n}\n\nexport default Modal;\n","import './loader.css';\n\nfunction Loader({ abrupt, hidden, ...props }) {\n  return (\n    <span\n      {...props}\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\n        hidden ? 'hidden' : ''\n      }`}\n    >\n      <span class=\"loader\" />\n    </span>\n  );\n}\n\nexport default Loader;\n","import './avatar.css';\n\nimport { useRef } from 'preact/hooks';\n\nimport mem from '../utils/mem';\n\nconst SIZES = {\n  s: 16,\n  m: 20,\n  l: 24,\n  xl: 32,\n  xxl: 50,\n  xxxl: 64,\n};\n\nconst alphaCache = {};\n\nconst canvas = window.OffscreenCanvas\n  ? new OffscreenCanvas(1, 1)\n  : document.createElement('canvas');\nconst ctx = canvas.getContext('2d', {\n  willReadFrequently: true,\n});\n\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\n  size = SIZES[size] || size || SIZES.m;\n  const avatarRef = useRef();\n  const isMissing = /missing\\.png$/.test(url);\n  return (\n    <span\n      ref={avatarRef}\n      class={`avatar ${squircle ? 'squircle' : ''} ${\n        alphaCache[url] ? 'has-alpha' : ''\n      }`}\n      style={{\n        width: size,\n        height: size,\n      }}\n      title={alt}\n      {...props}\n    >\n      {!!url && (\n        <img\n          src={url}\n          width={size}\n          height={size}\n          alt={alt}\n          loading=\"lazy\"\n          decoding=\"async\"\n          crossOrigin={\n            alphaCache[url] === undefined && !isMissing\n              ? 'anonymous'\n              : undefined\n          }\n          onError={(e) => {\n            if (e.target.crossOrigin) {\n              e.target.crossOrigin = null;\n              e.target.src = url;\n            }\n          }}\n          onLoad={(e) => {\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\n            if (alphaCache[url] !== undefined) return;\n            if (isMissing) return;\n            queueMicrotask(() => {\n              try {\n                // Check if image has alpha channel\n                const { width, height } = e.target;\n                if (canvas.width !== width) canvas.width = width;\n                if (canvas.height !== height) canvas.height = height;\n                ctx.drawImage(e.target, 0, 0);\n                const allPixels = ctx.getImageData(0, 0, width, height);\n                // At least 10% of pixels have alpha <= 128\n                const hasAlpha =\n                  allPixels.data.filter(\n                    (pixel, i) => i % 4 === 3 && pixel <= 128,\n                  ).length /\n                    (allPixels.data.length / 4) >\n                  0.1;\n                if (hasAlpha) {\n                  // console.log('hasAlpha', hasAlpha, allPixels.data);\n                  avatarRef.current.classList.add('has-alpha');\n                }\n                alphaCache[url] = hasAlpha;\n                ctx.clearRect(0, 0, width, height);\n              } catch (e) {\n                // Silent fail\n                alphaCache[url] = false;\n              }\n            });\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default mem(Avatar);\n","import { forwardRef } from 'preact/compat';\nimport { useLocation } from 'react-router-dom';\n\nimport states from '../utils/states';\n\n/* NOTES\n   =====\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\n*/\n\nconst Link = forwardRef((props, ref) => {\n  let routerLocation;\n  try {\n    routerLocation = useLocation();\n  } catch (e) {}\n  let hash = (location.hash || '').replace(/^#/, '').trim();\n  if (hash === '') hash = '/';\n  const { to, ...restProps } = props;\n\n  // Handle encodeURIComponent of searchParams values\n  if (!!hash && hash !== '/' && hash.includes('?')) {\n    try {\n      const parsedHash = new URL(hash, location.origin); // Fake base URL\n      if (parsedHash.searchParams.size) {\n        const searchParamsStr = Array.from(parsedHash.searchParams.entries())\n          .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n          .join('&');\n        hash = parsedHash.pathname + '?' + searchParamsStr;\n      }\n    } catch (e) {}\n  }\n\n  const isActive = hash === to || decodeURIComponent(hash) === to;\n  return (\n    <a\n      ref={ref}\n      href={`#${to}`}\n      {...restProps}\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\n      onClick={(e) => {\n        if (e.currentTarget?.parentNode?.closest('a')) {\n          // If this <a> is nested inside another <a>\n          e.stopPropagation();\n        }\n        if (routerLocation) states.prevLocation = routerLocation;\n        props.onClick?.(e);\n      }}\n    />\n  );\n});\n\nexport default Link;\n","const root = document.documentElement;\nconst style = getComputedStyle(root);\nconst defaultBoundingBoxPadding = 8;\n\nlet safeAreaInsets = [0, 0, 0, 0];\nfunction getSafeAreaInsets() {\n  // Get safe area inset variables from root\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\n  safeAreaInsets = [\n    // top, right, bottom, left (clockwise)\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\n  ];\n}\nrequestAnimationFrame(getSafeAreaInsets);\n\nfunction safeBoundingBoxPadding(paddings = []) {\n  const str = safeAreaInsets\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\n    .join(' ');\n  // console.log(str);\n  return str;\n}\n\n// Update safe area insets when orientation or resize\nif (CSS.supports('top: env(safe-area-inset-top)')) {\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\n}\n\nexport default safeBoundingBoxPadding;\n","import { Menu } from '@szhsin/react-menu';\nimport { useWindowSize } from '@uidotdev/usehooks';\nimport { useRef } from 'preact/hooks';\n\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\n\n// It's like Menu but with sensible defaults, bug fixes and improvements.\nfunction Menu2(props) {\n  const { containerProps, instanceRef: _instanceRef } = props;\n  const size = useWindowSize();\n  const instanceRef = _instanceRef?.current ? _instanceRef : useRef();\n\n  return (\n    <Menu\n      boundingBoxPadding={safeBoundingBoxPadding()}\n      repositionFlag={`${size.width}x${size.height}`}\n      unmountOnClose\n      {...props}\n      instanceRef={instanceRef}\n      containerProps={{\n        onClick: (e) => {\n          if (e.target === e.currentTarget) {\n            instanceRef.current?.closeMenu?.();\n          }\n          containerProps?.onClick?.(e);\n        },\n        ...containerProps,\n      }}\n    />\n  );\n}\n\nexport default Menu2;\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\nimport { cloneElement } from 'preact';\nimport { useRef } from 'preact/hooks';\n\nimport Menu2 from './menu2';\n\nfunction MenuConfirm({\n  subMenu = false,\n  confirm = true,\n  confirmLabel,\n  menuItemClassName,\n  menuFooter,\n  ...props\n}) {\n  const { children, onClick, ...restProps } = props;\n  if (!confirm) {\n    if (subMenu) return <MenuItem {...props} />;\n    if (onClick) {\n      return cloneElement(children, {\n        onClick,\n      });\n    }\n    return children;\n  }\n  const Parent = subMenu ? SubMenu : Menu2;\n  const menuRef = useRef();\n  return (\n    <Parent\n      instanceRef={menuRef}\n      openTrigger=\"clickOnly\"\n      direction=\"bottom\"\n      overflow=\"auto\"\n      gap={-8}\n      shift={8}\n      menuClassName=\"menu-emphasized\"\n      {...restProps}\n      menuButton={subMenu ? undefined : children}\n      label={subMenu ? children : undefined}\n      // Test fix for bug; submenus not opening on Android\n      itemProps={{\n        onPointerMove: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n        onPointerLeave: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n      }}\n    >\n      <MenuItem className={menuItemClassName} onClick={onClick}>\n        {confirmLabel}\n      </MenuItem>\n      {menuFooter}\n    </Parent>\n  );\n}\n\nexport default MenuConfirm;\n","import { memo } from 'preact/compat';\n\nfunction EmojiText({ text, emojis }) {\n  if (!text) return '';\n  if (!emojis?.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  const regex = new RegExp(\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\n    'g',\n  );\n  const elements = text.split(regex).map((word) => {\n    const emoji = emojis.find((e) => e.shortcode === word);\n    if (emoji) {\n      const { url, staticUrl } = emoji;\n      return (\n        <picture>\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            key={word}\n            src={url}\n            alt={word}\n            class=\"shortcode-emoji emoji\"\n            width=\"16\"\n            height=\"16\"\n            loading=\"lazy\"\n            decoding=\"async\"\n          />\n        </picture>\n      );\n    }\n    return word;\n  });\n  return elements;\n}\n\nexport default memo(\n  EmojiText,\n  (oldProps, newProps) =>\n    oldProps.text === newProps.text &&\n    oldProps.emojis?.length === newProps.emojis?.length,\n);\n","import './name-text.css';\n\nimport { memo } from 'preact/compat';\n\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\n\nconst nameCollator = new Intl.Collator('en', {\n  sensitivity: 'base',\n});\n\nfunction NameText({\n  account,\n  instance,\n  showAvatar,\n  showAcct,\n  short,\n  external,\n  onClick,\n}) {\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\n    account;\n  let { username } = account;\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n\n  const trimmedUsername = username.toLowerCase().trim();\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\n  const shortenedDisplayName = trimmedDisplayName\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\n    /[^a-z0-9]/gi,\n    '',\n  ); // Remove non-alphanumeric characters\n\n  if (\n    !short &&\n    (trimmedUsername === trimmedDisplayName ||\n      trimmedUsername === shortenedDisplayName ||\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\n      nameCollator.compare(trimmedUsername, shortenedDisplayName) === 0)\n  ) {\n    username = null;\n  }\n\n  return (\n    <a\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\n      href={url}\n      target={external ? '_blank' : null}\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        e.stopPropagation();\n        if (onClick) return onClick(e);\n        states.showAccount = {\n          account,\n          instance,\n        };\n      }}\n    >\n      {showAvatar && (\n        <>\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\n        </>\n      )}\n      {displayName && !short ? (\n        <>\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          {!showAcct && username && (\n            <>\n              {' '}\n              <i>@{username}</i>\n            </>\n          )}\n        </>\n      ) : short ? (\n        <i>{username}</i>\n      ) : (\n        <b>{username}</b>\n      )}\n      {showAcct && (\n        <>\n          <br />\n          <i>\n            @{acct1}\n            <span class=\"ib\">{acct2}</span>\n          </i>\n        </>\n      )}\n    </a>\n  );\n}\n\nexport default memo(NameText, (oldProps, newProps) => {\n  // Only care about account.id, the other props usually don't change\n  const { account } = oldProps;\n  const { account: newAccount } = newProps;\n  return account?.acct === newAccount?.acct;\n});\n","// Twitter-style relative time component\n// Seconds = 1s\n// Minutes = 1m\n// Hours = 1h\n// Days = 1d\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\nimport dayjs from 'dayjs';\nimport dayjsTwitter from 'dayjs-twitter';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useMemo } from 'preact/hooks';\n\ndayjs.extend(dayjsTwitter);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst dtf = new Intl.DateTimeFormat();\n\nexport default function RelativeTime({ datetime, format }) {\n  if (!datetime) return null;\n  const date = useMemo(() => dayjs(datetime), [datetime]);\n  const dateStr = useMemo(() => {\n    if (format === 'micro') {\n      // If date <= 1 day ago or day is within this year\n      const now = dayjs();\n      const dayDiff = now.diff(date, 'day');\n      if (dayDiff <= 1 || now.year() === date.year()) {\n        return date.twitter();\n      } else {\n        return dtf.format(date.toDate());\n      }\n    }\n    return date.fromNow();\n  }, [date, format]);\n  const dt = useMemo(() => date.toISOString(), [date]);\n  const title = useMemo(() => date.format('LLLL'), [date]);\n\n  return (\n    <time datetime={dt} title={title}>\n      {dateStr}\n    </time>\n  );\n}\n","import { match } from '@formatjs/intl-localematcher';\n\nimport mem from './mem';\n\nfunction _localeMatch(...args) {\n  // Wrap in try/catch because localeMatcher throws on invalid locales\n  try {\n    return match(...args);\n  } catch (e) {\n    const defaultLocale = args[2];\n    return defaultLocale || false;\n  }\n}\nconst localeMatch = mem(_localeMatch);\n\nexport default localeMatch;\n","import translationTargetLanguages from '../data/lingva-target-languages';\n\nimport localeMatch from './locale-match';\nimport states from './states';\n\nconst locales = [\n  new Intl.DateTimeFormat().resolvedOptions().locale,\n  ...navigator.languages,\n];\n\nconst localeTargetLanguages = localeMatch(\n  locales,\n  translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\n  'en',\n);\n\nfunction getTranslateTargetLanguage(fromSettings = false) {\n  if (fromSettings) {\n    const { contentTranslationTargetLanguage } = states.settings;\n    if (contentTranslationTargetLanguage) {\n      return contentTranslationTargetLanguage;\n    }\n  }\n  return localeTargetLanguages;\n}\n\nexport default getTranslateTargetLanguage;\n","export default function localeCode2Text(code) {\n  try {\n    return new Intl.DisplayNames(navigator.languages, {\n      type: 'language',\n    }).of(code);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","function emojifyText(text, emojis = []) {\n  if (!text) return '';\n  if (!emojis.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  // Replace shortcodes in text with emoji\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\n  emojis.forEach((emoji) => {\n    const { shortcode, staticUrl, url } = emoji;\n    text = text.replace(\n      new RegExp(`:${shortcode}:`, 'g'),\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\n    );\n  });\n  // console.log(text, emojis);\n  return text;\n}\n\nexport default emojifyText;\n","import emojifyText from './emojify-text';\nimport mem from './mem';\n\nconst fauxDiv = document.createElement('div');\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\n\nfunction _enhanceContent(content, opts = {}) {\n  const { emojis, postEnhanceDOM = () => {} } = opts;\n  let enhancedContent = content;\n  const dom = document.createElement('div');\n  dom.innerHTML = enhancedContent;\n  const hasLink = /<a/i.test(enhancedContent);\n  const hasCodeBlock = enhancedContent.includes('```');\n\n  if (hasLink) {\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\n    // E.g. `note` in `account`\n    const noTargetBlankLinks = dom.querySelectorAll('a:not([target=\"_blank\"])');\n    noTargetBlankLinks.forEach((link) => {\n      link.setAttribute('target', '_blank');\n    });\n\n    // Remove all classes except `u-url`, `mention`, `hashtag`\n    const links = dom.querySelectorAll('a[class]');\n    links.forEach((link) => {\n      link.classList.forEach((c) => {\n        if (!whitelistLinkClasses.includes(c)) {\n          link.classList.remove(c);\n        }\n      });\n    });\n  }\n\n  // Add 'has-url-text' to all links that contains a url\n  if (hasLink) {\n    const links = dom.querySelectorAll('a[href]');\n    links.forEach((link) => {\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\n        link.classList.add('has-url-text');\n        shortenLink(link);\n      }\n    });\n  }\n\n  // Spanify un-spanned mentions\n  if (hasLink) {\n    const links = dom.querySelectorAll('a[href]');\n    const usernames = [];\n    links.forEach((link) => {\n      const text = link.innerText.trim();\n      const hasChildren = link.querySelector('*');\n      // If text looks like @username@domain, then it's a mention\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\n        // Only show @username\n        const [_, username, domain] = text.split('@');\n        if (!hasChildren) {\n          if (\n            !usernames.some(([u]) => u === username) ||\n            usernames.some(([u, d]) => u === username && d === domain)\n          ) {\n            link.innerHTML = `@<span>${username}</span>`;\n            usernames.push([username, domain]);\n          } else {\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\n          }\n        }\n        link.classList.add('mention');\n      }\n      // If text looks like #hashtag, then it's a hashtag\n      if (/^#[^#]+$/g.test(text)) {\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\n        link.classList.add('mention', 'hashtag');\n      }\n    });\n  }\n\n  // EMOJIS\n  // ======\n  // Convert :shortcode: to <img />\n  let textNodes;\n  if (enhancedContent.includes(':')) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (emojis) {\n        html = emojifyText(html, emojis);\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // CODE BLOCKS\n  // ===========\n  // Convert ```code``` to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const blocks = [...dom.querySelectorAll('p')].filter((p) =>\n      /^```[^]+```$/g.test(p.innerText.trim()),\n    );\n    blocks.forEach((block) => {\n      const pre = document.createElement('pre');\n      // Replace <br /> with newlines\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\n      block.replaceWith(pre);\n    });\n  }\n\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const paragraphs = [...dom.querySelectorAll('p')];\n    // Filter out paragraphs with ``` in beginning only\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\n    codeBlocks.forEach((block) => {\n      const nextParagraphs = [block];\n      let hasCodeBlock = false;\n      let currentBlock = block;\n      while (currentBlock.nextElementSibling) {\n        const next = currentBlock.nextElementSibling;\n        if (next && next.tagName === 'P') {\n          if (/```$/g.test(next.innerText)) {\n            nextParagraphs.push(next);\n            hasCodeBlock = true;\n            break;\n          } else {\n            nextParagraphs.push(next);\n          }\n        } else {\n          break;\n        }\n        currentBlock = next;\n      }\n      if (hasCodeBlock) {\n        const pre = document.createElement('pre');\n        nextParagraphs.forEach((p) => {\n          // Replace <br /> with newlines\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n        });\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\n        block.replaceWith(pre);\n        nextParagraphs.forEach((p) => p.remove());\n      }\n    });\n  }\n\n  // INLINE CODE\n  // ===========\n  // Convert `code` to <code>code</code>\n  if (enhancedContent.includes('`')) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/`[^`]+`/g.test(html)) {\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // TWITTER USERNAMES\n  // =================\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\n  if (/twitter\\.com/i.test(enhancedContent)) {\n    textNodes = extractTextNodes(dom, {\n      rejectFilter: ['A'],\n    });\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\n        html = html.replaceAll(\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\n        );\n      }\n      fauxDiv.innerHTML = html;\n      // const nodes = [...fauxDiv.childNodes];\n      node.replaceWith(...fauxDiv.childNodes);\n    });\n  }\n\n  // HASHTAG STUFFING\n  // ================\n  // Get the <p> that contains a lot of hashtags, add a class to it\n  if (enhancedContent.includes('#')) {\n    let prevIndex = null;\n    const hashtagStuffedParagraphs = [...dom.querySelectorAll('p')].filter(\n      (p, index) => {\n        let hashtagCount = 0;\n        for (let i = 0; i < p.childNodes.length; i++) {\n          const node = p.childNodes[i];\n\n          if (node.nodeType === Node.TEXT_NODE) {\n            const text = node.textContent.trim();\n            if (text !== '') {\n              return false;\n            }\n          } else if (node.tagName === 'BR') {\n            // Ignore <br />\n          } else if (node.tagName === 'A') {\n            const linkText = node.textContent.trim();\n            if (!linkText || !linkText.startsWith('#')) {\n              return false;\n            } else {\n              hashtagCount++;\n            }\n          } else {\n            return false;\n          }\n        }\n        // Only consider \"stuffing\" if:\n        // - there are more than 3 hashtags\n        // - there are more than 1 hashtag in adjacent paragraphs\n        if (hashtagCount > 3) {\n          prevIndex = index;\n          return true;\n        }\n        if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\n          prevIndex = index;\n          return true;\n        }\n      },\n    );\n    if (hashtagStuffedParagraphs?.length) {\n      hashtagStuffedParagraphs.forEach((p) => {\n        p.classList.add('hashtag-stuffing');\n        p.title = p.innerText;\n      });\n    }\n  }\n\n  if (postEnhanceDOM) {\n    queueMicrotask(() => postEnhanceDOM(dom));\n    // postEnhanceDOM(dom); // mutate dom\n  }\n\n  enhancedContent = dom.innerHTML;\n\n  return enhancedContent;\n}\nconst enhanceContent = mem(_enhanceContent);\n\nconst defaultRejectFilter = [\n  // Document metadata\n  'STYLE',\n  // Image and multimedia\n  'IMG',\n  'VIDEO',\n  'AUDIO',\n  'AREA',\n  'MAP',\n  'TRACK',\n  // Embedded content\n  'EMBED',\n  'IFRAME',\n  'OBJECT',\n  'PICTURE',\n  'PORTAL',\n  'SOURCE',\n  // SVG and MathML\n  'SVG',\n  'MATH',\n  // Scripting\n  'CANVAS',\n  'NOSCRIPT',\n  'SCRIPT',\n  // Forms\n  'INPUT',\n  'OPTION',\n  'TEXTAREA',\n  // Web Components\n  'SLOT',\n  'TEMPLATE',\n];\nconst defaultRejectFilterMap = Object.fromEntries(\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\n);\n\nconst URL_PREFIX_REGEX = /^(https?:\\/\\/(www\\.)?|xmpp:)/;\nconst URL_DISPLAY_LENGTH = 30;\n// Similar to https://github.com/mastodon/mastodon/blob/1666b1955992e16f4605b414c6563ca25b3a3f18/app/lib/text_formatter.rb#L54-L69\nfunction shortenLink(link) {\n  if (!link || link.querySelector?.('*')) {\n    return;\n  }\n  try {\n    const url = link.innerText.trim();\n    const prefix = (url.match(URL_PREFIX_REGEX) || [])[0] || '';\n    if (!prefix) return;\n    const displayURL = url.slice(\n      prefix.length,\n      prefix.length + URL_DISPLAY_LENGTH,\n    );\n    const suffix = url.slice(prefix.length + URL_DISPLAY_LENGTH);\n    const cutoff = url.slice(prefix.length).length > URL_DISPLAY_LENGTH;\n    link.innerHTML = `<span class=\"invisible\">${prefix}</span><span class=${\n      cutoff ? 'ellipsis' : ''\n    }>${displayURL}</span><span class=\"invisible\">${suffix}</span>`;\n  } catch (e) {}\n}\n\nfunction extractTextNodes(dom, opts = {}) {\n  const textNodes = [];\n  const rejectFilterMap = Object.assign(\n    {},\n    defaultRejectFilterMap,\n    opts.rejectFilter?.reduce((acc, cur) => {\n      acc[cur] = true;\n      return acc;\n    }, {}),\n  );\n  const walk = document.createTreeWalker(\n    dom,\n    NodeFilter.SHOW_TEXT,\n    {\n      acceptNode(node) {\n        if (rejectFilterMap[node.parentNode.nodeName]) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    },\n    false,\n  );\n  let node;\n  while ((node = walk.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\nexport default enhanceContent;\n","import mem from './mem';\n\nconst div = document.createElement('div');\nfunction getHTMLText(html) {\n  if (!html) return '';\n  div.innerHTML = html\n    .replace(/<\\/p>/g, '</p>\\n\\n')\n    .replace(/<\\/li>/g, '</li>\\n');\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n\n  // MASTODON-SPECIFIC classes\n  // Remove .invisible\n  div.querySelectorAll('.invisible').forEach((el) => {\n    el.remove();\n  });\n  // Add … at end of .ellipsis\n  div.querySelectorAll('.ellipsis').forEach((el) => {\n    el.append('...');\n  });\n\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\n}\n\nexport default mem(getHTMLText);\n","import states from './states';\n\nfunction handleContentLinks(opts) {\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\n  return (e) => {\n    let { target } = e;\n    target = target.closest('a');\n    if (!target) return;\n\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\n      return;\n    }\n\n    const prevText = target.previousSibling?.textContent;\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\n    const textStartsWithAt = target.innerText.startsWith('@');\n    if (\n      (target.classList.contains('u-url') && textStartsWithAt) ||\n      (textBeforeLinkIsAt && !textStartsWithAt)\n    ) {\n      const targetText = (\n        target.querySelector('span') || target\n      ).innerText.trim();\n      const username = targetText.replace(/^@/, '');\n      const url = target.getAttribute('href');\n      const mention = mentions.find(\n        (mention) =>\n          mention.username === username ||\n          mention.acct === username ||\n          mention.url === url,\n      );\n      if (mention) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.showAccount = {\n          account: mention.acct,\n          instance,\n        };\n      } else if (!/^http/i.test(targetText)) {\n        console.log('mention not found', targetText);\n        e.preventDefault();\n        e.stopPropagation();\n        const href = target.getAttribute('href');\n        states.showAccount = {\n          account: href,\n          instance,\n        };\n      }\n    } else if (!previewMode) {\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tag = target.innerText.replace(/^#/, '').trim();\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\n        console.log({ hashURL });\n        location.hash = hashURL;\n      } else if (\n        states.unfurledLinks[target.href]?.url &&\n        statusURL !== target.href\n      ) {\n        // If unfurled AND not self-referential\n        e.preventDefault();\n        e.stopPropagation();\n        states.prevLocation = {\n          pathname: location.hash.replace(/^#/, ''),\n        };\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\n      }\n    }\n  };\n}\n\nexport default handleContentLinks;\n","import mem from './mem';\n\nconst { locale } = new Intl.DateTimeFormat().resolvedOptions();\n\nconst _DateTimeFormat = (opts) => {\n  const { dateYear, hideTime, formatOpts } = opts || {};\n  const currentYear = new Date().getFullYear();\n  return Intl.DateTimeFormat(locale, {\n    // Show year if not current year\n    year: dateYear === currentYear ? undefined : 'numeric',\n    month: 'short',\n    day: 'numeric',\n    // Hide time if requested\n    hour: hideTime ? undefined : 'numeric',\n    minute: hideTime ? undefined : 'numeric',\n    ...formatOpts,\n  });\n};\nconst DateTimeFormat = mem(_DateTimeFormat);\n\nfunction niceDateTime(date, dtfOpts) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const DTF = DateTimeFormat({\n    dateYear: date.getFullYear(),\n    ...dtfOpts,\n  });\n  const dateText = DTF.format(date);\n  return dateText;\n}\n\nexport default niceDateTime;\n","const { locale } = Intl.NumberFormat().resolvedOptions();\nconst shortenNumber = Intl.NumberFormat(locale, {\n  notation: 'compact',\n}).format;\nexport default shortenNumber;\n","import './account-block.css';\n\n// import { useNavigate } from 'react-router-dom';\nimport enhanceContent from '../utils/enhance-content';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\n\nfunction AccountBlock({\n  skeleton,\n  account,\n  avatarSize = 'xl',\n  useAvatarStatic = false,\n  instance,\n  external,\n  internal,\n  onClick,\n  showActivity = false,\n  showStats = false,\n  accountInstance,\n  hideDisplayName = false,\n  relationship = {},\n  excludeRelationshipAttrs = [],\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"account-block skeleton\">\n        <Avatar size={avatarSize} />\n        <span>\n          <b>████████</b>\n          <br />\n          <span class=\"account-block-acct\">@██████</span>\n        </span>\n      </div>\n    );\n  }\n\n  if (!account) {\n    return null;\n  }\n\n  // const navigate = useNavigate();\n\n  const {\n    id,\n    acct,\n    avatar,\n    avatarStatic,\n    displayName,\n    username,\n    emojis,\n    url,\n    statusesCount,\n    lastStatusAt,\n    bot,\n    fields,\n    note,\n    group,\n    followersCount,\n    createdAt,\n  } = account;\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n  if (accountInstance) {\n    acct2 = `@${accountInstance}`;\n  }\n\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\n\n  const excludedRelationship = {};\n  for (const r in relationship) {\n    if (!excludeRelationshipAttrs.includes(r)) {\n      excludedRelationship[r] = relationship[r];\n    }\n  }\n  const hasRelationship =\n    excludedRelationship.following ||\n    excludedRelationship.followedBy ||\n    excludedRelationship.requested;\n\n  return (\n    <a\n      class=\"account-block\"\n      href={url}\n      target={external ? '_blank' : null}\n      title={`@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        if (internal) {\n          // navigate(`/${instance}/a/${id}`);\n          location.hash = `/${instance}/a/${id}`;\n        } else {\n          states.showAccount = {\n            account,\n            instance,\n          };\n        }\n      }}\n    >\n      <Avatar\n        url={useAvatarStatic ? avatarStatic : avatar || avatarStatic}\n        size={avatarSize}\n        squircle={bot}\n      />\n      <span class=\"account-block-content\">\n        {!hideDisplayName && (\n          <>\n            {displayName ? (\n              <b>\n                <EmojiText text={displayName} emojis={emojis} />\n              </b>\n            ) : (\n              <b>{username}</b>\n            )}\n          </>\n        )}{' '}\n        <span class=\"account-block-acct\">\n          @{acct1}\n          <wbr />\n          {acct2}\n        </span>\n        {showActivity && (\n          <>\n            <br />\n            <small class=\"last-status-at insignificant\">\n              Posts: {statusesCount}\n              {!!lastStatusAt && (\n                <>\n                  {' '}\n                  &middot; Last posted:{' '}\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </>\n              )}\n            </small>\n          </>\n        )}\n        {showStats && (\n          <div class=\"account-block-stats\">\n            {bot && (\n              <>\n                <span class=\"tag collapsed\">\n                  <Icon icon=\"bot\" /> Automated\n                </span>\n              </>\n            )}\n            {!!group && (\n              <>\n                <span class=\"tag collapsed\">\n                  <Icon icon=\"group\" /> Group\n                </span>\n              </>\n            )}\n            {hasRelationship && (\n              <div key={relationship.id} class=\"shazam-container-horizontal\">\n                <div class=\"shazam-container-inner\">\n                  {excludedRelationship.following &&\n                  excludedRelationship.followedBy ? (\n                    <span class=\"tag minimal\">Mutual</span>\n                  ) : excludedRelationship.requested ? (\n                    <span class=\"tag minimal\">Requested</span>\n                  ) : excludedRelationship.following ? (\n                    <span class=\"tag minimal\">Following</span>\n                  ) : excludedRelationship.followedBy ? (\n                    <span class=\"tag minimal\">Follows you</span>\n                  ) : null}\n                </div>\n              </div>\n            )}\n            {!!followersCount && (\n              <span class=\"ib\">\n                {shortenNumber(followersCount)}{' '}\n                {followersCount === 1 ? 'follower' : 'followers'}\n              </span>\n            )}\n            {!!verifiedField && (\n              <span class=\"verified-field\">\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(verifiedField.value, { emojis }),\n                  }}\n                />\n              </span>\n            )}\n            {!bot &&\n              !group &&\n              !hasRelationship &&\n              !followersCount &&\n              !verifiedField &&\n              !!createdAt && (\n                <span class=\"created-at\">\n                  Joined{' '}\n                  <time datetime={createdAt}>\n                    {niceDateTime(createdAt, {\n                      hideTime: true,\n                    })}\n                  </time>\n                </span>\n              )}\n          </div>\n        )}\n      </span>\n    </a>\n  );\n}\n\nexport default AccountBlock;\n","import { satisfies } from 'compare-versions';\n\nimport features from '../data/features.json';\n\nimport { getCurrentInstance } from './store-utils';\n\nconst supportsCache = {};\n\nfunction supports(feature) {\n  try {\n    const { version, domain } = getCurrentInstance();\n    const key = `${domain}-${feature}`;\n    if (supportsCache[key]) return supportsCache[key];\n    const range = features[feature];\n    if (!range) return false;\n    return (supportsCache[key] = satisfies(version, range, {\n      includePrerelease: true,\n      loose: true,\n    }));\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default supports;\n","import './translation-block.css';\n\nimport pRetry from 'p-retry';\nimport pThrottle from 'p-throttle';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport sourceLanguages from '../data/lingva-source-languages';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport pmem from '../utils/pmem';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nconst { PHANPY_LINGVA_INSTANCES } = import.meta.env;\nconst LINGVA_INSTANCES = PHANPY_LINGVA_INSTANCES\n  ? PHANPY_LINGVA_INSTANCES.split(/\\s+/)\n  : [];\n\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 2000,\n});\n\nlet currentLingvaInstance = 0;\n\nfunction _lingvaTranslate(text, source, target) {\n  console.log('TRANSLATE', text, source, target);\n  const fetchCall = () => {\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\n    return fetch(\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\n        text,\n      )}`,\n    )\n      .then((res) => {\n        if (!res.ok) throw new Error(res.statusText);\n        return res.json();\n      })\n      .then((res) => {\n        return {\n          provider: 'lingva',\n          content: res.translation,\n          detectedSourceLanguage: res.info?.detectedSource,\n          info: res.info,\n        };\n      });\n  };\n  return pRetry(fetchCall, {\n    retries: 3,\n    onFailedAttempt: (e) => {\n      currentLingvaInstance =\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\n      console.log(\n        'Retrying translation with another instance',\n        currentLingvaInstance,\n      );\n    },\n  });\n  // return masto.v1.statuses.$select(id).translate({\n  //   lang: DEFAULT_LANG,\n  // });\n}\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\nconst lingvaTranslate = pmem(_lingvaTranslate, {\n  maxAge: TRANSLATED_MAX_AGE,\n});\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\n  // I know, this is double-layered memoization\n  maxAge: TRANSLATED_MAX_AGE,\n});\n\nfunction TranslationBlock({\n  forceTranslate,\n  sourceLanguage,\n  onTranslate,\n  text = '',\n  mini,\n}) {\n  const targetLang = getTranslateTargetLanguage(true);\n  const [uiState, setUIState] = useState('default');\n  const [pronunciationContent, setPronunciationContent] = useState(null);\n  const [translatedContent, setTranslatedContent] = useState(null);\n  const [detectedLang, setDetectedLang] = useState(null);\n  const detailsRef = useRef();\n\n  const sourceLangText = sourceLanguage\n    ? localeCode2Text(sourceLanguage)\n    : null;\n  const targetLangText = localeCode2Text(targetLang);\n  const apiSourceLang = useRef('auto');\n\n  if (!onTranslate) {\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\n  }\n\n  const translate = async () => {\n    setUIState('loading');\n    try {\n      const { content, detectedSourceLanguage, provider, error, ...props } =\n        await onTranslate(text, apiSourceLang.current, targetLang);\n      if (content) {\n        if (detectedSourceLanguage) {\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\n          setDetectedLang(detectedLangText);\n        }\n        if (provider === 'lingva') {\n          const pronunciation = props?.info?.pronunciation?.query;\n          if (pronunciation) {\n            setPronunciationContent(pronunciation);\n          }\n        }\n        setTranslatedContent(content);\n        setUIState('default');\n        if (!mini && content.trim() !== text.trim()) {\n          detailsRef.current.open = true;\n          detailsRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      } else {\n        if (error) console.error(error);\n        setUIState('error');\n      }\n    } catch (e) {\n      console.error(e);\n      setUIState('error');\n    }\n  };\n\n  useEffect(() => {\n    if (forceTranslate) {\n      translate();\n    }\n  }, [forceTranslate]);\n\n  if (mini) {\n    if (\n      !!translatedContent &&\n      translatedContent.trim() !== text.trim() &&\n      detectedLang !== targetLangText\n    ) {\n      return (\n        <div class=\"shazam-container\">\n          <div class=\"shazam-container-inner\">\n            <div class=\"status-translation-block-mini\">\n              <Icon\n                icon=\"translate\"\n                alt={`Auto-translated from ${sourceLangText}`}\n              />\n              <output\n                lang={targetLang}\n                dir=\"auto\"\n                title={pronunciationContent || ''}\n              >\n                {translatedContent}\n              </output>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div\n      class=\"status-translation-block\"\n      onClick={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <details ref={detailsRef}>\n        <summary>\n          <button\n            type=\"button\"\n            onClick={async (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              detailsRef.current.open = !detailsRef.current.open;\n              if (uiState === 'loading') return;\n              if (!translatedContent) translate();\n            }}\n          >\n            <Icon icon=\"translate\" />{' '}\n            <span>\n              {uiState === 'loading'\n                ? 'Translating…'\n                : sourceLanguage && sourceLangText && !detectedLang\n                ? `Translate from ${sourceLangText}`\n                : `Translate`}\n            </span>\n          </button>\n        </summary>\n        <div class=\"translated-block\">\n          <div class=\"translation-info insignificant\">\n            <select\n              class=\"translated-source-select\"\n              disabled={uiState === 'loading'}\n              onChange={(e) => {\n                apiSourceLang.current = e.target.value;\n                translate();\n              }}\n            >\n              {sourceLanguages.map((l) => (\n                <option value={l.code}>\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\n                </option>\n              ))}\n            </select>{' '}\n            <span>→ {targetLangText}</span>\n            <Loader abrupt hidden={uiState !== 'loading'} />\n          </div>\n          {uiState === 'error' ? (\n            <p class=\"ui-state\">Failed to translate</p>\n          ) : (\n            !!translatedContent && (\n              <>\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\n                  {translatedContent}\n                </output>\n                {!!pronunciationContent && (\n                  <output\n                    class=\"translated-pronunciation-content\"\n                    tabIndex={-1}\n                    onClick={(e) => {\n                      e.target.classList.toggle('expand');\n                    }}\n                  >\n                    {pronunciationContent}\n                  </output>\n                )}\n              </>\n            )\n          )}\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default LINGVA_INSTANCES?.length ? TranslationBlock : () => null;\n","import {\n  clear,\n  createStore,\n  del,\n  delMany,\n  get,\n  getMany,\n  keys,\n  set,\n} from 'idb-keyval';\n\nfunction initDB(dbName, storeName) {\n  const store = createStore(dbName, storeName);\n  return {\n    set: (key, val) => set(key, val, store),\n    get: (key) => get(key, store),\n    getMany: (keys) => getMany(keys, store),\n    del: (key) => del(key, store),\n    delMany: (keys) => delMany(keys, store),\n    clear: () => clear(store),\n    keys: () => keys(store),\n  };\n}\n\nexport default {\n  drafts: initDB('drafts-db', 'drafts-store'),\n  catchup: initDB('catchup-db', 'catchup-store'),\n};\n","export default {\n  public: 'earth',\n  unlisted: 'group',\n  private: 'lock',\n  direct: 'message',\n};\n","import { useState } from 'preact/hooks';\n\nimport shortenNumber from '../utils/shorten-number';\n\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport RelativeTime from './relative-time';\n\nexport default function Poll({\n  poll,\n  lang,\n  readOnly,\n  refresh = () => {},\n  votePoll = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const {\n    expired,\n    expiresAt,\n    id,\n    multiple,\n    options,\n    ownVotes,\n    voted,\n    votersCount,\n    votesCount,\n    emojis,\n  } = poll;\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\n  // https://stackoverflow.com/a/56718027/20838\n  // useEffect(() => {\n  //   let timeout;\n  //   if (!expired && expiresAtDate) {\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\n  //     if (ms > 0) {\n  //       timeout = setTimeout(() => {\n  //         setUIState('loading');\n  //         (async () => {\n  //           // await refresh();\n  //           setUIState('default');\n  //         })();\n  //       }, ms);\n  //     }\n  //   }\n  //   return () => {\n  //     clearTimeout(timeout);\n  //   };\n  // }, [expired, expiresAtDate]);\n\n  const pollVotesCount = votersCount || votesCount;\n  let roundPrecision = 0;\n\n  if (pollVotesCount <= 1000) {\n    roundPrecision = 0;\n  } else if (pollVotesCount <= 10000) {\n    roundPrecision = 1;\n  } else if (pollVotesCount <= 100000) {\n    roundPrecision = 2;\n  }\n\n  const [showResults, setShowResults] = useState(false);\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\n\n  return (\n    <div\n      lang={lang}\n      dir=\"auto\"\n      class={`poll ${readOnly ? 'read-only' : ''} ${\n        uiState === 'loading' ? 'loading' : ''\n      }`}\n    >\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\n        <>\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title, votesCount: optionVotesCount } = option;\n              const percentage = pollVotesCount\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\n                    roundPrecision,\n                  )\n                : 0; // check if current poll choice is the leading one\n\n              const isLeading =\n                optionVotesCount > 0 &&\n                optionVotesCount ===\n                  Math.max(...options.map((o) => o.votesCount));\n              return (\n                <div\n                  key={`${i}-${title}-${optionVotesCount}`}\n                  class={`poll-option poll-result ${\n                    isLeading ? 'poll-option-leading' : ''\n                  }`}\n                  style={{\n                    '--percentage': `${percentage}%`,\n                  }}\n                >\n                  <div class=\"poll-option-title\">\n                    <span>\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                    {voted && ownVotes.includes(i) && (\n                      <>\n                        {' '}\n                        <Icon icon=\"check-circle\" />\n                      </>\n                    )}\n                  </div>\n                  <div\n                    class=\"poll-option-votes\"\n                    title={`${optionVotesCount} vote${\n                      optionVotesCount === 1 ? '' : 's'\n                    }`}\n                  >\n                    {percentage}%\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {!expired && !voted && (\n            <button\n              class=\"poll-vote-button plain2\"\n              disabled={uiState === 'loading'}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowResults(false);\n              }}\n            >\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\n            </button>\n          )}\n        </>\n      ) : (\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const form = e.target;\n            const formData = new FormData(form);\n            const choices = [];\n            formData.forEach((value, key) => {\n              if (key === 'poll') {\n                choices.push(value);\n              }\n            });\n            if (!choices.length) return;\n            setUIState('loading');\n            await votePoll(choices);\n            setUIState('default');\n          }}\n        >\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title } = option;\n              return (\n                <div class=\"poll-option\">\n                  <label class=\"poll-label\">\n                    <input\n                      type={multiple ? 'checkbox' : 'radio'}\n                      name=\"poll\"\n                      value={i}\n                      disabled={uiState === 'loading'}\n                      readOnly={readOnly}\n                    />\n                    <span class=\"poll-option-title\">\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n          {!readOnly && (\n            <button\n              class=\"poll-vote-button\"\n              type=\"submit\"\n              disabled={uiState === 'loading'}\n            >\n              Vote\n            </button>\n          )}\n        </form>\n      )}\n      <p class=\"poll-meta\">\n        {!expired && !readOnly && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            style={{\n              marginLeft: -8,\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              setUIState('loading');\n\n              (async () => {\n                await refresh();\n                setUIState('default');\n              })();\n            }}\n            title=\"Refresh\"\n          >\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\n          </button>\n        )}\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            onClick={(e) => {\n              e.preventDefault();\n              setShowResults(!showResults);\n            }}\n            title={showResults ? 'Hide results' : 'Show results'}\n          >\n            <Icon\n              icon={showResults ? 'eye-open' : 'eye-close'}\n              alt={showResults ? 'Hide results' : 'Show results'}\n            />{' '}\n          </button>\n        )}\n        {!expired && !readOnly && ' '}\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\n        {votesCount === 1 ? '' : 's'}\n        {!!votersCount && votersCount !== votesCount && (\n          <>\n            {' '}\n            &bull; <span title={votersCount}>\n              {shortenNumber(votersCount)}\n            </span>{' '}\n            voter\n            {votersCount === 1 ? '' : 's'}\n          </>\n        )}{' '}\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\n      </p>{' '}\n    </div>\n  );\n}\n","import { createContext } from 'preact';\n\nconst FilterContext = createContext();\nexport default FilterContext;\n","import mem from './mem';\nimport store from './store';\n\nfunction _isFiltered(filtered, filterContext) {\n  if (!filtered?.length) return false;\n  const appliedFilters = filtered.filter((f) => {\n    const { filter } = f;\n    const hasContext = filter.context.includes(filterContext);\n    if (!hasContext) return false;\n    if (!filter.expiresAt) return hasContext;\n    return new Date(filter.expiresAt) > new Date();\n  });\n  if (!appliedFilters.length) return false;\n  const isHidden = appliedFilters.some((f) => f.filter.filterAction === 'hide');\n  if (isHidden)\n    return {\n      action: 'hide',\n    };\n  const isWarn = appliedFilters.some((f) => f.filter.filterAction === 'warn');\n  if (isWarn) {\n    const filterTitles = appliedFilters.map((f) => f.filter.title);\n    return {\n      action: 'warn',\n      titles: filterTitles,\n      titlesStr: filterTitles.join(' • '),\n    };\n  }\n  return false;\n}\nexport const isFiltered = mem(_isFiltered);\n\nexport function filteredItem(item, filterContext, currentAccountID) {\n  const { filtered } = item;\n  if (!filtered?.length) return true;\n  const isSelf = currentAccountID && item.account?.id === currentAccountID;\n  if (isSelf) return true;\n  const filterState = isFiltered(filtered, filterContext);\n  if (!filterState) return true;\n  if (filterState.action === 'hide') return false;\n  // item._filtered = filterState;\n  return true;\n}\nexport function filteredItems(items, filterContext) {\n  if (!items?.length) return [];\n  if (!filterContext) return items;\n  const currentAccountID = store.session.get('currentAccount');\n  return items.filter((item) =>\n    filteredItem(item, filterContext, currentAccountID),\n  );\n}\n","const div = document.createElement('div');\nexport default function htmlContentLength(html) {\n  if (!html) return 0;\n  div.innerHTML = html;\n  // .invisible spans for links\n  // e.g. <span class=\"invisible\">https://</span>mastodon.social\n  div.querySelectorAll('.invisible').forEach((el) => {\n    el.remove();\n  });\n  return div.innerText.length;\n}\n","export const supportsTTS = 'speechSynthesis' in window;\n\nexport function speak(text, lang) {\n  if (!supportsTTS) return;\n  try {\n    if (speechSynthesis.speaking) {\n      speechSynthesis.cancel();\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    if (lang) utterance.lang = lang;\n    speechSynthesis.speak(utterance);\n  } catch (e) {\n    alert(e);\n  }\n}\n","import getHTMLText from './getHTMLText';\n\nfunction statusPeek(status) {\n  const { spoilerText, content, poll, mediaAttachments } = status;\n  let text = '';\n  if (spoilerText?.trim()) {\n    text += spoilerText;\n  } else {\n    text += getHTMLText(content);\n  }\n  text = text.trim();\n  if (poll) {\n    text += ' 📊';\n  }\n  if (mediaAttachments?.length) {\n    text +=\n      ' ' +\n      mediaAttachments\n        .map(\n          (m) =>\n            ({\n              image: '🖼️',\n              gifv: '🎞️',\n              video: '📹',\n              audio: '🎵',\n              unknown: '',\n            }[m.type] || ''),\n        )\n        .join('');\n  }\n  return text;\n}\n\nexport default statusPeek;\n","import { useRef } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\nimport useResizeObserver from 'use-resize-observer';\n\nexport default function useTruncated({ className = 'truncated' } = {}) {\n  const ref = useRef();\n  const onResize = useThrottledCallback(({ height }) => {\n    if (ref.current) {\n      const { scrollHeight } = ref.current;\n      let truncated = scrollHeight > height;\n      if (truncated) {\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\n        const computedHeight = parseInt(maxHeight || _height, 10);\n        truncated = scrollHeight > computedHeight;\n      }\n      ref.current.classList.toggle(className, truncated);\n    }\n  }, 300);\n  useResizeObserver({\n    ref,\n    box: 'border-box',\n    onResize,\n  });\n  return ref;\n}\n","import { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport {\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\n\nimport mem from '../utils/mem';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Link from './link';\nimport { formatDuration } from './status';\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\n\n/*\nMedia type\n===\nunknown = unsupported or unrecognized file type\nimage = Static image\ngifv = Looping, soundless animation\nvideo = Video clip\naudio = Audio track\n*/\n\nconst dataAltLabel = 'ALT';\nconst AltBadge = (props) => {\n  const { alt, lang, index, ...rest } = props;\n  if (!alt || !alt.trim()) return null;\n  return (\n    <button\n      type=\"button\"\n      class=\"alt-badge clickable\"\n      {...rest}\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        states.showMediaAlt = {\n          alt,\n          lang,\n        };\n      }}\n      title=\"Media description\"\n    >\n      {dataAltLabel}\n      {!!index && <sup>{index}</sup>}\n    </button>\n  );\n};\n\nconst MEDIA_CAPTION_LIMIT = 140;\nexport const isMediaCaptionLong = mem((caption) =>\n  caption?.length\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\n    : false,\n);\n\nfunction Media({\n  class: className = '',\n  media,\n  to,\n  lang,\n  showOriginal,\n  autoAnimate,\n  showCaption,\n  altIndex,\n  onClick = () => {},\n}) {\n  const {\n    blurhash,\n    description,\n    meta,\n    previewRemoteUrl,\n    previewUrl,\n    remoteUrl,\n    url,\n    type,\n  } = media;\n  const { original = {}, small, focus } = meta || {};\n\n  const width = showOriginal ? original?.width : small?.width;\n  const height = showOriginal ? original?.height : small?.height;\n  const mediaURL = showOriginal ? url : previewUrl || url;\n  const remoteMediaURL = showOriginal\n    ? remoteUrl\n    : previewRemoteUrl || remoteUrl;\n  const orientation = width >= height ? 'landscape' : 'portrait';\n\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\n\n  const videoRef = useRef();\n\n  let focalPosition;\n  if (focus) {\n    // Convert focal point to CSS background position\n    // Formula from jquery-focuspoint\n    // x = -1, y = 1 => 0% 0%\n    // x = 0, y = 0 => 50% 50%\n    // x = 1, y = -1 => 100% 100%\n    const x = ((focus.x + 1) / 2) * 100;\n    const y = ((1 - focus.y) / 2) * 100;\n    focalPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\n  }\n\n  const mediaRef = useRef();\n  const onUpdate = useCallback(({ x, y, scale }) => {\n    const { current: media } = mediaRef;\n\n    if (media) {\n      const value = make3dTransformValue({ x, y, scale });\n\n      if (scale === 1) {\n        media.style.removeProperty('transform');\n      } else {\n        media.style.setProperty('transform', value);\n      }\n\n      media.closest('.media-zoom').style.touchAction =\n        scale <= 1.01 ? 'pan-x' : '';\n    }\n  }, []);\n\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\n  const quickPinchZoomProps = {\n    enabled: pinchZoomEnabled,\n    draggableUnZoomed: false,\n    inertiaFriction: 0.9,\n    doubleTapZoomOutOnMaxScale: true,\n    containerProps: {\n      className: 'media-zoom',\n      style: {\n        overflow: 'visible',\n        //   width: 'inherit',\n        //   height: 'inherit',\n        //   justifyContent: 'inherit',\n        //   alignItems: 'inherit',\n        //   display: 'inherit',\n      },\n    },\n    onUpdate,\n  };\n\n  const Parent = useMemo(\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\n    [to],\n  );\n\n  const remoteMediaURLObj = remoteMediaURL ? new URL(remoteMediaURL) : null;\n  const isVideoMaybe =\n    type === 'unknown' &&\n    remoteMediaURLObj &&\n    /\\.(mp4|m4r|m4v|mov|webm)$/i.test(remoteMediaURLObj.pathname);\n  const isAudioMaybe =\n    type === 'unknown' &&\n    remoteMediaURLObj &&\n    /\\.(mp3|ogg|wav|m4a|m4p|m4b)$/i.test(remoteMediaURLObj.pathname);\n  const isImage =\n    type === 'image' ||\n    (type === 'unknown' && previewUrl && !isVideoMaybe && !isAudioMaybe);\n\n  const parentRef = useRef();\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\n  useLayoutEffect(() => {\n    if (!isImage) return;\n    if (!showOriginal) return;\n    if (!parentRef.current) return;\n    const { offsetWidth, offsetHeight } = parentRef.current;\n    const smaller = width < offsetWidth && height < offsetHeight;\n    if (smaller) setImageSmallerThanParent(smaller);\n  }, [width, height]);\n\n  const maxAspectHeight =\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\n  const averageColorStyle = {\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n  };\n  const mediaStyles =\n    width && height\n      ? {\n          '--width': `${width}px`,\n          '--height': `${height}px`,\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\n          '--aspectWidth': `${\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\n          }px`,\n          aspectRatio: `${width} / ${height}`,\n          ...averageColorStyle,\n        }\n      : {\n          ...averageColorStyle,\n        };\n\n  const longDesc = isMediaCaptionLong(description);\n  const showInlineDesc =\n    !!showCaption && !showOriginal && !!description && !longDesc;\n  const Figure = !showInlineDesc\n    ? Fragment\n    : (props) => {\n        const { children, ...restProps } = props;\n        return (\n          <figure {...restProps}>\n            {children}\n            <figcaption\n              class=\"media-caption\"\n              lang={lang}\n              dir=\"auto\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                states.showMediaAlt = {\n                  alt: description,\n                  lang,\n                };\n              }}\n            >\n              {description}\n            </figcaption>\n          </figure>\n        );\n      };\n\n  if (isImage) {\n    // Note: type: unknown might not have width/height\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\n\n    useLayoutEffect(() => {\n      if (!isSafari) return;\n      if (!showOriginal) return;\n      (async () => {\n        try {\n          await fetch(mediaURL, { mode: 'no-cors' });\n          mediaRef.current.src = mediaURL;\n        } catch (e) {\n          // Ignore\n        }\n      })();\n    }, [mediaURL]);\n\n    return (\n      <Figure>\n        <Parent\n          ref={parentRef}\n          class={`media media-image ${className}`}\n          onClick={onClick}\n          data-orientation={orientation}\n          data-has-alt={!showInlineDesc}\n          style={\n            showOriginal\n              ? {\n                  backgroundImage: `url(${previewUrl})`,\n                  backgroundSize: imageSmallerThanParent\n                    ? `${width}px ${height}px`\n                    : undefined,\n                  ...averageColorStyle,\n                }\n              : mediaStyles\n          }\n        >\n          {showOriginal ? (\n            <QuickPinchZoom {...quickPinchZoomProps}>\n              <img\n                ref={mediaRef}\n                src={mediaURL}\n                alt={description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"eager\"\n                decoding=\"sync\"\n                onLoad={(e) => {\n                  e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.closest('.media-zoom').style.display = '';\n                  setPinchZoomEnabled(true);\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n            </QuickPinchZoom>\n          ) : (\n            <>\n              <img\n                src={mediaURL}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n                style={{\n                  // backgroundColor:\n                  //   rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n                  // backgroundPosition: focalBackgroundPosition || 'center',\n                  // Duration based on width or height in pixels\n                  objectPosition: focalPosition || 'center',\n                  // 100px per second (rough estimate)\n                  // Clamp between 5s and 120s\n                  '--anim-duration': `${Math.min(\n                    Math.max(Math.max(width, height) / 100, 5),\n                    120,\n                  )}s`,\n                }}\n                onLoad={(e) => {\n                  // e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.dataset.loaded = true;\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL && mediaURL !== remoteMediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\n    const shortDuration = original.duration < 31;\n    const isGIF = type === 'gifv' && shortDuration;\n    // If GIF is too long, treat it as a video\n    const loopable = original.duration < 61;\n    const formattedDuration = formatDuration(original.duration);\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\n    const showProgress = original.duration > 5;\n\n    const videoHTML = `\n    <video\n      src=\"${url}\"\n      poster=\"${previewUrl}\"\n      width=\"${width}\"\n      height=\"${height}\"\n      data-orientation=\"${orientation}\"\n      preload=\"auto\"\n      autoplay\n      muted=\"${isGIF}\"\n      ${isGIF ? '' : 'controls'}\n      playsinline\n      loop=\"${loopable}\"\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\n      ${\n        isGIF && showProgress\n          ? \"ontimeupdate=\\\"this.closest('.media-gif') && this.closest('.media-gif').style.setProperty('--progress', `${~~((this.currentTime / this.duration) * 100)}%`)\\\"\"\n          : ''\n      }\n    ></video>\n  `;\n\n    return (\n      <Figure>\n        <Parent\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\n            autoGIFAnimate ? 'media-contain' : ''\n          } ${hoverAnimate ? 'media-hover-animate' : ''}`}\n          data-orientation={orientation}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\n          data-has-alt={!showInlineDesc}\n          // style={{\n          //   backgroundColor:\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n          // }}\n          style={!showOriginal && mediaStyles}\n          onClick={(e) => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n            onClick(e);\n          }}\n          onMouseEnter={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onMouseLeave={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n          onFocus={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onBlur={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n        >\n          {showOriginal || autoGIFAnimate ? (\n            isGIF && showOriginal ? (\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\n                <div\n                  ref={mediaRef}\n                  dangerouslySetInnerHTML={{\n                    __html: videoHTML,\n                  }}\n                />\n              </QuickPinchZoom>\n            ) : (\n              <div\n                class=\"video-container\"\n                dangerouslySetInnerHTML={{\n                  __html: videoHTML,\n                }}\n              />\n            )\n          ) : isGIF ? (\n            <video\n              ref={videoRef}\n              src={url}\n              poster={previewUrl}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              preload=\"auto\"\n              // controls\n              playsinline\n              loop\n              muted\n              onTimeUpdate={\n                showProgress\n                  ? (e) => {\n                      const { target } = e;\n                      const container = target?.closest('.media-gif');\n                      if (container) {\n                        const percentage =\n                          (target.currentTime / target.duration) * 100;\n                        container.style.setProperty(\n                          '--progress',\n                          `${percentage}%`,\n                        );\n                      }\n                    }\n                  : undefined\n              }\n            />\n          ) : (\n            <>\n              <img\n                src={previewUrl}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n              />\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n            </>\n          )}\n          {!showOriginal && !showInlineDesc && (\n            <AltBadge alt={description} lang={lang} index={altIndex} />\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'audio' || isAudioMaybe) {\n    const formattedDuration = formatDuration(original.duration);\n    return (\n      <Figure>\n        <Parent\n          class={`media media-audio ${className}`}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-has-alt={!showInlineDesc}\n          onClick={onClick}\n          style={!showOriginal && mediaStyles}\n        >\n          {showOriginal ? (\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\n          ) : previewUrl ? (\n            <img\n              src={previewUrl}\n              alt={showInlineDesc ? '' : description}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              loading=\"lazy\"\n              onError={(e) => {\n                try {\n                  // Remove self if broken\n                  e.target?.remove?.();\n                } catch (e) {}\n              }}\n            />\n          ) : null}\n          {!showOriginal && (\n            <>\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  }\n}\n\nexport default Media;\n","import { FocusableItem } from '@szhsin/react-menu';\n\nimport Link from './link';\n\nfunction MenuLink(props) {\n  return (\n    <FocusableItem>\n      {({ ref, closeMenu }) => (\n        <Link\n          {...props}\n          ref={ref}\n          onClick={({ detail }) =>\n            closeMenu(detail === 0 ? 'Enter' : undefined)\n          }\n        />\n      )}\n    </FocusableItem>\n  );\n}\n\nexport default MenuLink;\n","import './status.css';\n\nimport '@justinribeiro/lite-youtube';\nimport {\n  ControlledMenu,\n  Menu,\n  MenuDivider,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { decodeBlurHash, getBlurHashAverageColor } from 'fast-blurhash';\nimport { shallowEqual } from 'fast-equals';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport EmojiText from '../components/emoji-text';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport Poll from '../components/poll';\nimport { api } from '../utils/api';\nimport emojifyText from '../utils/emojify-text';\nimport enhanceContent from '../utils/enhance-content';\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport htmlContentLength from '../utils/html-content-length';\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\nimport localeMatch from '../utils/locale-match';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport unfurlMastodonLink from '../utils/unfurl-link';\nimport useTruncated from '../utils/useTruncated';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport { isMediaCaptionLong } from './media';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport TranslationBlock from './translation-block';\n\nconst SHOW_COMMENT_COUNT_LIMIT = 280;\nconst INLINE_TRANSLATE_LIMIT = 140;\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount);\n\nconst visibilityText = {\n  public: 'Public',\n  unlisted: 'Unlisted',\n  private: 'Followers only',\n  direct: 'Private mention',\n};\n\nconst isIOS =\n  window.ontouchstart !== undefined &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent);\n\nconst REACTIONS_LIMIT = 80;\n\nfunction getPollText(poll) {\n  if (!poll?.options?.length) return '';\n  return `📊:\\n${poll.options\n    .map(\n      (option) =>\n        `- ${option.title}${\n          option.votesCount >= 0 ? ` (${option.votesCount})` : ''\n        }`,\n    )\n    .join('\\n')}`;\n}\nfunction getPostText(status) {\n  const { spoilerText, content, poll } = status;\n  return (\n    (spoilerText ? `${spoilerText}\\n\\n` : '') +\n    getHTMLText(content) +\n    getPollText(poll)\n  );\n}\n\nconst PostContent = memo(\n  ({ post, instance, previewMode }) => {\n    const { content, emojis, language, mentions, url } = post;\n    return (\n      <div\n        lang={language}\n        dir=\"auto\"\n        class=\"inner-content\"\n        onClick={handleContentLinks({\n          mentions,\n          instance,\n          previewMode,\n          statusURL: url,\n        })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n            postEnhanceDOM: (dom) => {\n              // Remove target=\"_blank\" from links\n              dom.querySelectorAll('a.u-url[target=\"_blank\"]').forEach((a) => {\n                if (!/http/i.test(a.innerText.trim())) {\n                  a.removeAttribute('target');\n                }\n              });\n            },\n          }),\n        }}\n      />\n    );\n  },\n  (oldProps, newProps) => {\n    const { post: oldPost } = oldProps;\n    const { post: newPost } = newProps;\n    return oldPost.content === newPost.content;\n  },\n);\n\nfunction Status({\n  statusID,\n  status,\n  instance: propInstance,\n  size = 'm',\n  contentTextWeight,\n  readOnly,\n  enableCommentHint,\n  withinContext,\n  skeleton,\n  enableTranslate,\n  forceTranslate: _forceTranslate,\n  previewMode,\n  // allowFilters,\n  onMediaClick,\n  quoted,\n  onStatusLinkClick = () => {},\n  showFollowedTags,\n  allowContextMenu,\n  showActionsBar,\n  showReplyParent,\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"status skeleton\">\n        <Avatar size=\"xxl\" />\n        <div class=\"container\">\n          <div class=\"meta\">███ ████████</div>\n          <div class=\"content-container\">\n            <div class=\"content\">\n              <p>████ ████████</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const { instance: currentInstance } = api();\n  const sameInstance = instance === currentInstance;\n\n  let sKey = statusKey(statusID || status?.id, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    tags,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  const currentAccount = useMemo(() => {\n    return store.session.get('currentAccount');\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo =\n    !isSelf && !readOnly && !previewMode && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  if (/*allowFilters && */ size !== 'l' && filterInfo) {\n    return (\n      <FilteredStatus\n        status={status}\n        filterInfo={filterInfo}\n        instance={instance}\n        containerProps={{\n          onMouseEnter: debugHover,\n        }}\n        showFollowedTags\n      />\n    );\n  }\n\n  const createdAtDate = new Date(createdAt);\n  const editedAtDate = new Date(editedAt);\n\n  let inReplyToAccountRef = mentions?.find(\n    (mention) => mention.id === inReplyToAccountId,\n  );\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\n    inReplyToAccountRef = { url: accountURL, username, displayName };\n  }\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\n    const account = states.accounts[inReplyToAccountId];\n    if (account) {\n      setInReplyToAccount(account);\n    } else {\n      memFetchAccount(inReplyToAccountId, masto)\n        .then((account) => {\n          setInReplyToAccount(account);\n          states.accounts[account.id] = account;\n        })\n        .catch((e) => {});\n    }\n  }\n  const mentionSelf =\n    inReplyToAccountId === currentAccount ||\n    mentions?.find((mention) => mention.id === currentAccount);\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    // Ignore hide_all because it means hide *ALL* media including non-sensitive ones\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media'] || 'default';\n  }, []);\n  // FOR TESTING:\n  // const readingExpandSpoilers = true;\n  // const readingExpandMedia = 'show_all';\n  const showSpoiler =\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id];\n  const showSpoilerMedia =\n    previewMode ||\n    readingExpandMedia === 'show_all' ||\n    !!snapStates.spoilersMedia[id];\n\n  if (reblog) {\n    // If has statusID, means useItemID (cached in states)\n\n    if (group) {\n      return (\n        <div\n          data-state-post-id={sKey}\n          class=\"status-group\"\n          onMouseEnter={debugHover}\n        >\n          <div class=\"status-pre-meta\">\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\n            <NameText account={status.account} instance={instance} showAvatar />\n          </div>\n          <Status\n            status={statusID ? null : reblog}\n            statusID={statusID ? reblog.id : null}\n            instance={instance}\n            size={size}\n            contentTextWeight={contentTextWeight}\n            readOnly={readOnly}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div\n        data-state-post-id={sKey}\n        class=\"status-reblog\"\n        onMouseEnter={debugHover}\n      >\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\n          <span>boosted</span>\n        </div>\n        <Status\n          status={statusID ? null : reblog}\n          statusID={statusID ? reblog.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n          readOnly={readOnly}\n          enableCommentHint\n        />\n      </div>\n    );\n  }\n\n  // Check followedTags\n  if (showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length) {\n    return (\n      <div\n        data-state-post-id={sKey}\n        class=\"status-followed-tags\"\n        onMouseEnter={debugHover}\n      >\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"hashtag\" size=\"l\" />{' '}\n          {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\n            <Link\n              key={tag}\n              to={instance ? `/${instance}/t/${tag}` : `/t/${tag}`}\n              class=\"status-followed-tag-item\"\n            >\n              {tag}\n            </Link>\n          ))}\n        </div>\n        <Status\n          status={statusID ? null : status}\n          statusID={statusID ? status.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n          readOnly={readOnly}\n          enableCommentHint\n        />\n      </div>\n    );\n  }\n\n  const isSizeLarge = size === 'l';\n\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const { contentTranslation, contentTranslationAutoInline } =\n    snapStates.settings;\n  if (!contentTranslation) enableTranslate = false;\n  const inlineTranslate = useMemo(() => {\n    if (\n      !contentTranslation ||\n      !contentTranslationAutoInline ||\n      readOnly ||\n      (withinContext && !isSizeLarge) ||\n      previewMode ||\n      spoilerText ||\n      sensitive ||\n      poll ||\n      card ||\n      mediaAttachments?.length\n    ) {\n      return false;\n    }\n    const contentLength = htmlContentLength(content);\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\n  }, [\n    contentTranslation,\n    contentTranslationAutoInline,\n    readOnly,\n    withinContext,\n    isSizeLarge,\n    previewMode,\n    spoilerText,\n    sensitive,\n    poll,\n    card,\n    mediaAttachments,\n    content,\n  ]);\n\n  const [showEdited, setShowEdited] = useState(false);\n\n  const spoilerContentRef = useTruncated();\n  const contentRef = useTruncated();\n  const mediaContainerRef = useTruncated();\n  const readMoreText = 'Read more →';\n\n  const statusRef = useRef(null);\n\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\n\n  const textWeight = useCallback(\n    () =>\n      Math.max(\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\n          1,\n        1,\n      ),\n    [spoilerText, content],\n  );\n\n  const createdDateText = niceDateTime(createdAtDate);\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\n\n  // Can boost if:\n  // - authenticated AND\n  // - visibility != direct OR\n  // - visibility = private AND isSelf\n  let canBoost =\n    authenticated && visibility !== 'direct' && visibility !== 'private';\n  if (visibility === 'private' && isSelf) {\n    canBoost = true;\n  }\n\n  const replyStatus = (e) => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    // syntheticEvent comes from MenuItem\n    if (e?.shiftKey || e?.syntheticEvent?.shiftKey) {\n      const newWin = openCompose({\n        replyToStatus: status,\n      });\n      if (newWin) return;\n    }\n    states.showCompose = {\n      replyToStatus: status,\n    };\n  };\n\n  // Check if media has no descriptions\n  const mediaNoDesc = useMemo(() => {\n    return mediaAttachments.some(\n      (attachment) => !attachment.description?.trim?.(),\n    );\n  }, [mediaAttachments]);\n  const boostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      if (!reblogged) {\n        let confirmText = 'Boost this post?';\n        if (mediaNoDesc) {\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\n        }\n        const yes = confirm(confirmText);\n        if (!yes) {\n          return false;\n        }\n      }\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const confirmBoostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n\n  const favouriteStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        favourited: !favourited,\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\n      };\n      if (favourited) {\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const favouriteStatusNotify = async () => {\n    try {\n      const done = await favouriteStatus();\n      if (!isSizeLarge && done) {\n        showToast(\n          favourited\n            ? `Unliked @${username || acct}'s post`\n            : `Liked @${username || acct}'s post`,\n        );\n      }\n    } catch (e) {}\n  };\n\n  const bookmarkStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        bookmarked: !bookmarked,\n      };\n      if (bookmarked) {\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\n        saveStatus(newStatus, instance);\n      }\n      return true;\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const bookmarkStatusNotify = async () => {\n    try {\n      const done = await bookmarkStatus();\n      if (!isSizeLarge && done) {\n        showToast(\n          bookmarked\n            ? `Unbookmarked @${username || acct}'s post`\n            : `Bookmarked @${username || acct}'s post`,\n        );\n      }\n    } catch (e) {}\n  };\n\n  const differentLanguage =\n    !!language &&\n    language !== targetLanguage &&\n    !localeMatch([language], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => language === l || localeMatch([language], [l]),\n    );\n\n  const reblogIterator = useRef();\n  const favouriteIterator = useRef();\n  async function fetchBoostedLikedByAccounts(firstLoad) {\n    if (firstLoad) {\n      reblogIterator.current = masto.v1.statuses\n        .$select(statusID)\n        .rebloggedBy.list({\n          limit: REACTIONS_LIMIT,\n        });\n      favouriteIterator.current = masto.v1.statuses\n        .$select(statusID)\n        .favouritedBy.list({\n          limit: REACTIONS_LIMIT,\n        });\n    }\n    const [{ value: reblogResults }, { value: favouriteResults }] =\n      await Promise.allSettled([\n        reblogIterator.current.next(),\n        favouriteIterator.current.next(),\n      ]);\n    if (reblogResults.value?.length || favouriteResults.value?.length) {\n      const accounts = [];\n      if (reblogResults.value?.length) {\n        accounts.push(\n          ...reblogResults.value.map((a) => {\n            a._types = ['reblog'];\n            return a;\n          }),\n        );\n      }\n      if (favouriteResults.value?.length) {\n        accounts.push(\n          ...favouriteResults.value.map((a) => {\n            a._types = ['favourite'];\n            return a;\n          }),\n        );\n      }\n      return {\n        value: accounts,\n        done: reblogResults.done && favouriteResults.done,\n      };\n    }\n    return {\n      value: [],\n      done: true,\n    };\n  }\n\n  const actionsRef = useRef();\n  const StatusMenuItems = (\n    <>\n      {isSizeLarge && (\n        <>\n          <MenuItem\n            onClick={() => {\n              states.showGenericAccounts = {\n                heading: 'Boosted/Liked by…',\n                fetchAccounts: fetchBoostedLikedByAccounts,\n                instance,\n                showReactions: true,\n              };\n            }}\n          >\n            <Icon icon=\"react\" />\n            <span>\n              Boosted/Liked by<span class=\"more-insignificant\">…</span>\n            </span>\n          </MenuItem>\n        </>\n      )}\n      {!isSizeLarge && sameInstance && (\n        <>\n          <div class=\"menu-control-group-horizontal status-menu\">\n            <MenuItem onClick={replyStatus}>\n              <Icon icon=\"comment\" />\n              <span>\n                {repliesCount > 0 ? shortenNumber(repliesCount) : 'Reply'}\n              </span>\n            </MenuItem>\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"rocket\" />\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\n                </>\n              }\n              className={`menu-reblog ${reblogged ? 'checked' : ''}`}\n              menuFooter={\n                mediaNoDesc &&\n                !reblogged && (\n                  <div class=\"footer\">\n                    <Icon icon=\"alert\" />\n                    Some media have no descriptions.\n                  </div>\n                )\n              }\n              disabled={!canBoost}\n              onClick={async () => {\n                try {\n                  const done = await confirmBoostStatus();\n                  if (!isSizeLarge && done) {\n                    showToast(\n                      reblogged\n                        ? `Unboosted @${username || acct}'s post`\n                        : `Boosted @${username || acct}'s post`,\n                    );\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"rocket\" />\n              <span>\n                {reblogsCount > 0\n                  ? shortenNumber(reblogsCount)\n                  : reblogged\n                  ? 'Unboost'\n                  : 'Boost…'}\n              </span>\n            </MenuConfirm>\n            <MenuItem\n              onClick={favouriteStatusNotify}\n              className={`menu-favourite ${favourited ? 'checked' : ''}`}\n            >\n              <Icon icon=\"heart\" />\n              <span>\n                {favouritesCount > 0\n                  ? shortenNumber(favouritesCount)\n                  : favourited\n                  ? 'Unlike'\n                  : 'Like'}\n              </span>\n            </MenuItem>\n            <MenuItem\n              onClick={bookmarkStatusNotify}\n              className={`menu-bookmark ${bookmarked ? 'checked' : ''}`}\n            >\n              <Icon icon=\"bookmark\" />\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\n            </MenuItem>\n          </div>\n        </>\n      )}\n      {(enableTranslate || !language || differentLanguage) && <MenuDivider />}\n      {enableTranslate ? (\n        <div class={supportsTTS ? 'menu-horizontal' : ''}>\n          <MenuItem\n            disabled={forceTranslate}\n            onClick={() => {\n              setForceTranslate(true);\n            }}\n          >\n            <Icon icon=\"translate\" />\n            <span>Translate</span>\n          </MenuItem>\n          {supportsTTS && (\n            <MenuItem\n              onClick={() => {\n                const postText = getPostText(status);\n                if (postText) {\n                  speak(postText, language);\n                }\n              }}\n            >\n              <Icon icon=\"speak\" />\n              <span>Speak</span>\n            </MenuItem>\n          )}\n        </div>\n      ) : (\n        (!language || differentLanguage) && (\n          <div class={supportsTTS ? 'menu-horizontal' : ''}>\n            <MenuLink\n              to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\n            >\n              <Icon icon=\"translate\" />\n              <span>Translate</span>\n            </MenuLink>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  const postText = getPostText(status);\n                  if (postText) {\n                    speak(postText, language);\n                  }\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>Speak</span>\n              </MenuItem>\n            )}\n          </div>\n        )\n      )}\n      {!isSizeLarge ||\n        ((enableTranslate || !language || differentLanguage) && (\n          <MenuDivider />\n        ))}\n      {!isSizeLarge && (\n        <>\n          <MenuDivider />\n          <MenuLink\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n            onClick={(e) => {\n              onStatusLinkClick(e, status);\n            }}\n          >\n            <Icon icon=\"arrows-right\" />\n            <small>\n              View post by @{username || acct}\n              <br />\n              <span class=\"more-insignificant\">\n                {visibilityText[visibility]} • {createdDateText}\n              </span>\n            </small>\n          </MenuLink>\n        </>\n      )}\n      {!!editedAt && (\n        <>\n          <MenuItem\n            onClick={() => {\n              setShowEdited(id);\n            }}\n          >\n            <Icon icon=\"history\" />\n            <small>\n              Show Edit History\n              <br />\n              <span class=\"more-insignificant\">Edited: {editedDateText}</span>\n            </small>\n          </MenuItem>\n        </>\n      )}\n      <MenuItem href={url} target=\"_blank\">\n        <Icon icon=\"external\" />\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\n      </MenuItem>\n      <div class=\"menu-horizontal\">\n        <MenuItem\n          onClick={() => {\n            // Copy url to clipboard\n            try {\n              navigator.clipboard.writeText(url);\n              showToast('Link copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy link');\n            }\n          }}\n        >\n          <Icon icon=\"link\" />\n          <span>Copy</span>\n        </MenuItem>\n        {navigator?.share &&\n          navigator?.canShare?.({\n            url,\n          }) && (\n            <MenuItem\n              onClick={() => {\n                try {\n                  navigator.share({\n                    url,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(\"Sharing doesn't seem to work.\");\n                }\n              }}\n            >\n              <Icon icon=\"share\" />\n              <span>Share…</span>\n            </MenuItem>\n          )}\n      </div>\n      {(isSelf || mentionSelf) && <MenuDivider />}\n      {(isSelf || mentionSelf) && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [muted ? 'unmute' : 'mute']();\n              saveStatus(newStatus, instance);\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\n            } catch (e) {\n              console.error(e);\n              showToast(\n                muted\n                  ? 'Unable to unmute conversation'\n                  : 'Unable to mute conversation',\n              );\n            }\n          }}\n        >\n          {muted ? (\n            <>\n              <Icon icon=\"unmute\" />\n              <span>Unmute conversation</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"mute\" />\n              <span>Mute conversation</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && /(public|unlisted|private)/i.test(visibility) && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [_pinned ? 'unpin' : 'pin']();\n              // saveStatus(newStatus, instance);\n              showToast(\n                _pinned\n                  ? 'Post unpinned from profile'\n                  : 'Post pinned to profile',\n              );\n            } catch (e) {\n              console.error(e);\n              showToast(\n                _pinned ? 'Unable to unpin post' : 'Unable to pin post',\n              );\n            }\n          }}\n        >\n          {_pinned ? (\n            <>\n              <Icon icon=\"unpin\" />\n              <span>Unpin from profile</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"pin\" />\n              <span>Pin to profile</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && (\n        <div class=\"menu-horizontal\">\n          <MenuItem\n            onClick={() => {\n              states.showCompose = {\n                editStatus: status,\n              };\n            }}\n          >\n            <Icon icon=\"pencil\" />\n            <span>Edit</span>\n          </MenuItem>\n          {isSizeLarge && (\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"trash\" />\n                  <span>Delete this post?</span>\n                </>\n              }\n              menuItemClassName=\"danger\"\n              onClick={() => {\n                // const yes = confirm('Delete this post?');\n                // if (yes) {\n                (async () => {\n                  try {\n                    await masto.v1.statuses.$select(id).remove();\n                    const cachedStatus = getStatus(id, instance);\n                    cachedStatus._deleted = true;\n                    showToast('Deleted');\n                  } catch (e) {\n                    console.error(e);\n                    showToast('Unable to delete');\n                  }\n                })();\n                // }\n              }}\n            >\n              <Icon icon=\"trash\" />\n              <span>Delete…</span>\n            </MenuConfirm>\n          )}\n        </div>\n      )}\n      {!isSelf && isSizeLarge && (\n        <>\n          <MenuDivider />\n          <MenuItem\n            className=\"danger\"\n            onClick={() => {\n              states.showReportModal = {\n                account: status.account,\n                post: status,\n              };\n            }}\n          >\n            <Icon icon=\"flag\" />\n            <span>Report post…</span>\n          </MenuItem>\n        </>\n      )}\n    </>\n  );\n\n  const contextMenuRef = useRef();\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuProps, setContextMenuProps] = useState({});\n\n  const showContextMenu =\n    allowContextMenu || (!isSizeLarge && !previewMode && !_deleted && !quoted);\n\n  // Only iOS/iPadOS browsers don't support contextmenu\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\n  const bindLongPressContext = useLongPress(\n    isIOS && showContextMenu\n      ? (e) => {\n          if (e.pointerType === 'mouse') return;\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\n\n          const { clientX, clientY } = e.touches?.[0] || e;\n          // link detection copied from onContextMenu because here it works\n          const link = e.target.closest('a');\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: clientX,\n              y: clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }\n      : null,\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const hotkeysEnabled = !readOnly && !previewMode && !quoted;\n  const rRef = useHotkeys('r, shift+r', replyStatus, {\n    enabled: hotkeysEnabled,\n  });\n  const fRef = useHotkeys('f, l', favouriteStatusNotify, {\n    enabled: hotkeysEnabled,\n  });\n  const dRef = useHotkeys('d', bookmarkStatusNotify, {\n    enabled: hotkeysEnabled,\n  });\n  const bRef = useHotkeys(\n    'shift+b',\n    () => {\n      (async () => {\n        try {\n          const done = await confirmBoostStatus();\n          if (!isSizeLarge && done) {\n            showToast(\n              reblogged\n                ? `Unboosted @${username || acct}'s post`\n                : `Boosted @${username || acct}'s post`,\n            );\n          }\n        } catch (e) {}\n      })();\n    },\n    {\n      enabled: hotkeysEnabled && canBoost,\n    },\n  );\n  const xRef = useHotkeys('x', (e) => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const spoilerButton = activeStatus.querySelector(\n        '.spoiler-button:not(.spoiling)',\n      );\n      if (spoilerButton) {\n        e.stopPropagation();\n        spoilerButton.click();\n      } else {\n        const spoilerMediaButton = activeStatus.querySelector(\n          '.spoiler-media-button:not(.spoiling)',\n        );\n        if (spoilerMediaButton) {\n          e.stopPropagation();\n          spoilerMediaButton.click();\n        }\n      }\n    }\n  });\n\n  const displayedMediaAttachments = mediaAttachments.slice(\n    0,\n    isSizeLarge ? undefined : 4,\n  );\n  const showMultipleMediaCaptions =\n    mediaAttachments.length > 1 &&\n    displayedMediaAttachments.some(\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\n    );\n  const captionChildren = useMemo(() => {\n    if (!showMultipleMediaCaptions) return null;\n    const attachments = [];\n    displayedMediaAttachments.forEach((media, i) => {\n      if (!media.description) return;\n      const index = attachments.findIndex(\n        (attachment) => attachment.media.description === media.description,\n      );\n      if (index === -1) {\n        attachments.push({\n          media,\n          indices: [i],\n        });\n      } else {\n        attachments[index].indices.push(i);\n      }\n    });\n    return attachments.map(({ media, indices }) => (\n      <div\n        key={media.id}\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          states.showMediaAlt = {\n            alt: media.description,\n            lang: language,\n          };\n        }}\n        title={media.description}\n      >\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\n      </div>\n    ));\n\n    // return displayedMediaAttachments.map(\n    //   (media, i) =>\n    //     !!media.description && (\n    //       <div\n    //         key={media.id}\n    //         data-caption-index={i + 1}\n    //         onClick={(e) => {\n    //           e.preventDefault();\n    //           e.stopPropagation();\n    //           states.showMediaAlt = {\n    //             alt: media.description,\n    //             lang: language,\n    //           };\n    //         }}\n    //         title={media.description}\n    //       >\n    //         <sup>{i + 1}</sup> {media.description}\n    //       </div>\n    //     ),\n    // );\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\n\n  const isThread = useMemo(() => {\n    return (\n      (!!inReplyToId && inReplyToAccountId === status.account?.id) ||\n      !!snapStates.statusThreadNumber[sKey]\n    );\n  }, [\n    inReplyToId,\n    inReplyToAccountId,\n    status.account?.id,\n    snapStates.statusThreadNumber[sKey],\n  ]);\n\n  const showCommentHint = useMemo(() => {\n    return (\n      enableCommentHint &&\n      !isThread &&\n      !withinContext &&\n      !inReplyToId &&\n      visibility === 'public' &&\n      repliesCount > 0\n    );\n  }, [\n    enableCommentHint,\n    isThread,\n    withinContext,\n    inReplyToId,\n    repliesCount,\n    visibility,\n  ]);\n  const showCommentCount = useMemo(() => {\n    if (\n      card ||\n      poll ||\n      sensitive ||\n      spoilerText ||\n      mediaAttachments?.length ||\n      isThread ||\n      withinContext ||\n      inReplyToId ||\n      repliesCount <= 0\n    ) {\n      return false;\n    }\n    const questionRegex = /[??？︖❓❔⁇⁈⁉¿‽؟]/;\n    const containsQuestion = questionRegex.test(content);\n    if (!containsQuestion) return false;\n    const contentLength = htmlContentLength(content);\n    if (contentLength > 0 && contentLength <= SHOW_COMMENT_COUNT_LIMIT) {\n      return true;\n    }\n  }, [\n    card,\n    poll,\n    sensitive,\n    spoilerText,\n    mediaAttachments,\n    reblog,\n    isThread,\n    withinContext,\n    inReplyToId,\n    repliesCount,\n    content,\n  ]);\n\n  return (\n    <>\n      {showReplyParent && !!(inReplyToId && inReplyToAccountId) && (\n        <StatusCompact sKey={sKey} />\n      )}\n      <article\n        data-state-post-id={sKey}\n        ref={(node) => {\n          statusRef.current = node;\n          // Use parent node if it's in focus\n          // Use case: <a><status /></a>\n          // When navigating (j/k), the <a> is focused instead of <status />\n          // Hotkey binding doesn't bubble up thus this hack\n          const nodeRef =\n            node?.closest?.(\n              '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\n            ) || node;\n          rRef.current = nodeRef;\n          fRef.current = nodeRef;\n          dRef.current = nodeRef;\n          bRef.current = nodeRef;\n          xRef.current = nodeRef;\n        }}\n        tabindex=\"-1\"\n        class={`status ${\n          !withinContext && inReplyToId && inReplyToAccount\n            ? 'status-reply-to'\n            : ''\n        } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\n          {\n            s: 'small',\n            m: 'medium',\n            l: 'large',\n          }[size]\n        } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''} ${\n          isContextMenuOpen ? 'status-menu-open' : ''\n        }`}\n        onMouseEnter={debugHover}\n        onContextMenu={(e) => {\n          if (!showContextMenu) return;\n          if (e.metaKey) return;\n          // console.log('context menu', e);\n          const link = e.target.closest('a');\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\n\n          // If there's selected text, don't show custom context menu\n          const selection = window.getSelection?.();\n          if (selection.toString().length > 0) {\n            const { anchorNode } = selection;\n            if (statusRef.current?.contains(anchorNode)) {\n              return;\n            }\n          }\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: e.clientX,\n              y: e.clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }}\n        {...(showContextMenu ? bindLongPressContext() : {})}\n      >\n        {showContextMenu && (\n          <ControlledMenu\n            ref={contextMenuRef}\n            state={isContextMenuOpen ? 'open' : undefined}\n            {...contextMenuProps}\n            onClose={(e) => {\n              setIsContextMenuOpen(false);\n              // statusRef.current?.focus?.();\n              if (e?.reason === 'click') {\n                statusRef.current?.closest('[tabindex]')?.focus?.();\n              }\n            }}\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n              onClick: () => {\n                contextMenuRef.current?.closeMenu?.();\n              },\n            }}\n            overflow=\"auto\"\n            boundingBoxPadding={safeBoundingBoxPadding()}\n            unmountOnClose\n          >\n            {StatusMenuItems}\n          </ControlledMenu>\n        )}\n        {showActionsBar &&\n          size !== 'l' &&\n          !previewMode &&\n          !readOnly &&\n          !_deleted &&\n          !quoted && (\n            <div\n              class={`status-actions ${\n                isContextMenuOpen === 'actions-bar' ? 'open' : ''\n              }`}\n              ref={actionsRef}\n            >\n              <StatusButton\n                size=\"s\"\n                title=\"Reply\"\n                alt=\"Reply\"\n                class=\"reply-button\"\n                icon=\"comment\"\n                iconSize=\"m\"\n                onClick={replyStatus}\n              />\n              <StatusButton\n                size=\"s\"\n                checked={favourited}\n                title={['Like', 'Unlike']}\n                alt={['Like', 'Liked']}\n                class=\"favourite-button\"\n                icon=\"heart\"\n                iconSize=\"m\"\n                count={favouritesCount}\n                onClick={favouriteStatusNotify}\n              />\n              <button\n                type=\"button\"\n                title=\"More\"\n                class=\"plain more-button\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  setContextMenuProps({\n                    anchorRef: {\n                      current: e.currentTarget,\n                    },\n                    align: 'start',\n                    direction: 'left',\n                    gap: 0,\n                    shift: -8,\n                  });\n                  setIsContextMenuOpen('actions-bar');\n                }}\n              >\n                <Icon icon=\"more2\" size=\"m\" alt=\"More\" />\n              </button>\n            </div>\n          )}\n        {size !== 'l' && (\n          <div class=\"status-badge\">\n            {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\n            {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\n            {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\n            {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\n          </div>\n        )}\n        {size !== 's' && (\n          <a\n            href={accountURL}\n            tabindex=\"-1\"\n            // target=\"_blank\"\n            title={`@${acct}`}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              states.showAccount = {\n                account: status.account,\n                instance,\n              };\n            }}\n          >\n            <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\n          </a>\n        )}\n        <div class=\"container\">\n          <div class=\"meta\">\n            <span class=\"meta-name\">\n              <NameText\n                account={status.account}\n                instance={instance}\n                showAvatar={size === 's'}\n                showAcct={isSizeLarge}\n              />\n            </span>\n            {/* {inReplyToAccount && !withinContext && size !== 's' && (\n              <>\n                {' '}\n                <span class=\"ib\">\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\n                  <NameText account={inReplyToAccount} instance={instance} short />\n                </span>\n              </>\n            )} */}\n            {/* </span> */}{' '}\n            {size !== 'l' &&\n              (_deleted ? (\n                <span class=\"status-deleted-tag\">Deleted</span>\n              ) : url && !previewMode && !readOnly && !quoted ? (\n                <Link\n                  to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                  onClick={(e) => {\n                    if (\n                      e.metaKey ||\n                      e.ctrlKey ||\n                      e.shiftKey ||\n                      e.altKey ||\n                      e.which === 2\n                    ) {\n                      return;\n                    }\n                    e.preventDefault();\n                    e.stopPropagation();\n                    onStatusLinkClick?.(e, status);\n                    setContextMenuProps({\n                      anchorRef: {\n                        current: e.currentTarget,\n                      },\n                      align: 'end',\n                      direction: 'bottom',\n                      gap: 4,\n                    });\n                    setIsContextMenuOpen(true);\n                  }}\n                  class={`time ${\n                    isContextMenuOpen && contextMenuProps?.anchorRef\n                      ? 'is-open'\n                      : ''\n                  }`}\n                >\n                  {showCommentHint && !showCommentCount ? (\n                    <Icon\n                      icon=\"comment2\"\n                      size=\"s\"\n                      alt={`${repliesCount} ${\n                        repliesCount === 1 ? 'reply' : 'replies'\n                      }`}\n                    />\n                  ) : (\n                    <Icon\n                      icon={visibilityIconsMap[visibility]}\n                      alt={visibilityText[visibility]}\n                      size=\"s\"\n                    />\n                  )}{' '}\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                  {!previewMode && !readOnly && (\n                    <Icon icon=\"more2\" class=\"more\" />\n                  )}\n                </Link>\n              ) : (\n                // <Menu\n                //   instanceRef={menuInstanceRef}\n                //   portal={{\n                //     target: document.body,\n                //   }}\n                //   containerProps={{\n                //     style: {\n                //       // Higher than the backdrop\n                //       zIndex: 1001,\n                //     },\n                //     onClick: (e) => {\n                //       if (e.target === e.currentTarget)\n                //         menuInstanceRef.current?.closeMenu?.();\n                //     },\n                //   }}\n                //   align=\"end\"\n                //   gap={4}\n                //   overflow=\"auto\"\n                //   viewScroll=\"close\"\n                //   boundingBoxPadding=\"8 8 8 8\"\n                //   unmountOnClose\n                //   menuButton={({ open }) => (\n                //     <Link\n                //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                //       onClick={(e) => {\n                //         e.preventDefault();\n                //         e.stopPropagation();\n                //         onStatusLinkClick?.(e, status);\n                //       }}\n                //       class={`time ${open ? 'is-open' : ''}`}\n                //     >\n                //       <Icon\n                //         icon={visibilityIconsMap[visibility]}\n                //         alt={visibilityText[visibility]}\n                //         size=\"s\"\n                //       />{' '}\n                //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                //     </Link>\n                //   )}\n                // >\n                //   {StatusMenuItems}\n                // </Menu>\n                <span class=\"time\">\n                  <Icon\n                    icon={visibilityIconsMap[visibility]}\n                    alt={visibilityText[visibility]}\n                    size=\"s\"\n                  />{' '}\n                  <RelativeTime datetime={createdAtDate} format=\"micro\" />\n                </span>\n              ))}\n          </div>\n          {visibility === 'direct' && (\n            <>\n              <div class=\"status-direct-badge\">Private mention</div>{' '}\n            </>\n          )}\n          {!withinContext && (\n            <>\n              {isThread ? (\n                <div class=\"status-thread-badge\">\n                  <Icon icon=\"thread\" size=\"s\" />\n                  Thread\n                  {snapStates.statusThreadNumber[sKey]\n                    ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n                    : ''}\n                </div>\n              ) : (\n                !!inReplyToId &&\n                !!inReplyToAccount &&\n                (!!spoilerText ||\n                  !mentions.find((mention) => {\n                    return mention.id === inReplyToAccountId;\n                  })) && (\n                  <div class=\"status-reply-badge\">\n                    <Icon icon=\"reply\" />{' '}\n                    <NameText\n                      account={inReplyToAccount}\n                      instance={instance}\n                      short\n                    />\n                  </div>\n                )\n              )}\n            </>\n          )}\n          <div\n            class={`content-container ${\n              spoilerText || sensitive ? 'has-spoiler' : ''\n            } ${showSpoiler ? 'show-spoiler' : ''} ${\n              showSpoilerMedia ? 'show-media' : ''\n            }`}\n            data-content-text-weight={contentTextWeight ? textWeight() : null}\n            style={\n              (isSizeLarge || contentTextWeight) && {\n                '--content-text-weight': textWeight(),\n              }\n            }\n          >\n            {!!spoilerText && (\n              <>\n                <div\n                  class=\"content spoiler-content\"\n                  lang={language}\n                  dir=\"auto\"\n                  ref={spoilerContentRef}\n                  data-read-more={readMoreText}\n                >\n                  <p>\n                    <EmojiText text={spoilerText} emojis={emojis} />\n                  </p>\n                </div>\n                {readingExpandSpoilers || previewMode ? (\n                  <div class=\"spoiler-divider\">\n                    <Icon icon=\"eye-open\" /> Content warning\n                  </div>\n                ) : (\n                  <button\n                    class={`light spoiler-button ${\n                      showSpoiler ? 'spoiling' : ''\n                    }`}\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      if (showSpoiler) {\n                        delete states.spoilers[id];\n                        if (!readingExpandSpoilers) {\n                          delete states.spoilersMedia[id];\n                        }\n                      } else {\n                        states.spoilers[id] = true;\n                        if (!readingExpandSpoilers) {\n                          states.spoilersMedia[id] = true;\n                        }\n                      }\n                    }}\n                  >\n                    <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\n                    {showSpoiler ? 'Show less' : 'Show content'}\n                  </button>\n                )}\n              </>\n            )}\n            {!!content && (\n              <div\n                class=\"content\"\n                ref={contentRef}\n                data-read-more={readMoreText}\n              >\n                <PostContent\n                  post={status}\n                  instance={instance}\n                  previewMode={previewMode}\n                />\n                <QuoteStatuses id={id} instance={instance} level={quoted} />\n              </div>\n            )}\n            {!!poll && (\n              <Poll\n                lang={language}\n                poll={poll}\n                readOnly={readOnly || !sameInstance || !authenticated}\n                onUpdate={(newPoll) => {\n                  states.statuses[sKey].poll = newPoll;\n                }}\n                refresh={() => {\n                  return masto.v1.polls\n                    .$select(poll.id)\n                    .fetch()\n                    .then((pollResponse) => {\n                      states.statuses[sKey].poll = pollResponse;\n                    })\n                    .catch((e) => {}); // Silently fail\n                }}\n                votePoll={(choices) => {\n                  return masto.v1.polls\n                    .$select(poll.id)\n                    .votes.create({\n                      choices,\n                    })\n                    .then((pollResponse) => {\n                      states.statuses[sKey].poll = pollResponse;\n                    })\n                    .catch((e) => {}); // Silently fail\n                }}\n              />\n            )}\n            {(((enableTranslate || inlineTranslate) &&\n              !!content.trim() &&\n              !!getHTMLText(emojifyText(content, emojis)) &&\n              differentLanguage) ||\n              forceTranslate) && (\n              <TranslationBlock\n                forceTranslate={forceTranslate || inlineTranslate}\n                mini={!isSizeLarge && !withinContext}\n                sourceLanguage={language}\n                text={getPostText(status)}\n              />\n            )}\n            {!previewMode &&\n              sensitive &&\n              !!mediaAttachments.length &&\n              readingExpandMedia !== 'show_all' && (\n                <button\n                  class={`plain spoiler-media-button ${\n                    showSpoilerMedia ? 'spoiling' : ''\n                  }`}\n                  type=\"button\"\n                  hidden={!readingExpandSpoilers && !!spoilerText}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (showSpoilerMedia) {\n                      delete states.spoilersMedia[id];\n                    } else {\n                      states.spoilersMedia[id] = true;\n                    }\n                  }}\n                >\n                  <Icon icon={showSpoilerMedia ? 'eye-open' : 'eye-close'} />{' '}\n                  {showSpoilerMedia ? 'Show less' : 'Show media'}\n                </button>\n              )}\n            {!!mediaAttachments.length && (\n              <MultipleMediaFigure\n                lang={language}\n                enabled={showMultipleMediaCaptions}\n                captionChildren={captionChildren}\n              >\n                <div\n                  ref={mediaContainerRef}\n                  class={`media-container media-eq${mediaAttachments.length} ${\n                    mediaAttachments.length > 2 ? 'media-gt2' : ''\n                  } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\n                >\n                  {displayedMediaAttachments.map((media, i) => (\n                    <Media\n                      key={media.id}\n                      media={media}\n                      autoAnimate={isSizeLarge}\n                      showCaption={mediaAttachments.length === 1}\n                      lang={language}\n                      altIndex={\n                        showMultipleMediaCaptions &&\n                        !!media.description &&\n                        i + 1\n                      }\n                      to={`/${instance}/s/${id}?${\n                        withinContext ? 'media' : 'media-only'\n                      }=${i + 1}`}\n                      onClick={\n                        onMediaClick\n                          ? (e) => {\n                              onMediaClick(e, i, media, status);\n                            }\n                          : undefined\n                      }\n                    />\n                  ))}\n                </div>\n              </MultipleMediaFigure>\n            )}\n            {!!card &&\n              /^https/i.test(card?.url) &&\n              !sensitive &&\n              !spoilerText &&\n              !poll &&\n              !mediaAttachments.length &&\n              !snapStates.statusQuotes[sKey] && (\n                <Card\n                  card={card}\n                  selfReferential={\n                    card?.url === status.url || card?.url === status.uri\n                  }\n                  instance={currentInstance}\n                />\n              )}\n          </div>\n          {!isSizeLarge && showCommentCount && (\n            <div class=\"content-comment-hint insignificant\">\n              <Icon icon=\"comment2\" alt=\"Replies\" /> {repliesCount}\n            </div>\n          )}\n          {isSizeLarge && (\n            <>\n              <div class=\"extra-meta\">\n                {_deleted ? (\n                  <span class=\"status-deleted-tag\">Deleted</span>\n                ) : (\n                  <>\n                    {/* <Icon\n                      icon={visibilityIconsMap[visibility]}\n                      alt={visibilityText[visibility]}\n                    /> */}\n                    <span>{visibilityText[visibility]}</span> &bull;{' '}\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <time\n                        class=\"created\"\n                        datetime={createdAtDate.toISOString()}\n                        title={createdAtDate.toLocaleString()}\n                      >\n                        {createdDateText}\n                      </time>\n                    </a>\n                    {editedAt && (\n                      <>\n                        {' '}\n                        &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\n                        <time\n                          tabIndex=\"0\"\n                          class=\"edited\"\n                          datetime={editedAtDate.toISOString()}\n                          onClick={() => {\n                            setShowEdited(id);\n                          }}\n                        >\n                          {editedDateText}\n                        </time>\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n              <div class={`actions ${_deleted ? 'disabled' : ''}`}>\n                <div class=\"action has-count\">\n                  <StatusButton\n                    title=\"Reply\"\n                    alt=\"Comments\"\n                    class=\"reply-button\"\n                    icon=\"comment\"\n                    count={repliesCount}\n                    onClick={replyStatus}\n                  />\n                </div>\n                {/* <div class=\"action has-count\">\n                <StatusButton\n                  checked={reblogged}\n                  title={['Boost', 'Unboost']}\n                  alt={['Boost', 'Boosted']}\n                  class=\"reblog-button\"\n                  icon=\"rocket\"\n                  count={reblogsCount}\n                  onClick={boostStatus}\n                  disabled={!canBoost}\n                />\n              </div> */}\n                <MenuConfirm\n                  disabled={!canBoost}\n                  onClick={confirmBoostStatus}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {reblogged ? 'Unboost?' : 'Boost to everyone?'}\n                      </span>\n                    </>\n                  }\n                  menuFooter={\n                    mediaNoDesc &&\n                    !reblogged && (\n                      <div class=\"footer\">\n                        <Icon icon=\"alert\" />\n                        Some media have no descriptions.\n                      </div>\n                    )\n                  }\n                >\n                  <div class=\"action has-count\">\n                    <StatusButton\n                      checked={reblogged}\n                      title={['Boost', 'Unboost']}\n                      alt={['Boost', 'Boosted']}\n                      class=\"reblog-button\"\n                      icon=\"rocket\"\n                      count={reblogsCount}\n                      // onClick={boostStatus}\n                      disabled={!canBoost}\n                    />\n                  </div>\n                </MenuConfirm>\n                <div class=\"action has-count\">\n                  <StatusButton\n                    checked={favourited}\n                    title={['Like', 'Unlike']}\n                    alt={['Like', 'Liked']}\n                    class=\"favourite-button\"\n                    icon=\"heart\"\n                    count={favouritesCount}\n                    onClick={favouriteStatus}\n                  />\n                </div>\n                <div class=\"action\">\n                  <StatusButton\n                    checked={bookmarked}\n                    title={['Bookmark', 'Unbookmark']}\n                    alt={['Bookmark', 'Bookmarked']}\n                    class=\"bookmark-button\"\n                    icon=\"bookmark\"\n                    onClick={bookmarkStatus}\n                  />\n                </div>\n                <Menu2\n                  portal={{\n                    target:\n                      document.querySelector('.status-deck') || document.body,\n                  }}\n                  align=\"end\"\n                  gap={4}\n                  overflow=\"auto\"\n                  viewScroll=\"close\"\n                  menuButton={\n                    <div class=\"action\">\n                      <button\n                        type=\"button\"\n                        title=\"More\"\n                        class=\"plain more-button\"\n                      >\n                        <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                      </button>\n                    </div>\n                  }\n                >\n                  {StatusMenuItems}\n                </Menu2>\n              </div>\n            </>\n          )}\n        </div>\n        {!!showEdited && (\n          <Modal\n            class=\"light\"\n            onClick={(e) => {\n              if (e.target === e.currentTarget) {\n                setShowEdited(false);\n                // statusRef.current?.focus();\n              }\n            }}\n          >\n            <EditedAtModal\n              statusID={showEdited}\n              instance={instance}\n              fetchStatusHistory={() => {\n                return masto.v1.statuses.$select(showEdited).history.list();\n              }}\n              onClose={() => {\n                setShowEdited(false);\n                statusRef.current?.focus();\n              }}\n            />\n          </Modal>\n        )}\n      </article>\n    </>\n  );\n}\n\nfunction MultipleMediaFigure(props) {\n  const { enabled, children, lang, captionChildren } = props;\n  if (!enabled || !captionChildren) return children;\n  return (\n    <figure class=\"media-figure-multiple\">\n      {children}\n      <figcaption lang={lang} dir=\"auto\">\n        {captionChildren}\n      </figcaption>\n    </figure>\n  );\n}\n\nfunction Card({ card, selfReferential, instance }) {\n  const snapStates = useSnapshot(states);\n  const {\n    blurhash,\n    title,\n    description,\n    html,\n    providerName,\n    providerUrl,\n    authorName,\n    authorUrl,\n    width,\n    height,\n    image,\n    imageDescription,\n    url,\n    type,\n    embedUrl,\n    language,\n    publishedAt,\n  } = card;\n\n  /* type\n  link = Link OEmbed\n  photo = Photo OEmbed\n  video = Video OEmbed\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\n  */\n\n  const hasText = title || providerName || authorName;\n  const isLandscape = width / height >= 1.2;\n  const size = isLandscape ? 'large' : '';\n\n  const [cardStatusURL, setCardStatusURL] = useState(null);\n  // const [cardStatusID, setCardStatusID] = useState(null);\n  useEffect(() => {\n    if (hasText && image && !selfReferential && isMastodonLinkMaybe(url)) {\n      unfurlMastodonLink(instance, url).then((result) => {\n        if (!result) return;\n        const { id, url } = result;\n        setCardStatusURL('#' + url);\n\n        // NOTE: This is for quote post\n        // (async () => {\n        //   const { masto } = api({ instance });\n        //   const status = await masto.v1.statuses.$select(id).fetch();\n        //   saveStatus(status, instance);\n        //   setCardStatusID(id);\n        // })();\n      });\n    }\n  }, [hasText, image, selfReferential]);\n\n  // if (cardStatusID) {\n  //   return (\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\n  //   );\n  // }\n\n  if (snapStates.unfurledLinks[url]) return null;\n\n  const hasIframeHTML = /<iframe/i.test(html);\n  const handleClick = useCallback(\n    (e) => {\n      if (hasIframeHTML) {\n        e.preventDefault();\n        states.showEmbedModal = {\n          html,\n          url: url || embedUrl,\n          width,\n          height,\n        };\n      }\n    },\n    [hasIframeHTML],\n  );\n\n  if (hasText && (image || (type === 'photo' && blurhash))) {\n    const domain = new URL(url).hostname\n      .replace(/^www\\./, '')\n      .replace(/\\/$/, '');\n    let blurhashImage;\n    const rgbAverageColor =\n      image && blurhash ? getBlurHashAverageColor(blurhash) : null;\n    if (!image) {\n      const w = 44;\n      const h = 44;\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\n      const canvas = document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(w, h);\n      imageData.data.set(blurhashPixels);\n      ctx.putImageData(imageData, 0, 0);\n      blurhashImage = canvas.toDataURL();\n    }\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link ${blurhashImage ? '' : size}`}\n        lang={language}\n        dir=\"auto\"\n        style={{\n          '--average-color':\n            rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n        }}\n        onClick={handleClick}\n      >\n        <div class=\"card-image\">\n          <img\n            src={image || blurhashImage}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n            alt={imageDescription || ''}\n            onError={(e) => {\n              try {\n                e.target.style.display = 'none';\n              } catch (e) {}\n            }}\n          />\n        </div>\n        <div class=\"meta-container\">\n          <p class=\"meta domain\" dir=\"auto\">\n            {domain}\n          </p>\n          <p class=\"title\" dir=\"auto\">\n            {title}\n          </p>\n          <p class=\"meta\" dir=\"auto\">\n            {description ||\n              (!!publishedAt && (\n                <RelativeTime datetime={publishedAt} format=\"micro\" />\n              ))}\n          </p>\n        </div>\n      </a>\n    );\n  } else if (type === 'photo') {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n        class=\"card photo\"\n        onClick={handleClick}\n      >\n        <img\n          src={embedUrl}\n          width={width}\n          height={height}\n          alt={title || description}\n          loading=\"lazy\"\n          style={{\n            height: 'auto',\n            aspectRatio: `${width}/${height}`,\n          }}\n        />\n      </a>\n    );\n  } else {\n    if (type === 'video') {\n      if (/youtube/i.test(providerName)) {\n        // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\n        const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\n        if (videoID) {\n          return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\n        }\n      }\n      // return (\n      //   <div\n      //     class=\"card video\"\n      //     style={{\n      //       aspectRatio: `${width}/${height}`,\n      //     }}\n      //     dangerouslySetInnerHTML={{ __html: html }}\n      //   />\n      // );\n    }\n    if (hasText && !image) {\n      const domain = new URL(url).hostname.replace(/^www\\./, '');\n      return (\n        <a\n          href={cardStatusURL || url}\n          target={cardStatusURL ? null : '_blank'}\n          rel=\"nofollow noopener noreferrer\"\n          class={`card link no-image`}\n          lang={language}\n          onClick={handleClick}\n        >\n          <div class=\"meta-container\">\n            <p class=\"meta domain\">\n              <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\n            </p>\n            <p class=\"title\">{title}</p>\n            <p class=\"meta\">{description || providerName || authorName}</p>\n          </div>\n        </a>\n      );\n    }\n  }\n}\n\nfunction EditedAtModal({\n  statusID,\n  instance,\n  fetchStatusHistory = () => {},\n  onClose,\n}) {\n  const [uiState, setUIState] = useState('default');\n  const [editHistory, setEditHistory] = useState([]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const editHistory = await fetchStatusHistory();\n        console.log(editHistory);\n        setEditHistory(editHistory);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"edit-history\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Edit History</h2>\n        {uiState === 'error' && <p>Failed to load history</p>}\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> Loading&hellip;\n          </p>\n        )}\n      </header>\n      <main tabIndex=\"-1\">\n        {editHistory.length > 0 && (\n          <ol>\n            {editHistory.map((status) => {\n              const { createdAt } = status;\n              const createdAtDate = new Date(createdAt);\n              return (\n                <li key={createdAt} class=\"history-item\">\n                  <h3>\n                    <time>\n                      {niceDateTime(createdAtDate, {\n                        formatOpts: {\n                          weekday: 'short',\n                          second: 'numeric',\n                        },\n                      })}\n                    </time>\n                  </h3>\n                  <Status\n                    status={status}\n                    instance={instance}\n                    size=\"s\"\n                    withinContext\n                    readOnly\n                    previewMode\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction StatusButton({\n  checked,\n  count,\n  class: className,\n  title,\n  alt,\n  size,\n  icon,\n  iconSize = 'l',\n  onClick,\n  ...props\n}) {\n  if (typeof title === 'string') {\n    title = [title, title];\n  }\n  if (typeof alt === 'string') {\n    alt = [alt, alt];\n  }\n\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\n\n  useEffect(() => {\n    if (checked) {\n      setButtonTitle(title[1] || '');\n      setIconAlt(alt[1] || '');\n    } else {\n      setButtonTitle(title[0] || '');\n      setIconAlt(alt[0] || '');\n    }\n  }, [checked, title, alt]);\n\n  return (\n    <button\n      type=\"button\"\n      title={buttonTitle}\n      class={`plain ${size ? 'small' : ''} ${className} ${\n        checked ? 'checked' : ''\n      }`}\n      onClick={(e) => {\n        if (!onClick) return;\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n      {...props}\n    >\n      <Icon icon={icon} size={iconSize} alt={iconAlt} />\n      {!!count && (\n        <>\n          {' '}\n          <small title={count}>{shortenNumber(count)}</small>\n        </>\n      )}\n    </button>\n  );\n}\n\nexport function formatDuration(time) {\n  if (!time) return;\n  let hours = Math.floor(time / 3600);\n  let minutes = Math.floor((time % 3600) / 60);\n  let seconds = Math.round(time % 60);\n\n  if (hours === 0) {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\n      .toString()\n      .padStart(2, '0')}`;\n  }\n}\n\nfunction nicePostURL(url) {\n  if (!url) return;\n  const urlObj = new URL(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '');\n  // split only first slash\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\n  return (\n    <>\n      {host}\n      {username ? (\n        <>\n          /{username}\n          <wbr />\n          <span class=\"more-insignificant\">/{restPath}</span>\n        </>\n      ) : (\n        <span class=\"more-insignificant\">{path}</span>\n      )}\n    </>\n  );\n}\n\nfunction StatusCompact({ sKey }) {\n  const snapStates = useSnapshot(states);\n  const statusReply = snapStates.statusReply[sKey];\n  if (!statusReply) return null;\n\n  const { id, instance } = statusReply;\n  const status = getStatus(id, instance);\n  if (!status) return null;\n\n  const {\n    sensitive,\n    spoilerText,\n    account: { avatar, avatarStatic, bot },\n    visibility,\n    content,\n    language,\n  } = status;\n  if (sensitive || spoilerText) return null;\n  if (!content) return null;\n\n  const srKey = statusKey(id, instance);\n\n  const statusPeekText = statusPeek(status);\n  return (\n    <article\n      class={`status compact-reply ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n      data-state-post-id={srKey}\n    >\n      <Avatar url={avatarStatic || avatar} squircle={bot} />\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {statusPeekText}\n      </div>\n    </article>\n  );\n}\n\nfunction FilteredStatus({\n  status,\n  filterInfo,\n  instance,\n  containerProps = {},\n  showFollowedTags,\n}) {\n  const snapStates = useSnapshot(states);\n  const {\n    id: statusID,\n    account: { avatar, avatarStatic, bot, group },\n    createdAt,\n    visibility,\n    reblog,\n  } = status;\n  const isReblog = !!reblog;\n  const filterTitleStr = filterInfo?.titlesStr || '';\n  const createdAtDate = new Date(createdAt);\n  const statusPeekText = statusPeek(status.reblog || status);\n\n  const [showPeek, setShowPeek] = useState(false);\n  const bindLongPressPeek = useLongPress(\n    () => {\n      setShowPeek(true);\n    },\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const statusPeekRef = useTruncated();\n  const sKey = statusKey(status.id, instance);\n  const ssKey =\n    statusKey(status.id, instance) +\n    ' ' +\n    (statusKey(reblog?.id, instance) || '');\n\n  const actualStatusID = reblog?.id || statusID;\n  const url = instance\n    ? `/${instance}/s/${actualStatusID}`\n    : `/s/${actualStatusID}`;\n  const isFollowedTags =\n    showFollowedTags && !!snapStates.statusFollowedTags[sKey]?.length;\n\n  return (\n    <div\n      class={\n        isReblog\n          ? group\n            ? 'status-group'\n            : 'status-reblog'\n          : isFollowedTags\n          ? 'status-followed-tags'\n          : ''\n      }\n      {...containerProps}\n      // title={statusPeekText}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setShowPeek(true);\n      }}\n      {...bindLongPressPeek()}\n    >\n      <article data-state-post-id={ssKey} class=\"status filtered\" tabindex=\"-1\">\n        <b\n          class=\"status-filtered-badge clickable badge-meta\"\n          title={filterTitleStr}\n          onClick={(e) => {\n            e.preventDefault();\n            setShowPeek(true);\n          }}\n        >\n          <span>Filtered</span>\n          <span>{filterTitleStr}</span>\n        </b>{' '}\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\n        <span class=\"status-filtered-info\">\n          <span class=\"status-filtered-info-1\">\n            <NameText account={status.account} instance={instance} />{' '}\n            <Icon\n              icon={visibilityIconsMap[visibility]}\n              alt={visibilityText[visibility]}\n              size=\"s\"\n            />{' '}\n            {isReblog ? (\n              'boosted'\n            ) : isFollowedTags ? (\n              <span>\n                {snapStates.statusFollowedTags[sKey].slice(0, 3).map((tag) => (\n                  <span key={tag} class=\"status-followed-tag-item\">\n                    #{tag}\n                  </span>\n                ))}\n              </span>\n            ) : (\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\n            )}\n          </span>\n          <span class=\"status-filtered-info-2\">\n            {isReblog && (\n              <>\n                <Avatar\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\n                  squircle={bot}\n                />{' '}\n              </>\n            )}\n            {statusPeekText}\n          </span>\n        </span>\n      </article>\n      {!!showPeek && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowPeek(false);\n            }\n          }}\n        >\n          <div id=\"filtered-status-peek\" class=\"sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowPeek(false)}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\n            </header>\n            <main tabIndex=\"-1\">\n              <Link\n                ref={statusPeekRef}\n                class=\"status-link\"\n                to={url}\n                onClick={() => {\n                  setShowPeek(false);\n                }}\n                data-read-more=\"Read more →\"\n              >\n                <Status status={status} instance={instance} size=\"s\" readOnly />\n              </Link>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\n  if (!id || !instance) return;\n  const snapStates = useSnapshot(states);\n  const sKey = statusKey(id, instance);\n  const quotes = snapStates.statusQuotes[sKey];\n  const uniqueQuotes = quotes?.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n\n  if (!uniqueQuotes?.length) return;\n  if (level > 2) return;\n\n  return uniqueQuotes.map((q) => {\n    return (\n      <Link\n        key={q.instance + q.id}\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\n        class=\"status-card-link\"\n        data-read-more=\"Read more →\"\n      >\n        <Status\n          statusID={q.id}\n          instance={q.instance}\n          size=\"s\"\n          quoted={level + 1}\n          enableCommentHint\n        />\n      </Link>\n    );\n  });\n});\n\nexport default memo(Status, (oldProps, newProps) => {\n  // Shallow equal all props except 'status'\n  // This will be pure static until status ID changes\n  const { status, ...restOldProps } = oldProps;\n  const { status: newStatus, ...restNewProps } = newProps;\n  return (\n    status?.id === newStatus?.id && shallowEqual(restOldProps, restNewProps)\n  );\n});\n","import './compose.css';\n\nimport '@github/text-expander-element';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { deepEqual } from 'fast-equals';\nimport { forwardRef } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { substring } from 'runes2';\nimport stringLength from 'string-length';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback, useThrottledCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport Menu2 from '../components/menu2';\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport localeMatch from '../utils/locale-match';\nimport openCompose from '../utils/open-compose';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n  getCurrentInstanceConfiguration,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useCloseWatcher from '../utils/useCloseWatcher';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport AccountBlock from './account-block';\n// import Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport Status from './status';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  '5 minutes': 5 * 60,\n  '30 minutes': 30 * 60,\n  '1 hour': 60 * 60,\n  '6 hours': 6 * 60 * 60,\n  '12 hours': 12 * 60 * 60,\n  '1 day': 24 * 60 * 60,\n  '3 days': 3 * 24 * 60 * 60,\n  '7 days': 7 * 24 * 60 * 60,\n};\nconst expirySeconds = Object.values(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        menu.style.left = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = localeMatch(\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\n  supportedLanguages.map((l) => l[0]),\n  'en',\n);\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\n// https://github.com/mastodon/mastodon/blob/c03bd2a238741a012aa4b98dc4902d6cf948ab63/app/models/account.rb#L69\nconst USERNAME_RE = /[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?/i;\nconst MENTION_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(@${USERNAME_RE.source}(?:@[\\\\p{L}\\\\w.-]+[\\\\w]+)?)`,\n  'uig',\n);\n\n// AI-generated, all other regexes are too complicated\nconst HASHTAG_RE = new RegExp(\n  `(^|[^=\\\\/\\\\w])(#[a-z0-9_]+([a-z0-9_.-]+[a-z0-9_]+)?)(?![\\\\/\\\\w])`,\n  'ig',\n);\n\n// https://github.com/mastodon/mastodon/blob/23e32a4b3031d1da8b911e0145d61b4dd47c4f96/app/models/custom_emoji.rb#L31\nconst SHORTCODE_RE_FRAGMENT = '[a-zA-Z0-9_]{2,}';\nconst SCAN_RE = new RegExp(\n  `([^A-Za-z0-9_:\\\\n]|^)(:${SHORTCODE_RE_FRAGMENT}:)(?=[^A-Za-z0-9_:]|$)`,\n  'g',\n);\n\nfunction highlightText(text, { maxCharacters = Infinity }) {\n  // Accept text string, return formatted HTML string\n  // Escape all HTML special characters\n  let html = text\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;');\n\n  // Exceeded characters limit\n  const { composerCharacterCount } = states;\n  let leftoverHTML = '';\n  if (composerCharacterCount > maxCharacters) {\n    // NOTE: runes2 substring considers surrogate pairs\n    // const leftoverCount = composerCharacterCount - maxCharacters;\n    // Highlight exceeded characters\n    leftoverHTML =\n      '<mark class=\"compose-highlight-exceeded\">' +\n      // html.slice(-leftoverCount) +\n      substring(html, maxCharacters) +\n      '</mark>';\n    // html = html.slice(0, -leftoverCount);\n    html = substring(html, 0, maxCharacters);\n    return html + leftoverHTML;\n  }\n\n  return html\n    .replace(urlRegexObj, '$2<mark class=\"compose-highlight-url\">$3</mark>') // URLs\n    .replace(MENTION_RE, '$1<mark class=\"compose-highlight-mention\">$2</mark>') // Mentions\n    .replace(HASHTAG_RE, '$1<mark class=\"compose-highlight-hashtag\">$2</mark>') // Hashtags\n    .replace(\n      SCAN_RE,\n      '$1<mark class=\"compose-highlight-emoji-shortcode\">$2</mark>',\n    ); // Emoji shortcodes\n}\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const configuration = getCurrentInstanceConfiguration();\n  console.log('⚙️ Configuration', configuration);\n\n  const {\n    statuses: {\n      maxCharacters,\n      maxMediaAttachments,\n      charactersReservedPerUrl,\n    } = {},\n    mediaAttachments: {\n      supportedMimeTypes = [],\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    } = {},\n    polls: {\n      maxOptions,\n      maxCharactersPerOption,\n      maxExpiration,\n      minExpiration,\n    } = {},\n  } = configuration || {};\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const prevLanguage = useRef(language);\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n\n  const prefs = store.account.get('preferences') || {};\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(\n        visibility === 'public' && prefs['posting:default:visibility']\n          ? prefs['posting:default:visibility']\n          : visibility,\n      );\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive && !!spoilerText);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses\n            .$select(editStatus.id)\n            .source.fetch();\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\n          setSensitive(sensitive);\n          setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs['posting:default:visibility']) {\n        setVisibility(prefs['posting:default:visibility']);\n      }\n      if (prefs['posting:default:language']) {\n        setLanguage(prefs['posting:default:language']);\n      }\n      if (prefs['posting:default:sensitive']) {\n        setSensitive(prefs['posting:default:sensitive']);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\n      if (visibility) setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      if (sensitive !== null) setSensitive(sensitive);\n      if (composablePoll) setPoll(composablePoll);\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!value && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  const supportsCloseWatcher = window.CloseWatcher;\n  const escDownRef = useRef(false);\n  useHotkeys(\n    'esc',\n    () => {\n      escDownRef.current = true;\n      // This won't be true if this event is already handled and not propagated 🤞\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n    },\n  );\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && escDownRef.current && confirmClose()) {\n        onClose();\n      }\n      escDownRef.current = false;\n    },\n    {\n      enabled: !supportsCloseWatcher,\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n      ignoreEventWhen: (e) => {\n        const modals = document.querySelectorAll('#modal-container > *');\n        const hasModal = !!modals;\n        const hasOnlyComposer =\n          modals.length === 1 && modals[0].querySelector('#compose-container');\n        return hasModal && !hasOnlyComposer;\n      },\n    },\n  );\n  useCloseWatcher(() => {\n    if (!standalone && confirmClose()) {\n      onClose();\n    }\n  }, [standalone, confirmClose, onClose]);\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      },\n    };\n    if (\n      !deepEqual(backgroundDraft, prevBackgroundDraft.current) &&\n      !canClose()\n    ) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && supportedMimeTypes.includes(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\n        return;\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        const max = maxMediaAttachments - mediaAttachments.length;\n        const allowedFiles = files.slice(0, max);\n        if (allowedFiles.length <= 0) {\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\n          return;\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\n\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\n    const topLanguages = [];\n    const restLanguages = [];\n    const { contentTranslationHideLanguages = [] } = states.settings;\n    supportedLanguages.forEach((l) => {\n      const [code] = l;\n      if (\n        code === language ||\n        code === prevLanguage.current ||\n        code === DEFAULT_LANG ||\n        contentTranslationHideLanguages.includes(code)\n      ) {\n        topLanguages.push(l);\n      } else {\n        restLanguages.push(l);\n      }\n    });\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\n      if (codeA === language) return -1;\n      if (codeB === language) return 1;\n      return commonA.localeCompare(commonB);\n    });\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\n      commonA.localeCompare(commonB),\n    );\n    return [topLanguages, restLanguages];\n  }, [language]);\n\n  return (\n    <div id=\"compose-container-outer\">\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n        <div class=\"compose-top\">\n          {currentAccountInfo?.avatarStatic && (\n            // <Avatar\n            //   url={currentAccountInfo.avatarStatic}\n            //   size=\"xl\"\n            //   alt={currentAccountInfo.username}\n            //   squircle={currentAccountInfo?.bot}\n            // />\n            <AccountBlock\n              account={currentAccountInfo}\n              accountInstance={currentAccount.instanceURL}\n              hideDisplayName\n              useAvatarStatic\n            />\n          )}\n          {!standalone ? (\n            <span>\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  const newWin = openCompose({\n                    editStatus,\n                    replyToStatus,\n                    draftStatus: {\n                      uid: UID.current,\n                      status: textareaRef.current.value,\n                      spoilerText: spoilerTextRef.current.value,\n                      visibility,\n                      language,\n                      sensitive,\n                      poll,\n                      mediaAttachments,\n                    },\n                  });\n\n                  if (!newWin) {\n                    return;\n                  }\n\n                  onClose();\n                }}\n              >\n                <Icon icon=\"popout\" alt=\"Pop out\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"light close-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  if (confirmClose()) {\n                    onClose();\n                  }\n                }}\n              >\n                <Icon icon=\"x\" />\n              </button>\n            </span>\n          ) : (\n            hasOpener && (\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  if (!window.opener) {\n                    alert('Looks like you closed the parent window.');\n                    return;\n                  }\n\n                  if (window.opener.__STATES__.showCompose) {\n                    const yes = confirm(\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\n                    );\n                    if (!yes) return;\n                  }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  onClose({\n                    fn: () => {\n                      const passData = {\n                        editStatus,\n                        replyToStatus,\n                        draftStatus: {\n                          uid: UID.current,\n                          status: textareaRef.current.value,\n                          spoilerText: spoilerTextRef.current.value,\n                          visibility,\n                          language,\n                          sensitive,\n                          poll,\n                          mediaAttachments,\n                        },\n                      };\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                      window.opener.__STATES__.showCompose = true;\n                    },\n                  });\n                }}\n              >\n                <Icon icon=\"popin\" alt=\"Pop in\" />\n              </button>\n            )\n          )}\n        </div>\n        {!!replyToStatus && (\n          <div class=\"status-preview\">\n            <Status status={replyToStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend reply-to\">\n              Replying to @\n              {replyToStatus.account.acct || replyToStatus.account.username}\n              &rsquo;s post\n            </div>\n          </div>\n        )}\n        {!!editStatus && (\n          <div class=\"status-preview\">\n            <Status status={editStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend\">Editing source post</div>\n          </div>\n        )}\n        <form\n          ref={formRef}\n          class={`form-visibility-${visibility}`}\n          style={{\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n            opacity: uiState === 'loading' ? 0.5 : 1,\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n              formRef.current.dispatchEvent(\n                new Event('submit', { cancelable: true }),\n              );\n            }\n          }}\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n            let { status, visibility, sensitive, spoilerText } = entries;\n\n            // Pre-cleanup\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n            // Validation\n            /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n            if (poll) {\n              if (poll.options.length < 2) {\n                alert('Poll must have at least 2 options');\n                return;\n              }\n              if (poll.options.some((option) => option === '')) {\n                alert('Some poll choices are empty');\n                return;\n              }\n            }\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n            if (mediaAttachments.length > 0) {\n              // If there are media attachments, check if they have no descriptions\n              const hasNoDescriptions = mediaAttachments.some(\n                (media) => !media.description?.trim?.(),\n              );\n              if (hasNoDescriptions) {\n                const yes = confirm(\n                  'Some media have no descriptions. Continue?',\n                );\n                if (!yes) return;\n              }\n            }\n\n            // Post-cleanup\n            spoilerText = (sensitive && spoilerText) || undefined;\n            status = status === '' ? undefined : status;\n\n            setUIState('loading');\n            (async () => {\n              try {\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\n                if (mediaAttachments.length > 0) {\n                  // Upload media attachments first\n                  const mediaPromises = mediaAttachments.map((attachment) => {\n                    const { file, description, id } = attachment;\n                    console.log('UPLOADING', attachment);\n                    if (id) {\n                      // If already uploaded\n                      return attachment;\n                    } else {\n                      const params = removeNullUndefined({\n                        file,\n                        description,\n                      });\n                      return masto.v2.media.create(params).then((res) => {\n                        if (res.id) {\n                          attachment.id = res.id;\n                        }\n                        return res;\n                      });\n                    }\n                  });\n                  const results = await Promise.allSettled(mediaPromises);\n\n                  // If any failed, return\n                  if (\n                    results.some((result) => {\n                      return result.status === 'rejected' || !result.value?.id;\n                    })\n                  ) {\n                    setUIState('error');\n                    // Alert all the reasons\n                    results.forEach((result) => {\n                      if (result.status === 'rejected') {\n                        console.error(result);\n                        alert(result.reason || `Attachment #${i} failed`);\n                      }\n                    });\n                    return;\n                  }\n\n                  console.log({ results, mediaAttachments });\n                }\n\n                /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\n              */\n                let params = {\n                  status,\n                  // spoilerText,\n                  spoiler_text: spoilerText,\n                  language,\n                  sensitive,\n                  poll,\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                  media_ids: mediaAttachments.map(\n                    (attachment) => attachment.id,\n                  ),\n                };\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                  params.media_attributes = mediaAttachments.map(\n                    (attachment) => {\n                      return {\n                        id: attachment.id,\n                        description: attachment.description,\n                        // focus\n                        // thumbnail\n                      };\n                    },\n                  );\n                } else if (!editStatus) {\n                  params.visibility = visibility;\n                  // params.inReplyToId = replyToStatus?.id || undefined;\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\n                }\n                params = removeNullUndefined(params);\n                console.log('POST', params);\n\n                let newStatus;\n                if (editStatus) {\n                  newStatus = await masto.v1.statuses\n                    .$select(editStatus.id)\n                    .update(params);\n                  saveStatus(newStatus, instance, {\n                    skipThreading: true,\n                  });\n                } else {\n                  try {\n                    newStatus = await masto.v1.statuses.create(params, {\n                      idempotencyKey: UID.current,\n                    });\n                  } catch (_) {\n                    // If idempotency key fails, try again without it\n                    newStatus = await masto.v1.statuses.create(params);\n                  }\n                }\n                setUIState('default');\n\n                // Close\n                onClose({\n                  // type: post, reply, edit\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\n                  newStatus,\n                  instance,\n                });\n              } catch (e) {\n                console.error(e);\n                alert(e?.reason || e);\n                setUIState('error');\n              }\n            })();\n          }}\n        >\n          <div class=\"toolbar stretch\">\n            <input\n              ref={spoilerTextRef}\n              type=\"text\"\n              name=\"spoilerText\"\n              placeholder=\"Content warning\"\n              disabled={uiState === 'loading'}\n              class=\"spoiler-text-field\"\n              lang={language}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              style={{\n                opacity: sensitive ? 1 : 0,\n                pointerEvents: sensitive ? 'auto' : 'none',\n              }}\n              onInput={() => {\n                updateCharCount();\n              }}\n            />\n            <label\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\n              title=\"Content warning or sensitive media\"\n            >\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                  if (sensitive) {\n                    spoilerTextRef.current?.focus();\n                  } else {\n                    textareaRef.current?.focus();\n                  }\n                }}\n              />\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>{' '}\n            <label\n              class={`toolbar-button ${\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\n              title={`Visibility: ${visibility}`}\n            >\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n              <select\n                name=\"visibility\"\n                value={visibility}\n                onChange={(e) => {\n                  setVisibility(e.target.value);\n                }}\n                disabled={uiState === 'loading' || !!editStatus}\n              >\n                <option value=\"public\">\n                  Public <Icon icon=\"earth\" />\n                </option>\n                <option value=\"unlisted\">Unlisted</option>\n                <option value=\"private\">Followers only</option>\n                <option value=\"direct\">Private mention</option>\n              </select>\n            </label>{' '}\n          </div>\n          <Textarea\n            ref={textareaRef}\n            placeholder={\n              replyToStatus\n                ? 'Post your reply'\n                : editStatus\n                ? 'Edit your post'\n                : 'What are you doing?'\n            }\n            required={mediaAttachments?.length === 0}\n            disabled={uiState === 'loading'}\n            lang={language}\n            onInput={() => {\n              updateCharCount();\n            }}\n            maxCharacters={maxCharacters}\n            performSearch={(params) => {\n              const { type, q, limit } = params;\n              if (type === 'accounts') {\n                return masto.v1.accounts.search.list({\n                  q,\n                  limit,\n                  resolve: false,\n                });\n              }\n              return masto.v2.search.fetch(params);\n            }}\n          />\n          {mediaAttachments?.length > 0 && (\n            <div class=\"media-attachments\">\n              {mediaAttachments.map((attachment, i) => {\n                const { id, file } = attachment;\n                const fileID = file?.size + file?.type + file?.name;\n                return (\n                  <MediaAttachment\n                    key={id || fileID || i}\n                    attachment={attachment}\n                    disabled={uiState === 'loading'}\n                    lang={language}\n                    onDescriptionChange={(value) => {\n                      setMediaAttachments((attachments) => {\n                        const newAttachments = [...attachments];\n                        newAttachments[i].description = value;\n                        return newAttachments;\n                      });\n                    }}\n                    onRemove={() => {\n                      setMediaAttachments((attachments) => {\n                        return attachments.filter((_, j) => j !== i);\n                      });\n                    }}\n                  />\n                );\n              })}\n              <label class=\"media-sensitive\">\n                <input\n                  name=\"sensitive\"\n                  type=\"checkbox\"\n                  checked={sensitive}\n                  disabled={uiState === 'loading'}\n                  onChange={(e) => {\n                    const sensitive = e.target.checked;\n                    setSensitive(sensitive);\n                  }}\n                />{' '}\n                <span>Mark media as sensitive</span>{' '}\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n              </label>\n            </div>\n          )}\n          {!!poll && (\n            <Poll\n              lang={language}\n              maxOptions={maxOptions}\n              maxExpiration={maxExpiration}\n              minExpiration={minExpiration}\n              maxCharactersPerOption={maxCharactersPerOption}\n              poll={poll}\n              disabled={uiState === 'loading'}\n              onInput={(poll) => {\n                if (poll) {\n                  const newPoll = { ...poll };\n                  setPoll(newPoll);\n                } else {\n                  setPoll(null);\n                }\n              }}\n            />\n          )}\n          <div\n            class=\"toolbar wrap\"\n            style={{\n              justifyContent: 'flex-end',\n            }}\n          >\n            <span>\n              <label class=\"toolbar-button\">\n                <input\n                  type=\"file\"\n                  accept={supportedMimeTypes.join(',')}\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\n                  disabled={\n                    uiState === 'loading' ||\n                    mediaAttachments.length >= maxMediaAttachments ||\n                    !!poll\n                  }\n                  onChange={(e) => {\n                    const files = e.target.files;\n                    if (!files) return;\n\n                    const mediaFiles = Array.from(files).map((file) => ({\n                      file,\n                      type: file.type,\n                      size: file.size,\n                      url: URL.createObjectURL(file),\n                      id: null, // indicate uploaded state\n                      description: null,\n                    }));\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n                    // Validate max media attachments\n                    if (\n                      mediaAttachments.length + mediaFiles.length >\n                      maxMediaAttachments\n                    ) {\n                      alert(\n                        `You can only attach up to ${maxMediaAttachments} files.`,\n                      );\n                    } else {\n                      setMediaAttachments((attachments) => {\n                        return attachments.concat(mediaFiles);\n                      });\n                    }\n                    // Reset\n                    e.target.value = '';\n                  }}\n                />\n                <Icon icon=\"attachment\" />\n              </label>{' '}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\n                }\n                onClick={() => {\n                  setPoll({\n                    options: ['', ''],\n                    expiresIn: 24 * 60 * 60, // 1 day\n                    multiple: false,\n                  });\n                }}\n              >\n                <Icon icon=\"poll\" alt=\"Add poll\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowEmoji2Picker(true);\n                }}\n              >\n                <Icon icon=\"emoji2\" />\n              </button>\n            </span>\n            <div class=\"spacer\" />\n            {uiState === 'loading' ? (\n              <Loader abrupt />\n            ) : (\n              <CharCountMeter\n                maxCharacters={maxCharacters}\n                hidden={uiState === 'loading'}\n              />\n            )}\n            <label\n              class={`toolbar-button ${\n                language !== prevLanguage.current ? 'highlight' : ''\n              }`}\n            >\n              <span class=\"icon-text\">\n                {supportedLanguagesMap[language]?.native}\n              </span>\n              <select\n                name=\"language\"\n                value={language}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setLanguage(value || DEFAULT_LANG);\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                {topSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n                <hr />\n                {restSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n              </select>\n            </label>{' '}\n            <button\n              type=\"submit\"\n              class=\"large\"\n              disabled={uiState === 'loading'}\n            >\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\n            </button>\n          </div>\n        </form>\n      </div>\n      {showEmoji2Picker && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEmoji2Picker(false);\n            }\n          }}\n        >\n          <CustomEmojisModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowEmoji2Picker(false);\n            }}\n            onSelect={(emoji) => {\n              const emojiWithSpace = ` ${emoji} `;\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              const newText =\n                text.slice(0, selectionStart) +\n                emojiWithSpace +\n                text.slice(selectionEnd);\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd + emojiWithSpace.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction autoResizeTextarea(textarea) {\n  if (!textarea) return;\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\n  if (offsetHeight < window.innerHeight) {\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\n    // No idea why it does that, will re-investigate in far future\n    const offset = offsetHeight - clientHeight;\n    const height = value ? scrollHeight + offset + 'px' : null;\n    textarea.style.height = height;\n  }\n}\n\nconst Textarea = forwardRef((props, ref) => {\n  const { masto } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\n  // const snapStates = useSnapshot(states);\n  // const charCount = snapStates.composerCharacterCount;\n\n  const customEmojis = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        console.log({ emojis });\n        customEmojis.current = emojis;\n      } catch (e) {\n        // silent fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  useEffect(() => {\n    let handleChange, handleValue, handleCommited;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          const emojis = filterShortcodes(customEmojis.current, text);\n          let html = '';\n          emojis.forEach((emoji) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                :${encodeHTML(shortcode)}:\n              </li>`;\n          });\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: emojis.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type] || value;\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                  history,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br>@${encodeHTML(acct)}\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  const total = history?.reduce?.(\n                    (acc, cur) => acc + +cur.uses,\n                    0,\n                  );\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\n                      ${\n                        total\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\n                          : ''\n                      }\n                    </li>\n                  `;\n                }\n                menu.innerHTML = html;\n              });\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        if (key === ':') {\n          e.detail.value = `:${item.dataset.value}:`;\n        } else {\n          e.detail.value = `${key}${item.dataset.value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n        // fire input event\n        if (ref.current) {\n          const event = new Event('input', { bubbles: true });\n          ref.current.dispatchEvent(event);\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Resize observer for textarea\n    const textarea = ref.current;\n    if (!textarea) return;\n    const resizeObserver = new ResizeObserver(() => {\n      // Get height of textarea, set height to textExpander\n      if (textExpanderRef.current) {\n        const { height } = textarea.getBoundingClientRect();\n        textExpanderRef.current.style.height = height + 'px';\n      }\n    });\n    resizeObserver.observe(textarea);\n  }, []);\n\n  const slowHighlightPerf = useRef(0); // increment if slow\n  const composeHighlightRef = useRef();\n  const throttleHighlightText = useThrottledCallback((text) => {\n    if (!composeHighlightRef.current) return;\n    if (slowHighlightPerf.current > 3) {\n      // After 3 times of lag, disable highlighting\n      composeHighlightRef.current.innerHTML = '';\n      composeHighlightRef.current = null; // Destroy the whole thing\n      throttleHighlightText?.cancel?.();\n      return;\n    }\n    let start;\n    let end;\n    if (slowHighlightPerf.current <= 3) start = Date.now();\n    composeHighlightRef.current.innerHTML =\n      highlightText(text, {\n        maxCharacters,\n      }) + '\\n';\n    if (slowHighlightPerf.current <= 3) end = Date.now();\n    console.debug('HIGHLIGHT PERF', { start, end, diff: end - start });\n    if (start && end && end - start > 50) {\n      // if slow, increment\n      slowHighlightPerf.current++;\n    }\n    // Newline to prevent multiple line breaks at the end from being collapsed, no idea why\n  }, 500);\n\n  return (\n    <text-expander\n      ref={textExpanderRef}\n      keys=\"@ # :\"\n      class=\"compose-field-container\"\n    >\n      <textarea\n        class=\"compose-field\"\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onKeyDown={(e) => {\n          // Get line before cursor position after pressing 'Enter'\n          const { key, target } = e;\n          if (key === 'Enter' && !(e.ctrlKey || e.metaKey)) {\n            try {\n              const { value, selectionStart } = target;\n              const textBeforeCursor = value.slice(0, selectionStart);\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\n              if (lastLine) {\n                // If line starts with \"- \" or \"12. \"\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\n                  // insert \"- \" at cursor position\n                  const [_, preSpaces, bullet, postSpaces, anything] =\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\n                  if (anything) {\n                    e.preventDefault();\n                    const [number] = bullet.match(/\\d+/) || [];\n                    const newBullet = number ? `${+number + 1}.` : '-';\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\n                    target.setRangeText(text, selectionStart, selectionStart);\n                    const pos = selectionStart + text.length;\n                    target.setSelectionRange(pos, pos);\n                  } else {\n                    // trim the line before the cursor, then insert new line\n                    const pos = selectionStart - lastLine.length;\n                    target.setRangeText('', pos, selectionStart);\n                  }\n                  autoResizeTextarea(target);\n                  target.dispatchEvent(new Event('input'));\n                }\n              }\n            } catch (e) {\n              // silent fail\n              console.error(e);\n            }\n          }\n          if (composeHighlightRef.current) {\n            composeHighlightRef.current.scrollTop = target.scrollTop;\n          }\n        }}\n        onInput={(e) => {\n          const { target } = e;\n          const text = target.value;\n          setText(text);\n          autoResizeTextarea(target);\n          props.onInput?.(e);\n          throttleHighlightText(text);\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n        onScroll={(e) => {\n          if (composeHighlightRef.current) {\n            const { scrollTop } = e.target;\n            composeHighlightRef.current.scrollTop = scrollTop;\n          }\n        }}\n      />\n      <div\n        ref={composeHighlightRef}\n        class=\"compose-highlight\"\n        aria-hidden=\"true\"\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (hidden) {\n    return <meter class=\"donut\" hidden />;\n  }\n  return (\n    <meter\n      class={`donut ${\n        leftChars <= -10\n          ? 'explode'\n          : leftChars <= 0\n          ? 'danger'\n          : leftChars <= 20\n          ? 'warning'\n          : ''\n      }`}\n      value={charCount}\n      max={maxCharacters}\n      data-left={leftChars}\n      title={`${leftChars}/${maxCharacters}`}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    />\n  );\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { type, id, file } = attachment;\n  const url = useMemo(\n    () => (file ? URL.createObjectURL(file) : attachment.url),\n    [file, attachment.url],\n  );\n  console.log({ attachment });\n  const [description, setDescription] = useState(attachment.description);\n  const [suffixType, subtype] = type.split('/');\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    250,\n  );\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">Uploaded</span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: 'Image description',\n              video: 'Video description',\n              audio: 'Audio description',\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled || uiState === 'loading'}\n          class={uiState === 'loading' ? 'loading' : ''}\n          maxlength=\"1500\" // Not unicode-aware :(\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  const toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          tabIndex=\"0\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img src={url} alt=\"\" />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video src={url} playsinline muted />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" />\n          </button>\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowModal(false);\n            }\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <h2>\n                {\n                  {\n                    image: 'Edit image description',\n                    video: 'Edit video description',\n                    audio: 'Edit audio description',\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              <div class=\"media-form\">\n                {descTextarea}\n                <footer>\n                  {suffixType === 'image' &&\n                    /^(png|jpe?g|gif|webp)$/i.test(subtype) &&\n                    !!states.settings.mediaAltGenerator &&\n                    !!IMG_ALT_API_URL && (\n                      <Menu2\n                        portal={{\n                          target: document.body,\n                        }}\n                        containerProps={{\n                          style: {\n                            zIndex: 1001,\n                          },\n                        }}\n                        align=\"center\"\n                        position=\"anchor\"\n                        overflow=\"auto\"\n                        menuButton={\n                          <button type=\"button\" title=\"More\" class=\"plain\">\n                            <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                          </button>\n                        }\n                      >\n                        <MenuItem\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            setUIState('loading');\n                            toastRef.current = showToast({\n                              text: 'Generating description. Please wait...',\n                              duration: -1,\n                            });\n                            // POST with multipart\n                            (async function () {\n                              try {\n                                const body = new FormData();\n                                body.append('image', file);\n                                const response = await fetch(IMG_ALT_API_URL, {\n                                  method: 'POST',\n                                  body,\n                                }).then((r) => r.json());\n                                if (response.error) {\n                                  throw new Error(response.error);\n                                }\n                                setDescription(response.description);\n                              } catch (e) {\n                                console.error(e);\n                                showToast(\n                                  `Failed to generate description${\n                                    e?.message ? `: ${e.message}` : ''\n                                  }`,\n                                );\n                              } finally {\n                                setUIState('default');\n                                toastRef.current?.hideToast?.();\n                              }\n                            })();\n                          }}\n                        >\n                          <Icon icon=\"sparkles2\" />\n                          <span>Generate description…</span>\n                        </MenuItem>\n                      </Menu2>\n                    )}\n                  <button\n                    type=\"button\"\n                    class=\"light block\"\n                    onClick={() => {\n                      setShowModal(false);\n                    }}\n                    disabled={uiState === 'loading'}\n                  >\n                    Done\n                  </button>\n                </footer>\n              </div>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          Multiple choices\n        </label>\n        <label class=\"expires-in\">\n          Duration{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([label, value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([label, value]) => (\n                <option value={value} key={value}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          Remove poll\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n        ? -1\n        : bStartsWith\n        ? 1\n        : bothContain\n        ? a.length - b.length\n        : aContains\n        ? -1\n        : bContains\n        ? 1\n        : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nfunction CustomEmojisModal({\n  masto,\n  instance,\n  onClose = () => {},\n  onSelect = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const customEmojisList = useRef([]);\n  const [customEmojis, setCustomEmojis] = useState({});\n  const recentlyUsedCustomEmojis = useMemo(\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\n  );\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        // Group emojis by category\n        const emojisCat = {\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\n            emojis.find((e) => e.shortcode === emoji.shortcode),\n          ),\n        };\n        const othersCat = [];\n        emojis.forEach((emoji) => {\n          if (!emoji.visibleInPicker) return;\n          customEmojisList.current?.push?.(emoji);\n          if (!emoji.category) {\n            othersCat.push(emoji);\n            return;\n          }\n          if (!emojisCat[emoji.category]) {\n            emojisCat[emoji.category] = [];\n          }\n          emojisCat[emoji.category].push(emoji);\n        });\n        if (othersCat.length) {\n          emojisCat['--others--'] = othersCat;\n        }\n        setCustomEmojis(emojisCat);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <b>Custom emojis</b>{' '}\n        {uiState === 'loading' ? (\n          <Loader />\n        ) : (\n          <small class=\"insignificant\"> • {instance}</small>\n        )}\n      </header>\n      <main>\n        <div class=\"custom-emojis-list\">\n          {uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>Error loading custom emojis</p>\n            </div>\n          )}\n          {uiState === 'default' &&\n            Object.entries(customEmojis).map(\n              ([category, emojis]) =>\n                !!emojis?.length && (\n                  <>\n                    <div class=\"section-header\">\n                      {{\n                        '--recent--': 'Recently used',\n                        '--others--': 'Others',\n                      }[category] || category}\n                    </div>\n                    <section>\n                      {emojis.map((emoji) => (\n                        <button\n                          key={emoji}\n                          type=\"button\"\n                          class=\"plain4\"\n                          onClick={() => {\n                            onClose();\n                            requestAnimationFrame(() => {\n                              onSelect(`:${emoji.shortcode}:`);\n                            });\n                            let recentlyUsedCustomEmojis =\n                              store.account.get('recentlyUsedCustomEmojis') ||\n                              [];\n                            const recentlyUsedEmojiIndex =\n                              recentlyUsedCustomEmojis.findIndex(\n                                (e) => e.shortcode === emoji.shortcode,\n                              );\n                            if (recentlyUsedEmojiIndex !== -1) {\n                              // Move emoji to index 0\n                              recentlyUsedCustomEmojis.splice(\n                                recentlyUsedEmojiIndex,\n                                1,\n                              );\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                            } else {\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                              // Remove unavailable ones\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.filter((e) =>\n                                  customEmojisList.current?.find?.(\n                                    (emoji) => emoji.shortcode === e.shortcode,\n                                  ),\n                                );\n                              // Limit to 10\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.slice(0, 10);\n                            }\n\n                            // Store back\n                            store.account.set(\n                              'recentlyUsedCustomEmojis',\n                              recentlyUsedCustomEmojis,\n                            );\n                          }}\n                          title={`:${emoji.shortcode}:`}\n                        >\n                          <picture>\n                            {!!emoji.staticUrl && (\n                              <source\n                                srcset={emoji.staticUrl}\n                                media=\"(prefers-reduced-motion: reduce)\"\n                              />\n                            )}\n                            <img\n                              class=\"shortcode-emoji\"\n                              src={emoji.url || emoji.staticUrl}\n                              alt={emoji.shortcode}\n                              width=\"16\"\n                              height=\"16\"\n                              loading=\"lazy\"\n                              decoding=\"async\"\n                            />\n                          </picture>\n                        </button>\n                      ))}\n                    </section>\n                  </>\n                ),\n            )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Compose;\n","import { useLayoutEffect } from 'preact/hooks';\nimport { matchPath } from 'react-router-dom';\nimport { subscribeKey } from 'valtio/utils';\n\nimport states from './states';\n\nconst { PHANPY_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\n\nexport default function useTitle(title, path) {\n  function setTitle() {\n    const { currentLocation } = states;\n    const hasPaths = Array.isArray(path);\n    let paths = hasPaths ? path : [];\n    // Workaround for matchPath not working for optional path segments\n    // https://github.com/remix-run/react-router/discussions/9862\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\n    }\n    let matched = false;\n    if (paths.length) {\n      matched = paths.some((p) => matchPath(p, currentLocation));\n    } else if (path) {\n      matched = matchPath(path, currentLocation);\n    }\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\n    if (matched) {\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\n    }\n  }\n\n  useLayoutEffect(() => {\n    const unsub = subscribeKey(states, 'currentLocation', setTitle);\n    setTitle();\n    return unsub;\n  }, [title, path]);\n}\n"],"file":"assets/useTitle-3KaK9Th3.js"}