{"version":3,"mappings":"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","names":["getAccount","id","accounts","store","local","getJSON","find","a","info","getAccountByAccessToken","accessToken","getCurrentAccount","window","__IGNORE_GET_ACCOUNT_ERROR__","import","currentAccount","getCurrentAccountNS","account","instanceURL","saveAccount","acc","vapidKey","set","accountInfo","updateAccount","currentInstance","getCurrentInstance","instances","instance","e","console","alert","configuration","maxMediaAttachments","maxTootChars","pleroma","pollLimits","statuses","polls","maxCharactersPerOption","getInstanceConfiguration","get","key","localStorage","getItem","JSON","value","setJSON","warn","session","sessionStorage","setItem","data","del","DEFAULT_INSTANCE","apis","accountApis","__ACCOUNT_APIS__","currentAccountApi","initClient","test","replace","toLowerCase","url","client","masto","createRestAPIClient","timeout","initInstance","uri","streamingApi","urls","domain","streaming","streamClient","createStreamingAPIClient","implementation","initAccount","mastoAccount","initPreferences","preferences","accountID","authenticated","_b","_c","_d","_showToast","showToast","props","text","onClick","delay","rest","toast","Toastify","className","destination","gravity","position","setTimeout","mem","fn","opts","moize","maxSize","pmem","isPromise","states","proxy","appVersion","prevLocation","currentLocation","statusThreadNumber","home","homeNew","homeLast","homeLastFetchTime","notifications","notificationsLast","notificationsNew","notificationsShowNew","notificationsLastFetchTime","reloadStatusPage","reloadGenericAccounts","counter","spoilers","scrollPositions","unfurledLinks","statusQuotes","routeNotification","showCompose","showSettings","showAccount","showAccounts","showDrafts","showMediaModal","showShortcutsSettings","showKeyboardShortcutsHelp","showGenericAccounts","showMediaAlt","shortcuts","settings","autoRefresh","shortcutsViewMode","shortcutsColumnsMode","boostsCarousel","contentTranslation","contentTranslationTargetLanguage","contentTranslationHideLanguages","contentTranslationAutoInline","cloakMode","initStates","subscribeKey","v","subscribe","changes","prevValue","path","statusKey","getStatus","statusID","saveStatus","status","skipThreading","override","Object","oldStatus","_pinned","_filtered","threadifyStatus","requestAnimationFrame","propInstance","api","traverse","index","fetchIndex","inReplyToAccountId","inReplyToId","prevStatus","r","fetchStatus","Promise","useInterval","deps","immediate","savedCallback","useRef","useEffect","current","setInterval","tick","clearInterval","openCompose","URL","location","width","screenWidth","height","screenHeight","screen","left","Math","max","top","min","winUID","uid","random","newWin","open","__COMPOSE__","SIZES","s","m","l","xl","xxl","ICONS","x","__vitePreload","heart","bookmark","check-circle","x-circle","transfer","rocket","arrow-left","arrow-right","arrow-up","arrow-down","earth","lock","unlock","eye-close","eye-open","message","comment","notification","follow","follow-add","poll","pencil","quill","at","attachment","upload","gear","more","external","popout","popin","plus","chevron-left","chevron-right","chevron-down","reply","thread","group","bot","menu","list","search","hashtag","shortcut","user","following","pin","bus","link","history","share","sparkles","exit","translate","play","trash","mute","unmute","block","unblock","flag","time","refresh","emoji2","filter","chart","react","layout4","layout5","announce","round","arrow-up-circle","arrow-down-circle","clipboard","account-edit","account-warning","keyboard","cloud","month","media","Icon","icon","size","alt","title","class","style","iconSize","iconBlock","rotate","flip","Array","isArray","iconData","setIconData","useState","default","_jsx","children","viewBox","dangerouslySetInnerHTML","__html","body","transform","memo","$modalContainer","document","getElementById","Modal","onClose","modalRef","timer","focusElement","querySelector","focus","clearTimeout","escRef","useHotkeys","enabled","keydown","keyup","ref","node","target","currentTarget","tabIndex","onFocus","createPortal","Loader","abrupt","hidden","xxxl","alphaCache","canvas","OffscreenCanvas","createElement","ctx","getContext","willReadFrequently","Avatar","squircle","avatarRef","isMissing","src","loading","decoding","crossOrigin","undefined","onError","onLoad","dataset","loaded","drawImage","allPixels","getImageData","hasAlpha","pixel","i","length","classList","add","clearRect","Link","forwardRef","routerLocation","useLocation","hash","trim","to","restProps","includes","parsedHash","origin","searchParams","searchParamsStr","from","entries","map","encodeURIComponent","join","pathname","isActive","decodeURIComponent","href","parentNode","closest","stopPropagation","MenuConfirm","subMenu","confirm","confirmLabel","menuItemClassName","menuFooter","MenuItem","cloneElement","Parent","SubMenu","Menu","menuRef","_jsxs","instanceRef","openTrigger","direction","overflow","gap","shift","menuClassName","menuButton","label","itemProps","onPointerMove","pointerType","openMenu","onPointerLeave","EmojiText","emojis","indexOf","regex","RegExp","shortcode","elements","split","word","emoji","staticUrl","srcset","NameText","showAvatar","showAcct","short","acct","avatar","avatarStatic","displayName","username","_","acct1","acct2","match","trimmedUsername","trimmedDisplayName","shortenedDisplayName","shortenedAlphaNumericDisplayName","localeCompare","sensitivity","preventDefault","_Fragment","dayjs","extend","dayjsTwitter","localizedFormat","relativeTime","dtf","Intl","DateTimeFormat","RelativeTime","datetime","format","date","dateStr","setDateStr","raf","update","str","now","diff","year","twitter","toDate","fromNow","cancelAnimationFrame","toISOString","_localeMatch","args","localeMatch","locales","resolvedOptions","locale","navigator","languages","getTranslateTargetLanguage","fromSettings","translationTargetLanguages","code","localeCode2Text","DisplayNames","type","of","emojifyText","forEach","fauxDiv","whitelistLinkClasses","_enhanceContent","content","postEnhanceDOM","enhancedContent","dom","innerHTML","hasLink","hasCodeBlock","querySelectorAll","setAttribute","c","remove","textContent","links","usernames","innerText","hasChildren","u","d","push","slice","textNodes","extractTextNodes","html","nodeValue","nodes","childNodes","replaceWith","p","pre","br","nextParagraphs","currentBlock","nextElementSibling","next","tagName","codeText","replaceAll","rejectFilter","prevIndex","hashtagStuffedParagraphs","hashtagCount","nodeType","Node","TEXT_NODE","linkText","startsWith","enhanceContent","defaultRejectFilter","defaultRejectFilterMap","fromEntries","nodeName","walk","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","FILTER_REJECT","FILTER_ACCEPT","nextNode","div","getHTMLText","handleContentLinks","mentions","previewMode","statusURL","metaKey","ctrlKey","shiftKey","altKey","which","prevText","previousSibling","textBeforeLinkIsAt","endsWith","textStartsWithAt","contains","targetText","getAttribute","mention","textBeforeLinkIsHash","tag","niceDateTime","hideTime","formatOpts","Date","currentYear","getFullYear","day","hour","minute","NumberFormat","shortenNumber","notation","AccountBlock","skeleton","avatarSize","internal","showActivity","showStats","accountInstance","hideDisplayName","statusesCount","lastStatusAt","fields","note","verifiedField","f","verifiedAt","supportsCache","supports","feature","version","range","features","satisfies","includePrerelease","loose","throttle","pThrottle","limit","interval","LINGVA_INSTANCES","currentLingvaInstance","_lingvaTranslate","source","pRetry","fetchCall","res","fetch","ok","then","provider","translation","detectedSourceLanguage","detectedSource","retries","log","TRANSLATED_MAX_AGE","lingvaTranslate","forceTranslate","sourceLanguage","onTranslate","mini","uiState","setUIState","targetLang","setTranslatedContent","pronunciationContent","detailsRef","translatedContent","sourceLangText","targetLangText","apiSourceLang","error","detectedLangText","setDetectedLang","pronunciation","_a","query","setPronunciationContent","detectedLang","lang","dir","sourceLanguages","name","draftsStore","createStore","drafts","val","getMany","keys","delMany","clear","db","visibilityIconsMap","public","unlisted","private","direct","Poll","readOnly","votePoll","expired","expiresAt","multiple","options","ownVotes","voted","votersCount","votesCount","expiresAtDate","pollVotesCount","roundPrecision","showResults","setShowResults","optionsHaveVoteCounts","every","o","option","optionVotesCount","percentage","toFixed","isLeading","disabled","onSubmit","form","formData","FormData","choices","marginLeft","htmlContentLength","isMastodonLinkMaybe","root","documentElement","getComputedStyle","defaultBoundingBoxPadding","safeAreaInsets","getSafeAreaInsets","safeAreaInsetTop","getPropertyValue","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","parseInt","safeBoundingBoxPadding","paddings","CSS","addEventListener","passive","statusPeek","spoilerText","mediaAttachments","image","gifv","video","audio","unknown","useTruncated","onResize","useThrottledCallback","scrollHeight","truncated","_height","maxHeight","computedHeight","toggle","useResizeObserver","box","isSafari","userAgent","dataAltLabel","AltBadge","MEDIA_CAPTION_LIMIT","isMediaCaptionLong","caption","Media","showOriginal","autoAnimate","showCaption","altIndex","blurhash","description","meta","previewRemoteUrl","previewUrl","remoteUrl","original","small","mediaURL","remoteMediaURL","orientation","rgbAverageColor","getBlurHashAverageColor","videoRef","focalBackgroundPosition","y","mediaRef","onUpdate","useCallback","scale","make3dTransformValue","removeProperty","setProperty","touchAction","pinchZoomEnabled","setPinchZoomEnabled","quickPinchZoomProps","draggableUnZoomed","inertiaFriction","doubleTapZoomOutOnMaxScale","containerProps","useMemo","isVideoMaybe","isImage","parentRef","imageSmallerThanParent","setImageSmallerThanParent","useLayoutEffect","offsetWidth","offsetHeight","smaller","maxAspectHeight","innerHeight","averageColorStyle","mediaStyles","aspectRatio","longDesc","showInlineDesc","Figure","Fragment","display","mode","backgroundImage","backgroundSize","QuickPinchZoom","backgroundColor","backgroundPosition","shortDuration","duration","isGIF","loopable","formattedDuration","formatDuration","hoverAnimate","autoGIFAnimate","videoHTML","pause","onMouseEnter","onMouseLeave","onBlur","poster","preload","playsinline","loop","muted","controls","autoplay","MenuLink","FocusableItem","closeMenu","detail","INLINE_TRANSLATE_LIMIT","fetchAccount","v1","$select","memFetchAccount","visibilityText","Status","withinContext","contentTextWeight","enableTranslate","_forceTranslate","allowFilters","onMediaClick","quoted","onStatusLinkClick","sameInstance","sKey","snapStates","useSnapshot","accountId","accountURL","accountEmojis","repliesCount","reblogged","reblogsCount","favourited","favouritesCount","bookmarked","sensitive","visibility","language","editedAt","filtered","card","createdAt","reblog","_deleted","debugHover","createdAtDate","editedAtDate","inReplyToAccountRef","isSelf","setInReplyToAccount","inReplyToAccount","account2","catch","mentionSelf","readingExpandSpoilers","prefs","showSpoiler","targetLanguage","contentLength","inlineTranslate","isSizeLarge","showEdited","setShowEdited","showReactions","setShowReactions","readMoreText","statusRef","spoilerContentRef","contentRef","mediaContainerRef","textWeight","editedDateText","mediaNoDesc","replyToStatus","boostStatus","unauthInteractionErrorMessage","confirmText","yes","newStatus","favouriteStatus","differentLanguage","MenuHeader","StatusMenuItems","createdDateText","MenuDivider","done","replyStatus","setForceTranslate","nicePostURL","editStatus","cachedStatus","setIsContextMenuOpen","contextMenuProps","setContextMenuProps","isIOS","bindLongPressContext","useLongPress","clientX","clientY","isContextMenuOpen","ontouchstart","rRef","hotkeysEnabled","fRef","dRef","confirmBoostStatus","bRef","showMultipleMediaCaptions","displayedMediaAttachments","captionChildren","attachments","canBoost","indices","nodeRef","showContextMenu","contextMenuRef","portal","url2","result","removeAttribute","unfurlMastodonLink","QuoteStatuses","newPoll","pollResponse","TranslationBlock","MultipleMediaFigure","Card","StatusButton","checked","bookmarkStatus","count","EditedAtModal","ReactionsModal","providerName","providerUrl","authorName","authorUrl","imageDescription","embedUrl","publishedAt","hasText","isLandscape","cardStatusURL","blurhashImage","setCardStatusURL","imageData","blurhashPixels","w","putImageData","videoID","fetchStatusHistory","editHistory","setEditHistory","editHistory2","REACTIONS_LIMIT","setAccounts","showMore","setShowMore","reblogIterator","favouriteIterator","fetchAccounts","firstLoad","favouriteResults","reblogResults","rebloggedBy","theAccount","_types","InView","favourite","onChange","inView","setButtonTitle","buttonTitle","iconAlt","hours","seconds","denylistDomains","failedUnfurls","_unfurlMastodonLink","snapshot","padStart","remoteInstanceFetch","theURL","urlObj","statusMatch","instanceRegex","resolve","debug","mastoSearchFetch","results","handleFulfill","instance2","selfURL","handleCatch","host","restPath","filterInfo","filterTitleStr","setShowPeek","isReblog","bindLongPressPeek","statusPeekText","showPeek","statusPeekRef","uniqueQuotes","quotes","q","arr","q2","level","supportedLanguagesMap","supportedLanguages","reduce","common","native","expiryOptions","expirySeconds","values","oneDay","expiresInFromExpiresAt","delta","getTime","role","windowMargin","observer","IntersectionObserver","entry","isIntersecting","boundingClientRect","innerWidth","observe","DEFAULT_LANG","urlRegexObj","urlRegex","flags","usernameRegex","urlPlaceholder","countableText","inputText","Compose","draftStatus","standalone","hasOpener","UID","currentAccountInfo","charactersReservedPerUrl","maxCharacters","imageMatrixLimit","supportedMimeTypes","imageSizeLimit","videoSizeLimit","videoMatrixLimit","videoFrameRateLimit","maxExpiration","maxOptions","minExpiration","spoilerTextRef","textareaRef","prevLanguage","setMediaAttachments","setLanguage","oninputTextarea","focusTextarea","dispatchEvent","visibility2","language2","sensitive2","allMentions","setSensitive","poll2","expiresIn","statusSource","mediaAttachments2","setVisibility","setPoll","composablePoll","beforeUnloadCopy","hasMediaAttachments","canClose","hasOnlyAcct","confirmClose","hasIDMediaAttachments","handleBeforeUnload","sameWithSource","getCharCount","updateCharCount","escDownRef","capture","modals","hasModal","hasOnlyComposer","draftKey","equal","backgroundDraft","prevBackgroundDraft","handleItems","item","items","i2","file","files","state","allowedFiles","updatedAt","mediaFiles","handleDragover","showEmoji2Picker","setShowEmoji2Picker","topSupportedLanguages","restSupportedLanguages","restLanguages","topLanguages","codeA","commonA","codeB","createObjectURL","commonB","dataTransfer","removeEventListener","passData","sort","opener","formRef","pointerEvents","opacity","mediaPromises","params2","removeNullUndefined","some","hasNoDescriptions","params","reason","e2","media_attributes","in_reply_to_id","Textarea","newAttachments","j","fileID","required","v2","onInput","accept","CharCountMeter","CustomEmojisModal","emojiWithSpace","textarea","selectionStart","selectionEnd","clientHeight","offset","performSearch","textareaProps","onSelect","handleChange","textExpanderRef","provide","newText","filterShortcodes","customEmojis","text2","textExpanderTextRef","displayNameWithEmoji","encodeHTML","cur","matched","handleValue","searchResults","input","handleCommited","total","lastLine","postSpaces","anything","newBullet","number","preSpaces","pos","setText","charCount","leftChars","autoCorrect","rows","onRemove","setRangeText","setSelectionRange","suffixType","autoResizeTextarea","showModal","descTextarea","setDescription","debouncedOnDescriptionChange","MediaAttachment","setShowModal","supportsEdit","placeholder","searchTerm","aLower","splice","bStartsWith","bLower","bContains","aStartsWith","b","aContains","char","obj","customEmojisList","setCustomEmojis","emojisCat","othersCat","bothStartWith","category","recentlyUsedCustomEmojis","recentlyUsedCustomEmojis2","recentlyUsedEmojiIndex","VITE_CLIENT_NAME","CLIENT_NAME","useTitle","setTitle","hasPaths","paths","matchPath"],"sources":["../../src/utils/store-utils.js","../../src/utils/store.js","../../src/utils/api.js","../../src/utils/show-toast.js","../../src/utils/mem.js","../../src/utils/pmem.js","../../src/utils/states.js","../../src/utils/useInterval.js","../../src/utils/open-compose.js","../../src/components/icon.jsx","../../src/components/modal.jsx","../../src/components/loader.jsx","../../src/components/avatar.jsx","../../src/components/link.jsx","../../src/components/menu-confirm.jsx","../../src/components/emoji-text.jsx","../../src/components/name-text.jsx","../../src/components/relative-time.jsx","../../src/utils/locale-match.jsx","../../src/utils/get-translate-target-language.jsx","../../src/utils/localeCode2Text.jsx","../../src/utils/emojify-text.js","../../src/utils/enhance-content.js","../../src/utils/getHTMLText.jsx","../../src/utils/handle-content-links.js","../../src/utils/nice-date-time.js","../../src/utils/shorten-number.jsx","../../src/components/account-block.jsx","../../src/utils/supports.js","../../src/components/translation-block.jsx","../../src/utils/db.js","../../src/utils/visibility-icons-map.js","../../src/components/poll.jsx","../../src/utils/html-content-length.js","../../src/utils/isMastodonLinkMaybe.jsx","../../src/utils/safe-bounding-box-padding.js","../../src/utils/status-peek.jsx","../../src/utils/useTruncated.js","../../src/components/media.jsx","../../src/components/menu-link.jsx","../../src/components/status.jsx","../../src/components/compose.jsx","../../src/utils/useTitle.js"],"sourcesContent":["import store from './store';\n\nexport function getAccount(id) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.info.id === id) || accounts[0];\n}\n\nexport function getAccountByAccessToken(accessToken) {\n  const accounts = store.local.getJSON('accounts') || [];\n  return accounts.find((a) => a.accessToken === accessToken);\n}\n\nexport function getCurrentAccount() {\n  if (!window.__IGNORE_GET_ACCOUNT_ERROR__) {\n    // Track down getCurrentAccount() calls before account-based states are initialized\n    console.error('getCurrentAccount() called before states are initialized');\n    if (import.meta.env.DEV) console.trace();\n  }\n  const currentAccount = store.session.get('currentAccount');\n  const account = getAccount(currentAccount);\n  return account;\n}\n\nexport function getCurrentAccountNS() {\n  const account = getCurrentAccount();\n  const {\n    instanceURL,\n    info: { id },\n  } = account;\n  return `${id}@${instanceURL}`;\n}\n\nexport function saveAccount(account) {\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === account.info.id);\n  if (acc) {\n    acc.info = account.info;\n    acc.instanceURL = account.instanceURL;\n    acc.accessToken = account.accessToken;\n    acc.vapidKey = account.vapidKey;\n  } else {\n    accounts.push(account);\n  }\n  store.local.setJSON('accounts', accounts);\n  store.session.set('currentAccount', account.info.id);\n}\n\nexport function updateAccount(accountInfo) {\n  // Only update if displayName or avatar or avatar_static is different\n  const accounts = store.local.getJSON('accounts') || [];\n  const acc = accounts.find((a) => a.info.id === accountInfo.id);\n  if (acc) {\n    if (\n      acc.info.displayName !== accountInfo.displayName ||\n      acc.info.avatar !== accountInfo.avatar ||\n      acc.info.avatar_static !== accountInfo.avatar_static\n    ) {\n      acc.info = {\n        ...acc.info,\n        ...accountInfo,\n      };\n      store.local.setJSON('accounts', accounts);\n    }\n  }\n}\n\nlet currentInstance = null;\nexport function getCurrentInstance() {\n  if (currentInstance) return currentInstance;\n  try {\n    const account = getCurrentAccount();\n    const instances = store.local.getJSON('instances');\n    const instance = account.instanceURL.toLowerCase();\n    return (currentInstance = instances[instance]);\n  } catch (e) {\n    console.error(e);\n    alert(`Failed to load instance configuration. Please try again.\\n\\n${e}`);\n    // Temporary fix for corrupted data\n    store.local.del('instances');\n    location.reload();\n    return {};\n  }\n}\n\n// Massage these instance configurations to match the Mastodon API\n// - Pleroma\nfunction getInstanceConfiguration(instance) {\n  const {\n    configuration,\n    maxMediaAttachments,\n    maxTootChars,\n    pleroma,\n    pollLimits,\n  } = instance;\n\n  const statuses = configuration?.statuses || {};\n  if (maxMediaAttachments) {\n    statuses.maxMediaAttachments ??= maxMediaAttachments;\n  }\n  if (maxTootChars) {\n    statuses.maxCharacters ??= maxTootChars;\n  }\n\n  const polls = configuration?.polls || {};\n  if (pollLimits) {\n    polls.maxCharactersPerOption ??= pollLimits.maxOptionChars;\n    polls.maxExpiration ??= pollLimits.maxExpiration;\n    polls.maxOptions ??= pollLimits.maxOptions;\n    polls.minExpiration ??= pollLimits.minExpiration;\n  }\n\n  return {\n    ...configuration,\n    statuses,\n    polls,\n  };\n}\n\nexport function getCurrentInstanceConfiguration() {\n  const instance = getCurrentInstance();\n  return getInstanceConfiguration(instance);\n}\n","import { getCurrentAccountNS } from './store-utils';\n\nconst local = {\n  get: (key) => {\n    try {\n      return localStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(local.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return localStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return local.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return localStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nconst session = {\n  get: (key) => {\n    try {\n      return sessionStorage.getItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  getJSON: (key) => {\n    try {\n      return JSON.parse(session.get(key));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      return sessionStorage.setItem(key, value);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  setJSON: (key, value) => {\n    try {\n      return session.set(key, JSON.stringify(value));\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      return sessionStorage.removeItem(key);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\n// Store with account namespace (id@domain.tld) <- uses id, not username\nconst account = {\n  get: (key) => {\n    try {\n      return local.getJSON(key)[getCurrentAccountNS()];\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      const data = local.getJSON(key) || {};\n      data[getCurrentAccountNS()] = value;\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n  del: (key) => {\n    try {\n      const data = local.getJSON(key) || {};\n      delete data[getCurrentAccountNS()];\n      return local.setJSON(key, data);\n    } catch (e) {\n      console.warn(e);\n      return null;\n    }\n  },\n};\n\nexport default { local, session, account };\n","import { createRestAPIClient, createStreamingAPIClient } from 'masto';\n\nimport store from './store';\nimport {\n  getAccount,\n  getAccountByAccessToken,\n  getCurrentAccount,\n  saveAccount,\n} from './store-utils';\n\n// Default *fallback* instance\nconst DEFAULT_INSTANCE = 'mastodon.social';\n\n// Per-instance masto instance\n// Useful when only one account is logged in\n// I'm not sure if I'll ever allow multiple logged-in accounts but oh well...\n// E.g. apis['mastodon.social']\nconst apis = {};\n\n// Per-account masto instance\n// Note: There can be many accounts per instance\n// Useful when multiple accounts are logged in or when certain actions require a specific account\n// Just in case if I need this one day.\n// E.g. accountApis['mastodon.social']['ACCESS_TOKEN']\nconst accountApis = {};\nwindow.__ACCOUNT_APIS__ = accountApis;\n\n// Current account masto instance\nlet currentAccountApi;\n\nexport function initClient({ instance, accessToken }) {\n  if (/^https?:\\/\\//.test(instance)) {\n    instance = instance\n      .replace(/^https?:\\/\\//, '')\n      .replace(/\\/+$/, '')\n      .toLowerCase();\n  }\n  const url = instance ? `https://${instance}` : `https://${DEFAULT_INSTANCE}`;\n\n  const masto = createRestAPIClient({\n    url,\n    accessToken, // Can be null\n    timeout: 30_000, // Unfortunatly this is global instead of per-request\n  });\n\n  const client = {\n    masto,\n    instance,\n    accessToken,\n  };\n  apis[instance] = client;\n  if (!accountApis[instance]) accountApis[instance] = {};\n  if (accessToken) accountApis[instance][accessToken] = client;\n\n  return client;\n}\n\n// Get the instance information\n// The config is needed for composing\nexport async function initInstance(client, instance) {\n  console.log('INIT INSTANCE', client, instance);\n  const { masto, accessToken } = client;\n  // Request v2, fallback to v1 if fail\n  let info;\n  try {\n    info = await masto.v2.instance.fetch();\n  } catch (e) {}\n  if (!info) {\n    try {\n      info = await masto.v1.instance.fetch();\n    } catch (e) {}\n  }\n  if (!info) return;\n  console.log(info);\n  const {\n    // v1\n    uri,\n    urls: { streamingApi } = {},\n    // v2\n    domain,\n    configuration: { urls: { streaming } = {} } = {},\n  } = info;\n  const instances = store.local.getJSON('instances') || {};\n  if (uri || domain) {\n    instances[\n      (domain || uri)\n        .replace(/^https?:\\/\\//, '')\n        .replace(/\\/+$/, '')\n        .toLowerCase()\n    ] = info;\n  }\n  if (instance) {\n    instances[instance.toLowerCase()] = info;\n  }\n  store.local.setJSON('instances', instances);\n  // This is a weird place to put this but here's updating the masto instance with the streaming API URL set in the configuration\n  // Reason: Streaming WebSocket URL may change, unlike the standard API REST URLs\n  const supportsWebSocket = 'WebSocket' in window;\n  if (supportsWebSocket && (streamingApi || streaming)) {\n    console.log('🎏 Streaming API URL:', streaming || streamingApi);\n    // masto.config.props.streamingApiUrl = streaming || streamingApi;\n    // Legacy masto.ws\n    const streamClient = createStreamingAPIClient({\n      streamingApiUrl: streaming || streamingApi,\n      accessToken,\n      implementation: WebSocket,\n    });\n    client.streaming = streamClient;\n    // masto.ws = streamClient;\n    console.log('🎏 Streaming API client:', client);\n  }\n}\n\n// Get the account information and store it\nexport async function initAccount(client, instance, accessToken, vapidKey) {\n  const { masto } = client;\n  const mastoAccount = await masto.v1.accounts.verifyCredentials();\n\n  console.log('CURRENTACCOUNT SET', mastoAccount.id);\n  store.session.set('currentAccount', mastoAccount.id);\n\n  saveAccount({\n    info: mastoAccount,\n    instanceURL: instance.toLowerCase(),\n    accessToken,\n    vapidKey,\n  });\n}\n\n// Get preferences\nexport async function initPreferences(client) {\n  try {\n    const { masto } = client;\n    const preferences = await masto.v1.preferences.fetch();\n    store.account.set('preferences', preferences);\n  } catch (e) {\n    // silently fail\n    console.error(e);\n  }\n}\n\n// Get the masto instance\n// If accountID is provided, get the masto instance for that account\nexport function api({ instance, accessToken, accountID, account } = {}) {\n  // Always lowercase and trim the instance\n  if (instance) {\n    instance = instance.toLowerCase().trim();\n  }\n\n  // If instance and accessToken are provided, get the masto instance for that account\n  if (instance && accessToken) {\n    const client =\n      accountApis[instance]?.[accessToken] ||\n      initClient({ instance, accessToken });\n    const { masto, streaming } = client;\n    return {\n      masto,\n      streaming,\n      client,\n      authenticated: true,\n      instance,\n    };\n  }\n\n  if (accessToken) {\n    // If only accessToken is provided, get the masto instance for that accessToken\n    console.log('X 1', accountApis);\n    for (const instance in accountApis) {\n      if (accountApis[instance][accessToken]) {\n        console.log('X 2', accountApis, instance, accessToken);\n        const client = accountApis[instance][accessToken];\n        const { masto, streaming } = client;\n        return {\n          masto,\n          streaming,\n          client,\n          authenticated: true,\n          instance,\n        };\n      } else {\n        console.log('X 3', accountApis, instance, accessToken);\n        const account = getAccountByAccessToken(accessToken);\n        if (account) {\n          const accessToken = account.accessToken;\n          const instance = account.instanceURL.toLowerCase().trim();\n          const client = initClient({ instance, accessToken });\n          const { masto, streaming } = client;\n          return {\n            masto,\n            streaming,\n            client,\n            authenticated: true,\n            instance,\n          };\n        } else {\n          throw new Error(`Access token not found`);\n        }\n      }\n    }\n  }\n\n  // If account is provided, get the masto instance for that account\n  if (account || accountID) {\n    account = account || getAccount(accountID);\n    if (account) {\n      const accessToken = account.accessToken;\n      const instance = account.instanceURL.toLowerCase().trim();\n      const client =\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken });\n      const { masto, streaming } = client;\n      return {\n        masto,\n        streaming,\n        client,\n        authenticated: true,\n        instance,\n      };\n    } else {\n      throw new Error(`Account ${accountID} not found`);\n    }\n  }\n\n  const currentAccount = getCurrentAccount();\n\n  // If only instance is provided, get the masto instance for that instance\n  if (instance) {\n    if (currentAccountApi?.instance === instance) {\n      return {\n        masto: currentAccountApi.masto,\n        streaming: currentAccountApi.streaming,\n        client: currentAccountApi,\n        authenticated: true,\n        instance,\n      };\n    }\n\n    if (currentAccount?.instanceURL === instance) {\n      const { accessToken } = currentAccount;\n      currentAccountApi =\n        accountApis[instance]?.[accessToken] ||\n        initClient({ instance, accessToken });\n      return {\n        masto: currentAccountApi.masto,\n        streaming: currentAccountApi.streaming,\n        client: currentAccountApi,\n        authenticated: true,\n        instance,\n      };\n    }\n\n    const client = apis[instance] || initClient({ instance });\n    const { masto, streaming, accessToken } = client;\n    console.log('XX', instance, accessToken);\n    return {\n      masto,\n      streaming,\n      client,\n      authenticated: !!accessToken,\n      instance,\n    };\n  }\n\n  // If no instance is provided, get the masto instance for the current account\n  if (currentAccountApi) {\n    return {\n      masto: currentAccountApi.masto,\n      streaming: currentAccountApi.streaming,\n      client: currentAccountApi,\n      authenticated: true,\n      instance: currentAccountApi.instance,\n    };\n  }\n  if (currentAccount) {\n    const { accessToken, instanceURL: instance } = currentAccount;\n    currentAccountApi =\n      accountApis[instance]?.[accessToken] ||\n      initClient({ instance, accessToken });\n    return {\n      masto: currentAccountApi.masto,\n      streaming: currentAccountApi.streaming,\n      client: currentAccountApi,\n      authenticated: true,\n      instance,\n    };\n  }\n\n  // If no instance is provided and no account is logged in, get the masto instance for DEFAULT_INSTANCE\n  const client =\n    apis[DEFAULT_INSTANCE] || initClient({ instance: DEFAULT_INSTANCE });\n  const { masto, streaming } = client;\n  console.log('XX', { DEFAULT_INSTANCE });\n  return {\n    masto,\n    streaming,\n    client,\n    authenticated: false,\n    instance: DEFAULT_INSTANCE,\n  };\n}\n\nwindow.__API__ = {\n  currentAccountApi,\n  apis,\n  accountApis,\n};\n","import Toastify from 'toastify-js';\n\nwindow._showToast = showToast;\n\nfunction showToast(props) {\n  if (typeof props === 'string') {\n    props = { text: props };\n  }\n  const { onClick, delay, ...rest } = props;\n  const toast = Toastify({\n    className: `${onClick || props.destination ? 'shiny-pill' : ''}`,\n    gravity: 'bottom',\n    position: 'center',\n    ...rest,\n    onClick: () => {\n      onClick?.(toast); // Pass in the object itself!\n    },\n  });\n  if (delay) {\n    setTimeout(() => {\n      toast.showToast();\n    }, delay);\n  } else {\n    toast.showToast();\n  }\n}\n\nexport default showToast;\n","import moize from 'moize';\n\nexport default function mem(fn, opts = {}) {\n  return moize(fn, { ...opts, maxSize: 100 });\n}\n","import mem from './mem';\n\nexport default function pmem(fn, opts = {}) {\n  return mem(fn, { isPromise: true, ...opts });\n}\n","import { proxy, subscribe } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst states = proxy({\n  appVersion: {},\n  // history: [],\n  prevLocation: null,\n  currentLocation: null,\n  statuses: {},\n  statusThreadNumber: {},\n  home: [],\n  // specialHome: [],\n  homeNew: [],\n  homeLast: null, // Last item in 'home' list\n  homeLastFetchTime: null,\n  notifications: [],\n  notificationsLast: null, // Last read notification\n  notificationsNew: [],\n  notificationsShowNew: false,\n  notificationsLastFetchTime: null,\n  reloadStatusPage: 0,\n  reloadGenericAccounts: {\n    id: null,\n    counter: 0,\n  },\n  spoilers: {},\n  scrollPositions: {},\n  unfurledLinks: {},\n  statusQuotes: {},\n  accounts: {},\n  routeNotification: null,\n  // Modals\n  showCompose: false,\n  showSettings: false,\n  showAccount: false,\n  showAccounts: false,\n  showDrafts: false,\n  showMediaModal: false,\n  showShortcutsSettings: false,\n  showKeyboardShortcutsHelp: false,\n  showGenericAccounts: false,\n  showMediaAlt: false,\n  // Shortcuts\n  shortcuts: [],\n  // Settings\n  settings: {\n    autoRefresh: false,\n    shortcutsViewMode: null,\n    shortcutsColumnsMode: false,\n    boostsCarousel: true,\n    contentTranslation: true,\n    contentTranslationTargetLanguage: null,\n    contentTranslationHideLanguages: [],\n    contentTranslationAutoInline: false,\n    cloakMode: false,\n  },\n});\n\nexport default states;\n\nexport function initStates() {\n  // init all account based states\n  // all keys that uses store.account.get() should be initialized here\n  states.notificationsLast = store.account.get('notificationsLast') || null;\n  states.shortcuts = store.account.get('shortcuts') ?? [];\n  states.settings.autoRefresh =\n    store.account.get('settings-autoRefresh') ?? false;\n  states.settings.shortcutsViewMode =\n    store.account.get('settings-shortcutsViewMode') ?? null;\n  states.settings.shortcutsColumnsMode =\n    store.account.get('settings-shortcutsColumnsMode') ?? false;\n  states.settings.boostsCarousel =\n    store.account.get('settings-boostsCarousel') ?? true;\n  states.settings.contentTranslation =\n    store.account.get('settings-contentTranslation') ?? true;\n  states.settings.contentTranslationTargetLanguage =\n    store.account.get('settings-contentTranslationTargetLanguage') || null;\n  states.settings.contentTranslationHideLanguages =\n    store.account.get('settings-contentTranslationHideLanguages') || [];\n  states.settings.contentTranslationAutoInline =\n    store.account.get('settings-contentTranslationAutoInline') ?? false;\n  states.settings.cloakMode = store.account.get('settings-cloakMode') ?? false;\n}\n\nsubscribeKey(states, 'notificationsLast', (v) => {\n  console.log('CHANGE', v);\n  store.account.set('notificationsLast', states.notificationsLast);\n});\nsubscribe(states, (changes) => {\n  console.debug('STATES change', changes);\n  for (const [action, path, value, prevValue] of changes) {\n    if (path.join('.') === 'settings.autoRefresh') {\n      store.account.set('settings-autoRefresh', !!value);\n    }\n    if (path.join('.') === 'settings.boostsCarousel') {\n      store.account.set('settings-boostsCarousel', !!value);\n    }\n    if (path.join('.') === 'settings.shortcutsColumnsMode') {\n      store.account.set('settings-shortcutsColumnsMode', !!value);\n    }\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      store.account.set('settings-shortcutsViewMode', value);\n    }\n    if (path.join('.') === 'settings.contentTranslation') {\n      store.account.set('settings-contentTranslation', !!value);\n    }\n    if (path.join('.') === 'settings.contentTranslationAutoInline') {\n      store.account.set('settings-contentTranslationAutoInline', !!value);\n    }\n    if (path.join('.') === 'settings.contentTranslationTargetLanguage') {\n      console.log('SET', value);\n      store.account.set('settings-contentTranslationTargetLanguage', value);\n    }\n    if (/^settings\\.contentTranslationHideLanguages/i.test(path.join('.'))) {\n      store.account.set(\n        'settings-contentTranslationHideLanguages',\n        states.settings.contentTranslationHideLanguages,\n      );\n    }\n    if (path?.[0] === 'shortcuts') {\n      store.account.set('shortcuts', states.shortcuts);\n    }\n    if (path.join('.') === 'settings.cloakMode') {\n      store.account.set('settings-cloakMode', !!value);\n    }\n  }\n});\n\nexport function hideAllModals() {\n  states.showCompose = false;\n  states.showSettings = false;\n  states.showAccount = false;\n  states.showAccounts = false;\n  states.showDrafts = false;\n  states.showMediaModal = false;\n  states.showShortcutsSettings = false;\n  states.showKeyboardShortcutsHelp = false;\n  states.showGenericAccounts = false;\n  states.showMediaAlt = false;\n}\n\nexport function statusKey(id, instance) {\n  if (!id) return;\n  return instance ? `${instance}/${id}` : id;\n}\n\nexport function getStatus(statusID, instance) {\n  if (instance) {\n    const key = statusKey(statusID, instance);\n    return states.statuses[key];\n  }\n  return states.statuses[statusID];\n}\n\nexport function saveStatus(status, instance, opts) {\n  if (typeof instance === 'object') {\n    opts = instance;\n    instance = null;\n  }\n  const { override, skipThreading } = Object.assign(\n    { override: true, skipThreading: false },\n    opts,\n  );\n  if (!status) return;\n  const oldStatus = getStatus(status.id, instance);\n  if (!override && oldStatus) return;\n  const key = statusKey(status.id, instance);\n  if (oldStatus?._pinned) status._pinned = oldStatus._pinned;\n  if (oldStatus?._filtered) status._filtered = oldStatus._filtered;\n  states.statuses[key] = status;\n  if (status.reblog) {\n    const key = statusKey(status.reblog.id, instance);\n    states.statuses[key] = status.reblog;\n  }\n\n  // THREAD TRAVERSER\n  if (!skipThreading) {\n    requestAnimationFrame(() => {\n      threadifyStatus(status, instance);\n      if (status.reblog) {\n        threadifyStatus(status.reblog, instance);\n      }\n    });\n  }\n}\n\nexport function threadifyStatus(status, propInstance) {\n  const { masto, instance } = api({ instance: propInstance });\n  // Return all statuses in the thread, via inReplyToId, if inReplyToAccountId === account.id\n  let fetchIndex = 0;\n  async function traverse(status, index = 0) {\n    const { inReplyToId, inReplyToAccountId } = status;\n    if (!inReplyToId || inReplyToAccountId !== status.account.id) {\n      return [status];\n    }\n    if (inReplyToId && inReplyToAccountId !== status.account.id) {\n      throw 'Not a thread';\n      // Possibly thread of replies by multiple people?\n    }\n    const key = statusKey(inReplyToId, instance);\n    let prevStatus = states.statuses[key];\n    if (!prevStatus) {\n      if (fetchIndex++ > 3) throw 'Too many fetches for thread'; // Some people revive old threads\n      await new Promise((r) => setTimeout(r, 500 * fetchIndex)); // Be nice to rate limits\n      // prevStatus = await masto.v1.statuses.$.select(inReplyToId).fetch();\n      prevStatus = await fetchStatus(inReplyToId, masto);\n      saveStatus(prevStatus, instance, { skipThreading: true });\n    }\n    // Prepend so that first status in thread will be index 0\n    return [...(await traverse(prevStatus, ++index)), status];\n  }\n  return traverse(status)\n    .then((statuses) => {\n      if (statuses.length > 1) {\n        console.debug('THREAD', statuses);\n        statuses.forEach((status, index) => {\n          const key = statusKey(status.id, instance);\n          states.statusThreadNumber[key] = index + 1;\n        });\n      }\n    })\n    .catch((e) => {\n      console.error(e, status);\n    });\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n","import { useEffect, useRef } from 'preact/hooks';\n\nfunction useInterval(fn, delay, deps, immediate) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [fn, deps]);\n\n  useEffect(() => {\n    if (!immediate || delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n\n  useEffect(() => {\n    if (delay === null || delay === false) return;\n    const tick = () => savedCallback.current();\n    const id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport default useInterval;\n","export default function openCompose(opts) {\n  const url = new URL('/compose/', window.location);\n  const { width: screenWidth, height: screenHeight } = window.screen;\n  const left = Math.max(0, (screenWidth - 600) / 2);\n  const top = Math.max(0, (screenHeight - 450) / 2);\n  const width = Math.min(screenWidth, 600);\n  const height = Math.min(screenHeight, 450);\n  const winUID = opts?.uid || Math.random();\n  const newWin = window.open(\n    url,\n    'compose' + winUID,\n    `width=${width},height=${height},left=${left},top=${top}`,\n  );\n\n  if (newWin) {\n    // if (masto) {\n    //   newWin.masto = masto;\n    // }\n\n    newWin.__COMPOSE__ = opts;\n  }\n\n  return newWin;\n}\n","import { memo } from 'preact/compat';\nimport { useEffect, useState } from 'preact/hooks';\n\nconst SIZES = {\n  s: 12,\n  m: 16,\n  l: 20,\n  xl: 24,\n  xxl: 32,\n};\n\nexport const ICONS = {\n  x: () => import('@iconify-icons/mingcute/close-line'),\n  heart: () => import('@iconify-icons/mingcute/heart-line'),\n  bookmark: () => import('@iconify-icons/mingcute/bookmark-line'),\n  'check-circle': () => import('@iconify-icons/mingcute/check-circle-line'),\n  'x-circle': () => import('@iconify-icons/mingcute/close-circle-line'),\n  transfer: () => import('@iconify-icons/mingcute/transfer-4-line'),\n  rocket: () => import('@iconify-icons/mingcute/rocket-line'),\n  'arrow-left': () => import('@iconify-icons/mingcute/arrow-left-line'),\n  'arrow-right': () => import('@iconify-icons/mingcute/arrow-right-line'),\n  'arrow-up': () => import('@iconify-icons/mingcute/arrow-up-line'),\n  'arrow-down': () => import('@iconify-icons/mingcute/arrow-down-line'),\n  earth: () => import('@iconify-icons/mingcute/earth-line'),\n  lock: () => import('@iconify-icons/mingcute/lock-line'),\n  unlock: () => import('@iconify-icons/mingcute/unlock-line'),\n  'eye-close': () => import('@iconify-icons/mingcute/eye-close-line'),\n  'eye-open': () => import('@iconify-icons/mingcute/eye-2-line'),\n  message: () => import('@iconify-icons/mingcute/mail-line'),\n  comment: () => import('@iconify-icons/mingcute/chat-3-line'),\n  home: () => import('@iconify-icons/mingcute/home-3-line'),\n  notification: () => import('@iconify-icons/mingcute/notification-line'),\n  follow: () => import('@iconify-icons/mingcute/user-follow-line'),\n  'follow-add': () => import('@iconify-icons/mingcute/user-add-line'),\n  poll: [() => import('@iconify-icons/mingcute/chart-bar-line'), '90deg'],\n  pencil: () => import('@iconify-icons/mingcute/pencil-line'),\n  quill: () => import('@iconify-icons/mingcute/quill-pen-line'),\n  at: () => import('@iconify-icons/mingcute/at-line'),\n  attachment: () => import('@iconify-icons/mingcute/attachment-line'),\n  upload: () => import('@iconify-icons/mingcute/upload-3-line'),\n  gear: () => import('@iconify-icons/mingcute/settings-3-line'),\n  more: () => import('@iconify-icons/mingcute/more-3-line'),\n  external: () => import('@iconify-icons/mingcute/external-link-line'),\n  popout: () => import('@iconify-icons/mingcute/external-link-line'),\n  popin: [() => import('@iconify-icons/mingcute/external-link-line'), '180deg'],\n  plus: () => import('@iconify-icons/mingcute/add-circle-line'),\n  'chevron-left': () => import('@iconify-icons/mingcute/left-line'),\n  'chevron-right': () => import('@iconify-icons/mingcute/right-line'),\n  'chevron-down': () => import('@iconify-icons/mingcute/down-line'),\n  reply: [\n    () => import('@iconify-icons/mingcute/share-forward-line'),\n    '180deg',\n    'horizontal',\n  ],\n  thread: () => import('@iconify-icons/mingcute/route-line'),\n  group: () => import('@iconify-icons/mingcute/group-line'),\n  bot: () => import('@iconify-icons/mingcute/android-2-line'),\n  menu: () => import('@iconify-icons/mingcute/rows-4-line'),\n  list: () => import('@iconify-icons/mingcute/list-check-line'),\n  search: () => import('@iconify-icons/mingcute/search-2-line'),\n  hashtag: () => import('@iconify-icons/mingcute/hashtag-line'),\n  info: () => import('@iconify-icons/mingcute/information-line'),\n  shortcut: () => import('@iconify-icons/mingcute/lightning-line'),\n  user: () => import('@iconify-icons/mingcute/user-4-line'),\n  following: () => import('@iconify-icons/mingcute/walk-line'),\n  pin: () => import('@iconify-icons/mingcute/pin-line'),\n  bus: () => import('@iconify-icons/mingcute/bus-2-line'),\n  link: () => import('@iconify-icons/mingcute/link-2-line'),\n  history: () => import('@iconify-icons/mingcute/history-line'),\n  share: () => import('@iconify-icons/mingcute/share-2-line'),\n  sparkles: () => import('@iconify-icons/mingcute/sparkles-line'),\n  exit: () => import('@iconify-icons/mingcute/exit-line'),\n  translate: () => import('@iconify-icons/mingcute/translate-line'),\n  play: () => import('@iconify-icons/mingcute/play-fill'),\n  trash: () => import('@iconify-icons/mingcute/delete-2-line'),\n  mute: () => import('@iconify-icons/mingcute/volume-mute-line'),\n  unmute: () => import('@iconify-icons/mingcute/volume-line'),\n  block: () => import('@iconify-icons/mingcute/forbid-circle-line'),\n  unblock: [\n    () => import('@iconify-icons/mingcute/forbid-circle-line'),\n    '180deg',\n  ],\n  flag: () => import('@iconify-icons/mingcute/flag-4-line'),\n  time: () => import('@iconify-icons/mingcute/time-line'),\n  refresh: () => import('@iconify-icons/mingcute/refresh-2-line'),\n  emoji2: () => import('@iconify-icons/mingcute/emoji-2-line'),\n  filter: () => import('@iconify-icons/mingcute/filter-2-line'),\n  chart: () => import('@iconify-icons/mingcute/chart-line-line'),\n  react: () => import('@iconify-icons/mingcute/react-line'),\n  layout4: () => import('@iconify-icons/mingcute/layout-4-line'),\n  layout5: () => import('@iconify-icons/mingcute/layout-5-line'),\n  announce: () => import('@iconify-icons/mingcute/announcement-line'),\n  alert: () => import('@iconify-icons/mingcute/alert-line'),\n  round: () => import('@iconify-icons/mingcute/round-fill'),\n  'arrow-up-circle': () =>\n    import('@iconify-icons/mingcute/arrow-up-circle-line'),\n  'arrow-down-circle': () =>\n    import('@iconify-icons/mingcute/arrow-down-circle-line'),\n  clipboard: () => import('@iconify-icons/mingcute/clipboard-line'),\n  'account-edit': () => import('@iconify-icons/mingcute/user-edit-line'),\n  'account-warning': () => import('@iconify-icons/mingcute/user-warning-line'),\n  keyboard: () => import('@iconify-icons/mingcute/keyboard-line'),\n  cloud: () => import('@iconify-icons/mingcute/cloud-line'),\n  month: () => import('@iconify-icons/mingcute/calendar-month-line'),\n  media: () => import('@iconify-icons/mingcute/photo-album-line'),\n};\n\nfunction Icon({\n  icon,\n  size = 'm',\n  alt,\n  title,\n  class: className = '',\n  style = {},\n}) {\n  if (!icon) return null;\n\n  const iconSize = SIZES[size];\n  let iconBlock = ICONS[icon];\n  let rotate, flip;\n  if (Array.isArray(iconBlock)) {\n    [iconBlock, rotate, flip] = iconBlock;\n  }\n\n  const [iconData, setIconData] = useState(null);\n  useEffect(async () => {\n    const icon = await iconBlock();\n    setIconData(icon.default);\n  }, [iconBlock]);\n\n  return (\n    <span\n      class={`icon ${className}`}\n      title={title || alt}\n      style={{\n        width: `${iconSize}px`,\n        height: `${iconSize}px`,\n        ...style,\n      }}\n    >\n      {iconData && (\n        <svg\n          width={iconSize}\n          height={iconSize}\n          viewBox={`0 0 ${iconData.width} ${iconData.height}`}\n          dangerouslySetInnerHTML={{ __html: iconData.body }}\n          style={{\n            transform: `${rotate ? `rotate(${rotate})` : ''} ${\n              flip ? `scaleX(-1)` : ''\n            }`,\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default memo(Icon);\n","import './modal.css';\n\nimport { createPortal } from 'preact/compat';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nconst $modalContainer = document.getElementById('modal-container');\n\nfunction Modal({ children, onClose, onClick, class: className }) {\n  if (!children) return null;\n\n  const modalRef = useRef();\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      const focusElement = modalRef.current?.querySelector('[tabindex=\"-1\"]');\n      if (focusElement) {\n        focusElement.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setTimeout(() => {\n        onClose?.();\n      }, 0);\n    },\n    {\n      enabled: !!onClose,\n      // Using keyup and setTimeout above\n      // This will run \"later\" to prevent clash with esc handlers from other components\n      keydown: false,\n      keyup: true,\n    },\n    [onClose],\n  );\n\n  const Modal = (\n    <div\n      ref={(node) => {\n        modalRef.current = node;\n        escRef.current = node?.querySelector?.('[tabindex=\"-1\"]') || node;\n      }}\n      className={className}\n      onClick={(e) => {\n        onClick?.(e);\n        if (e.target === e.currentTarget) {\n          onClose?.(e);\n        }\n      }}\n      tabIndex=\"-1\"\n      onFocus={(e) => {\n        if (e.target === e.currentTarget) {\n          modalRef.current?.querySelector?.('[tabindex=\"-1\"]')?.focus?.();\n        }\n      }}\n    >\n      {children}\n    </div>\n  );\n\n  return createPortal(Modal, $modalContainer);\n\n  // return createPortal(children, $modalContainer);\n}\n\nexport default Modal;\n","import './loader.css';\n\nfunction Loader({ abrupt, hidden, ...props }) {\n  return (\n    <span\n      {...props}\n      class={`loader-container ${abrupt ? 'abrupt' : ''} ${\n        hidden ? 'hidden' : ''\n      }`}\n    >\n      <span class=\"loader\" />\n    </span>\n  );\n}\n\nexport default Loader;\n","import './avatar.css';\n\nimport { useRef } from 'preact/hooks';\n\nimport mem from '../utils/mem';\n\nconst SIZES = {\n  s: 16,\n  m: 20,\n  l: 24,\n  xl: 32,\n  xxl: 50,\n  xxxl: 64,\n};\n\nconst alphaCache = {};\n\nconst canvas = window.OffscreenCanvas\n  ? new OffscreenCanvas(1, 1)\n  : document.createElement('canvas');\nconst ctx = canvas.getContext('2d', {\n  willReadFrequently: true,\n});\n\nfunction Avatar({ url, size, alt = '', squircle, ...props }) {\n  size = SIZES[size] || size || SIZES.m;\n  const avatarRef = useRef();\n  const isMissing = /missing\\.png$/.test(url);\n  return (\n    <span\n      ref={avatarRef}\n      class={`avatar ${squircle ? 'squircle' : ''} ${\n        alphaCache[url] ? 'has-alpha' : ''\n      }`}\n      style={{\n        width: size,\n        height: size,\n      }}\n      title={alt}\n      {...props}\n    >\n      {!!url && (\n        <img\n          src={url}\n          width={size}\n          height={size}\n          alt={alt}\n          loading=\"lazy\"\n          decoding=\"async\"\n          crossOrigin={\n            alphaCache[url] === undefined && !isMissing\n              ? 'anonymous'\n              : undefined\n          }\n          onError={(e) => {\n            if (e.target.crossOrigin) {\n              e.target.crossOrigin = null;\n              e.target.src = url;\n            }\n          }}\n          onLoad={(e) => {\n            if (avatarRef.current) avatarRef.current.dataset.loaded = true;\n            if (alphaCache[url] !== undefined) return;\n            if (isMissing) return;\n            try {\n              // Check if image has alpha channel\n              const { width, height } = e.target;\n              if (canvas.width !== width) canvas.width = width;\n              if (canvas.height !== height) canvas.height = height;\n              ctx.drawImage(e.target, 0, 0);\n              const allPixels = ctx.getImageData(0, 0, width, height);\n              // At least 10% of pixels have alpha <= 128\n              const hasAlpha =\n                allPixels.data.filter((pixel, i) => i % 4 === 3 && pixel <= 128)\n                  .length /\n                  (allPixels.data.length / 4) >\n                0.1;\n              if (hasAlpha) {\n                // console.log('hasAlpha', hasAlpha, allPixels.data);\n                avatarRef.current.classList.add('has-alpha');\n              }\n              alphaCache[url] = hasAlpha;\n              ctx.clearRect(0, 0, width, height);\n            } catch (e) {\n              // Silent fail\n              alphaCache[url] = false;\n            }\n          }}\n        />\n      )}\n    </span>\n  );\n}\n\nexport default mem(Avatar);\n","import { forwardRef } from 'preact/compat';\nimport { useLocation } from 'react-router-dom';\n\nimport states from '../utils/states';\n\n/* NOTES\n   =====\n   Initially this uses <NavLink> from react-router-dom, but it doesn't work:\n   1. It interferes with nested <a> inside <a> and it's difficult to preventDefault/stopPropagation from the nested <a>\n   2. isActive doesn't work properly with the weird routes that's set up in this app, due to the faux \"location\" to make the modals work and prevent unmounting\n   3. Not using <Link state/> because it modifies history.state that *persists* across page reloads. I don't need that, so using valtio's states instead.\n*/\n\nconst Link = forwardRef((props, ref) => {\n  let routerLocation;\n  try {\n    routerLocation = useLocation();\n  } catch (e) {}\n  let hash = (location.hash || '').replace(/^#/, '').trim();\n  if (hash === '') hash = '/';\n  const { to, ...restProps } = props;\n\n  // Handle encodeURIComponent of searchParams values\n  if (!!hash && hash !== '/' && hash.includes('?')) {\n    const parsedHash = new URL(hash, location.origin); // Fake base URL\n    if (parsedHash.searchParams.size) {\n      const searchParamsStr = Array.from(parsedHash.searchParams.entries())\n        .map(([key, value]) => `${key}=${encodeURIComponent(value)}`)\n        .join('&');\n      hash = parsedHash.pathname + '?' + searchParamsStr;\n    }\n  }\n\n  const isActive = hash === to || decodeURIComponent(hash) === to;\n  return (\n    <a\n      ref={ref}\n      href={`#${to}`}\n      {...restProps}\n      class={`${props.class || ''} ${isActive ? 'is-active' : ''}`}\n      onClick={(e) => {\n        if (e.currentTarget?.parentNode?.closest('a')) {\n          // If this <a> is nested inside another <a>\n          e.stopPropagation();\n        }\n        if (routerLocation) states.prevLocation = routerLocation;\n        props.onClick?.(e);\n      }}\n    />\n  );\n});\n\nexport default Link;\n","import { Menu, MenuItem, SubMenu } from '@szhsin/react-menu';\nimport { cloneElement } from 'preact';\nimport { useRef } from 'preact/hooks';\n\nfunction MenuConfirm({\n  subMenu = false,\n  confirm = true,\n  confirmLabel,\n  menuItemClassName,\n  menuFooter,\n  ...props\n}) {\n  const { children, onClick, ...restProps } = props;\n  if (!confirm) {\n    if (subMenu) return <MenuItem {...props} />;\n    if (onClick) {\n      return cloneElement(children, {\n        onClick,\n      });\n    }\n    return children;\n  }\n  const Parent = subMenu ? SubMenu : Menu;\n  const menuRef = useRef();\n  return (\n    <Parent\n      instanceRef={menuRef}\n      openTrigger=\"clickOnly\"\n      direction=\"bottom\"\n      overflow=\"auto\"\n      gap={-8}\n      shift={8}\n      menuClassName=\"menu-emphasized\"\n      {...restProps}\n      menuButton={subMenu ? undefined : children}\n      label={subMenu ? children : undefined}\n      // Test fix for bug; submenus not opening on Android\n      itemProps={{\n        onPointerMove: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n        onPointerLeave: (e) => {\n          if (e.pointerType === 'touch') {\n            menuRef.current?.openMenu?.();\n          }\n        },\n      }}\n    >\n      <MenuItem className={menuItemClassName} onClick={onClick}>\n        {confirmLabel}\n      </MenuItem>\n      {menuFooter}\n    </Parent>\n  );\n}\n\nexport default MenuConfirm;\n","function EmojiText({ text, emojis }) {\n  if (!text) return '';\n  if (!emojis?.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  const regex = new RegExp(\n    `:(${emojis.map((e) => e.shortcode).join('|')}):`,\n    'g',\n  );\n  const elements = text.split(regex).map((word) => {\n    const emoji = emojis.find((e) => e.shortcode === word);\n    if (emoji) {\n      const { url, staticUrl } = emoji;\n      return (\n        <picture>\n          <source srcset={staticUrl} media=\"(prefers-reduced-motion: reduce)\" />\n          <img\n            key={word}\n            src={url}\n            alt={word}\n            class=\"shortcode-emoji emoji\"\n            width=\"16\"\n            height=\"16\"\n            loading=\"lazy\"\n            decoding=\"async\"\n          />\n        </picture>\n      );\n    }\n    return word;\n  });\n  return elements;\n}\n\nexport default EmojiText;\n","import './name-text.css';\n\nimport { memo } from 'preact/compat';\n\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\n\nfunction NameText({\n  account,\n  instance,\n  showAvatar,\n  showAcct,\n  short,\n  external,\n  onClick,\n}) {\n  const { acct, avatar, avatarStatic, id, url, displayName, emojis, bot } =\n    account;\n  let { username } = account;\n  const [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n\n  const trimmedUsername = username.toLowerCase().trim();\n  const trimmedDisplayName = (displayName || '').toLowerCase().trim();\n  const shortenedDisplayName = trimmedDisplayName\n    .replace(/(\\:(\\w|\\+|\\-)+\\:)(?=|[\\!\\.\\?]|$)/g, '') // Remove shortcodes, regex from https://regex101.com/r/iE9uV0/1\n    .replace(/\\s+/g, ''); // E.g. \"My name\" === \"myname\"\n  const shortenedAlphaNumericDisplayName = shortenedDisplayName.replace(\n    /[^a-z0-9]/gi,\n    '',\n  ); // Remove non-alphanumeric characters\n\n  if (\n    !short &&\n    (trimmedUsername === trimmedDisplayName ||\n      trimmedUsername === shortenedDisplayName ||\n      trimmedUsername === shortenedAlphaNumericDisplayName ||\n      trimmedUsername.localeCompare?.(shortenedDisplayName, 'en', {\n        sensitivity: 'base',\n      }) === 0)\n  ) {\n    username = null;\n  }\n\n  return (\n    <a\n      class={`name-text ${showAcct ? 'show-acct' : ''} ${short ? 'short' : ''}`}\n      href={url}\n      target={external ? '_blank' : null}\n      title={`${displayName ? `${displayName} ` : ''}@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        e.stopPropagation();\n        if (onClick) return onClick(e);\n        states.showAccount = {\n          account,\n          instance,\n        };\n      }}\n    >\n      {showAvatar && (\n        <>\n          <Avatar url={avatarStatic || avatar} squircle={bot} />{' '}\n        </>\n      )}\n      {displayName && !short ? (\n        <>\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          {!showAcct && username && (\n            <>\n              {' '}\n              <i>@{username}</i>\n            </>\n          )}\n        </>\n      ) : short ? (\n        <i>{username}</i>\n      ) : (\n        <b>{username}</b>\n      )}\n      {showAcct && (\n        <>\n          <br />\n          <i>\n            @{acct1}\n            <span class=\"ib\">{acct2}</span>\n          </i>\n        </>\n      )}\n    </a>\n  );\n}\n\nexport default memo(NameText);\n","// Twitter-style relative time component\n// Seconds = 1s\n// Minutes = 1m\n// Hours = 1h\n// Days = 1d\n// After 7 days, use DD/MM/YYYY or MM/DD/YYYY\nimport dayjs from 'dayjs';\nimport dayjsTwitter from 'dayjs-twitter';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { useEffect, useState } from 'preact/hooks';\n\ndayjs.extend(dayjsTwitter);\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\n\nconst dtf = new Intl.DateTimeFormat();\n\nexport default function RelativeTime({ datetime, format }) {\n  if (!datetime) return null;\n  const date = dayjs(datetime);\n  const [dateStr, setDateStr] = useState('');\n\n  useEffect(() => {\n    let timer, raf;\n    const update = () => {\n      raf = requestAnimationFrame(() => {\n        let str;\n        if (format === 'micro') {\n          // If date <= 1 day ago or day is within this year\n          const now = dayjs();\n          const dayDiff = now.diff(date, 'day');\n          if (dayDiff <= 1 || now.year() === date.year()) {\n            str = date.twitter();\n          } else {\n            str = dtf.format(date.toDate());\n          }\n        } else {\n          str = date.fromNow();\n        }\n        setDateStr(str);\n\n        timer = setTimeout(update, 30_000);\n      });\n    };\n    raf = requestAnimationFrame(update);\n    return () => {\n      clearTimeout(timer);\n      cancelAnimationFrame(raf);\n    };\n  }, [date]);\n\n  return (\n    <time datetime={date.toISOString()} title={date.format('LLLL')}>\n      {dateStr}\n    </time>\n  );\n}\n","import { match } from '@formatjs/intl-localematcher';\n\nimport mem from './mem';\n\nfunction _localeMatch(...args) {\n  // Wrap in try/catch because localeMatcher throws on invalid locales\n  try {\n    return match(...args);\n  } catch (e) {\n    const defaultLocale = args[2];\n    return defaultLocale || false;\n  }\n}\nconst localeMatch = mem(_localeMatch);\n\nexport default localeMatch;\n","import translationTargetLanguages from '../data/lingva-target-languages';\n\nimport localeMatch from './locale-match';\nimport states from './states';\n\nconst locales = [\n  new Intl.DateTimeFormat().resolvedOptions().locale,\n  ...navigator.languages,\n];\n\nfunction getTranslateTargetLanguage(fromSettings = false) {\n  if (fromSettings) {\n    const { contentTranslationTargetLanguage } = states.settings;\n    if (contentTranslationTargetLanguage) {\n      return contentTranslationTargetLanguage;\n    }\n  }\n  return localeMatch(\n    locales,\n    translationTargetLanguages.map((l) => l.code.replace('_', '-')), // The underscore will fail Intl.Locale inside `match`\n    'en',\n  );\n}\n\nexport default getTranslateTargetLanguage;\n","export default function localeCode2Text(code) {\n  try {\n    return new Intl.DisplayNames(navigator.languages, {\n      type: 'language',\n    }).of(code);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n}\n","function emojifyText(text, emojis = []) {\n  if (!text) return '';\n  if (!emojis.length) return text;\n  if (text.indexOf(':') === -1) return text;\n  // Replace shortcodes in text with emoji\n  // emojis = [{ shortcode: 'smile', url: 'https://example.com/emoji.png' }]\n  emojis.forEach((emoji) => {\n    const { shortcode, staticUrl, url } = emoji;\n    text = text.replace(\n      new RegExp(`:${shortcode}:`, 'g'),\n      `<picture><source srcset=\"${staticUrl}\" media=\"(prefers-reduced-motion: reduce)\"></source><img class=\"shortcode-emoji emoji\" src=\"${url}\" alt=\":${shortcode}:\" width=\"16\" height=\"16\" loading=\"lazy\" decoding=\"async\" /></picture>`,\n    );\n  });\n  // console.log(text, emojis);\n  return text;\n}\n\nexport default emojifyText;\n","import emojifyText from './emojify-text';\nimport mem from './mem';\n\nconst fauxDiv = document.createElement('div');\nconst whitelistLinkClasses = ['u-url', 'mention', 'hashtag'];\n\nfunction _enhanceContent(content, opts = {}) {\n  const { emojis, postEnhanceDOM = () => {} } = opts;\n  let enhancedContent = content;\n  const dom = document.createElement('div');\n  dom.innerHTML = enhancedContent;\n  const hasLink = /<a/i.test(enhancedContent);\n  const hasCodeBlock = enhancedContent.indexOf('```') !== -1;\n\n  if (hasLink) {\n    // Add target=\"_blank\" to all links with no target=\"_blank\"\n    // E.g. `note` in `account`\n    const noTargetBlankLinks = Array.from(\n      dom.querySelectorAll('a:not([target=\"_blank\"])'),\n    );\n    noTargetBlankLinks.forEach((link) => {\n      link.setAttribute('target', '_blank');\n    });\n\n    // Remove all classes except `u-url`, `mention`, `hashtag`\n    const links = Array.from(dom.querySelectorAll('a[class]'));\n    links.forEach((link) => {\n      Array.from(link.classList).forEach((c) => {\n        if (!whitelistLinkClasses.includes(c)) {\n          link.classList.remove(c);\n        }\n      });\n    });\n  }\n\n  // Add 'has-url-text' to all links that contains a url\n  if (hasLink) {\n    const links = Array.from(dom.querySelectorAll('a[href]'));\n    links.forEach((link) => {\n      if (/^https?:\\/\\//i.test(link.textContent.trim())) {\n        link.classList.add('has-url-text');\n      }\n    });\n  }\n\n  // Spanify un-spanned mentions\n  if (hasLink) {\n    const links = Array.from(dom.querySelectorAll('a[href]'));\n    const usernames = [];\n    links.forEach((link) => {\n      const text = link.innerText.trim();\n      const hasChildren = link.querySelector('*');\n      // If text looks like @username@domain, then it's a mention\n      if (/^@[^@]+(@[^@]+)?$/g.test(text)) {\n        // Only show @username\n        const [_, username, domain] = text.split('@');\n        if (!hasChildren) {\n          if (\n            !usernames.find(([u]) => u === username) ||\n            usernames.find(([u, d]) => u === username && d === domain)\n          ) {\n            link.innerHTML = `@<span>${username}</span>`;\n            usernames.push([username, domain]);\n          } else {\n            link.innerHTML = `@<span>${username}@${domain}</span>`;\n          }\n        }\n        link.classList.add('mention');\n      }\n      // If text looks like #hashtag, then it's a hashtag\n      if (/^#[^#]+$/g.test(text)) {\n        if (!hasChildren) link.innerHTML = `#<span>${text.slice(1)}</span>`;\n        link.classList.add('mention', 'hashtag');\n      }\n    });\n  }\n\n  // EMOJIS\n  // ======\n  // Convert :shortcode: to <img />\n  let textNodes;\n  if (enhancedContent.indexOf(':') !== -1) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (emojis) {\n        html = emojifyText(html, emojis);\n      }\n      fauxDiv.innerHTML = html;\n      const nodes = Array.from(fauxDiv.childNodes);\n      node.replaceWith(...nodes);\n    });\n  }\n\n  // CODE BLOCKS\n  // ===========\n  // Convert ```code``` to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const blocks = Array.from(dom.querySelectorAll('p')).filter((p) =>\n      /^```[^]+```$/g.test(p.innerText.trim()),\n    );\n    blocks.forEach((block) => {\n      const pre = document.createElement('pre');\n      // Replace <br /> with newlines\n      block.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n      pre.innerHTML = `<code>${block.innerHTML.trim()}</code>`;\n      block.replaceWith(pre);\n    });\n  }\n\n  // Convert multi-paragraph code blocks to <pre><code>code</code></pre>\n  if (hasCodeBlock) {\n    const paragraphs = Array.from(dom.querySelectorAll('p'));\n    // Filter out paragraphs with ``` in beginning only\n    const codeBlocks = paragraphs.filter((p) => /^```/g.test(p.innerText));\n    // For each codeBlocks, get all paragraphs until the last paragraph with ``` at the end only\n    codeBlocks.forEach((block) => {\n      const nextParagraphs = [block];\n      let hasCodeBlock = false;\n      let currentBlock = block;\n      while (currentBlock.nextElementSibling) {\n        const next = currentBlock.nextElementSibling;\n        if (next && next.tagName === 'P') {\n          if (/```$/g.test(next.innerText)) {\n            nextParagraphs.push(next);\n            hasCodeBlock = true;\n            break;\n          } else {\n            nextParagraphs.push(next);\n          }\n        } else {\n          break;\n        }\n        currentBlock = next;\n      }\n      if (hasCodeBlock) {\n        const pre = document.createElement('pre');\n        nextParagraphs.forEach((p) => {\n          // Replace <br /> with newlines\n          p.querySelectorAll('br').forEach((br) => br.replaceWith('\\n'));\n        });\n        const codeText = nextParagraphs.map((p) => p.innerHTML).join('\\n\\n');\n        pre.innerHTML = `<code tabindex=\"0\">${codeText}</code>`;\n        block.replaceWith(pre);\n        nextParagraphs.forEach((p) => p.remove());\n      }\n    });\n  }\n\n  // INLINE CODE\n  // ===========\n  // Convert `code` to <code>code</code>\n  if (enhancedContent.indexOf('`') !== -1) {\n    textNodes = extractTextNodes(dom);\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/`[^`]+`/g.test(html)) {\n        html = html.replaceAll(/(`[^]+?`)/g, '<code>$1</code>');\n      }\n      fauxDiv.innerHTML = html;\n      const nodes = Array.from(fauxDiv.childNodes);\n      node.replaceWith(...nodes);\n    });\n  }\n\n  // TWITTER USERNAMES\n  // =================\n  // Convert @username@twitter.com to <a href=\"https://twitter.com/username\">@username@twitter.com</a>\n  if (/twitter\\.com/i.test(enhancedContent)) {\n    textNodes = extractTextNodes(dom, {\n      rejectFilter: ['A'],\n    });\n    textNodes.forEach((node) => {\n      let html = node.nodeValue\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n      if (/@[a-zA-Z0-9_]+@twitter\\.com/g.test(html)) {\n        html = html.replaceAll(\n          /(@([a-zA-Z0-9_]+)@twitter\\.com)/g,\n          '<a href=\"https://twitter.com/$2\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">$1</a>',\n        );\n      }\n      fauxDiv.innerHTML = html;\n      const nodes = Array.from(fauxDiv.childNodes);\n      node.replaceWith(...nodes);\n    });\n  }\n\n  // HASHTAG STUFFING\n  // ================\n  // Get the <p> that contains a lot of hashtags, add a class to it\n  if (enhancedContent.indexOf('#') !== -1) {\n    let prevIndex = null;\n    const hashtagStuffedParagraphs = Array.from(\n      dom.querySelectorAll('p'),\n    ).filter((p, index) => {\n      let hashtagCount = 0;\n      for (let i = 0; i < p.childNodes.length; i++) {\n        const node = p.childNodes[i];\n\n        if (node.nodeType === Node.TEXT_NODE) {\n          const text = node.textContent.trim();\n          if (text !== '') {\n            return false;\n          }\n        } else if (node.tagName === 'BR') {\n          // Ignore <br />\n        } else if (node.tagName === 'A') {\n          const linkText = node.textContent.trim();\n          if (!linkText || !linkText.startsWith('#')) {\n            return false;\n          } else {\n            hashtagCount++;\n          }\n        } else {\n          return false;\n        }\n      }\n      // Only consider \"stuffing\" if:\n      // - there are more than 3 hashtags\n      // - there are more than 1 hashtag in adjacent paragraphs\n      if (hashtagCount > 3) {\n        prevIndex = index;\n        return true;\n      }\n      if (hashtagCount > 1 && prevIndex && index === prevIndex + 1) {\n        prevIndex = index;\n        return true;\n      }\n    });\n    if (hashtagStuffedParagraphs?.length) {\n      hashtagStuffedParagraphs.forEach((p) => {\n        p.classList.add('hashtag-stuffing');\n        p.title = p.innerText;\n      });\n    }\n  }\n\n  if (postEnhanceDOM) {\n    postEnhanceDOM(dom); // mutate dom\n  }\n\n  enhancedContent = dom.innerHTML;\n\n  return enhancedContent;\n}\nconst enhanceContent = mem(_enhanceContent);\n\nconst defaultRejectFilter = [\n  // Document metadata\n  'STYLE',\n  // Image and multimedia\n  'IMG',\n  'VIDEO',\n  'AUDIO',\n  'AREA',\n  'MAP',\n  'TRACK',\n  // Embedded content\n  'EMBED',\n  'IFRAME',\n  'OBJECT',\n  'PICTURE',\n  'PORTAL',\n  'SOURCE',\n  // SVG and MathML\n  'SVG',\n  'MATH',\n  // Scripting\n  'CANVAS',\n  'NOSCRIPT',\n  'SCRIPT',\n  // Forms\n  'INPUT',\n  'OPTION',\n  'TEXTAREA',\n  // Web Components\n  'SLOT',\n  'TEMPLATE',\n];\nconst defaultRejectFilterMap = Object.fromEntries(\n  defaultRejectFilter.map((nodeName) => [nodeName, true]),\n);\nfunction extractTextNodes(dom, opts = {}) {\n  const textNodes = [];\n  const walk = document.createTreeWalker(\n    dom,\n    NodeFilter.SHOW_TEXT,\n    {\n      acceptNode(node) {\n        if (defaultRejectFilterMap[node.parentNode.nodeName]) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        if (\n          opts.rejectFilter &&\n          opts.rejectFilter.includes(node.parentNode.nodeName)\n        ) {\n          return NodeFilter.FILTER_REJECT;\n        }\n        return NodeFilter.FILTER_ACCEPT;\n      },\n    },\n    false,\n  );\n  let node;\n  while ((node = walk.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\nexport default enhanceContent;\n","import mem from './mem';\n\nconst div = document.createElement('div');\nfunction getHTMLText(html) {\n  if (!html) return '';\n  div.innerHTML = html\n    .replace(/<\\/p>/g, '</p>\\n\\n')\n    .replace(/<\\/li>/g, '</li>\\n');\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.innerText.replace(/[\\r\\n]{3,}/g, '\\n\\n').trim();\n}\n\nexport default mem(getHTMLText);\n","import states from './states';\n\nfunction handleContentLinks(opts) {\n  const { mentions = [], instance, previewMode, statusURL } = opts || {};\n  return (e) => {\n    let { target } = e;\n    target = target.closest('a');\n    if (!target) return;\n\n    // If cmd/ctrl/shift/alt key is pressed or middle-click, let the browser handle it\n    if (e.metaKey || e.ctrlKey || e.shiftKey || e.altKey || e.which === 2) {\n      return;\n    }\n\n    const prevText = target.previousSibling?.textContent;\n    const textBeforeLinkIsAt = prevText?.endsWith('@');\n    const textStartsWithAt = target.innerText.startsWith('@');\n    if (\n      (target.classList.contains('u-url') && textStartsWithAt) ||\n      (textBeforeLinkIsAt && !textStartsWithAt)\n    ) {\n      const targetText = (\n        target.querySelector('span') || target\n      ).innerText.trim();\n      const username = targetText.replace(/^@/, '');\n      const url = target.getAttribute('href');\n      const mention = mentions.find(\n        (mention) =>\n          mention.username === username ||\n          mention.acct === username ||\n          mention.url === url,\n      );\n      if (mention) {\n        e.preventDefault();\n        e.stopPropagation();\n        states.showAccount = {\n          account: mention.acct,\n          instance,\n        };\n      } else if (!/^http/i.test(targetText)) {\n        console.log('mention not found', targetText);\n        e.preventDefault();\n        e.stopPropagation();\n        const href = target.getAttribute('href');\n        states.showAccount = {\n          account: href,\n          instance,\n        };\n      }\n    } else if (!previewMode) {\n      const textBeforeLinkIsHash = prevText?.endsWith('#');\n      if (target.classList.contains('hashtag') || textBeforeLinkIsHash) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tag = target.innerText.replace(/^#/, '').trim();\n        const hashURL = instance ? `#/${instance}/t/${tag}` : `#/t/${tag}`;\n        console.log({ hashURL });\n        location.hash = hashURL;\n      } else if (\n        states.unfurledLinks[target.href]?.url &&\n        statusURL !== target.href\n      ) {\n        // If unfurled AND not self-referential\n        e.preventDefault();\n        e.stopPropagation();\n        states.prevLocation = {\n          pathname: location.hash.replace(/^#/, ''),\n        };\n        location.hash = `#${states.unfurledLinks[target.href].url}`;\n      }\n    }\n  };\n}\n\nexport default handleContentLinks;\n","const { locale } = new Intl.DateTimeFormat().resolvedOptions();\n\nfunction niceDateTime(date, { hideTime, formatOpts } = {}) {\n  if (!(date instanceof Date)) {\n    date = new Date(date);\n  }\n  const currentYear = new Date().getFullYear();\n  const dateText = Intl.DateTimeFormat(locale, {\n    // Show year if not current year\n    year: date.getFullYear() === currentYear ? undefined : 'numeric',\n    month: 'short',\n    day: 'numeric',\n    // Hide time if requested\n    hour: hideTime ? undefined : 'numeric',\n    minute: hideTime ? undefined : 'numeric',\n    ...formatOpts,\n  }).format(date);\n  return dateText;\n}\n\nexport default niceDateTime;\n","const { locale } = Intl.NumberFormat().resolvedOptions();\nconst shortenNumber = Intl.NumberFormat(locale, {\n  notation: 'compact',\n}).format;\nexport default shortenNumber;\n","import './account-block.css';\n\n// import { useNavigate } from 'react-router-dom';\nimport enhanceContent from '../utils/enhance-content';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\n\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\n\nfunction AccountBlock({\n  skeleton,\n  account,\n  avatarSize = 'xl',\n  instance,\n  external,\n  internal,\n  onClick,\n  showActivity = false,\n  showStats = false,\n  accountInstance,\n  hideDisplayName = false,\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"account-block skeleton\">\n        <Avatar size={avatarSize} />\n        <span>\n          <b>████████</b>\n          <br />\n          <span class=\"account-block-acct\">@██████</span>\n        </span>\n      </div>\n    );\n  }\n\n  // const navigate = useNavigate();\n\n  const {\n    id,\n    acct,\n    avatar,\n    avatarStatic,\n    displayName,\n    username,\n    emojis,\n    url,\n    statusesCount,\n    lastStatusAt,\n    bot,\n    fields,\n    note,\n    group,\n  } = account;\n  let [_, acct1, acct2] = acct.match(/([^@]+)(@.+)/i) || [, acct];\n  if (accountInstance) {\n    acct2 = `@${accountInstance}`;\n  }\n\n  const verifiedField = fields?.find((f) => !!f.verifiedAt && !!f.value);\n\n  return (\n    <a\n      class=\"account-block\"\n      href={url}\n      target={external ? '_blank' : null}\n      title={`@${acct}`}\n      onClick={(e) => {\n        if (external) return;\n        e.preventDefault();\n        if (onClick) return onClick(e);\n        if (internal) {\n          // navigate(`/${instance}/a/${id}`);\n          location.hash = `/${instance}/a/${id}`;\n        } else {\n          states.showAccount = {\n            account,\n            instance,\n          };\n        }\n      }}\n    >\n      <Avatar url={avatar} size={avatarSize} squircle={bot} />\n      <span>\n        {!hideDisplayName && (\n          <>\n            {displayName ? (\n              <b>\n                <EmojiText text={displayName} emojis={emojis} />\n              </b>\n            ) : (\n              <b>{username}</b>\n            )}\n            <br />\n          </>\n        )}\n        <span class=\"account-block-acct\">\n          @{acct1}\n          <wbr />\n          {acct2}\n        </span>\n        {showActivity && (\n          <>\n            <br />\n            <small class=\"last-status-at insignificant\">\n              Posts: {statusesCount}\n              {!!lastStatusAt && (\n                <>\n                  {' '}\n                  &middot; Last posted:{' '}\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </>\n              )}\n            </small>\n          </>\n        )}\n        {showStats && (\n          <div class=\"account-block-stats\">\n            <div\n              class=\"short-desc\"\n              dangerouslySetInnerHTML={{\n                __html: enhanceContent(note, { emojis }),\n              }}\n            />\n            {bot && (\n              <>\n                <span class=\"tag\">\n                  <Icon icon=\"bot\" /> Automated\n                </span>\n              </>\n            )}\n            {!!group && (\n              <>\n                <span class=\"tag\">\n                  <Icon icon=\"group\" /> Group\n                </span>\n              </>\n            )}\n            {!!verifiedField && (\n              <span class=\"verified-field ib\">\n                <Icon icon=\"check-circle\" size=\"s\" />{' '}\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(verifiedField.value, { emojis }),\n                  }}\n                />\n              </span>\n            )}\n          </div>\n        )}\n      </span>\n    </a>\n  );\n}\n\nexport default AccountBlock;\n","import { satisfies } from 'semver';\n\nimport features from '../data/features.json';\n\nimport { getCurrentInstance } from './store-utils';\n\nconst supportsCache = {};\n\nfunction supports(feature) {\n  try {\n    const { version, domain } = getCurrentInstance();\n    const key = `${domain}-${feature}`;\n    if (supportsCache[key]) return supportsCache[key];\n    const range = features[feature];\n    if (!range) return false;\n    return (supportsCache[key] = satisfies(version, range, {\n      includePrerelease: true,\n      loose: true,\n    }));\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default supports;\n","import './translation-block.css';\n\nimport pRetry from 'p-retry';\nimport pThrottle from 'p-throttle';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport sourceLanguages from '../data/lingva-source-languages';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport pmem from '../utils/pmem';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 2000,\n});\n\n// Using other API instances instead of lingva.ml because of this bug (slashes don't work):\n// https://github.com/thedaviddelta/lingva-translate/issues/68\nconst LINGVA_INSTANCES = [\n  'lingva.lunar.icu',\n  'lingva.garudalinux.org',\n  'translate.plausibility.cloud',\n];\nlet currentLingvaInstance = 0;\n\nfunction _lingvaTranslate(text, source, target) {\n  console.log('TRANSLATE', text, source, target);\n  const fetchCall = () => {\n    let instance = LINGVA_INSTANCES[currentLingvaInstance];\n    return fetch(\n      `https://${instance}/api/v1/${source}/${target}/${encodeURIComponent(\n        text,\n      )}`,\n    )\n      .then((res) => {\n        if (!res.ok) throw new Error(res.statusText);\n        return res.json();\n      })\n      .then((res) => {\n        return {\n          provider: 'lingva',\n          content: res.translation,\n          detectedSourceLanguage: res.info?.detectedSource,\n          info: res.info,\n        };\n      });\n  };\n  return pRetry(fetchCall, {\n    retries: 3,\n    onFailedAttempt: (e) => {\n      currentLingvaInstance =\n        (currentLingvaInstance + 1) % LINGVA_INSTANCES.length;\n      console.log(\n        'Retrying translation with another instance',\n        currentLingvaInstance,\n      );\n    },\n  });\n  // return masto.v1.statuses.$select(id).translate({\n  //   lang: DEFAULT_LANG,\n  // });\n}\nconst TRANSLATED_MAX_AGE = 1000 * 60 * 60; // 1 hour\nconst lingvaTranslate = pmem(_lingvaTranslate, {\n  maxAge: TRANSLATED_MAX_AGE,\n});\nconst throttledLingvaTranslate = pmem(throttle(lingvaTranslate), {\n  // I know, this is double-layered memoization\n  maxAge: TRANSLATED_MAX_AGE,\n});\n\nfunction TranslationBlock({\n  forceTranslate,\n  sourceLanguage,\n  onTranslate,\n  text = '',\n  mini,\n}) {\n  const targetLang = getTranslateTargetLanguage(true);\n  const [uiState, setUIState] = useState('default');\n  const [pronunciationContent, setPronunciationContent] = useState(null);\n  const [translatedContent, setTranslatedContent] = useState(null);\n  const [detectedLang, setDetectedLang] = useState(null);\n  const detailsRef = useRef();\n\n  const sourceLangText = sourceLanguage\n    ? localeCode2Text(sourceLanguage)\n    : null;\n  const targetLangText = localeCode2Text(targetLang);\n  const apiSourceLang = useRef('auto');\n\n  if (!onTranslate) {\n    onTranslate = mini ? throttledLingvaTranslate : lingvaTranslate;\n  }\n\n  const translate = async () => {\n    setUIState('loading');\n    try {\n      const { content, detectedSourceLanguage, provider, error, ...props } =\n        await onTranslate(text, apiSourceLang.current, targetLang);\n      if (content) {\n        if (detectedSourceLanguage) {\n          const detectedLangText = localeCode2Text(detectedSourceLanguage);\n          setDetectedLang(detectedLangText);\n        }\n        if (provider === 'lingva') {\n          const pronunciation = props?.info?.pronunciation?.query;\n          if (pronunciation) {\n            setPronunciationContent(pronunciation);\n          }\n        }\n        setTranslatedContent(content);\n        setUIState('default');\n        if (!mini && content.trim() !== text.trim()) {\n          detailsRef.current.open = true;\n          detailsRef.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }\n      } else {\n        if (error) console.error(error);\n        setUIState('error');\n      }\n    } catch (e) {\n      console.error(e);\n      setUIState('error');\n    }\n  };\n\n  useEffect(() => {\n    if (forceTranslate) {\n      translate();\n    }\n  }, [forceTranslate]);\n\n  if (mini) {\n    if (\n      !!translatedContent &&\n      translatedContent.trim() !== text.trim() &&\n      detectedLang !== targetLangText\n    ) {\n      return (\n        <div class=\"shazam-container\">\n          <div class=\"shazam-container-inner\">\n            <div class=\"status-translation-block-mini\">\n              <Icon\n                icon=\"translate\"\n                alt={`Auto-translated from ${sourceLangText}`}\n              />\n              <output\n                lang={targetLang}\n                dir=\"auto\"\n                title={pronunciationContent || ''}\n              >\n                {translatedContent}\n              </output>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div\n      class=\"status-translation-block\"\n      onClick={(e) => {\n        e.preventDefault();\n      }}\n    >\n      <details ref={detailsRef}>\n        <summary>\n          <button\n            type=\"button\"\n            onClick={async (e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              detailsRef.current.open = !detailsRef.current.open;\n              if (uiState === 'loading') return;\n              if (!translatedContent) translate();\n            }}\n          >\n            <Icon icon=\"translate\" />{' '}\n            <span>\n              {uiState === 'loading'\n                ? 'Translating…'\n                : sourceLanguage && sourceLangText && !detectedLang\n                ? `Translate from ${sourceLangText}`\n                : `Translate`}\n            </span>\n          </button>\n        </summary>\n        <div class=\"translated-block\">\n          <div class=\"translation-info insignificant\">\n            <select\n              class=\"translated-source-select\"\n              disabled={uiState === 'loading'}\n              onChange={(e) => {\n                apiSourceLang.current = e.target.value;\n                translate();\n              }}\n            >\n              {sourceLanguages.map((l) => (\n                <option value={l.code}>\n                  {l.code === 'auto' ? `Auto (${detectedLang ?? '…'})` : l.name}\n                </option>\n              ))}\n            </select>{' '}\n            <span>→ {targetLangText}</span>\n            <Loader abrupt hidden={uiState !== 'loading'} />\n          </div>\n          {uiState === 'error' ? (\n            <p class=\"ui-state\">Failed to translate</p>\n          ) : (\n            !!translatedContent && (\n              <>\n                <output class=\"translated-content\" lang={targetLang} dir=\"auto\">\n                  {translatedContent}\n                </output>\n                {!!pronunciationContent && (\n                  <output\n                    class=\"translated-pronunciation-content\"\n                    tabIndex={-1}\n                    onClick={(e) => {\n                      e.target.classList.toggle('expand');\n                    }}\n                  >\n                    {pronunciationContent}\n                  </output>\n                )}\n              </>\n            )\n          )}\n        </div>\n      </details>\n    </div>\n  );\n}\n\nexport default TranslationBlock;\n","import {\n  clear,\n  createStore,\n  del,\n  delMany,\n  get,\n  getMany,\n  keys,\n  set,\n} from 'idb-keyval';\n\nconst draftsStore = createStore('drafts-db', 'drafts-store');\n\n// Add additonal `draftsStore` parameter to all methods\n\nconst drafts = {\n  set: (key, val) => set(key, val, draftsStore),\n  get: (key) => get(key, draftsStore),\n  getMany: (keys) => getMany(keys, draftsStore),\n  del: (key) => del(key, draftsStore),\n  delMany: (keys) => delMany(keys, draftsStore),\n  clear: () => clear(draftsStore),\n  keys: () => keys(draftsStore),\n};\n\nexport default {\n  drafts,\n};\n","export default {\n  public: 'earth',\n  unlisted: 'group',\n  private: 'lock',\n  direct: 'message',\n};\n","import { useState } from 'preact/hooks';\n\nimport shortenNumber from '../utils/shorten-number';\n\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport RelativeTime from './relative-time';\n\nexport default function Poll({\n  poll,\n  lang,\n  readOnly,\n  refresh = () => {},\n  votePoll = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const {\n    expired,\n    expiresAt,\n    id,\n    multiple,\n    options,\n    ownVotes,\n    voted,\n    votersCount,\n    votesCount,\n    emojis,\n  } = poll;\n  const expiresAtDate = !!expiresAt && new Date(expiresAt); // Update poll at point of expiry\n  // NOTE: Disable this because setTimeout runs immediately if delay is too large\n  // https://stackoverflow.com/a/56718027/20838\n  // useEffect(() => {\n  //   let timeout;\n  //   if (!expired && expiresAtDate) {\n  //     const ms = expiresAtDate.getTime() - Date.now() + 1; // +1 to give it a little buffer\n  //     if (ms > 0) {\n  //       timeout = setTimeout(() => {\n  //         setUIState('loading');\n  //         (async () => {\n  //           // await refresh();\n  //           setUIState('default');\n  //         })();\n  //       }, ms);\n  //     }\n  //   }\n  //   return () => {\n  //     clearTimeout(timeout);\n  //   };\n  // }, [expired, expiresAtDate]);\n\n  const pollVotesCount = votersCount || votesCount;\n  let roundPrecision = 0;\n\n  if (pollVotesCount <= 1000) {\n    roundPrecision = 0;\n  } else if (pollVotesCount <= 10000) {\n    roundPrecision = 1;\n  } else if (pollVotesCount <= 100000) {\n    roundPrecision = 2;\n  }\n\n  const [showResults, setShowResults] = useState(false);\n  const optionsHaveVoteCounts = options.every((o) => o.votesCount !== null);\n\n  return (\n    <div\n      lang={lang}\n      dir=\"auto\"\n      class={`poll ${readOnly ? 'read-only' : ''} ${\n        uiState === 'loading' ? 'loading' : ''\n      }`}\n    >\n      {(showResults && optionsHaveVoteCounts) || voted || expired ? (\n        <>\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title, votesCount: optionVotesCount } = option;\n              const percentage = pollVotesCount\n                ? ((optionVotesCount / pollVotesCount) * 100).toFixed(\n                    roundPrecision,\n                  )\n                : 0; // check if current poll choice is the leading one\n\n              const isLeading =\n                optionVotesCount > 0 &&\n                optionVotesCount ===\n                  Math.max(...options.map((o) => o.votesCount));\n              return (\n                <div\n                  key={`${i}-${title}-${optionVotesCount}`}\n                  class={`poll-option poll-result ${\n                    isLeading ? 'poll-option-leading' : ''\n                  }`}\n                  style={{\n                    '--percentage': `${percentage}%`,\n                  }}\n                >\n                  <div class=\"poll-option-title\">\n                    <span>\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                    {voted && ownVotes.includes(i) && (\n                      <>\n                        {' '}\n                        <Icon icon=\"check-circle\" />\n                      </>\n                    )}\n                  </div>\n                  <div\n                    class=\"poll-option-votes\"\n                    title={`${optionVotesCount} vote${\n                      optionVotesCount === 1 ? '' : 's'\n                    }`}\n                  >\n                    {percentage}%\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n          {!expired && !voted && (\n            <button\n              class=\"poll-vote-button plain2\"\n              disabled={uiState === 'loading'}\n              onClick={(e) => {\n                e.preventDefault();\n                setShowResults(false);\n              }}\n            >\n              <Icon icon=\"arrow-left\" size=\"s\" /> Hide results\n            </button>\n          )}\n        </>\n      ) : (\n        <form\n          onSubmit={async (e) => {\n            e.preventDefault();\n            const form = e.target;\n            const formData = new FormData(form);\n            const choices = [];\n            formData.forEach((value, key) => {\n              if (key === 'poll') {\n                choices.push(value);\n              }\n            });\n            if (!choices.length) return;\n            setUIState('loading');\n            await votePoll(choices);\n            setUIState('default');\n          }}\n        >\n          <div class=\"poll-options\">\n            {options.map((option, i) => {\n              const { title } = option;\n              return (\n                <div class=\"poll-option\">\n                  <label class=\"poll-label\">\n                    <input\n                      type={multiple ? 'checkbox' : 'radio'}\n                      name=\"poll\"\n                      value={i}\n                      disabled={uiState === 'loading'}\n                      readOnly={readOnly}\n                    />\n                    <span class=\"poll-option-title\">\n                      <EmojiText text={title} emojis={emojis} />\n                    </span>\n                  </label>\n                </div>\n              );\n            })}\n          </div>\n          {!readOnly && (\n            <button\n              class=\"poll-vote-button\"\n              type=\"submit\"\n              disabled={uiState === 'loading'}\n            >\n              Vote\n            </button>\n          )}\n        </form>\n      )}\n      <p class=\"poll-meta\">\n        {!expired && !readOnly && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            style={{\n              marginLeft: -8,\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              setUIState('loading');\n\n              (async () => {\n                await refresh();\n                setUIState('default');\n              })();\n            }}\n            title=\"Refresh\"\n          >\n            <Icon icon=\"refresh\" alt=\"Refresh\" />\n          </button>\n        )}\n        {!voted && !expired && !readOnly && optionsHaveVoteCounts && (\n          <button\n            type=\"button\"\n            class=\"plain small\"\n            disabled={uiState === 'loading'}\n            onClick={(e) => {\n              e.preventDefault();\n              setShowResults(!showResults);\n            }}\n            title={showResults ? 'Hide results' : 'Show results'}\n          >\n            <Icon\n              icon={showResults ? 'eye-open' : 'eye-close'}\n              alt={showResults ? 'Hide results' : 'Show results'}\n            />{' '}\n          </button>\n        )}\n        {!expired && !readOnly && ' '}\n        <span title={votesCount}>{shortenNumber(votesCount)}</span> vote\n        {votesCount === 1 ? '' : 's'}\n        {!!votersCount && votersCount !== votesCount && (\n          <>\n            {' '}\n            &bull; <span title={votersCount}>\n              {shortenNumber(votersCount)}\n            </span>{' '}\n            voter\n            {votersCount === 1 ? '' : 's'}\n          </>\n        )}{' '}\n        &bull; {expired ? 'Ended' : 'Ending'}{' '}\n        {!!expiresAtDate && <RelativeTime datetime={expiresAtDate} />}\n      </p>{' '}\n    </div>\n  );\n}\n","const div = document.createElement('div');\nexport default function htmlContentLength(html) {\n  if (!html) return 0;\n  div.innerHTML = html;\n  return div.innerText.length;\n}\n","export default function isMastodonLinkMaybe(url) {\n  const { pathname } = new URL(url);\n  return (\n    /^\\/.*\\/\\d+$/i.test(pathname) ||\n    /^\\/@[^/]+\\/(statuses|posts)\\/\\w+\\/?$/i.test(pathname) || // GoToSocial, Takahe\n    /^\\/notes\\/[a-z0-9]+$/i.test(pathname) || // Misskey, Calckey\n    /^\\/(notice|objects)\\/[a-z0-9-]+$/i.test(pathname) // Pleroma\n  );\n}\n","const root = document.documentElement;\nconst style = getComputedStyle(root);\nconst defaultBoundingBoxPadding = 8;\n\nlet safeAreaInsets = [0, 0, 0, 0];\nfunction getSafeAreaInsets() {\n  // Get safe area inset variables from root\n  const safeAreaInsetTop = style.getPropertyValue('--sai-top');\n  const safeAreaInsetRight = style.getPropertyValue('--sai-right');\n  const safeAreaInsetBottom = style.getPropertyValue('--sai-bottom');\n  const safeAreaInsetLeft = style.getPropertyValue('--sai-left');\n  safeAreaInsets = [\n    // top, right, bottom, left (clockwise)\n    Math.max(0, parseInt(safeAreaInsetTop, 10)),\n    Math.max(0, parseInt(safeAreaInsetRight, 10)),\n    Math.max(0, parseInt(safeAreaInsetBottom, 10)),\n    Math.max(0, parseInt(safeAreaInsetLeft, 10)),\n  ];\n}\nrequestAnimationFrame(getSafeAreaInsets);\n\nfunction safeBoundingBoxPadding(paddings = []) {\n  const str = safeAreaInsets\n    .map((v, i) => (v || defaultBoundingBoxPadding) + (paddings[i] || 0))\n    .join(' ');\n  // console.log(str);\n  return str;\n}\n\n// Update safe area insets when orientation or resize\nif (CSS.supports('top: env(safe-area-inset-top)')) {\n  window.addEventListener('resize', getSafeAreaInsets, { passive: true });\n}\n\nexport default safeBoundingBoxPadding;\n","import getHTMLText from './getHTMLText';\n\nfunction statusPeek(status) {\n  const { spoilerText, content, poll, mediaAttachments } = status;\n  let text = '';\n  if (spoilerText?.trim()) {\n    text += spoilerText;\n  } else {\n    text += getHTMLText(content);\n  }\n  text = text.trim();\n  if (poll) {\n    text += ' 📊';\n  }\n  if (mediaAttachments?.length) {\n    text +=\n      ' ' +\n      mediaAttachments\n        .map(\n          (m) =>\n            ({\n              image: '🖼️',\n              gifv: '🎞️',\n              video: '📹',\n              audio: '🎵',\n              unknown: '',\n            }[m.type] || ''),\n        )\n        .join('');\n  }\n  return text;\n}\n\nexport default statusPeek;\n","import { useRef } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\nimport useResizeObserver from 'use-resize-observer';\n\nexport default function useTruncated({ className = 'truncated' } = {}) {\n  const ref = useRef();\n  const onResize = useThrottledCallback(({ height }) => {\n    if (ref.current) {\n      const { scrollHeight } = ref.current;\n      let truncated = scrollHeight > height;\n      if (truncated) {\n        const { height: _height, maxHeight } = getComputedStyle(ref.current);\n        const computedHeight = parseInt(maxHeight || _height, 10);\n        truncated = scrollHeight > computedHeight;\n      }\n      ref.current.classList.toggle(className, truncated);\n    }\n  }, 300);\n  useResizeObserver({\n    ref,\n    box: 'border-box',\n    onResize,\n  });\n  return ref;\n}\n","import { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport {\n  useCallback,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport QuickPinchZoom, { make3dTransformValue } from 'react-quick-pinch-zoom';\n\nimport mem from '../utils/mem';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Link from './link';\nimport { formatDuration } from './status';\n\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); // https://stackoverflow.com/a/23522755\n\n/*\nMedia type\n===\nunknown = unsupported or unrecognized file type\nimage = Static image\ngifv = Looping, soundless animation\nvideo = Video clip\naudio = Audio track\n*/\n\nconst dataAltLabel = 'ALT';\nconst AltBadge = (props) => {\n  const { alt, lang, index, ...rest } = props;\n  if (!alt || !alt.trim()) return null;\n  return (\n    <button\n      type=\"button\"\n      class=\"alt-badge clickable\"\n      {...rest}\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        states.showMediaAlt = {\n          alt,\n          lang,\n        };\n      }}\n      title=\"Media description\"\n    >\n      {dataAltLabel}\n      {!!index && <sup>{index}</sup>}\n    </button>\n  );\n};\n\nconst MEDIA_CAPTION_LIMIT = 140;\nexport const isMediaCaptionLong = mem((caption) =>\n  caption?.length\n    ? caption.length > MEDIA_CAPTION_LIMIT ||\n      /[\\n\\r].*[\\n\\r]/.test(caption.trim())\n    : false,\n);\n\nfunction Media({\n  class: className = '',\n  media,\n  to,\n  lang,\n  showOriginal,\n  autoAnimate,\n  showCaption,\n  altIndex,\n  onClick = () => {},\n}) {\n  const {\n    blurhash,\n    description,\n    meta,\n    previewRemoteUrl,\n    previewUrl,\n    remoteUrl,\n    url,\n    type,\n  } = media;\n  const { original = {}, small, focus } = meta || {};\n\n  const width = showOriginal ? original?.width : small?.width;\n  const height = showOriginal ? original?.height : small?.height;\n  const mediaURL = showOriginal ? url : previewUrl || url;\n  const remoteMediaURL = showOriginal\n    ? remoteUrl\n    : previewRemoteUrl || remoteUrl;\n  const orientation = width >= height ? 'landscape' : 'portrait';\n\n  const rgbAverageColor = blurhash ? getBlurHashAverageColor(blurhash) : null;\n\n  const videoRef = useRef();\n\n  let focalBackgroundPosition;\n  if (focus) {\n    // Convert focal point to CSS background position\n    // Formula from jquery-focuspoint\n    // x = -1, y = 1 => 0% 0%\n    // x = 0, y = 0 => 50% 50%\n    // x = 1, y = -1 => 100% 100%\n    const x = ((focus.x + 1) / 2) * 100;\n    const y = ((1 - focus.y) / 2) * 100;\n    focalBackgroundPosition = `${x.toFixed(0)}% ${y.toFixed(0)}%`;\n  }\n\n  const mediaRef = useRef();\n  const onUpdate = useCallback(({ x, y, scale }) => {\n    const { current: media } = mediaRef;\n\n    if (media) {\n      const value = make3dTransformValue({ x, y, scale });\n\n      if (scale === 1) {\n        media.style.removeProperty('transform');\n      } else {\n        media.style.setProperty('transform', value);\n      }\n\n      media.closest('.media-zoom').style.touchAction =\n        scale <= 1.01 ? 'pan-x' : '';\n    }\n  }, []);\n\n  const [pinchZoomEnabled, setPinchZoomEnabled] = useState(false);\n  const quickPinchZoomProps = {\n    enabled: pinchZoomEnabled,\n    draggableUnZoomed: false,\n    inertiaFriction: 0.9,\n    doubleTapZoomOutOnMaxScale: true,\n    containerProps: {\n      className: 'media-zoom',\n      style: {\n        overflow: 'visible',\n        //   width: 'inherit',\n        //   height: 'inherit',\n        //   justifyContent: 'inherit',\n        //   alignItems: 'inherit',\n        //   display: 'inherit',\n      },\n    },\n    onUpdate,\n  };\n\n  const Parent = useMemo(\n    () => (to ? (props) => <Link to={to} {...props} /> : 'div'),\n    [to],\n  );\n\n  const isVideoMaybe =\n    type === 'unknown' &&\n    /\\.(mp4|m4a|m4p|m4b|m4r|m4v|mov|webm)$/i.test(remoteMediaURL);\n  const isImage =\n    type === 'image' || (type === 'unknown' && previewUrl && !isVideoMaybe);\n\n  const parentRef = useRef();\n  const [imageSmallerThanParent, setImageSmallerThanParent] = useState(false);\n  useLayoutEffect(() => {\n    if (!isImage) return;\n    if (!showOriginal) return;\n    if (!parentRef.current) return;\n    const { offsetWidth, offsetHeight } = parentRef.current;\n    const smaller = width < offsetWidth && height < offsetHeight;\n    if (smaller) setImageSmallerThanParent(smaller);\n  }, [width, height]);\n\n  const maxAspectHeight =\n    window.innerHeight * (orientation === 'portrait' ? 0.45 : 0.33);\n  const maxHeight = orientation === 'portrait' ? 0 : 160;\n  const averageColorStyle = {\n    '--average-color': rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n  };\n  const mediaStyles =\n    width && height\n      ? {\n          '--width': `${width}px`,\n          '--height': `${height}px`,\n          // Calculate '--aspectWidth' based on aspect ratio calculated from '--width' and '--height', max height has to be 160px\n          '--aspectWidth': `${\n            (width / height) * Math.max(maxHeight, maxAspectHeight)\n          }px`,\n          aspectRatio: `${width} / ${height}`,\n          ...averageColorStyle,\n        }\n      : {\n          ...averageColorStyle,\n        };\n\n  const longDesc = isMediaCaptionLong(description);\n  const showInlineDesc =\n    !!showCaption && !showOriginal && !!description && !longDesc;\n  const Figure = !showInlineDesc\n    ? Fragment\n    : (props) => {\n        const { children, ...restProps } = props;\n        return (\n          <figure {...restProps}>\n            {children}\n            <figcaption\n              class=\"media-caption\"\n              lang={lang}\n              dir=\"auto\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                states.showMediaAlt = {\n                  alt: description,\n                  lang,\n                };\n              }}\n            >\n              {description}\n            </figcaption>\n          </figure>\n        );\n      };\n\n  if (isImage) {\n    // Note: type: unknown might not have width/height\n    quickPinchZoomProps.containerProps.style.display = 'inherit';\n\n    useLayoutEffect(() => {\n      if (!isSafari) return;\n      if (!showOriginal) return;\n      (async () => {\n        try {\n          await fetch(mediaURL, { mode: 'no-cors' });\n          mediaRef.current.src = mediaURL;\n        } catch (e) {\n          // Ignore\n        }\n      })();\n    }, [mediaURL]);\n\n    return (\n      <Figure>\n        <Parent\n          ref={parentRef}\n          class={`media media-image ${className}`}\n          onClick={onClick}\n          data-orientation={orientation}\n          data-has-alt={!showInlineDesc}\n          style={\n            showOriginal\n              ? {\n                  backgroundImage: `url(${previewUrl})`,\n                  backgroundSize: imageSmallerThanParent\n                    ? `${width}px ${height}px`\n                    : undefined,\n                  ...averageColorStyle,\n                }\n              : mediaStyles\n          }\n        >\n          {showOriginal ? (\n            <QuickPinchZoom {...quickPinchZoomProps}>\n              <img\n                ref={mediaRef}\n                src={mediaURL}\n                alt={description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"eager\"\n                decoding=\"sync\"\n                onLoad={(e) => {\n                  e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.closest('.media-zoom').style.display = '';\n                  setPinchZoomEnabled(true);\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n            </QuickPinchZoom>\n          ) : (\n            <>\n              <img\n                src={mediaURL}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n                style={{\n                  backgroundColor:\n                    rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n                  backgroundPosition: focalBackgroundPosition || 'center',\n                  // Duration based on width or height in pixels\n                  // 100px per second (rough estimate)\n                  // Clamp between 5s and 120s\n                  '--anim-duration': `${Math.min(\n                    Math.max(Math.max(width, height) / 100, 5),\n                    120,\n                  )}s`,\n                }}\n                onLoad={(e) => {\n                  e.target.closest('.media-image').style.backgroundImage = '';\n                  e.target.dataset.loaded = true;\n                }}\n                onError={(e) => {\n                  const { src } = e.target;\n                  if (src === mediaURL) {\n                    e.target.src = remoteMediaURL;\n                  }\n                }}\n              />\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'gifv' || type === 'video' || isVideoMaybe) {\n    const shortDuration = original.duration < 31;\n    const isGIF = type === 'gifv' && shortDuration;\n    // If GIF is too long, treat it as a video\n    const loopable = original.duration < 61;\n    const formattedDuration = formatDuration(original.duration);\n    const hoverAnimate = !showOriginal && !autoAnimate && isGIF;\n    const autoGIFAnimate = !showOriginal && autoAnimate && isGIF;\n\n    const videoHTML = `\n    <video\n      src=\"${url}\"\n      poster=\"${previewUrl}\"\n      width=\"${width}\"\n      height=\"${height}\"\n      data-orientation=\"${orientation}\"\n      preload=\"auto\"\n      autoplay\n      muted=\"${isGIF}\"\n      ${isGIF ? '' : 'controls'}\n      playsinline\n      loop=\"${loopable}\"\n      ${isGIF ? 'ondblclick=\"this.paused ? this.play() : this.pause()\"' : ''}\n    ></video>\n  `;\n\n    return (\n      <Figure>\n        <Parent\n          class={`media ${className} media-${isGIF ? 'gif' : 'video'} ${\n            autoGIFAnimate ? 'media-contain' : ''\n          }`}\n          data-orientation={orientation}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-label={isGIF && !showOriginal && !autoGIFAnimate ? 'GIF' : ''}\n          data-has-alt={!showInlineDesc}\n          // style={{\n          //   backgroundColor:\n          //     rgbAverageColor && `rgb(${rgbAverageColor.join(',')})`,\n          // }}\n          style={!showOriginal && mediaStyles}\n          onClick={(e) => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n            onClick(e);\n          }}\n          onMouseEnter={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onMouseLeave={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n          onFocus={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.play();\n              } catch (e) {}\n            }\n          }}\n          onBlur={() => {\n            if (hoverAnimate) {\n              try {\n                videoRef.current.pause();\n              } catch (e) {}\n            }\n          }}\n        >\n          {showOriginal || autoGIFAnimate ? (\n            isGIF && showOriginal ? (\n              <QuickPinchZoom {...quickPinchZoomProps} enabled>\n                <div\n                  ref={mediaRef}\n                  dangerouslySetInnerHTML={{\n                    __html: videoHTML,\n                  }}\n                />\n              </QuickPinchZoom>\n            ) : (\n              <div\n                class=\"video-container\"\n                dangerouslySetInnerHTML={{\n                  __html: videoHTML,\n                }}\n              />\n            )\n          ) : isGIF ? (\n            <video\n              ref={videoRef}\n              src={url}\n              poster={previewUrl}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              preload=\"auto\"\n              // controls\n              playsinline\n              loop\n              muted\n            />\n          ) : (\n            <>\n              <img\n                src={previewUrl}\n                alt={showInlineDesc ? '' : description}\n                width={width}\n                height={height}\n                data-orientation={orientation}\n                loading=\"lazy\"\n              />\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n            </>\n          )}\n          {!showOriginal && !showInlineDesc && (\n            <AltBadge alt={description} lang={lang} index={altIndex} />\n          )}\n        </Parent>\n      </Figure>\n    );\n  } else if (type === 'audio') {\n    const formattedDuration = formatDuration(original.duration);\n    return (\n      <Figure>\n        <Parent\n          class={`media media-audio ${className}`}\n          data-formatted-duration={\n            !showOriginal ? formattedDuration : undefined\n          }\n          data-has-alt={!showInlineDesc}\n          onClick={onClick}\n          style={!showOriginal && mediaStyles}\n        >\n          {showOriginal ? (\n            <audio src={remoteUrl || url} preload=\"none\" controls autoplay />\n          ) : previewUrl ? (\n            <img\n              src={previewUrl}\n              alt={showInlineDesc ? '' : description}\n              width={width}\n              height={height}\n              data-orientation={orientation}\n              loading=\"lazy\"\n            />\n          ) : null}\n          {!showOriginal && (\n            <>\n              <div class=\"media-play\">\n                <Icon icon=\"play\" size=\"xl\" />\n              </div>\n              {!showInlineDesc && (\n                <AltBadge alt={description} lang={lang} index={altIndex} />\n              )}\n            </>\n          )}\n        </Parent>\n      </Figure>\n    );\n  }\n}\n\nexport default Media;\n","import { FocusableItem } from '@szhsin/react-menu';\n\nimport Link from './link';\n\nfunction MenuLink(props) {\n  return (\n    <FocusableItem>\n      {({ ref, closeMenu }) => (\n        <Link\n          {...props}\n          ref={ref}\n          onClick={({ detail }) =>\n            closeMenu(detail === 0 ? 'Enter' : undefined)\n          }\n        />\n      )}\n    </FocusableItem>\n  );\n}\n\nexport default MenuLink;\n","import './status.css';\n\nimport '@justinribeiro/lite-youtube';\nimport {\n  ControlledMenu,\n  Menu,\n  MenuDivider,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { decodeBlurHash } from 'fast-blurhash';\nimport pThrottle from 'p-throttle';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\nimport { snapshot } from 'valtio/vanilla';\n\nimport AccountBlock from '../components/account-block';\nimport EmojiText from '../components/emoji-text';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport Poll from '../components/poll';\nimport { api } from '../utils/api';\nimport emojifyText from '../utils/emojify-text';\nimport enhanceContent from '../utils/enhance-content';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport htmlContentLength from '../utils/html-content-length';\nimport isMastodonLinkMaybe from '../utils/isMastodonLinkMaybe';\nimport localeMatch from '../utils/locale-match';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { getStatus, saveStatus, statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport useTruncated from '../utils/useTruncated';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport { isMediaCaptionLong } from './media';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport TranslationBlock from './translation-block';\n\nconst INLINE_TRANSLATE_LIMIT = 140;\nconst throttle = pThrottle({\n  limit: 1,\n  interval: 1000,\n});\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount);\n\nconst visibilityText = {\n  public: 'Public',\n  unlisted: 'Unlisted',\n  private: 'Followers only',\n  direct: 'Private mention',\n};\n\nfunction Status({\n  statusID,\n  status,\n  instance: propInstance,\n  withinContext,\n  size = 'm',\n  skeleton,\n  readOnly,\n  contentTextWeight,\n  enableTranslate,\n  forceTranslate: _forceTranslate,\n  previewMode,\n  allowFilters,\n  onMediaClick,\n  quoted,\n  onStatusLinkClick = () => {},\n}) {\n  if (skeleton) {\n    return (\n      <div class=\"status skeleton\">\n        <Avatar size=\"xxl\" />\n        <div class=\"container\">\n          <div class=\"meta\">███ ████████</div>\n          <div class=\"content-container\">\n            <div class=\"content\">\n              <p>████ ████████</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const { instance: currentInstance } = api();\n  const sameInstance = instance === currentInstance;\n\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    _filtered,\n  } = status;\n\n  console.debug('RENDER Status', id, status?.account.displayName, quoted);\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  if (allowFilters && size !== 'l' && _filtered) {\n    return (\n      <FilteredStatus\n        status={status}\n        filterInfo={_filtered}\n        instance={instance}\n        containerProps={{\n          onMouseEnter: debugHover,\n        }}\n      />\n    );\n  }\n\n  const createdAtDate = new Date(createdAt);\n  const editedAtDate = new Date(editedAt);\n\n  const currentAccount = useMemo(() => {\n    return store.session.get('currentAccount');\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  let inReplyToAccountRef = mentions?.find(\n    (mention) => mention.id === inReplyToAccountId,\n  );\n  if (!inReplyToAccountRef && inReplyToAccountId === id) {\n    inReplyToAccountRef = { url: accountURL, username, displayName };\n  }\n  const [inReplyToAccount, setInReplyToAccount] = useState(inReplyToAccountRef);\n  if (!withinContext && !inReplyToAccount && inReplyToAccountId) {\n    const account = states.accounts[inReplyToAccountId];\n    if (account) {\n      setInReplyToAccount(account);\n    } else {\n      memFetchAccount(inReplyToAccountId, masto)\n        .then((account) => {\n          setInReplyToAccount(account);\n          states.accounts[account.id] = account;\n        })\n        .catch((e) => {});\n    }\n  }\n  const mentionSelf =\n    inReplyToAccountId === currentAccount ||\n    mentions?.find((mention) => mention.id === currentAccount);\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  const showSpoiler =\n    previewMode || readingExpandSpoilers || !!snapStates.spoilers[id] || false;\n\n  if (reblog) {\n    // If has statusID, means useItemID (cached in states)\n\n    if (group) {\n      return (\n        <div class=\"status-group\" onMouseEnter={debugHover}>\n          <div class=\"status-pre-meta\">\n            <Icon icon=\"group\" size=\"l\" alt=\"Group\" />{' '}\n            <NameText account={status.account} instance={instance} showAvatar />\n          </div>\n          <Status\n            status={statusID ? null : reblog}\n            statusID={statusID ? reblog.id : null}\n            instance={instance}\n            size={size}\n            contentTextWeight={contentTextWeight}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div class=\"status-reblog\" onMouseEnter={debugHover}>\n        <div class=\"status-pre-meta\">\n          <Icon icon=\"rocket\" size=\"l\" />{' '}\n          <NameText account={status.account} instance={instance} showAvatar />{' '}\n          <span>boosted</span>\n        </div>\n        <Status\n          status={statusID ? null : reblog}\n          statusID={statusID ? reblog.id : null}\n          instance={instance}\n          size={size}\n          contentTextWeight={contentTextWeight}\n        />\n      </div>\n    );\n  }\n\n  const isSizeLarge = size === 'l';\n\n  const [forceTranslate, setForceTranslate] = useState(_forceTranslate);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const { contentTranslation, contentTranslationAutoInline } =\n    snapStates.settings;\n  if (!contentTranslation) enableTranslate = false;\n  const inlineTranslate = useMemo(() => {\n    if (\n      !contentTranslation ||\n      !contentTranslationAutoInline ||\n      readOnly ||\n      (withinContext && !isSizeLarge) ||\n      previewMode ||\n      spoilerText ||\n      sensitive ||\n      poll ||\n      card ||\n      mediaAttachments?.length\n    ) {\n      return false;\n    }\n    const contentLength = htmlContentLength(content);\n    return contentLength > 0 && contentLength <= INLINE_TRANSLATE_LIMIT;\n  }, [\n    contentTranslation,\n    contentTranslationAutoInline,\n    readOnly,\n    withinContext,\n    isSizeLarge,\n    previewMode,\n    spoilerText,\n    sensitive,\n    poll,\n    card,\n    mediaAttachments,\n    content,\n  ]);\n\n  const [showEdited, setShowEdited] = useState(false);\n  const [showReactions, setShowReactions] = useState(false);\n\n  const spoilerContentRef = useTruncated();\n  const contentRef = useTruncated();\n  const mediaContainerRef = useTruncated();\n  const readMoreText = 'Read more →';\n\n  const statusRef = useRef(null);\n\n  const unauthInteractionErrorMessage = `Sorry, your current logged-in instance can't interact with this post from another instance.`;\n\n  const textWeight = useCallback(\n    () =>\n      Math.max(\n        Math.round((spoilerText.length + htmlContentLength(content)) / 140) ||\n          1,\n        1,\n      ),\n    [spoilerText, content],\n  );\n\n  const createdDateText = niceDateTime(createdAtDate);\n  const editedDateText = editedAt && niceDateTime(editedAtDate);\n\n  // Can boost if:\n  // - authenticated AND\n  // - visibility != direct OR\n  // - visibility = private AND isSelf\n  let canBoost =\n    authenticated && visibility !== 'direct' && visibility !== 'private';\n  if (visibility === 'private' && isSelf) {\n    canBoost = true;\n  }\n\n  const replyStatus = () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    states.showCompose = {\n      replyToStatus: status,\n    };\n  };\n\n  // Check if media has no descriptions\n  const mediaNoDesc = useMemo(() => {\n    return mediaAttachments.some(\n      (attachment) => !attachment.description?.trim?.(),\n    );\n  }, [mediaAttachments]);\n  const boostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      if (!reblogged) {\n        let confirmText = 'Boost this post?';\n        if (mediaNoDesc) {\n          confirmText += '\\n\\n⚠️ Some media have no descriptions.';\n        }\n        const yes = confirm(confirmText);\n        if (!yes) {\n          return false;\n        }\n      }\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n  const confirmBoostStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      alert(unauthInteractionErrorMessage);\n      return false;\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        reblogged: !reblogged,\n        reblogsCount: reblogsCount + (reblogged ? -1 : 1),\n      };\n      if (reblogged) {\n        const newStatus = await masto.v1.statuses.$select(id).unreblog();\n        saveStatus(newStatus, instance);\n        return true;\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).reblog();\n        saveStatus(newStatus, instance);\n        return true;\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n      return false;\n    }\n  };\n\n  const favouriteStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        favourited: !favourited,\n        favouritesCount: favouritesCount + (favourited ? -1 : 1),\n      };\n      if (favourited) {\n        const newStatus = await masto.v1.statuses.$select(id).unfavourite();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).favourite();\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const bookmarkStatus = async () => {\n    if (!sameInstance || !authenticated) {\n      return alert(unauthInteractionErrorMessage);\n    }\n    try {\n      // Optimistic\n      states.statuses[sKey] = {\n        ...status,\n        bookmarked: !bookmarked,\n      };\n      if (bookmarked) {\n        const newStatus = await masto.v1.statuses.$select(id).unbookmark();\n        saveStatus(newStatus, instance);\n      } else {\n        const newStatus = await masto.v1.statuses.$select(id).bookmark();\n        saveStatus(newStatus, instance);\n      }\n    } catch (e) {\n      console.error(e);\n      // Revert optimistism\n      states.statuses[sKey] = status;\n    }\n  };\n\n  const differentLanguage =\n    !!language &&\n    language !== targetLanguage &&\n    !localeMatch([language], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => language === l || localeMatch([language], [l]),\n    );\n\n  const menuInstanceRef = useRef();\n  const StatusMenuItems = (\n    <>\n      {!isSizeLarge && (\n        <>\n          <MenuHeader>\n            <span class=\"ib\">\n              <Icon icon={visibilityIconsMap[visibility]} size=\"s\" />{' '}\n              <span>{visibilityText[visibility]}</span>\n            </span>{' '}\n            <span class=\"ib\">\n              {repliesCount > 0 && (\n                <span>\n                  <Icon icon=\"reply\" alt=\"Replies\" size=\"s\" />{' '}\n                  <span>{shortenNumber(repliesCount)}</span>\n                </span>\n              )}{' '}\n              {reblogsCount > 0 && (\n                <span>\n                  <Icon icon=\"rocket\" alt=\"Boosts\" size=\"s\" />{' '}\n                  <span>{shortenNumber(reblogsCount)}</span>\n                </span>\n              )}{' '}\n              {favouritesCount > 0 && (\n                <span>\n                  <Icon icon=\"heart\" alt=\"Likes\" size=\"s\" />{' '}\n                  <span>{shortenNumber(favouritesCount)}</span>\n                </span>\n              )}\n            </span>\n            <br />\n            {createdDateText}\n          </MenuHeader>\n          <MenuLink\n            to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n            onClick={(e) => {\n              onStatusLinkClick(e, status);\n            }}\n          >\n            <Icon icon=\"arrow-right\" />\n            <span>View post by @{username || acct}</span>\n          </MenuLink>\n        </>\n      )}\n      {!!editedAt && (\n        <MenuItem\n          onClick={() => {\n            setShowEdited(id);\n          }}\n        >\n          <Icon icon=\"history\" />\n          <span>\n            Show Edit History\n            <br />\n            <small class=\"more-insignificant\">Edited: {editedDateText}</small>\n          </span>\n        </MenuItem>\n      )}\n      {(!isSizeLarge || !!editedAt) && <MenuDivider />}\n      {isSizeLarge && (\n        <MenuItem onClick={() => setShowReactions(true)}>\n          <Icon icon=\"react\" />\n          <span>\n            Boosted/Liked by<span class=\"more-insignificant\">…</span>\n          </span>\n        </MenuItem>\n      )}\n      {!isSizeLarge && sameInstance && (\n        <>\n          <div class=\"menu-horizontal\">\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"rocket\" />\n                  <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\n                </>\n              }\n              menuFooter={\n                mediaNoDesc &&\n                !reblogged && (\n                  <div class=\"footer\">\n                    <Icon icon=\"alert\" />\n                    Some media have no descriptions.\n                  </div>\n                )\n              }\n              disabled={!canBoost}\n              onClick={async () => {\n                try {\n                  const done = await confirmBoostStatus();\n                  if (!isSizeLarge && done) {\n                    showToast(\n                      reblogged\n                        ? `Unboosted @${username || acct}'s post`\n                        : `Boosted @${username || acct}'s post`,\n                    );\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon\n                icon=\"rocket\"\n                style={{\n                  color: reblogged && 'var(--reblog-color)',\n                }}\n              />\n              <span>{reblogged ? 'Unboost' : 'Boost…'}</span>\n            </MenuConfirm>\n            <MenuItem\n              onClick={() => {\n                try {\n                  favouriteStatus();\n                  if (!isSizeLarge) {\n                    showToast(\n                      favourited\n                        ? `Unliked @${username || acct}'s post`\n                        : `Liked @${username || acct}'s post`,\n                    );\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon\n                icon=\"heart\"\n                style={{\n                  color: favourited && 'var(--favourite-color)',\n                }}\n              />\n              <span>{favourited ? 'Unlike' : 'Like'}</span>\n            </MenuItem>\n          </div>\n          <div class=\"menu-horizontal\">\n            <MenuItem onClick={replyStatus}>\n              <Icon icon=\"reply\" />\n              <span>Reply</span>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                try {\n                  bookmarkStatus();\n                  if (!isSizeLarge) {\n                    showToast(\n                      bookmarked\n                        ? `Unbookmarked @${username || acct}'s post`\n                        : `Bookmarked @${username || acct}'s post`,\n                    );\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon\n                icon=\"bookmark\"\n                style={{\n                  color: bookmarked && 'var(--link-color)',\n                }}\n              />\n              <span>{bookmarked ? 'Unbookmark' : 'Bookmark'}</span>\n            </MenuItem>\n          </div>\n        </>\n      )}\n      {enableTranslate ? (\n        <MenuItem\n          disabled={forceTranslate}\n          onClick={() => {\n            setForceTranslate(true);\n          }}\n        >\n          <Icon icon=\"translate\" />\n          <span>Translate</span>\n        </MenuItem>\n      ) : (\n        (!language || differentLanguage) && (\n          <MenuLink\n            to={`${instance ? `/${instance}` : ''}/s/${id}?translate=1`}\n          >\n            <Icon icon=\"translate\" />\n            <span>Translate</span>\n          </MenuLink>\n        )\n      )}\n      {((!isSizeLarge && sameInstance) || enableTranslate) && <MenuDivider />}\n      <MenuItem href={url} target=\"_blank\">\n        <Icon icon=\"external\" />\n        <small class=\"menu-double-lines\">{nicePostURL(url)}</small>\n      </MenuItem>\n      <div class=\"menu-horizontal\">\n        <MenuItem\n          onClick={() => {\n            // Copy url to clipboard\n            try {\n              navigator.clipboard.writeText(url);\n              showToast('Link copied');\n            } catch (e) {\n              console.error(e);\n              showToast('Unable to copy link');\n            }\n          }}\n        >\n          <Icon icon=\"link\" />\n          <span>Copy</span>\n        </MenuItem>\n        {navigator?.share &&\n          navigator?.canShare?.({\n            url,\n          }) && (\n            <MenuItem\n              onClick={() => {\n                try {\n                  navigator.share({\n                    url,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(\"Sharing doesn't seem to work.\");\n                }\n              }}\n            >\n              <Icon icon=\"share\" />\n              <span>Share…</span>\n            </MenuItem>\n          )}\n      </div>\n      {(isSelf || mentionSelf) && <MenuDivider />}\n      {(isSelf || mentionSelf) && (\n        <MenuItem\n          onClick={async () => {\n            try {\n              const newStatus = await masto.v1.statuses\n                .$select(id)\n                [muted ? 'unmute' : 'mute']();\n              saveStatus(newStatus, instance);\n              showToast(muted ? 'Conversation unmuted' : 'Conversation muted');\n            } catch (e) {\n              console.error(e);\n              showToast(\n                muted\n                  ? 'Unable to unmute conversation'\n                  : 'Unable to mute conversation',\n              );\n            }\n          }}\n        >\n          {muted ? (\n            <>\n              <Icon icon=\"unmute\" />\n              <span>Unmute conversation</span>\n            </>\n          ) : (\n            <>\n              <Icon icon=\"mute\" />\n              <span>Mute conversation</span>\n            </>\n          )}\n        </MenuItem>\n      )}\n      {isSelf && (\n        <div class=\"menu-horizontal\">\n          <MenuItem\n            onClick={() => {\n              states.showCompose = {\n                editStatus: status,\n              };\n            }}\n          >\n            <Icon icon=\"pencil\" />\n            <span>Edit</span>\n          </MenuItem>\n          {isSizeLarge && (\n            <MenuConfirm\n              subMenu\n              confirmLabel={\n                <>\n                  <Icon icon=\"trash\" />\n                  <span>Delete this post?</span>\n                </>\n              }\n              menuItemClassName=\"danger\"\n              onClick={() => {\n                // const yes = confirm('Delete this post?');\n                // if (yes) {\n                (async () => {\n                  try {\n                    await masto.v1.statuses.$select(id).remove();\n                    const cachedStatus = getStatus(id, instance);\n                    cachedStatus._deleted = true;\n                    showToast('Deleted');\n                  } catch (e) {\n                    console.error(e);\n                    showToast('Unable to delete');\n                  }\n                })();\n                // }\n              }}\n            >\n              <Icon icon=\"trash\" />\n              <span>Delete…</span>\n            </MenuConfirm>\n          )}\n        </div>\n      )}\n    </>\n  );\n\n  const contextMenuRef = useRef();\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuProps, setContextMenuProps] = useState({});\n  const isIOS =\n    window.ontouchstart !== undefined &&\n    /iPad|iPhone|iPod/.test(navigator.userAgent);\n  // Only iOS/iPadOS browsers don't support contextmenu\n  // Some comments report iPadOS might support contextmenu if a mouse is connected\n  const bindLongPressContext = useLongPress(\n    isIOS\n      ? (e) => {\n          if (e.pointerType === 'mouse') return;\n          // There's 'pen' too, but not sure if contextmenu event would trigger from a pen\n\n          const { clientX, clientY } = e.touches?.[0] || e;\n          // link detection copied from onContextMenu because here it works\n          const link = e.target.closest('a');\n          if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\n          e.preventDefault();\n          setContextMenuProps({\n            anchorPoint: {\n              x: clientX,\n              y: clientY,\n            },\n            direction: 'right',\n          });\n          setIsContextMenuOpen(true);\n        }\n      : null,\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const showContextMenu = size !== 'l' && !previewMode && !_deleted && !quoted;\n\n  const hotkeysEnabled = !readOnly && !previewMode;\n  const rRef = useHotkeys('r', replyStatus, {\n    enabled: hotkeysEnabled,\n  });\n  const fRef = useHotkeys(\n    'f, l',\n    () => {\n      try {\n        favouriteStatus();\n        if (!isSizeLarge) {\n          showToast(\n            favourited\n              ? `Unliked @${username || acct}'s post`\n              : `Liked @${username || acct}'s post`,\n          );\n        }\n      } catch (e) {}\n    },\n    {\n      enabled: hotkeysEnabled,\n    },\n  );\n  const dRef = useHotkeys(\n    'd',\n    () => {\n      try {\n        bookmarkStatus();\n        if (!isSizeLarge) {\n          showToast(\n            bookmarked\n              ? `Unbookmarked @${username || acct}'s post`\n              : `Bookmarked @${username || acct}'s post`,\n          );\n        }\n      } catch (e) {}\n    },\n    {\n      enabled: hotkeysEnabled,\n    },\n  );\n  const bRef = useHotkeys(\n    'shift+b',\n    () => {\n      (async () => {\n        try {\n          const done = await confirmBoostStatus();\n          if (!isSizeLarge && done) {\n            showToast(\n              reblogged\n                ? `Unboosted @${username || acct}'s post`\n                : `Boosted @${username || acct}'s post`,\n            );\n          }\n        } catch (e) {}\n      })();\n    },\n    {\n      enabled: hotkeysEnabled && canBoost,\n    },\n  );\n\n  const displayedMediaAttachments = mediaAttachments.slice(\n    0,\n    isSizeLarge ? undefined : 4,\n  );\n  const showMultipleMediaCaptions =\n    mediaAttachments.length > 1 &&\n    displayedMediaAttachments.some(\n      (media) => !!media.description && !isMediaCaptionLong(media.description),\n    );\n  const captionChildren = useMemo(() => {\n    if (!showMultipleMediaCaptions) return null;\n    const attachments = [];\n    displayedMediaAttachments.forEach((media, i) => {\n      if (!media.description) return;\n      const index = attachments.findIndex(\n        (attachment) => attachment.media.description === media.description,\n      );\n      if (index === -1) {\n        attachments.push({\n          media,\n          indices: [i],\n        });\n      } else {\n        attachments[index].indices.push(i);\n      }\n    });\n    return attachments.map(({ media, indices }) => (\n      <div\n        key={media.id}\n        data-caption-index={indices.map((i) => i + 1).join(' ')}\n        onClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          states.showMediaAlt = {\n            alt: media.description,\n            lang: language,\n          };\n        }}\n        title={media.description}\n      >\n        <sup>{indices.map((i) => i + 1).join(' ')}</sup> {media.description}\n      </div>\n    ));\n\n    // return displayedMediaAttachments.map(\n    //   (media, i) =>\n    //     !!media.description && (\n    //       <div\n    //         key={media.id}\n    //         data-caption-index={i + 1}\n    //         onClick={(e) => {\n    //           e.preventDefault();\n    //           e.stopPropagation();\n    //           states.showMediaAlt = {\n    //             alt: media.description,\n    //             lang: language,\n    //           };\n    //         }}\n    //         title={media.description}\n    //       >\n    //         <sup>{i + 1}</sup> {media.description}\n    //       </div>\n    //     ),\n    // );\n  }, [showMultipleMediaCaptions, displayedMediaAttachments, language]);\n\n  return (\n    <article\n      ref={(node) => {\n        statusRef.current = node;\n        // Use parent node if it's in focus\n        // Use case: <a><status /></a>\n        // When navigating (j/k), the <a> is focused instead of <status />\n        // Hotkey binding doesn't bubble up thus this hack\n        const nodeRef =\n          node?.closest?.(\n            '.timeline-item, .timeline-item-alt, .status-link, .status-focus',\n          ) || node;\n        rRef.current = nodeRef;\n        fRef.current = nodeRef;\n        dRef.current = nodeRef;\n        bRef.current = nodeRef;\n      }}\n      tabindex=\"-1\"\n      class={`status ${\n        !withinContext && inReplyToId && inReplyToAccount\n          ? 'status-reply-to'\n          : ''\n      } visibility-${visibility} ${_pinned ? 'status-pinned' : ''} ${\n        {\n          s: 'small',\n          m: 'medium',\n          l: 'large',\n        }[size]\n      } ${_deleted ? 'status-deleted' : ''} ${quoted ? 'status-card' : ''}`}\n      onMouseEnter={debugHover}\n      onContextMenu={(e) => {\n        // FIXME: this code isn't getting called on Chrome at all?\n        if (!showContextMenu) return;\n        if (e.metaKey) return;\n        // console.log('context menu', e);\n        const link = e.target.closest('a');\n        if (link && /^https?:\\/\\//.test(link.getAttribute('href'))) return;\n        e.preventDefault();\n        setContextMenuProps({\n          anchorPoint: {\n            x: e.clientX,\n            y: e.clientY,\n          },\n          direction: 'right',\n        });\n        setIsContextMenuOpen(true);\n      }}\n      {...(showContextMenu ? bindLongPressContext() : {})}\n    >\n      {showContextMenu && (\n        <ControlledMenu\n          ref={contextMenuRef}\n          state={isContextMenuOpen ? 'open' : undefined}\n          {...contextMenuProps}\n          onClose={(e) => {\n            setIsContextMenuOpen(false);\n            // statusRef.current?.focus?.();\n            if (e?.reason === 'click') {\n              statusRef.current?.closest('[tabindex]')?.focus?.();\n            }\n          }}\n          portal={{\n            target: document.body,\n          }}\n          containerProps={{\n            style: {\n              // Higher than the backdrop\n              zIndex: 1001,\n            },\n            onClick: () => {\n              contextMenuRef.current?.closeMenu?.();\n            },\n          }}\n          overflow=\"auto\"\n          boundingBoxPadding={safeBoundingBoxPadding()}\n          unmountOnClose\n        >\n          {StatusMenuItems}\n        </ControlledMenu>\n      )}\n      {size !== 'l' && (\n        <div class=\"status-badge\">\n          {reblogged && <Icon class=\"reblog\" icon=\"rocket\" size=\"s\" />}\n          {favourited && <Icon class=\"favourite\" icon=\"heart\" size=\"s\" />}\n          {bookmarked && <Icon class=\"bookmark\" icon=\"bookmark\" size=\"s\" />}\n          {_pinned && <Icon class=\"pin\" icon=\"pin\" size=\"s\" />}\n        </div>\n      )}\n      {size !== 's' && (\n        <a\n          href={accountURL}\n          tabindex=\"-1\"\n          // target=\"_blank\"\n          title={`@${acct}`}\n          onClick={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            states.showAccount = {\n              account: status.account,\n              instance,\n            };\n          }}\n        >\n          <Avatar url={avatarStatic || avatar} size=\"xxl\" squircle={bot} />\n        </a>\n      )}\n      <div class=\"container\">\n        <div class=\"meta\">\n          <span class=\"meta-name\">\n            <NameText\n              account={status.account}\n              instance={instance}\n              showAvatar={size === 's'}\n              showAcct={isSizeLarge}\n            />\n          </span>\n          {/* {inReplyToAccount && !withinContext && size !== 's' && (\n              <>\n                {' '}\n                <span class=\"ib\">\n                  <Icon icon=\"arrow-right\" class=\"arrow\" />{' '}\n                  <NameText account={inReplyToAccount} instance={instance} short />\n                </span>\n              </>\n            )} */}\n          {/* </span> */}{' '}\n          {size !== 'l' &&\n            (_deleted ? (\n              <span class=\"status-deleted-tag\">Deleted</span>\n            ) : url && !previewMode && !quoted ? (\n              <Link\n                to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n                onClick={(e) => {\n                  if (\n                    e.metaKey ||\n                    e.ctrlKey ||\n                    e.shiftKey ||\n                    e.altKey ||\n                    e.which === 2\n                  ) {\n                    return;\n                  }\n                  e.preventDefault();\n                  e.stopPropagation();\n                  onStatusLinkClick?.(e, status);\n                  setContextMenuProps({\n                    anchorRef: {\n                      current: e.currentTarget,\n                    },\n                    align: 'end',\n                    direction: 'bottom',\n                    gap: 4,\n                  });\n                  setIsContextMenuOpen(true);\n                }}\n                class={`time ${\n                  isContextMenuOpen && contextMenuProps?.anchorRef\n                    ? 'is-open'\n                    : ''\n                }`}\n              >\n                <Icon\n                  icon={visibilityIconsMap[visibility]}\n                  alt={visibilityText[visibility]}\n                  size=\"s\"\n                />{' '}\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\n              </Link>\n            ) : (\n              // <Menu\n              //   instanceRef={menuInstanceRef}\n              //   portal={{\n              //     target: document.body,\n              //   }}\n              //   containerProps={{\n              //     style: {\n              //       // Higher than the backdrop\n              //       zIndex: 1001,\n              //     },\n              //     onClick: (e) => {\n              //       if (e.target === e.currentTarget)\n              //         menuInstanceRef.current?.closeMenu?.();\n              //     },\n              //   }}\n              //   align=\"end\"\n              //   gap={4}\n              //   overflow=\"auto\"\n              //   viewScroll=\"close\"\n              //   boundingBoxPadding=\"8 8 8 8\"\n              //   unmountOnClose\n              //   menuButton={({ open }) => (\n              //     <Link\n              //       to={instance ? `/${instance}/s/${id}` : `/s/${id}`}\n              //       onClick={(e) => {\n              //         e.preventDefault();\n              //         e.stopPropagation();\n              //         onStatusLinkClick?.(e, status);\n              //       }}\n              //       class={`time ${open ? 'is-open' : ''}`}\n              //     >\n              //       <Icon\n              //         icon={visibilityIconsMap[visibility]}\n              //         alt={visibilityText[visibility]}\n              //         size=\"s\"\n              //       />{' '}\n              //       <RelativeTime datetime={createdAtDate} format=\"micro\" />\n              //     </Link>\n              //   )}\n              // >\n              //   {StatusMenuItems}\n              // </Menu>\n              <span class=\"time\">\n                <Icon\n                  icon={visibilityIconsMap[visibility]}\n                  alt={visibilityText[visibility]}\n                  size=\"s\"\n                />{' '}\n                <RelativeTime datetime={createdAtDate} format=\"micro\" />\n              </span>\n            ))}\n        </div>\n        {visibility === 'direct' && (\n          <>\n            <div class=\"status-direct-badge\">Private mention</div>{' '}\n          </>\n        )}\n        {!withinContext && (\n          <>\n            {(!!inReplyToId && inReplyToAccountId === status.account?.id) ||\n            !!snapStates.statusThreadNumber[sKey] ? (\n              <div class=\"status-thread-badge\">\n                <Icon icon=\"thread\" size=\"s\" />\n                Thread\n                {snapStates.statusThreadNumber[sKey]\n                  ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n                  : ''}\n              </div>\n            ) : (\n              !!inReplyToId &&\n              !!inReplyToAccount &&\n              (!!spoilerText ||\n                !mentions.find((mention) => {\n                  return mention.id === inReplyToAccountId;\n                })) && (\n                <div class=\"status-reply-badge\">\n                  <Icon icon=\"reply\" />{' '}\n                  <NameText\n                    account={inReplyToAccount}\n                    instance={instance}\n                    short\n                  />\n                </div>\n              )\n            )}\n          </>\n        )}\n        <div\n          class={`content-container ${\n            spoilerText || sensitive ? 'has-spoiler' : ''\n          } ${showSpoiler ? 'show-spoiler' : ''}`}\n          data-content-text-weight={contentTextWeight ? textWeight() : null}\n          style={\n            (isSizeLarge || contentTextWeight) && {\n              '--content-text-weight': textWeight(),\n            }\n          }\n        >\n          {!!spoilerText && (\n            <>\n              <div\n                class=\"content spoiler-content\"\n                lang={language}\n                dir=\"auto\"\n                ref={spoilerContentRef}\n                data-read-more={readMoreText}\n              >\n                <p>\n                  <EmojiText text={spoilerText} emojis={emojis} />\n                </p>\n              </div>\n              <button\n                class={`light spoiler ${showSpoiler ? 'spoiling' : ''}`}\n                type=\"button\"\n                disabled={readingExpandSpoilers}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  if (showSpoiler) {\n                    delete states.spoilers[id];\n                  } else {\n                    states.spoilers[id] = true;\n                  }\n                }}\n              >\n                <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} />{' '}\n                {readingExpandSpoilers\n                  ? 'Content warning'\n                  : showSpoiler\n                  ? 'Show less'\n                  : 'Show more'}\n              </button>\n            </>\n          )}\n          <div class=\"content\" ref={contentRef} data-read-more={readMoreText}>\n            <div\n              lang={language}\n              dir=\"auto\"\n              class=\"inner-content\"\n              onClick={handleContentLinks({\n                mentions,\n                instance,\n                previewMode,\n                statusURL: url,\n              })}\n              dangerouslySetInnerHTML={{\n                __html: enhanceContent(content, {\n                  emojis,\n                  postEnhanceDOM: (dom) => {\n                    // Remove target=\"_blank\" from links\n                    dom\n                      .querySelectorAll('a.u-url[target=\"_blank\"]')\n                      .forEach((a) => {\n                        if (!/http/i.test(a.innerText.trim())) {\n                          a.removeAttribute('target');\n                        }\n                      });\n                    if (previewMode) return;\n                    // Unfurl Mastodon links\n                    Array.from(\n                      dom.querySelectorAll(\n                        'a[href]:not(.u-url):not(.mention):not(.hashtag)',\n                      ),\n                    )\n                      .filter((a) => {\n                        const url = a.href;\n                        const isPostItself =\n                          url === status.url || url === status.uri;\n                        return !isPostItself && isMastodonLinkMaybe(url);\n                      })\n                      .forEach((a, i) => {\n                        unfurlMastodonLink(currentInstance, a.href).then(\n                          (result) => {\n                            if (!result) return;\n                            a.removeAttribute('target');\n                            if (!sKey) return;\n                            if (!Array.isArray(states.statusQuotes[sKey])) {\n                              states.statusQuotes[sKey] = [];\n                            }\n                            if (!states.statusQuotes[sKey][i]) {\n                              states.statusQuotes[sKey].splice(i, 0, result);\n                            }\n                          },\n                        );\n                      });\n                  },\n                }),\n              }}\n            />\n            <QuoteStatuses id={id} instance={instance} level={quoted} />\n          </div>\n          {!!poll && (\n            <Poll\n              lang={language}\n              poll={poll}\n              readOnly={readOnly || !sameInstance || !authenticated}\n              onUpdate={(newPoll) => {\n                states.statuses[sKey].poll = newPoll;\n              }}\n              refresh={() => {\n                return masto.v1.polls\n                  .$select(poll.id)\n                  .fetch()\n                  .then((pollResponse) => {\n                    states.statuses[sKey].poll = pollResponse;\n                  })\n                  .catch((e) => {}); // Silently fail\n              }}\n              votePoll={(choices) => {\n                return masto.v1.polls\n                  .$select(poll.id)\n                  .votes.create({\n                    choices,\n                  })\n                  .then((pollResponse) => {\n                    states.statuses[sKey].poll = pollResponse;\n                  })\n                  .catch((e) => {}); // Silently fail\n              }}\n            />\n          )}\n          {(((enableTranslate || inlineTranslate) &&\n            !!content.trim() &&\n            !!getHTMLText(emojifyText(content, emojis)) &&\n            differentLanguage) ||\n            forceTranslate) && (\n            <TranslationBlock\n              forceTranslate={forceTranslate || inlineTranslate}\n              mini={!isSizeLarge && !withinContext}\n              sourceLanguage={language}\n              text={\n                (spoilerText ? `${spoilerText}\\n\\n` : '') +\n                getHTMLText(content) +\n                (poll?.options?.length\n                  ? `\\n\\nPoll:\\n${poll.options\n                      .map(\n                        (option) =>\n                          `- ${option.title}${\n                            option.votesCount >= 0\n                              ? ` (${option.votesCount})`\n                              : ''\n                          }`,\n                      )\n                      .join('\\n')}`\n                  : '')\n              }\n            />\n          )}\n          {!spoilerText && sensitive && !!mediaAttachments.length && (\n            <button\n              class={`plain spoiler ${showSpoiler ? 'spoiling' : ''}`}\n              type=\"button\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                if (showSpoiler) {\n                  delete states.spoilers[id];\n                } else {\n                  states.spoilers[id] = true;\n                }\n              }}\n            >\n              <Icon icon={showSpoiler ? 'eye-open' : 'eye-close'} /> Sensitive\n              content\n            </button>\n          )}\n          {!!mediaAttachments.length && (\n            <MultipleMediaFigure\n              lang={language}\n              enabled={showMultipleMediaCaptions}\n              captionChildren={captionChildren}\n            >\n              <div\n                ref={mediaContainerRef}\n                class={`media-container media-eq${mediaAttachments.length} ${\n                  mediaAttachments.length > 2 ? 'media-gt2' : ''\n                } ${mediaAttachments.length > 4 ? 'media-gt4' : ''}`}\n              >\n                {displayedMediaAttachments.map((media, i) => (\n                  <Media\n                    key={media.id}\n                    media={media}\n                    autoAnimate={isSizeLarge}\n                    showCaption={mediaAttachments.length === 1}\n                    lang={language}\n                    altIndex={\n                      showMultipleMediaCaptions && !!media.description && i + 1\n                    }\n                    to={`/${instance}/s/${id}?${\n                      withinContext ? 'media' : 'media-only'\n                    }=${i + 1}`}\n                    onClick={\n                      onMediaClick\n                        ? (e) => {\n                            onMediaClick(e, i, media, status);\n                          }\n                        : undefined\n                    }\n                  />\n                ))}\n              </div>\n            </MultipleMediaFigure>\n          )}\n          {!!card &&\n            card?.url !== status.url &&\n            card?.url !== status.uri &&\n            /^https/i.test(card?.url) &&\n            !sensitive &&\n            !spoilerText &&\n            !poll &&\n            !mediaAttachments.length &&\n            !snapStates.statusQuotes[sKey] && (\n              <Card card={card} instance={currentInstance} />\n            )}\n        </div>\n        {isSizeLarge && (\n          <>\n            <div class=\"extra-meta\">\n              {_deleted ? (\n                <span class=\"status-deleted-tag\">Deleted</span>\n              ) : (\n                <>\n                  <Icon\n                    icon={visibilityIconsMap[visibility]}\n                    alt={visibilityText[visibility]}\n                  />{' '}\n                  <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <time\n                      class=\"created\"\n                      datetime={createdAtDate.toISOString()}\n                    >\n                      {createdDateText}\n                    </time>\n                  </a>\n                  {editedAt && (\n                    <>\n                      {' '}\n                      &bull; <Icon icon=\"pencil\" alt=\"Edited\" />{' '}\n                      <time\n                        class=\"edited\"\n                        datetime={editedAtDate.toISOString()}\n                        onClick={() => {\n                          setShowEdited(id);\n                        }}\n                      >\n                        {editedDateText}\n                      </time>\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n            <div class={`actions ${_deleted ? 'disabled' : ''}`}>\n              <div class=\"action has-count\">\n                <StatusButton\n                  title=\"Reply\"\n                  alt=\"Comments\"\n                  class=\"reply-button\"\n                  icon=\"comment\"\n                  count={repliesCount}\n                  onClick={replyStatus}\n                />\n              </div>\n              {/* <div class=\"action has-count\">\n                <StatusButton\n                  checked={reblogged}\n                  title={['Boost', 'Unboost']}\n                  alt={['Boost', 'Boosted']}\n                  class=\"reblog-button\"\n                  icon=\"rocket\"\n                  count={reblogsCount}\n                  onClick={boostStatus}\n                  disabled={!canBoost}\n                />\n              </div> */}\n              <MenuConfirm\n                disabled={!canBoost}\n                onClick={confirmBoostStatus}\n                confirmLabel={\n                  <>\n                    <Icon icon=\"rocket\" />\n                    <span>{reblogged ? 'Unboost?' : 'Boost to everyone?'}</span>\n                  </>\n                }\n                menuFooter={\n                  mediaNoDesc &&\n                  !reblogged && (\n                    <div class=\"footer\">\n                      <Icon icon=\"alert\" />\n                      Some media have no descriptions.\n                    </div>\n                  )\n                }\n              >\n                <div class=\"action has-count\">\n                  <StatusButton\n                    checked={reblogged}\n                    title={['Boost', 'Unboost']}\n                    alt={['Boost', 'Boosted']}\n                    class=\"reblog-button\"\n                    icon=\"rocket\"\n                    count={reblogsCount}\n                    // onClick={boostStatus}\n                    disabled={!canBoost}\n                  />\n                </div>\n              </MenuConfirm>\n              <div class=\"action has-count\">\n                <StatusButton\n                  checked={favourited}\n                  title={['Like', 'Unlike']}\n                  alt={['Like', 'Liked']}\n                  class=\"favourite-button\"\n                  icon=\"heart\"\n                  count={favouritesCount}\n                  onClick={favouriteStatus}\n                />\n              </div>\n              <div class=\"action\">\n                <StatusButton\n                  checked={bookmarked}\n                  title={['Bookmark', 'Unbookmark']}\n                  alt={['Bookmark', 'Bookmarked']}\n                  class=\"bookmark-button\"\n                  icon=\"bookmark\"\n                  onClick={bookmarkStatus}\n                />\n              </div>\n              <Menu\n                portal={{\n                  target:\n                    document.querySelector('.status-deck') || document.body,\n                }}\n                align=\"end\"\n                gap={4}\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                boundingBoxPadding=\"8 8 8 8\"\n                menuButton={\n                  <div class=\"action\">\n                    <button\n                      type=\"button\"\n                      title=\"More\"\n                      class=\"plain more-button\"\n                    >\n                      <Icon icon=\"more\" size=\"l\" alt=\"More\" />\n                    </button>\n                  </div>\n                }\n              >\n                {StatusMenuItems}\n              </Menu>\n            </div>\n          </>\n        )}\n      </div>\n      {!!showEdited && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEdited(false);\n              statusRef.current?.focus();\n            }\n          }}\n        >\n          <EditedAtModal\n            statusID={showEdited}\n            instance={instance}\n            fetchStatusHistory={() => {\n              return masto.v1.statuses.$select(showEdited).history.list();\n            }}\n            onClose={() => {\n              setShowEdited(false);\n              statusRef.current?.focus();\n            }}\n          />\n        </Modal>\n      )}\n      {showReactions && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowReactions(false);\n            }\n          }}\n        >\n          <ReactionsModal\n            statusID={id}\n            instance={instance}\n            onClose={() => setShowReactions(false)}\n          />\n        </Modal>\n      )}\n    </article>\n  );\n}\n\nfunction MultipleMediaFigure(props) {\n  const { enabled, children, lang, captionChildren } = props;\n  if (!enabled || !captionChildren) return children;\n  return (\n    <figure class=\"media-figure-multiple\">\n      {children}\n      <figcaption lang={lang} dir=\"auto\">\n        {captionChildren}\n      </figcaption>\n    </figure>\n  );\n}\n\nfunction Card({ card, instance }) {\n  const snapStates = useSnapshot(states);\n  const {\n    blurhash,\n    title,\n    description,\n    html,\n    providerName,\n    providerUrl,\n    authorName,\n    authorUrl,\n    width,\n    height,\n    image,\n    imageDescription,\n    url,\n    type,\n    embedUrl,\n    language,\n    publishedAt,\n  } = card;\n\n  /* type\n  link = Link OEmbed\n  photo = Photo OEmbed\n  video = Video OEmbed\n  rich = iframe OEmbed. Not currently accepted, so won’t show up in practice.\n  */\n\n  const hasText = title || providerName || authorName;\n  const isLandscape = width / height >= 1.2;\n  const size = isLandscape ? 'large' : '';\n\n  const [cardStatusURL, setCardStatusURL] = useState(null);\n  // const [cardStatusID, setCardStatusID] = useState(null);\n  useEffect(() => {\n    if (hasText && image && isMastodonLinkMaybe(url)) {\n      unfurlMastodonLink(instance, url).then((result) => {\n        if (!result) return;\n        const { id, url } = result;\n        setCardStatusURL('#' + url);\n\n        // NOTE: This is for quote post\n        // (async () => {\n        //   const { masto } = api({ instance });\n        //   const status = await masto.v1.statuses.$select(id).fetch();\n        //   saveStatus(status, instance);\n        //   setCardStatusID(id);\n        // })();\n      });\n    }\n  }, [hasText, image]);\n\n  // if (cardStatusID) {\n  //   return (\n  //     <Status statusID={cardStatusID} instance={instance} size=\"s\" readOnly />\n  //   );\n  // }\n\n  if (snapStates.unfurledLinks[url]) return null;\n\n  if (hasText && (image || (type === 'photo' && blurhash))) {\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\n    let blurhashImage;\n    if (!image) {\n      const w = 44;\n      const h = 44;\n      const blurhashPixels = decodeBlurHash(blurhash, w, h);\n      const canvas = document.createElement('canvas');\n      canvas.width = w;\n      canvas.height = h;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(w, h);\n      imageData.data.set(blurhashPixels);\n      ctx.putImageData(imageData, 0, 0);\n      blurhashImage = canvas.toDataURL();\n    }\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link ${blurhashImage ? '' : size}`}\n        lang={language}\n        dir=\"auto\"\n      >\n        <div class=\"card-image\">\n          <img\n            src={image || blurhashImage}\n            width={width}\n            height={height}\n            loading=\"lazy\"\n            alt={imageDescription || ''}\n            onError={(e) => {\n              try {\n                e.target.style.display = 'none';\n              } catch (e) {}\n            }}\n          />\n        </div>\n        <div class=\"meta-container\">\n          <p class=\"meta domain\" dir=\"auto\">\n            {domain}\n          </p>\n          <p class=\"title\" dir=\"auto\">\n            {title}\n          </p>\n          <p class=\"meta\" dir=\"auto\">\n            {description || providerName || authorName}\n          </p>\n        </div>\n      </a>\n    );\n  } else if (type === 'photo') {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n        class=\"card photo\"\n      >\n        <img\n          src={embedUrl}\n          width={width}\n          height={height}\n          alt={title || description}\n          loading=\"lazy\"\n          style={{\n            height: 'auto',\n            aspectRatio: `${width}/${height}`,\n          }}\n        />\n      </a>\n    );\n  } else if (type === 'video') {\n    if (/youtube/i.test(providerName)) {\n      // Get ID from e.g. https://www.youtube.com/watch?v=[VIDEO_ID]\n      const videoID = url.match(/watch\\?v=([^&]+)/)?.[1];\n      if (videoID) {\n        return <lite-youtube videoid={videoID} nocookie></lite-youtube>;\n      }\n    }\n    return (\n      <div\n        class=\"card video\"\n        style={{\n          aspectRatio: `${width}/${height}`,\n        }}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    );\n  } else if (hasText && !image) {\n    const domain = new URL(url).hostname.replace(/^www\\./, '');\n    return (\n      <a\n        href={cardStatusURL || url}\n        target={cardStatusURL ? null : '_blank'}\n        rel=\"nofollow noopener noreferrer\"\n        class={`card link no-image`}\n        lang={language}\n      >\n        <div class=\"meta-container\">\n          <p class=\"meta domain\">\n            <Icon icon=\"link\" size=\"s\" /> <span>{domain}</span>\n          </p>\n          <p class=\"title\">{title}</p>\n          <p class=\"meta\">{description || providerName || authorName}</p>\n        </div>\n      </a>\n    );\n  }\n}\n\nfunction EditedAtModal({\n  statusID,\n  instance,\n  fetchStatusHistory = () => {},\n  onClose,\n}) {\n  const [uiState, setUIState] = useState('default');\n  const [editHistory, setEditHistory] = useState([]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const editHistory = await fetchStatusHistory();\n        console.log(editHistory);\n        setEditHistory(editHistory);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"edit-history\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Edit History</h2>\n        {uiState === 'error' && <p>Failed to load history</p>}\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> Loading&hellip;\n          </p>\n        )}\n      </header>\n      <main tabIndex=\"-1\">\n        {editHistory.length > 0 && (\n          <ol>\n            {editHistory.map((status) => {\n              const { createdAt } = status;\n              const createdAtDate = new Date(createdAt);\n              return (\n                <li key={createdAt} class=\"history-item\">\n                  <h3>\n                    <time>\n                      {niceDateTime(createdAtDate, {\n                        formatOpts: {\n                          weekday: 'short',\n                          second: 'numeric',\n                        },\n                      })}\n                    </time>\n                  </h3>\n                  <Status\n                    status={status}\n                    instance={instance}\n                    size=\"s\"\n                    withinContext\n                    readOnly\n                    previewMode\n                  />\n                </li>\n              );\n            })}\n          </ol>\n        )}\n      </main>\n    </div>\n  );\n}\n\nconst REACTIONS_LIMIT = 80;\nfunction ReactionsModal({ statusID, instance, onClose }) {\n  const { masto } = api({ instance });\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  const reblogIterator = useRef();\n  const favouriteIterator = useRef();\n\n  async function fetchAccounts(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad) {\n          reblogIterator.current = masto.v1.statuses\n            .$select(statusID)\n            .rebloggedBy.list({\n              limit: REACTIONS_LIMIT,\n            });\n          favouriteIterator.current = masto.v1.statuses\n            .$select(statusID)\n            .favouritedBy.list({\n              limit: REACTIONS_LIMIT,\n            });\n        }\n        const [{ value: reblogResults }, { value: favouriteResults }] =\n          await Promise.allSettled([\n            reblogIterator.current.next(),\n            favouriteIterator.current.next(),\n          ]);\n        if (reblogResults.value?.length || favouriteResults.value?.length) {\n          if (reblogResults.value?.length) {\n            for (const account of reblogResults.value) {\n              const theAccount = accounts.find((a) => a.id === account.id);\n              if (!theAccount) {\n                accounts.push({\n                  ...account,\n                  _types: ['reblog'],\n                });\n              } else {\n                theAccount._types.push('reblog');\n              }\n            }\n          }\n          if (favouriteResults.value?.length) {\n            for (const account of favouriteResults.value) {\n              const theAccount = accounts.find((a) => a.id === account.id);\n              if (!theAccount) {\n                accounts.push({\n                  ...account,\n                  _types: ['favourite'],\n                });\n              } else {\n                theAccount._types.push('favourite');\n              }\n            }\n          }\n          setAccounts(accounts);\n          setShowMore(!reblogResults.done || !favouriteResults.done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchAccounts(true);\n  }, []);\n\n  return (\n    <div id=\"reactions-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <h2>Boosted/Liked by…</h2>\n      </header>\n      <main>\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"reactions-list\">\n              {accounts.map((account) => {\n                const { _types } = account;\n                return (\n                  <li key={account.id + _types}>\n                    <div class=\"reactions-block\">\n                      {_types.map((type) => (\n                        <Icon\n                          icon={\n                            {\n                              reblog: 'rocket',\n                              favourite: 'heart',\n                            }[type]\n                          }\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                    <AccountBlock account={account} instance={instance} />\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      fetchAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => fetchAccounts()}\n                  >\n                    Show more&hellip;\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">The end.</p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">Unable to load accounts</p>\n        ) : (\n          <p class=\"ui-state insignificant\">No one yet.</p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction StatusButton({\n  checked,\n  count,\n  class: className,\n  title,\n  alt,\n  icon,\n  onClick,\n  ...props\n}) {\n  if (typeof title === 'string') {\n    title = [title, title];\n  }\n  if (typeof alt === 'string') {\n    alt = [alt, alt];\n  }\n\n  const [buttonTitle, setButtonTitle] = useState(title[0] || '');\n  const [iconAlt, setIconAlt] = useState(alt[0] || '');\n\n  useEffect(() => {\n    if (checked) {\n      setButtonTitle(title[1] || '');\n      setIconAlt(alt[1] || '');\n    } else {\n      setButtonTitle(title[0] || '');\n      setIconAlt(alt[0] || '');\n    }\n  }, [checked, title, alt]);\n\n  return (\n    <button\n      type=\"button\"\n      title={buttonTitle}\n      class={`plain ${className} ${checked ? 'checked' : ''}`}\n      onClick={(e) => {\n        if (!onClick) return;\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n      {...props}\n    >\n      <Icon icon={icon} size=\"l\" alt={iconAlt} />\n      {!!count && (\n        <>\n          {' '}\n          <small title={count}>{shortenNumber(count)}</small>\n        </>\n      )}\n    </button>\n  );\n}\n\nexport function formatDuration(time) {\n  if (!time) return;\n  let hours = Math.floor(time / 3600);\n  let minutes = Math.floor((time % 3600) / 60);\n  let seconds = Math.round(time % 60);\n\n  if (hours === 0) {\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  } else {\n    return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds\n      .toString()\n      .padStart(2, '0')}`;\n  }\n}\n\nconst denylistDomains = /(twitter|github)\\.com/i;\nconst failedUnfurls = {};\n\nfunction _unfurlMastodonLink(instance, url) {\n  const snapStates = snapshot(states);\n  if (denylistDomains.test(url)) {\n    return;\n  }\n  if (failedUnfurls[url]) {\n    return;\n  }\n  const instanceRegex = new RegExp(instance + '/');\n  if (instanceRegex.test(snapStates.unfurledLinks[url]?.url)) {\n    return Promise.resolve(snapStates.unfurledLinks[url]);\n  }\n  console.debug('🦦 Unfurling URL', url);\n\n  let remoteInstanceFetch;\n  let theURL = url;\n  if (/\\/\\/elk\\.[^\\/]+\\/[^.]+\\.[^.]+/i.test(theURL)) {\n    // E.g. https://elk.zone/domain.com/@stest/123 -> https://domain.com/@stest/123\n    theURL = theURL.replace(/elk\\.[^\\/]+\\//i, '');\n  }\n  const urlObj = new URL(theURL);\n  const domain = urlObj.hostname;\n  const path = urlObj.pathname;\n  // Regex /:username/:id, where username = @username or @username@domain, id = number\n  const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/(\\d+)$/i;\n  const statusMatch = statusRegex.exec(path);\n  if (statusMatch) {\n    const id = statusMatch[3];\n    const { masto } = api({ instance: domain });\n    remoteInstanceFetch = masto.v1.statuses\n      .$select(id)\n      .fetch()\n      .then((status) => {\n        if (status?.id) {\n          return {\n            status,\n            instance: domain,\n          };\n        } else {\n          throw new Error('No results');\n        }\n      });\n  }\n\n  const { masto } = api({ instance });\n  const mastoSearchFetch = masto.v2.search\n    .fetch({\n      q: url,\n      type: 'statuses',\n      resolve: true,\n      limit: 1,\n    })\n    .then((results) => {\n      if (results.statuses.length > 0) {\n        const status = results.statuses[0];\n        return {\n          status,\n          instance,\n        };\n      } else {\n        throw new Error('No results');\n      }\n    });\n\n  function handleFulfill(result) {\n    const { status, instance } = result;\n    const { id } = status;\n    const selfURL = `/${instance}/s/${id}`;\n    console.debug('🦦 Unfurled URL', url, id, selfURL);\n    const data = {\n      id,\n      instance,\n      url: selfURL,\n    };\n    states.unfurledLinks[url] = data;\n    saveStatus(status, instance, {\n      skipThreading: true,\n    });\n    return data;\n  }\n  function handleCatch(e) {\n    failedUnfurls[url] = true;\n  }\n\n  if (remoteInstanceFetch) {\n    return Promise.any([remoteInstanceFetch, mastoSearchFetch])\n      .then(handleFulfill)\n      .catch(handleCatch);\n  } else {\n    return mastoSearchFetch.then(handleFulfill).catch(handleCatch);\n  }\n}\n\nfunction nicePostURL(url) {\n  if (!url) return;\n  const urlObj = new URL(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '');\n  // split only first slash\n  const [_, username, restPath] = path.match(/\\/(@[^\\/]+)\\/(.*)/) || [];\n  return (\n    <>\n      {host}\n      {username ? (\n        <>\n          /{username}\n          <wbr />\n          <span class=\"more-insignificant\">/{restPath}</span>\n        </>\n      ) : (\n        <span class=\"more-insignificant\">{path}</span>\n      )}\n    </>\n  );\n}\n\nconst unfurlMastodonLink = throttle(_unfurlMastodonLink);\n\nfunction FilteredStatus({ status, filterInfo, instance, containerProps = {} }) {\n  const {\n    account: { avatar, avatarStatic, bot, group },\n    createdAt,\n    visibility,\n    reblog,\n  } = status;\n  const isReblog = !!reblog;\n  const filterTitleStr = filterInfo?.titlesStr || '';\n  const createdAtDate = new Date(createdAt);\n  const statusPeekText = statusPeek(status.reblog || status);\n\n  const [showPeek, setShowPeek] = useState(false);\n  const bindLongPressPeek = useLongPress(\n    () => {\n      setShowPeek(true);\n    },\n    {\n      threshold: 600,\n      captureEvent: true,\n      detect: 'touch',\n      cancelOnMovement: 2, // true allows movement of up to 25 pixels\n    },\n  );\n\n  const statusPeekRef = useTruncated();\n\n  return (\n    <div\n      class={isReblog ? (group ? 'status-group' : 'status-reblog') : ''}\n      {...containerProps}\n      title={statusPeekText}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        setShowPeek(true);\n      }}\n      {...bindLongPressPeek()}\n    >\n      <article class=\"status filtered\" tabindex=\"-1\">\n        <b\n          class=\"status-filtered-badge clickable badge-meta\"\n          title={filterTitleStr}\n          onClick={(e) => {\n            e.preventDefault();\n            setShowPeek(true);\n          }}\n        >\n          <span>Filtered</span>\n          <span>{filterTitleStr}</span>\n        </b>{' '}\n        <Avatar url={avatarStatic || avatar} squircle={bot} />\n        <span class=\"status-filtered-info\">\n          <span class=\"status-filtered-info-1\">\n            <NameText account={status.account} instance={instance} />{' '}\n            <Icon\n              icon={visibilityIconsMap[visibility]}\n              alt={visibilityText[visibility]}\n              size=\"s\"\n            />{' '}\n            {isReblog ? (\n              'boosted'\n            ) : (\n              <RelativeTime datetime={createdAtDate} format=\"micro\" />\n            )}\n          </span>\n          <span class=\"status-filtered-info-2\">\n            {isReblog && (\n              <>\n                <Avatar\n                  url={reblog.account.avatarStatic || reblog.account.avatar}\n                  squircle={bot}\n                />{' '}\n              </>\n            )}\n            {statusPeekText}\n          </span>\n        </span>\n      </article>\n      {!!showPeek && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowPeek(false);\n            }\n          }}\n        >\n          <div id=\"filtered-status-peek\" class=\"sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowPeek(false)}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <b class=\"status-filtered-badge\">Filtered</b> {filterTitleStr}\n            </header>\n            <main tabIndex=\"-1\">\n              <Link\n                ref={statusPeekRef}\n                class=\"status-link\"\n                to={`/${instance}/s/${status.id}`}\n                onClick={() => {\n                  setShowPeek(false);\n                }}\n                data-read-more=\"Read more →\"\n              >\n                <Status status={status} instance={instance} size=\"s\" readOnly />\n              </Link>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst QuoteStatuses = memo(({ id, instance, level = 0 }) => {\n  if (!id || !instance) return;\n  const snapStates = useSnapshot(states);\n  const sKey = statusKey(id, instance);\n  const quotes = snapStates.statusQuotes[sKey];\n  const uniqueQuotes = quotes?.filter(\n    (q, i, arr) => arr.findIndex((q2) => q2.url === q.url) === i,\n  );\n\n  if (!uniqueQuotes?.length) return;\n  if (level > 2) return;\n\n  return uniqueQuotes.map((q) => {\n    return (\n      <Link\n        key={q.instance + q.id}\n        to={`${q.instance ? `/${q.instance}` : ''}/s/${q.id}`}\n        class=\"status-card-link\"\n        data-read-more=\"Read more →\"\n      >\n        <Status\n          statusID={q.id}\n          instance={q.instance}\n          size=\"s\"\n          quoted={level + 1}\n        />\n      </Link>\n    );\n  });\n});\n\nexport default memo(Status);\n","import './compose.css';\n\nimport '@github/text-expander-element';\nimport equal from 'fast-deep-equal';\nimport { forwardRef } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport stringLength from 'string-length';\nimport { uid } from 'uid/single';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport supportedLanguages from '../data/status-supported-languages';\nimport urlRegex from '../data/url-regex';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport localeMatch from '../utils/locale-match';\nimport openCompose from '../utils/open-compose';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getCurrentAccount,\n  getCurrentAccountNS,\n  getCurrentInstance,\n  getCurrentInstanceConfiguration,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useInterval from '../utils/useInterval';\nimport visibilityIconsMap from '../utils/visibility-icons-map';\n\nimport AccountBlock from './account-block';\n// import Avatar from './avatar';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Modal from './modal';\nimport Status from './status';\n\nconst supportedLanguagesMap = supportedLanguages.reduce((acc, l) => {\n  const [code, common, native] = l;\n  acc[code] = {\n    common,\n    native,\n  };\n  return acc;\n}, {});\n\n/* NOTES:\n  - Max character limit includes BOTH status text and Content Warning text\n*/\n\nconst expiryOptions = {\n  '5 minutes': 5 * 60,\n  '30 minutes': 30 * 60,\n  '1 hour': 60 * 60,\n  '6 hours': 6 * 60 * 60,\n  '12 hours': 12 * 60 * 60,\n  '1 day': 24 * 60 * 60,\n  '3 days': 3 * 24 * 60 * 60,\n  '7 days': 7 * 24 * 60 * 60,\n};\nconst expirySeconds = Object.values(expiryOptions);\nconst oneDay = 24 * 60 * 60;\n\nconst expiresInFromExpiresAt = (expiresAt) => {\n  if (!expiresAt) return oneDay;\n  const delta = (new Date(expiresAt).getTime() - Date.now()) / 1000;\n  return expirySeconds.find((s) => s >= delta) || oneDay;\n};\n\nconst menu = document.createElement('ul');\nmenu.role = 'listbox';\nmenu.className = 'text-expander-menu';\n\n// Set IntersectionObserver on menu, reposition it because text-expander doesn't handle it\nconst windowMargin = 16;\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      const { left, width } = entry.boundingClientRect;\n      const { innerWidth } = window;\n      if (left + width > innerWidth) {\n        menu.style.left = innerWidth - width - windowMargin + 'px';\n      }\n    }\n  });\n});\nobserver.observe(menu);\n\nconst DEFAULT_LANG = localeMatch(\n  [new Intl.DateTimeFormat().resolvedOptions().locale, ...navigator.languages],\n  supportedLanguages.map((l) => l[0]),\n  'en',\n);\n\n// https://github.com/mastodon/mastodon/blob/c4a429ed47e85a6bbf0d470a41cc2f64cf120c19/app/javascript/mastodon/features/compose/util/counter.js\nconst urlRegexObj = new RegExp(urlRegex.source, urlRegex.flags);\nconst usernameRegex = /(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/gi;\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\nfunction countableText(inputText) {\n  return inputText\n    .replace(urlRegexObj, urlPlaceholder)\n    .replace(usernameRegex, '$1@$3');\n}\n\nfunction Compose({\n  onClose,\n  replyToStatus,\n  editStatus,\n  draftStatus,\n  standalone,\n  hasOpener,\n}) {\n  console.warn('RENDER COMPOSER');\n  const { masto, instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const UID = useRef(draftStatus?.uid || uid());\n  console.log('Compose UID', UID.current);\n\n  const currentAccount = getCurrentAccount();\n  const currentAccountInfo = currentAccount.info;\n\n  const configuration = getCurrentInstanceConfiguration();\n  console.log('⚙️ Configuration', configuration);\n\n  const {\n    statuses: {\n      maxCharacters,\n      maxMediaAttachments,\n      charactersReservedPerUrl,\n    } = {},\n    mediaAttachments: {\n      supportedMimeTypes = [],\n      imageSizeLimit,\n      imageMatrixLimit,\n      videoSizeLimit,\n      videoMatrixLimit,\n      videoFrameRateLimit,\n    } = {},\n    polls: {\n      maxOptions,\n      maxCharactersPerOption,\n      maxExpiration,\n      minExpiration,\n    } = {},\n  } = configuration || {};\n\n  const textareaRef = useRef();\n  const spoilerTextRef = useRef();\n  const [visibility, setVisibility] = useState('public');\n  const [sensitive, setSensitive] = useState(false);\n  const [language, setLanguage] = useState(\n    store.session.get('currentLanguage') || DEFAULT_LANG,\n  );\n  const prevLanguage = useRef(language);\n  const [mediaAttachments, setMediaAttachments] = useState([]);\n  const [poll, setPoll] = useState(null);\n\n  const prefs = store.account.get('preferences') || {};\n\n  const oninputTextarea = () => {\n    if (!textareaRef.current) return;\n    textareaRef.current.dispatchEvent(new Event('input'));\n  };\n  const focusTextarea = () => {\n    setTimeout(() => {\n      console.debug('FOCUS textarea');\n      textareaRef.current?.focus();\n    }, 300);\n  };\n\n  useEffect(() => {\n    if (replyToStatus) {\n      const { spoilerText, visibility, language, sensitive } = replyToStatus;\n      if (spoilerText && spoilerTextRef.current) {\n        spoilerTextRef.current.value = spoilerText;\n      }\n      const mentions = new Set([\n        replyToStatus.account.acct,\n        ...replyToStatus.mentions.map((m) => m.acct),\n      ]);\n      const allMentions = [...mentions].filter(\n        (m) => m !== currentAccountInfo.acct,\n      );\n      if (allMentions.length > 0) {\n        textareaRef.current.value = `${allMentions\n          .map((m) => `@${m}`)\n          .join(' ')} `;\n        oninputTextarea();\n      }\n      focusTextarea();\n      setVisibility(\n        visibility === 'public' && prefs['posting:default:visibility']\n          ? prefs['posting:default:visibility']\n          : visibility,\n      );\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      setSensitive(sensitive && !!spoilerText);\n    } else if (editStatus) {\n      const { visibility, language, sensitive, poll, mediaAttachments } =\n        editStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      setUIState('loading');\n      (async () => {\n        try {\n          const statusSource = await masto.v1.statuses\n            .$select(editStatus.id)\n            .source.fetch();\n          console.log({ statusSource });\n          const { text, spoilerText } = statusSource;\n          textareaRef.current.value = text;\n          textareaRef.current.dataset.source = text;\n          oninputTextarea();\n          focusTextarea();\n          spoilerTextRef.current.value = spoilerText;\n          setVisibility(visibility);\n          setLanguage(language || presf.postingDefaultLanguage || DEFAULT_LANG);\n          setSensitive(sensitive);\n          setPoll(composablePoll);\n          setMediaAttachments(mediaAttachments);\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          alert(e?.reason || e);\n          setUIState('error');\n        }\n      })();\n    } else {\n      focusTextarea();\n      console.log('Apply prefs', prefs);\n      if (prefs['posting:default:visibility']) {\n        setVisibility(prefs['posting:default:visibility']);\n      }\n      if (prefs['posting:default:language']) {\n        setLanguage(prefs['posting:default:language']);\n      }\n      if (prefs['posting:default:sensitive']) {\n        setSensitive(prefs['posting:default:sensitive']);\n      }\n    }\n    if (draftStatus) {\n      const {\n        status,\n        spoilerText,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      } = draftStatus;\n      const composablePoll = !!poll?.options && {\n        ...poll,\n        options: poll.options.map((o) => o?.title || o),\n        expiresIn: poll?.expiresIn || expiresInFromExpiresAt(poll.expiresAt),\n      };\n      textareaRef.current.value = status;\n      oninputTextarea();\n      focusTextarea();\n      if (spoilerText) spoilerTextRef.current.value = spoilerText;\n      if (visibility) setVisibility(visibility);\n      setLanguage(language || prefs.postingDefaultLanguage || DEFAULT_LANG);\n      if (sensitive !== null) setSensitive(sensitive);\n      if (composablePoll) setPoll(composablePoll);\n      if (mediaAttachments) setMediaAttachments(mediaAttachments);\n    }\n  }, [draftStatus, editStatus, replyToStatus]);\n\n  const formRef = useRef();\n\n  const beforeUnloadCopy = 'You have unsaved changes. Discard this post?';\n  const canClose = () => {\n    const { value, dataset } = textareaRef.current;\n\n    // check if loading\n    if (uiState === 'loading') {\n      console.log('canClose', { uiState });\n      return false;\n    }\n\n    // check for status and media attachments\n    const hasMediaAttachments = mediaAttachments.length > 0;\n    if (!value && !hasMediaAttachments) {\n      console.log('canClose', { value, mediaAttachments });\n      return true;\n    }\n\n    // check if all media attachments have IDs\n    const hasIDMediaAttachments =\n      mediaAttachments.length > 0 &&\n      mediaAttachments.every((media) => media.id);\n    if (hasIDMediaAttachments) {\n      console.log('canClose', { hasIDMediaAttachments });\n      return true;\n    }\n\n    // check if status contains only \"@acct\", if replying\n    const isSelf = replyToStatus?.account.id === currentAccountInfo.id;\n    const hasOnlyAcct =\n      replyToStatus && value.trim() === `@${replyToStatus.account.acct}`;\n    // TODO: check for mentions, or maybe just generic \"@username<space>\", including multiple mentions like \"@username1<space>@username2<space>\"\n    if (!isSelf && hasOnlyAcct) {\n      console.log('canClose', { isSelf, hasOnlyAcct });\n      return true;\n    }\n\n    // check if status is same with source\n    const sameWithSource = value === dataset?.source;\n    if (sameWithSource) {\n      console.log('canClose', { sameWithSource });\n      return true;\n    }\n\n    console.log('canClose', {\n      value,\n      hasMediaAttachments,\n      hasIDMediaAttachments,\n      poll,\n      isSelf,\n      hasOnlyAcct,\n      sameWithSource,\n      uiState,\n    });\n\n    return false;\n  };\n\n  const confirmClose = () => {\n    if (!canClose()) {\n      const yes = confirm(beforeUnloadCopy);\n      return yes;\n    }\n    return true;\n  };\n\n  useEffect(() => {\n    // Show warning if user tries to close window with unsaved changes\n    const handleBeforeUnload = (e) => {\n      if (!canClose()) {\n        e.preventDefault();\n        e.returnValue = beforeUnloadCopy;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload, {\n      capture: true,\n    });\n    return () =>\n      window.removeEventListener('beforeunload', handleBeforeUnload, {\n        capture: true,\n      });\n  }, []);\n\n  const getCharCount = () => {\n    const { value } = textareaRef.current;\n    const { value: spoilerText } = spoilerTextRef.current;\n    return stringLength(countableText(value)) + stringLength(spoilerText);\n  };\n  const updateCharCount = () => {\n    const count = getCharCount();\n    states.composerCharacterCount = count;\n  };\n  useEffect(updateCharCount, []);\n\n  const escDownRef = useRef(false);\n  useHotkeys(\n    'esc',\n    () => {\n      escDownRef.current = true;\n      // This won't be true if this event is already handled and not propagated 🤞\n    },\n    {\n      enableOnFormTags: true,\n    },\n  );\n  useHotkeys(\n    'esc',\n    () => {\n      if (!standalone && escDownRef.current && confirmClose()) {\n        onClose();\n      }\n      escDownRef.current = false;\n    },\n    {\n      enableOnFormTags: true,\n      // Use keyup because Esc keydown will close the confirm dialog on Safari\n      keyup: true,\n      ignoreEventWhen: (e) => {\n        const modals = document.querySelectorAll('#modal-container > *');\n        const hasModal = !!modals;\n        const hasOnlyComposer =\n          modals.length === 1 && modals[0].querySelector('#compose-container');\n        return hasModal && !hasOnlyComposer;\n      },\n    },\n  );\n\n  const prevBackgroundDraft = useRef({});\n  const draftKey = () => {\n    const ns = getCurrentAccountNS();\n    return `${ns}#${UID.current}`;\n  };\n  const saveUnsavedDraft = () => {\n    // Not enabling this for editing status\n    // I don't think this warrant a draft mode for a status that's already posted\n    // Maybe it could be a big edit change but it should be rare\n    if (editStatus) return;\n    const key = draftKey();\n    const backgroundDraft = {\n      key,\n      replyTo: replyToStatus\n        ? {\n            /* Smaller payload of replyToStatus. Reasons:\n              - No point storing whole thing\n              - Could have media attachments\n              - Could be deleted/edited later\n            */\n            id: replyToStatus.id,\n            account: {\n              id: replyToStatus.account.id,\n              username: replyToStatus.account.username,\n              acct: replyToStatus.account.acct,\n            },\n          }\n        : null,\n      draftStatus: {\n        uid: UID.current,\n        status: textareaRef.current.value,\n        spoilerText: spoilerTextRef.current.value,\n        visibility,\n        language,\n        sensitive,\n        poll,\n        mediaAttachments,\n      },\n    };\n    if (!equal(backgroundDraft, prevBackgroundDraft.current) && !canClose()) {\n      console.debug('not equal', backgroundDraft, prevBackgroundDraft.current);\n      db.drafts\n        .set(key, {\n          ...backgroundDraft,\n          state: 'unsaved',\n          updatedAt: Date.now(),\n        })\n        .then(() => {\n          console.debug('DRAFT saved', key, backgroundDraft);\n        })\n        .catch((e) => {\n          console.error('DRAFT failed', key, e);\n        });\n      prevBackgroundDraft.current = structuredClone(backgroundDraft);\n    }\n  };\n  useInterval(saveUnsavedDraft, 5000); // background save every 5s\n  useEffect(() => {\n    saveUnsavedDraft();\n    // If unmounted, means user discarded the draft\n    // Also means pop-out 🙈, but it's okay because the pop-out will persist the ID and re-create the draft\n    return () => {\n      db.drafts.del(draftKey());\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleItems = (e) => {\n      const { items } = e.clipboardData || e.dataTransfer;\n      const files = [];\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.kind === 'file') {\n          const file = item.getAsFile();\n          if (file && supportedMimeTypes.includes(file.type)) {\n            files.push(file);\n          }\n        }\n      }\n      if (files.length > 0 && mediaAttachments.length >= maxMediaAttachments) {\n        alert(`You can only attach up to ${maxMediaAttachments} files.`);\n        return;\n      }\n      console.log({ files });\n      if (files.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        // Auto-cut-off files to avoid exceeding maxMediaAttachments\n        const max = maxMediaAttachments - mediaAttachments.length;\n        const allowedFiles = files.slice(0, max);\n        if (allowedFiles.length <= 0) {\n          alert(`You can only attach up to ${maxMediaAttachments} files.`);\n          return;\n        }\n        const mediaFiles = allowedFiles.map((file) => ({\n          file,\n          type: file.type,\n          size: file.size,\n          url: URL.createObjectURL(file),\n          id: null,\n          description: null,\n        }));\n        setMediaAttachments([...mediaAttachments, ...mediaFiles]);\n      }\n    };\n    window.addEventListener('paste', handleItems);\n    const handleDragover = (e) => {\n      // Prevent default if there's files\n      if (e.dataTransfer.items.length > 0) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n    window.addEventListener('dragover', handleDragover);\n    window.addEventListener('drop', handleItems);\n    return () => {\n      window.removeEventListener('paste', handleItems);\n      window.removeEventListener('dragover', handleDragover);\n      window.removeEventListener('drop', handleItems);\n    };\n  }, [mediaAttachments]);\n\n  const [showEmoji2Picker, setShowEmoji2Picker] = useState(false);\n\n  const [topSupportedLanguages, restSupportedLanguages] = useMemo(() => {\n    const topLanguages = [];\n    const restLanguages = [];\n    const { contentTranslationHideLanguages = [] } = states.settings;\n    supportedLanguages.forEach((l) => {\n      const [code] = l;\n      if (\n        code === language ||\n        code === prevLanguage.current ||\n        code === DEFAULT_LANG ||\n        contentTranslationHideLanguages.includes(code)\n      ) {\n        topLanguages.push(l);\n      } else {\n        restLanguages.push(l);\n      }\n    });\n    topLanguages.sort(([codeA, commonA], [codeB, commonB]) => {\n      if (codeA === language) return -1;\n      if (codeB === language) return 1;\n      return commonA.localeCompare(commonB);\n    });\n    restLanguages.sort(([codeA, commonA], [codeB, commonB]) =>\n      commonA.localeCompare(commonB),\n    );\n    return [topLanguages, restLanguages];\n  }, [language]);\n\n  return (\n    <div id=\"compose-container-outer\">\n      <div id=\"compose-container\" class={standalone ? 'standalone' : ''}>\n        <div class=\"compose-top\">\n          {currentAccountInfo?.avatarStatic && (\n            // <Avatar\n            //   url={currentAccountInfo.avatarStatic}\n            //   size=\"xl\"\n            //   alt={currentAccountInfo.username}\n            //   squircle={currentAccountInfo?.bot}\n            // />\n            <AccountBlock\n              account={currentAccountInfo}\n              accountInstance={currentAccount.instanceURL}\n              hideDisplayName\n            />\n          )}\n          {!standalone ? (\n            <span>\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  const newWin = openCompose({\n                    editStatus,\n                    replyToStatus,\n                    draftStatus: {\n                      uid: UID.current,\n                      status: textareaRef.current.value,\n                      spoilerText: spoilerTextRef.current.value,\n                      visibility,\n                      language,\n                      sensitive,\n                      poll,\n                      mediaAttachments,\n                    },\n                  });\n\n                  if (!newWin) {\n                    alert('Looks like your browser is blocking popups.');\n                    return;\n                  }\n\n                  onClose();\n                }}\n              >\n                <Icon icon=\"popout\" alt=\"Pop out\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"light close-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  if (confirmClose()) {\n                    onClose();\n                  }\n                }}\n              >\n                <Icon icon=\"x\" />\n              </button>\n            </span>\n          ) : (\n            hasOpener && (\n              <button\n                type=\"button\"\n                class=\"light pop-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  // If there are non-ID media attachments (not yet uploaded), show confirmation dialog because they are not going to be passed to the new window\n                  // const containNonIDMediaAttachments =\n                  //   mediaAttachments.length > 0 &&\n                  //   mediaAttachments.some((media) => !media.id);\n                  // if (containNonIDMediaAttachments) {\n                  //   const yes = confirm(\n                  //     'You have media attachments that are not yet uploaded. Opening a new window will discard them and you will need to re-attach them. Are you sure you want to continue?',\n                  //   );\n                  //   if (!yes) {\n                  //     return;\n                  //   }\n                  // }\n\n                  if (!window.opener) {\n                    alert('Looks like you closed the parent window.');\n                    return;\n                  }\n\n                  if (window.opener.__STATES__.showCompose) {\n                    const yes = confirm(\n                      'Looks like you already have a compose field open in the parent window. Popping in this window will discard the changes you made in the parent window. Continue?',\n                    );\n                    if (!yes) return;\n                  }\n\n                  // const mediaAttachmentsWithIDs = mediaAttachments.filter(\n                  //   (media) => media.id,\n                  // );\n\n                  onClose({\n                    fn: () => {\n                      const passData = {\n                        editStatus,\n                        replyToStatus,\n                        draftStatus: {\n                          uid: UID.current,\n                          status: textareaRef.current.value,\n                          spoilerText: spoilerTextRef.current.value,\n                          visibility,\n                          language,\n                          sensitive,\n                          poll,\n                          mediaAttachments,\n                        },\n                      };\n                      window.opener.__COMPOSE__ = passData; // Pass it here instead of `showCompose` due to some weird proxy issue again\n                      window.opener.__STATES__.showCompose = true;\n                    },\n                  });\n                }}\n              >\n                <Icon icon=\"popin\" alt=\"Pop in\" />\n              </button>\n            )\n          )}\n        </div>\n        {!!replyToStatus && (\n          <div class=\"status-preview\">\n            <Status status={replyToStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend reply-to\">\n              Replying to @\n              {replyToStatus.account.acct || replyToStatus.account.username}\n              &rsquo;s post\n            </div>\n          </div>\n        )}\n        {!!editStatus && (\n          <div class=\"status-preview\">\n            <Status status={editStatus} size=\"s\" previewMode />\n            <div class=\"status-preview-legend\">Editing source post</div>\n          </div>\n        )}\n        <form\n          ref={formRef}\n          class={`form-visibility-${visibility}`}\n          style={{\n            pointerEvents: uiState === 'loading' ? 'none' : 'auto',\n            opacity: uiState === 'loading' ? 0.5 : 1,\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter' && (e.ctrlKey || e.metaKey)) {\n              formRef.current.dispatchEvent(\n                new Event('submit', { cancelable: true }),\n              );\n            }\n          }}\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n            let { status, visibility, sensitive, spoilerText } = entries;\n\n            // Pre-cleanup\n            sensitive = sensitive === 'on'; // checkboxes return \"on\" if checked\n\n            // Validation\n            /* Let the backend validate this\n          if (stringLength(status) > maxCharacters) {\n            alert(`Status is too long! Max characters: ${maxCharacters}`);\n            return;\n          }\n          if (\n            sensitive &&\n            stringLength(status) + stringLength(spoilerText) > maxCharacters\n          ) {\n            alert(\n              `Status and content warning is too long! Max characters: ${maxCharacters}`,\n            );\n            return;\n          }\n          */\n            if (poll) {\n              if (poll.options.length < 2) {\n                alert('Poll must have at least 2 options');\n                return;\n              }\n              if (poll.options.some((option) => option === '')) {\n                alert('Some poll choices are empty');\n                return;\n              }\n            }\n            // TODO: check for URLs and use `charactersReservedPerUrl` to calculate max characters\n\n            if (mediaAttachments.length > 0) {\n              // If there are media attachments, check if they have no descriptions\n              const hasNoDescriptions = mediaAttachments.some(\n                (media) => !media.description?.trim?.(),\n              );\n              if (hasNoDescriptions) {\n                const yes = confirm(\n                  'Some media have no descriptions. Continue?',\n                );\n                if (!yes) return;\n              }\n            }\n\n            // Post-cleanup\n            spoilerText = (sensitive && spoilerText) || undefined;\n            status = status === '' ? undefined : status;\n\n            setUIState('loading');\n            (async () => {\n              try {\n                console.log('MEDIA ATTACHMENTS', mediaAttachments);\n                if (mediaAttachments.length > 0) {\n                  // Upload media attachments first\n                  const mediaPromises = mediaAttachments.map((attachment) => {\n                    const { file, description, id } = attachment;\n                    console.log('UPLOADING', attachment);\n                    if (id) {\n                      // If already uploaded\n                      return attachment;\n                    } else {\n                      const params = removeNullUndefined({\n                        file,\n                        description,\n                      });\n                      return masto.v2.media.create(params).then((res) => {\n                        if (res.id) {\n                          attachment.id = res.id;\n                        }\n                        return res;\n                      });\n                    }\n                  });\n                  const results = await Promise.allSettled(mediaPromises);\n\n                  // If any failed, return\n                  if (\n                    results.some((result) => {\n                      return result.status === 'rejected' || !result.value?.id;\n                    })\n                  ) {\n                    setUIState('error');\n                    // Alert all the reasons\n                    results.forEach((result) => {\n                      if (result.status === 'rejected') {\n                        console.error(result);\n                        alert(result.reason || `Attachment #${i} failed`);\n                      }\n                    });\n                    return;\n                  }\n\n                  console.log({ results, mediaAttachments });\n                }\n\n                /* NOTE:\n                Using snakecase here because masto.js's `isObject` returns false for `params`, ONLY happens when opening in pop-out window. This is maybe due to `window.masto` variable being passed from the parent window. The check that failed is `x.constructor === Object`, so maybe the `Object` in new window is different than parent window's?\n                Code: https://github.com/neet/masto.js/blob/dd0d649067b6a2b6e60fbb0a96597c373a255b00/src/serializers/is-object.ts#L2\n\n                // TODO: Note above is no longer true in Masto.js v6. Revisit this.\n              */\n                let params = {\n                  status,\n                  // spoilerText,\n                  spoiler_text: spoilerText,\n                  language,\n                  sensitive,\n                  poll,\n                  // mediaIds: mediaAttachments.map((attachment) => attachment.id),\n                  media_ids: mediaAttachments.map(\n                    (attachment) => attachment.id,\n                  ),\n                };\n                if (editStatus && supports('@mastodon/edit-media-attributes')) {\n                  params.media_attributes = mediaAttachments.map(\n                    (attachment) => {\n                      return {\n                        id: attachment.id,\n                        description: attachment.description,\n                        // focus\n                        // thumbnail\n                      };\n                    },\n                  );\n                } else if (!editStatus) {\n                  params.visibility = visibility;\n                  // params.inReplyToId = replyToStatus?.id || undefined;\n                  params.in_reply_to_id = replyToStatus?.id || undefined;\n                }\n                params = removeNullUndefined(params);\n                console.log('POST', params);\n\n                let newStatus;\n                if (editStatus) {\n                  newStatus = await masto.v1.statuses\n                    .$select(editStatus.id)\n                    .update(params);\n                  saveStatus(newStatus, instance, {\n                    skipThreading: true,\n                  });\n                } else {\n                  try {\n                    newStatus = await masto.v1.statuses.create(params, {\n                      idempotencyKey: UID.current,\n                    });\n                  } catch (_) {\n                    // If idempotency key fails, try again without it\n                    newStatus = await masto.v1.statuses.create(params);\n                  }\n                }\n                setUIState('default');\n\n                // Close\n                onClose({\n                  // type: post, reply, edit\n                  type: editStatus ? 'edit' : replyToStatus ? 'reply' : 'post',\n                  newStatus,\n                  instance,\n                });\n              } catch (e) {\n                console.error(e);\n                alert(e?.reason || e);\n                setUIState('error');\n              }\n            })();\n          }}\n        >\n          <div class=\"toolbar stretch\">\n            <input\n              ref={spoilerTextRef}\n              type=\"text\"\n              name=\"spoilerText\"\n              placeholder=\"Content warning\"\n              disabled={uiState === 'loading'}\n              class=\"spoiler-text-field\"\n              lang={language}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              style={{\n                opacity: sensitive ? 1 : 0,\n                pointerEvents: sensitive ? 'auto' : 'none',\n              }}\n              onInput={() => {\n                updateCharCount();\n              }}\n            />\n            <label\n              class={`toolbar-button ${sensitive ? 'highlight' : ''}`}\n              title=\"Content warning or sensitive media\"\n            >\n              <input\n                name=\"sensitive\"\n                type=\"checkbox\"\n                checked={sensitive}\n                disabled={uiState === 'loading'}\n                onChange={(e) => {\n                  const sensitive = e.target.checked;\n                  setSensitive(sensitive);\n                  if (sensitive) {\n                    spoilerTextRef.current?.focus();\n                  } else {\n                    textareaRef.current?.focus();\n                  }\n                }}\n              />\n              <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n            </label>{' '}\n            <label\n              class={`toolbar-button ${\n                visibility !== 'public' && !sensitive ? 'show-field' : ''\n              } ${visibility !== 'public' ? 'highlight' : ''}`}\n              title={`Visibility: ${visibility}`}\n            >\n              <Icon icon={visibilityIconsMap[visibility]} alt={visibility} />\n              <select\n                name=\"visibility\"\n                value={visibility}\n                onChange={(e) => {\n                  setVisibility(e.target.value);\n                }}\n                disabled={uiState === 'loading' || !!editStatus}\n              >\n                <option value=\"public\">\n                  Public <Icon icon=\"earth\" />\n                </option>\n                <option value=\"unlisted\">Unlisted</option>\n                <option value=\"private\">Followers only</option>\n                <option value=\"direct\">Private mention</option>\n              </select>\n            </label>{' '}\n          </div>\n          <Textarea\n            ref={textareaRef}\n            placeholder={\n              replyToStatus\n                ? 'Post your reply'\n                : editStatus\n                ? 'Edit your post'\n                : 'What are you doing?'\n            }\n            required={mediaAttachments?.length === 0}\n            disabled={uiState === 'loading'}\n            lang={language}\n            onInput={() => {\n              updateCharCount();\n            }}\n            maxCharacters={maxCharacters}\n            performSearch={(params) => {\n              const { type, q, limit } = params;\n              if (type === 'accounts') {\n                return masto.v1.accounts.search.list({\n                  q,\n                  limit,\n                  resolve: false,\n                });\n              }\n              return masto.v2.search.fetch(params);\n            }}\n          />\n          {mediaAttachments?.length > 0 && (\n            <div class=\"media-attachments\">\n              {mediaAttachments.map((attachment, i) => {\n                const { id, file } = attachment;\n                const fileID = file?.size + file?.type + file?.name;\n                return (\n                  <MediaAttachment\n                    key={id || fileID || i}\n                    attachment={attachment}\n                    disabled={uiState === 'loading'}\n                    lang={language}\n                    onDescriptionChange={(value) => {\n                      setMediaAttachments((attachments) => {\n                        const newAttachments = [...attachments];\n                        newAttachments[i].description = value;\n                        return newAttachments;\n                      });\n                    }}\n                    onRemove={() => {\n                      setMediaAttachments((attachments) => {\n                        return attachments.filter((_, j) => j !== i);\n                      });\n                    }}\n                  />\n                );\n              })}\n              <label class=\"media-sensitive\">\n                <input\n                  name=\"sensitive\"\n                  type=\"checkbox\"\n                  checked={sensitive}\n                  disabled={uiState === 'loading'}\n                  onChange={(e) => {\n                    const sensitive = e.target.checked;\n                    setSensitive(sensitive);\n                  }}\n                />{' '}\n                <span>Mark media as sensitive</span>{' '}\n                <Icon icon={`eye-${sensitive ? 'close' : 'open'}`} />\n              </label>\n            </div>\n          )}\n          {!!poll && (\n            <Poll\n              lang={language}\n              maxOptions={maxOptions}\n              maxExpiration={maxExpiration}\n              minExpiration={minExpiration}\n              maxCharactersPerOption={maxCharactersPerOption}\n              poll={poll}\n              disabled={uiState === 'loading'}\n              onInput={(poll) => {\n                if (poll) {\n                  const newPoll = { ...poll };\n                  setPoll(newPoll);\n                } else {\n                  setPoll(null);\n                }\n              }}\n            />\n          )}\n          <div\n            class=\"toolbar wrap\"\n            style={{\n              justifyContent: 'flex-end',\n            }}\n          >\n            <span>\n              <label class=\"toolbar-button\">\n                <input\n                  type=\"file\"\n                  accept={supportedMimeTypes.join(',')}\n                  multiple={mediaAttachments.length < maxMediaAttachments - 1}\n                  disabled={\n                    uiState === 'loading' ||\n                    mediaAttachments.length >= maxMediaAttachments ||\n                    !!poll\n                  }\n                  onChange={(e) => {\n                    const files = e.target.files;\n                    if (!files) return;\n\n                    const mediaFiles = Array.from(files).map((file) => ({\n                      file,\n                      type: file.type,\n                      size: file.size,\n                      url: URL.createObjectURL(file),\n                      id: null, // indicate uploaded state\n                      description: null,\n                    }));\n                    console.log('MEDIA ATTACHMENTS', files, mediaFiles);\n\n                    // Validate max media attachments\n                    if (\n                      mediaAttachments.length + mediaFiles.length >\n                      maxMediaAttachments\n                    ) {\n                      alert(\n                        `You can only attach up to ${maxMediaAttachments} files.`,\n                      );\n                    } else {\n                      setMediaAttachments((attachments) => {\n                        return attachments.concat(mediaFiles);\n                      });\n                    }\n                    // Reset\n                    e.target.value = '';\n                  }}\n                />\n                <Icon icon=\"attachment\" />\n              </label>{' '}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={\n                  uiState === 'loading' || !!poll || !!mediaAttachments.length\n                }\n                onClick={() => {\n                  setPoll({\n                    options: ['', ''],\n                    expiresIn: 24 * 60 * 60, // 1 day\n                    multiple: false,\n                  });\n                }}\n              >\n                <Icon icon=\"poll\" alt=\"Add poll\" />\n              </button>{' '}\n              <button\n                type=\"button\"\n                class=\"toolbar-button\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  setShowEmoji2Picker(true);\n                }}\n              >\n                <Icon icon=\"emoji2\" />\n              </button>\n            </span>\n            <div class=\"spacer\" />\n            {uiState === 'loading' ? (\n              <Loader abrupt />\n            ) : (\n              <CharCountMeter\n                maxCharacters={maxCharacters}\n                hidden={uiState === 'loading'}\n              />\n            )}\n            <label\n              class={`toolbar-button ${\n                language !== prevLanguage.current ? 'highlight' : ''\n              }`}\n            >\n              <span class=\"icon-text\">\n                {supportedLanguagesMap[language]?.native}\n              </span>\n              <select\n                name=\"language\"\n                value={language}\n                onChange={(e) => {\n                  const { value } = e.target;\n                  setLanguage(value || DEFAULT_LANG);\n                  store.session.set('currentLanguage', value || DEFAULT_LANG);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                {topSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n                <hr />\n                {restSupportedLanguages.map(([code, common, native]) => (\n                  <option value={code} key={code}>\n                    {common} ({native})\n                  </option>\n                ))}\n              </select>\n            </label>{' '}\n            <button\n              type=\"submit\"\n              class=\"large\"\n              disabled={uiState === 'loading'}\n            >\n              {replyToStatus ? 'Reply' : editStatus ? 'Update' : 'Post'}\n            </button>\n          </div>\n        </form>\n      </div>\n      {showEmoji2Picker && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowEmoji2Picker(false);\n            }\n          }}\n        >\n          <CustomEmojisModal\n            masto={masto}\n            instance={instance}\n            onClose={() => {\n              setShowEmoji2Picker(false);\n            }}\n            onSelect={(emoji) => {\n              const emojiWithSpace = ` ${emoji} `;\n              const textarea = textareaRef.current;\n              if (!textarea) return;\n              const { selectionStart, selectionEnd } = textarea;\n              const text = textarea.value;\n              const newText =\n                text.slice(0, selectionStart) +\n                emojiWithSpace +\n                text.slice(selectionEnd);\n              textarea.value = newText;\n              textarea.selectionStart = textarea.selectionEnd =\n                selectionEnd + emojiWithSpace.length;\n              textarea.focus();\n              textarea.dispatchEvent(new Event('input'));\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction autoResizeTextarea(textarea) {\n  if (!textarea) return;\n  const { value, offsetHeight, scrollHeight, clientHeight } = textarea;\n  if (offsetHeight < window.innerHeight) {\n    // NOTE: This check is needed because the offsetHeight return 50000 (really large number) on first render\n    // No idea why it does that, will re-investigate in far future\n    const offset = offsetHeight - clientHeight;\n    textarea.style.height = value ? scrollHeight + offset + 'px' : null;\n  }\n}\n\nconst Textarea = forwardRef((props, ref) => {\n  const { masto } = api();\n  const [text, setText] = useState(ref.current?.value || '');\n  const { maxCharacters, performSearch = () => {}, ...textareaProps } = props;\n  const snapStates = useSnapshot(states);\n  // const charCount = snapStates.composerCharacterCount;\n\n  const customEmojis = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        console.log({ emojis });\n        customEmojis.current = emojis;\n      } catch (e) {\n        // silent fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  const textExpanderRef = useRef();\n  const textExpanderTextRef = useRef('');\n  useEffect(() => {\n    let handleChange, handleValue, handleCommited;\n    if (textExpanderRef.current) {\n      handleChange = (e) => {\n        // console.log('text-expander-change', e);\n        const { key, provide, text } = e.detail;\n        textExpanderTextRef.current = text;\n\n        if (text === '') {\n          provide(\n            Promise.resolve({\n              matched: false,\n            }),\n          );\n          return;\n        }\n\n        if (key === ':') {\n          // const emojis = customEmojis.current.filter((emoji) =>\n          //   emoji.shortcode.startsWith(text),\n          // );\n          const emojis = filterShortcodes(customEmojis.current, text);\n          let html = '';\n          emojis.forEach((emoji) => {\n            const { shortcode, url } = emoji;\n            html += `\n                <li role=\"option\" data-value=\"${encodeHTML(shortcode)}\">\n                <img src=\"${encodeHTML(\n                  url,\n                )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" /> \n                :${encodeHTML(shortcode)}:\n              </li>`;\n          });\n          // console.log({ emojis, html });\n          menu.innerHTML = html;\n          provide(\n            Promise.resolve({\n              matched: emojis.length > 0,\n              fragment: menu,\n            }),\n          );\n          return;\n        }\n\n        const type = {\n          '@': 'accounts',\n          '#': 'hashtags',\n        }[key];\n        provide(\n          new Promise((resolve) => {\n            const searchResults = performSearch({\n              type,\n              q: text,\n              limit: 5,\n            });\n            searchResults.then((value) => {\n              if (text !== textExpanderTextRef.current) {\n                return;\n              }\n              console.log({ value, type, v: value[type] });\n              const results = value[type] || value;\n              console.log('RESULTS', value, results);\n              let html = '';\n              results.forEach((result) => {\n                const {\n                  name,\n                  avatarStatic,\n                  displayName,\n                  username,\n                  acct,\n                  emojis,\n                  history,\n                } = result;\n                const displayNameWithEmoji = emojifyText(displayName, emojis);\n                // const item = menuItem.cloneNode();\n                if (acct) {\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(acct)}\">\n                      <span class=\"avatar\">\n                        <img src=\"${encodeHTML(\n                          avatarStatic,\n                        )}\" width=\"16\" height=\"16\" alt=\"\" loading=\"lazy\" />\n                      </span>\n                      <span>\n                        <b>${displayNameWithEmoji || username}</b>\n                        <br>@${encodeHTML(acct)}\n                      </span>\n                    </li>\n                  `;\n                } else {\n                  const total = history?.reduce?.(\n                    (acc, cur) => acc + +cur.uses,\n                    0,\n                  );\n                  html += `\n                    <li role=\"option\" data-value=\"${encodeHTML(name)}\">\n                      <span class=\"grow\">#<b>${encodeHTML(name)}</b></span>\n                      ${\n                        total\n                          ? `<span class=\"count\">${shortenNumber(total)}</span>`\n                          : ''\n                      }\n                    </li>\n                  `;\n                }\n                menu.innerHTML = html;\n              });\n              console.log('MENU', results, menu);\n              resolve({\n                matched: results.length > 0,\n                fragment: menu,\n              });\n            });\n          }),\n        );\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-change',\n        handleChange,\n      );\n\n      handleValue = (e) => {\n        const { key, item } = e.detail;\n        if (key === ':') {\n          e.detail.value = `:${item.dataset.value}:`;\n        } else {\n          e.detail.value = `${key}${item.dataset.value}`;\n        }\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-value',\n        handleValue,\n      );\n\n      handleCommited = (e) => {\n        const { input } = e.detail;\n        setText(input.value);\n      };\n\n      textExpanderRef.current.addEventListener(\n        'text-expander-committed',\n        handleCommited,\n      );\n    }\n\n    return () => {\n      if (textExpanderRef.current) {\n        textExpanderRef.current.removeEventListener(\n          'text-expander-change',\n          handleChange,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-value',\n          handleValue,\n        );\n        textExpanderRef.current.removeEventListener(\n          'text-expander-committed',\n          handleCommited,\n        );\n      }\n    };\n  }, []);\n\n  return (\n    <text-expander ref={textExpanderRef} keys=\"@ # :\">\n      <textarea\n        autoCapitalize=\"sentences\"\n        autoComplete=\"on\"\n        autoCorrect=\"on\"\n        spellCheck=\"true\"\n        dir=\"auto\"\n        rows=\"6\"\n        cols=\"50\"\n        {...textareaProps}\n        ref={ref}\n        name=\"status\"\n        value={text}\n        onKeyDown={(e) => {\n          // Get line before cursor position after pressing 'Enter'\n          const { key, target } = e;\n          if (key === 'Enter') {\n            try {\n              const { value, selectionStart } = target;\n              const textBeforeCursor = value.slice(0, selectionStart);\n              const lastLine = textBeforeCursor.split('\\n').slice(-1)[0];\n              if (lastLine) {\n                // If line starts with \"- \" or \"12. \"\n                if (/^\\s*(-|\\d+\\.)\\s/.test(lastLine)) {\n                  // insert \"- \" at cursor position\n                  const [_, preSpaces, bullet, postSpaces, anything] =\n                    lastLine.match(/^(\\s*)(-|\\d+\\.)(\\s+)(.+)?/) || [];\n                  if (anything) {\n                    e.preventDefault();\n                    const [number] = bullet.match(/\\d+/) || [];\n                    const newBullet = number ? `${+number + 1}.` : '-';\n                    const text = `\\n${preSpaces}${newBullet}${postSpaces}`;\n                    target.setRangeText(text, selectionStart, selectionStart);\n                    const pos = selectionStart + text.length;\n                    target.setSelectionRange(pos, pos);\n                  } else {\n                    // trim the line before the cursor, then insert new line\n                    const pos = selectionStart - lastLine.length;\n                    target.setRangeText('', pos, selectionStart);\n                  }\n                  autoResizeTextarea(target);\n                }\n              }\n            } catch (e) {\n              // silent fail\n              console.error(e);\n            }\n          }\n        }}\n        onInput={(e) => {\n          const { target } = e;\n          setText(target.value);\n          autoResizeTextarea(target);\n          props.onInput?.(e);\n        }}\n        style={{\n          width: '100%',\n          height: '4em',\n          // '--text-weight': (1 + charCount / 140).toFixed(1) || 1,\n        }}\n      />\n    </text-expander>\n  );\n});\n\nfunction CharCountMeter({ maxCharacters = 500, hidden }) {\n  const snapStates = useSnapshot(states);\n  const charCount = snapStates.composerCharacterCount;\n  const leftChars = maxCharacters - charCount;\n  if (hidden) {\n    return <meter class=\"donut\" hidden />;\n  }\n  return (\n    <meter\n      class={`donut ${\n        leftChars <= -10\n          ? 'explode'\n          : leftChars <= 0\n          ? 'danger'\n          : leftChars <= 20\n          ? 'warning'\n          : ''\n      }`}\n      value={charCount}\n      max={maxCharacters}\n      data-left={leftChars}\n      title={`${leftChars}/${maxCharacters}`}\n      style={{\n        '--percentage': (charCount / maxCharacters) * 100,\n      }}\n    />\n  );\n}\n\nfunction MediaAttachment({\n  attachment,\n  disabled,\n  lang,\n  onDescriptionChange = () => {},\n  onRemove = () => {},\n}) {\n  const supportsEdit = supports('@mastodon/edit-media-attributes');\n  const { type, id, file } = attachment;\n  const url = useMemo(\n    () => (file ? URL.createObjectURL(file) : attachment.url),\n    [file, attachment.url],\n  );\n  console.log({ attachment });\n  const [description, setDescription] = useState(attachment.description);\n  const suffixType = type.split('/')[0];\n  const debouncedOnDescriptionChange = useDebouncedCallback(\n    onDescriptionChange,\n    250,\n  );\n\n  const [showModal, setShowModal] = useState(false);\n  const textareaRef = useRef(null);\n  useEffect(() => {\n    let timer;\n    if (showModal && textareaRef.current) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [showModal]);\n\n  const descTextarea = (\n    <>\n      {!!id && !supportsEdit ? (\n        <div class=\"media-desc\">\n          <span class=\"tag\">Uploaded</span>\n          <p title={description}>\n            {attachment.description || <i>No description</i>}\n          </p>\n        </div>\n      ) : (\n        <textarea\n          ref={textareaRef}\n          value={description || ''}\n          lang={lang}\n          placeholder={\n            {\n              image: 'Image description',\n              video: 'Video description',\n              audio: 'Audio description',\n            }[suffixType]\n          }\n          autoCapitalize=\"sentences\"\n          autoComplete=\"on\"\n          autoCorrect=\"on\"\n          spellCheck=\"true\"\n          dir=\"auto\"\n          disabled={disabled}\n          maxlength=\"1500\" // Not unicode-aware :(\n          // TODO: Un-hard-code this maxlength, ref: https://github.com/mastodon/mastodon/blob/b59fb28e90bc21d6fd1a6bafd13cfbd81ab5be54/app/models/media_attachment.rb#L39\n          onInput={(e) => {\n            const { value } = e.target;\n            setDescription(value);\n            debouncedOnDescriptionChange(value);\n          }}\n        ></textarea>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <div class=\"media-attachment\">\n        <div\n          class=\"media-preview\"\n          tabIndex=\"0\"\n          onClick={() => {\n            setShowModal(true);\n          }}\n        >\n          {suffixType === 'image' ? (\n            <img src={url} alt=\"\" />\n          ) : suffixType === 'video' || suffixType === 'gifv' ? (\n            <video src={url} playsinline muted />\n          ) : suffixType === 'audio' ? (\n            <audio src={url} controls />\n          ) : null}\n        </div>\n        {descTextarea}\n        <div class=\"media-aside\">\n          <button\n            type=\"button\"\n            class=\"plain close-button\"\n            disabled={disabled}\n            onClick={onRemove}\n          >\n            <Icon icon=\"x\" />\n          </button>\n        </div>\n      </div>\n      {showModal && (\n        <Modal\n          class=\"light\"\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowModal(false);\n            }\n          }}\n        >\n          <div id=\"media-sheet\" class=\"sheet sheet-max\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => {\n                setShowModal(false);\n              }}\n            >\n              <Icon icon=\"x\" />\n            </button>\n            <header>\n              <h2>\n                {\n                  {\n                    image: 'Edit image description',\n                    video: 'Edit video description',\n                    audio: 'Edit audio description',\n                  }[suffixType]\n                }\n              </h2>\n            </header>\n            <main tabIndex=\"-1\">\n              <div class=\"media-preview\">\n                {suffixType === 'image' ? (\n                  <img src={url} alt=\"\" />\n                ) : suffixType === 'video' || suffixType === 'gifv' ? (\n                  <video src={url} playsinline controls />\n                ) : suffixType === 'audio' ? (\n                  <audio src={url} controls />\n                ) : null}\n              </div>\n              <div class=\"media-form\">\n                {descTextarea}\n                <footer>\n                  <button\n                    type=\"button\"\n                    class=\"light block\"\n                    onClick={() => {\n                      setShowModal(false);\n                    }}\n                  >\n                    Done\n                  </button>\n                </footer>\n              </div>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction Poll({\n  lang,\n  poll,\n  disabled,\n  onInput = () => {},\n  maxOptions,\n  maxExpiration,\n  minExpiration,\n  maxCharactersPerOption,\n}) {\n  const { options, expiresIn, multiple } = poll;\n\n  return (\n    <div class={`poll ${multiple ? 'multiple' : ''}`}>\n      <div class=\"poll-choices\">\n        {options.map((option, i) => (\n          <div class=\"poll-choice\" key={i}>\n            <input\n              required\n              type=\"text\"\n              value={option}\n              disabled={disabled}\n              maxlength={maxCharactersPerOption}\n              placeholder={`Choice ${i + 1}`}\n              lang={lang}\n              spellCheck=\"true\"\n              dir=\"auto\"\n              onInput={(e) => {\n                const { value } = e.target;\n                options[i] = value;\n                onInput(poll);\n              }}\n            />\n            <button\n              type=\"button\"\n              class=\"plain2 poll-button\"\n              disabled={disabled || options.length <= 1}\n              onClick={() => {\n                options.splice(i, 1);\n                onInput(poll);\n              }}\n            >\n              <Icon icon=\"x\" size=\"s\" />\n            </button>\n          </div>\n        ))}\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain2 poll-button\"\n          disabled={disabled || options.length >= maxOptions}\n          onClick={() => {\n            options.push('');\n            onInput(poll);\n          }}\n        >\n          +\n        </button>{' '}\n        <label class=\"multiple-choices\">\n          <input\n            type=\"checkbox\"\n            checked={multiple}\n            disabled={disabled}\n            onChange={(e) => {\n              const { checked } = e.target;\n              poll.multiple = checked;\n              onInput(poll);\n            }}\n          />{' '}\n          Multiple choices\n        </label>\n        <label class=\"expires-in\">\n          Duration{' '}\n          <select\n            value={expiresIn}\n            disabled={disabled}\n            onChange={(e) => {\n              const { value } = e.target;\n              poll.expiresIn = value;\n              onInput(poll);\n            }}\n          >\n            {Object.entries(expiryOptions)\n              .filter(([label, value]) => {\n                return value >= minExpiration && value <= maxExpiration;\n              })\n              .map(([label, value]) => (\n                <option value={value} key={value}>\n                  {label}\n                </option>\n              ))}\n          </select>\n        </label>\n      </div>\n      <div class=\"poll-toolbar\">\n        <button\n          type=\"button\"\n          class=\"plain remove-poll-button\"\n          disabled={disabled}\n          onClick={() => {\n            onInput(null);\n          }}\n        >\n          Remove poll\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction filterShortcodes(emojis, searchTerm) {\n  searchTerm = searchTerm.toLowerCase();\n\n  // Return an array of shortcodes that start with or contain the search term, sorted by relevance and limited to the first 5\n  return emojis\n    .sort((a, b) => {\n      let aLower = a.shortcode.toLowerCase();\n      let bLower = b.shortcode.toLowerCase();\n\n      let aStartsWith = aLower.startsWith(searchTerm);\n      let bStartsWith = bLower.startsWith(searchTerm);\n      let aContains = aLower.includes(searchTerm);\n      let bContains = bLower.includes(searchTerm);\n      let bothStartWith = aStartsWith && bStartsWith;\n      let bothContain = aContains && bContains;\n\n      return bothStartWith\n        ? a.length - b.length\n        : aStartsWith\n        ? -1\n        : bStartsWith\n        ? 1\n        : bothContain\n        ? a.length - b.length\n        : aContains\n        ? -1\n        : bContains\n        ? 1\n        : 0;\n    })\n    .slice(0, 5);\n}\n\nfunction encodeHTML(str) {\n  return str.replace(/[&<>\"']/g, function (char) {\n    return '&#' + char.charCodeAt(0) + ';';\n  });\n}\n\nfunction removeNullUndefined(obj) {\n  for (let key in obj) {\n    if (obj[key] === null || obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\nfunction CustomEmojisModal({\n  masto,\n  instance,\n  onClose = () => {},\n  onSelect = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const customEmojisList = useRef([]);\n  const [customEmojis, setCustomEmojis] = useState({});\n  const recentlyUsedCustomEmojis = useMemo(\n    () => store.account.get('recentlyUsedCustomEmojis') || [],\n  );\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const emojis = await masto.v1.customEmojis.list();\n        // Group emojis by category\n        const emojisCat = {\n          '--recent--': recentlyUsedCustomEmojis.filter((emoji) =>\n            emojis.find((e) => e.shortcode === emoji.shortcode),\n          ),\n        };\n        const othersCat = [];\n        emojis.forEach((emoji) => {\n          if (!emoji.visibleInPicker) return;\n          customEmojisList.current?.push?.(emoji);\n          if (!emoji.category) {\n            othersCat.push(emoji);\n            return;\n          }\n          if (!emojisCat[emoji.category]) {\n            emojisCat[emoji.category] = [];\n          }\n          emojisCat[emoji.category].push(emoji);\n        });\n        if (othersCat.length) {\n          emojisCat['--others--'] = othersCat;\n        }\n        setCustomEmojis(emojisCat);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"custom-emojis-sheet\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" />\n        </button>\n      )}\n      <header>\n        <b>Custom emojis</b>{' '}\n        {uiState === 'loading' ? (\n          <Loader />\n        ) : (\n          <small class=\"insignificant\"> • {instance}</small>\n        )}\n      </header>\n      <main>\n        <div class=\"custom-emojis-list\">\n          {uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>Error loading custom emojis</p>\n            </div>\n          )}\n          {uiState === 'default' &&\n            Object.entries(customEmojis).map(\n              ([category, emojis]) =>\n                !!emojis?.length && (\n                  <>\n                    <div class=\"section-header\">\n                      {{\n                        '--recent--': 'Recently used',\n                        '--others--': 'Others',\n                      }[category] || category}\n                    </div>\n                    <section>\n                      {emojis.map((emoji) => (\n                        <button\n                          key={emoji}\n                          type=\"button\"\n                          class=\"plain4\"\n                          onClick={() => {\n                            onClose();\n                            requestAnimationFrame(() => {\n                              onSelect(`:${emoji.shortcode}:`);\n                            });\n                            let recentlyUsedCustomEmojis =\n                              store.account.get('recentlyUsedCustomEmojis') ||\n                              [];\n                            const recentlyUsedEmojiIndex =\n                              recentlyUsedCustomEmojis.findIndex(\n                                (e) => e.shortcode === emoji.shortcode,\n                              );\n                            if (recentlyUsedEmojiIndex !== -1) {\n                              // Move emoji to index 0\n                              recentlyUsedCustomEmojis.splice(\n                                recentlyUsedEmojiIndex,\n                                1,\n                              );\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                            } else {\n                              recentlyUsedCustomEmojis.unshift(emoji);\n                              // Remove unavailable ones\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.filter((e) =>\n                                  customEmojisList.current?.find?.(\n                                    (emoji) => emoji.shortcode === e.shortcode,\n                                  ),\n                                );\n                              // Limit to 10\n                              recentlyUsedCustomEmojis =\n                                recentlyUsedCustomEmojis.slice(0, 10);\n                            }\n\n                            // Store back\n                            store.account.set(\n                              'recentlyUsedCustomEmojis',\n                              recentlyUsedCustomEmojis,\n                            );\n                          }}\n                          title={`:${emoji.shortcode}:`}\n                        >\n                          <picture>\n                            {!!emoji.staticUrl && (\n                              <source\n                                srcset={emoji.staticUrl}\n                                media=\"(prefers-reduced-motion: reduce)\"\n                              />\n                            )}\n                            <img\n                              class=\"shortcode-emoji\"\n                              src={emoji.url || emoji.staticUrl}\n                              alt={emoji.shortcode}\n                              width=\"16\"\n                              height=\"16\"\n                              loading=\"lazy\"\n                              decoding=\"async\"\n                            />\n                          </picture>\n                        </button>\n                      ))}\n                    </section>\n                  </>\n                ),\n            )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default Compose;\n","import { useLayoutEffect } from 'preact/hooks';\nimport { matchPath } from 'react-router-dom';\nimport { subscribeKey } from 'valtio/utils';\n\nimport states from './states';\n\nconst { VITE_CLIENT_NAME: CLIENT_NAME } = import.meta.env;\n\nexport default function useTitle(title, path) {\n  function setTitle() {\n    const { currentLocation } = states;\n    const hasPaths = Array.isArray(path);\n    let paths = hasPaths ? path : [];\n    // Workaround for matchPath not working for optional path segments\n    // https://github.com/remix-run/react-router/discussions/9862\n    if (!hasPaths && /:?\\w+\\?/.test(path)) {\n      paths.push(path.replace(/(:\\w+)\\?/g, '$1'));\n      paths.push(path.replace(/\\/?:\\w+\\?/g, ''));\n    }\n    let matched = false;\n    if (paths.length) {\n      matched = paths.some((p) => matchPath(p, currentLocation));\n    } else if (path) {\n      matched = matchPath(path, currentLocation);\n    }\n    console.debug('setTitle', { title, path, currentLocation, paths, matched });\n    if (matched) {\n      document.title = title ? `${title} / ${CLIENT_NAME}` : CLIENT_NAME;\n    }\n  }\n\n  useLayoutEffect(() => {\n    const unsub = subscribeKey(states, 'currentLocation', setTitle);\n    setTitle();\n    return unsub;\n  }, [title, path]);\n}\n"],"file":"assets/useTitle-0d9083c3.js"}