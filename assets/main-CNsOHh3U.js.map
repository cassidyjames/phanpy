{"version":3,"file":"main-CNsOHh3U.js","sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../src/utils/oauth-pkce.js","../../src/utils/auth.js","../../src/pages/accounts.jsx","../../src/assets/logo.svg","../../src/components/lang-selector.jsx","../../src/utils/push-notifications.js","../../src/pages/settings.jsx","../../src/utils/focus-deck.js","../../src/utils/useLocationChange.js","../../src/utils/lists.js","../../src/components/list-exclusive-badge.jsx","../../src/components/list-add-edit.jsx","../../src/components/account-info.jsx","../../src/components/account-sheet.jsx","../../src/components/drafts.jsx","../../src/components/embed-modal.jsx","../../src/components/generic-accounts.jsx","../../src/components/media-alt-modal.jsx","../../node_modules/chroma-js/src/utils/limit.js","../../node_modules/chroma-js/src/utils/type.js","../../node_modules/chroma-js/src/utils/unpack.js","../../node_modules/chroma-js/src/utils/index.js","../../node_modules/chroma-js/src/utils/multiply-matrices.js","../../node_modules/chroma-js/src/io/lab/lab-constants.js","../../node_modules/chroma-js/src/io/lab/lab2rgb.js","../../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","../../node_modules/chroma-js/src/io/lab/rgb2lab.js","../../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","../../node_modules/chroma-js/src/io/lch/lch2lab.js","../../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","../../node_modules/chroma-js/src/io/lch/lab2lch.js","../../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","../../src/components/media-modal.jsx","../../src/components/report-modal.jsx","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/modals.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../src/components/shortcuts.jsx","../../src/utils/timeline-utils.js","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/annual-report.jsx","../../src/pages/bookmarks.jsx","../../src/assets/features/catch-up.png","../../src/pages/catchup.jsx","../../src/pages/favourites.jsx","../../src/pages/filters.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/utils/group-notifications.js","../../src/pages/mentions.jsx","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/pages/search.jsx","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/data/instances.json?url","../../src/pages/login.jsx","../../src/pages/scheduled-posts.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 20_000; // 20 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  const { t } = useLingui();\n\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  const visibleTimeout = useRef();\n  usePageVisibility((visible) => {\n    clearTimeout(visibleTimeout.current);\n    if (visible) {\n      setVisible(true);\n    } else {\n      visibleTimeout.current = setTimeout(() => {\n        setVisible(false);\n      }, POLL_INTERVAL);\n    }\n  });\n\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications\n        .list({\n          limit: 1,\n          sinceId: states.notificationsLast.id,\n        })\n        .values();\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let streamTimeout;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          streamTimeout = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(streamTimeout);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys(\n    'shift+alt+k',\n    (e) => {\n      // Need modifers check due to useKey: true\n      if (!e.shiftKey || !e.altKey) return;\n\n      const currentCloakMode = states.settings.cloakMode;\n      states.settings.cloakMode = !currentCloakMode;\n      showToast({\n        text: currentCloakMode ? t`Cloak mode disabled` : t`Cloak mode enabled`,\n      });\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey,\n    },\n  );\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport openOSK from '../utils/open-osk';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport showCompose from '../utils/show-compose';\nimport states from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport SubMenu2 from './submenu2';\n\n// Function to fetch the latest posts from the current user\n// Use pmem to memoize fetch results for 1 minute\nconst fetchLatestPostsMemoized = pmem(\n  async (masto, currentAccountID) => {\n    const statusesIterator = masto.v1.accounts\n      .$select(currentAccountID)\n      .statuses.list({\n        limit: 3,\n        exclude_replies: true,\n        exclude_reblogs: true,\n      })\n      .values();\n    const { value } = await statusesIterator.next();\n    return value || [];\n  },\n  { maxAge: 60000 },\n); // 1 minute cache\n\nexport default function ComposeButton() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto } = api();\n\n  // Context menu state\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const buttonRef = useRef(null);\n  const menuRef = useRef(null);\n\n  const columnMode = snapStates.settings.shortcutsViewMode === 'multi-column';\n\n  function handleButton(e) {\n    // useKey will even listen to Shift\n    // e.g. press Shift (without c) will trigger this 😱\n    if (e.key && e.key.toLowerCase() !== 'c') return;\n\n    if (snapStates.composerState.minimized) {\n      states.composerState.minimized = false;\n      openOSK();\n      return;\n    }\n\n    const composeDataElements = document.querySelectorAll('data.compose-data');\n    // If there's a lot of them, ignore\n    const opts =\n      !columnMode && composeDataElements.length === 1\n        ? JSON.parse(composeDataElements[0].value)\n        : undefined;\n\n    if (e.shiftKey) {\n      const newWin = openCompose(opts);\n\n      if (!newWin) {\n        states.showCompose = opts || true;\n      }\n    } else {\n      openOSK();\n      states.showCompose = opts || true;\n    }\n  }\n\n  useHotkeys('c, shift+c', handleButton, {\n    useKey: true,\n    ignoreEventWhen: (e) => {\n      const hasModal = !!document.querySelector('#modal-container > *');\n      return hasModal || e.metaKey || e.ctrlKey || e.altKey;\n    },\n  });\n\n  // Setup longpress handler to open context menu\n  const bindLongPress = useLongPress(\n    () => {\n      setMenuOpen(true);\n    },\n    {\n      threshold: 600,\n    },\n  );\n\n  const fetchLatestPosts = useCallback(async () => {\n    try {\n      setLoadingPosts(true);\n      const currentAccountID = getCurrentAccountID();\n      if (!currentAccountID) {\n        return;\n      }\n      const posts = await fetchLatestPostsMemoized(masto, currentAccountID);\n      setLatestPosts(posts);\n    } catch (error) {\n    } finally {\n      setLoadingPosts(false);\n    }\n  }, [masto]);\n\n  // Function to handle opening the compose window to reply to a post\n  const handleReplyToPost = useCallback((post) => {\n    showCompose({\n      replyToStatus: post,\n    });\n    setMenuOpen(false);\n  }, []);\n\n  useEffect(() => {\n    if (menuOpen) {\n      fetchLatestPosts();\n    }\n  }, [fetchLatestPosts, menuOpen]);\n\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        id=\"compose-button\"\n        onClick={handleButton}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          setMenuOpen(true);\n        }}\n        {...bindLongPress()}\n        class={`${snapStates.composerState.minimized ? 'min' : ''} ${\n          snapStates.composerState.publishing ? 'loading' : ''\n        } ${snapStates.composerState.publishingError ? 'error' : ''}`}\n      >\n        <Icon icon=\"quill\" size=\"xl\" alt={t`Compose`} />\n      </button>\n      <ControlledMenu\n        ref={menuRef}\n        state={menuOpen ? 'open' : undefined}\n        anchorRef={buttonRef}\n        onClose={() => setMenuOpen(false)}\n        direction=\"top\"\n        gap={8} // Add gap between menu and button\n        unmountOnClose\n        portal={{\n          target: document.body,\n        }}\n        boundingBoxPadding={safeBoundingBoxPadding()}\n        containerProps={{\n          style: {\n            zIndex: 19,\n          },\n          onClick: () => {\n            menuRef.current?.closeMenu?.();\n          },\n        }}\n        submenuOpenDelay={600}\n      >\n        <MenuLink to=\"/sp\">\n          <Icon icon=\"schedule\" />{' '}\n          <span>\n            <Trans>Scheduled Posts</Trans>\n          </span>\n        </MenuLink>\n        <MenuDivider />\n        <SubMenu2\n          align=\"end\"\n          direction=\"top\"\n          shift={-8}\n          disabled={loadingPosts || latestPosts.length === 0}\n          label={\n            <>\n              <Icon icon=\"comment\" />{' '}\n              <span className=\"menu-grow\">\n                <Trans>Add to thread</Trans>\n              </span>\n              {loadingPosts ? '…' : <Icon icon=\"chevron-right\" />}\n            </>\n          }\n        >\n          {latestPosts.length > 0 &&\n            latestPosts.map((post) => {\n              const createdDate = new Date(post.createdAt);\n              const isWithinDay =\n                new Date().getTime() - createdDate.getTime() < 86400000;\n\n              return (\n                <MenuItem key={post.id} onClick={() => handleReplyToPost(post)}>\n                  <small>\n                    <div class=\"menu-post-text\">{statusPeek(post)}</div>\n                    <span className=\"more-insignificant\">\n                      {/* Show relative time if within a day */}\n                      {isWithinDay && (\n                        <>\n                          <RelativeTime datetime={createdDate} format=\"micro\" />{' '}\n                          ‒{' '}\n                        </>\n                      )}\n                      <time\n                        className=\"created\"\n                        dateTime={createdDate.toISOString()}\n                        title={createdDate.toLocaleString()}\n                      >\n                        {niceDateTime(post.createdAt)}\n                      </time>\n                    </span>\n                  </small>\n                </MenuItem>\n              );\n            })}\n        </SubMenu2>\n      </ControlledMenu>\n    </>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?',\n    () => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => {\n        const isCatchUpPage = /\\/catchup/i.test(location.hash);\n        return isCatchUpPage || e.metaKey || e.ctrlKey || e.altKey;\n        // const hasModal = !!document.querySelector('#modal-container > *');\n        // return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <h2>\n              <Trans>Keyboard shortcuts</Trans>\n            </h2>\n          </header>\n          <main>\n            <table>\n              <tbody>\n                {[\n                  {\n                    action: t`Keyboard shortcuts help`,\n                    keys: <kbd>?</kbd>,\n                  },\n                  {\n                    action: t`Next post`,\n                    keys: <kbd>j</kbd>,\n                  },\n                  {\n                    action: t`Previous post`,\n                    keys: <kbd>k</kbd>,\n                  },\n                  {\n                    action: t`Skip carousel to next post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>j</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Skip carousel to previous post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Load new posts`,\n                    keys: <kbd>.</kbd>,\n                  },\n                  {\n                    action: t`Open post details`,\n                    keys: (\n                      <Trans>\n                        <kbd>Enter</kbd> or <kbd>o</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: (\n                      <Trans>\n                        Expand content warning or\n                        <br />\n                        toggle expanded/collapsed thread\n                      </Trans>\n                    ),\n                    keys: <kbd>x</kbd>,\n                  },\n                  {\n                    action: t`Close post or dialogs`,\n                    keys: (\n                      <Trans>\n                        <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus column in multi-column mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>1</kbd> to <kbd>9</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus next column in multi-column mode`,\n                    keys: <kbd>]</kbd>,\n                  },\n                  {\n                    action: t`Focus previous column in multi-column mode`,\n                    keys: <kbd>[</kbd>,\n                  },\n                  {\n                    action: t`Compose new post`,\n                    keys: <kbd>c</kbd>,\n                  },\n                  {\n                    action: t`Compose new post (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>c</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Send post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                        <kbd>Enter</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Search`,\n                    keys: <kbd>/</kbd>,\n                  },\n                  {\n                    action: t`Reply`,\n                    keys: <kbd>r</kbd>,\n                  },\n                  {\n                    action: t`Reply (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>r</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Like (favourite)`,\n                    keys: (\n                      <Trans>\n                        <kbd>l</kbd> or <kbd>f</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Boost`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>b</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Bookmark`,\n                    keys: <kbd>d</kbd>,\n                  },\n                  {\n                    action: t`Toggle Cloak mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                ].map(({ action, className, keys }) => (\n                  <tr key={action}>\n                    <th class={className}>{action}</th>\n                    <td>{keys}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","function dec2hex(dec) {\n  return ('0' + dec.toString(16)).slice(-2);\n}\nexport function verifier() {\n  var array = new Uint32Array(56 / 2);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nfunction sha256(plain) {\n  // returns promise ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n}\nfunction base64urlencode(a) {\n  let str = '';\n  const bytes = new Uint8Array(a);\n  const len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    str += String.fromCharCode(bytes[i]);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generateCodeChallenge(v) {\n  const hashed = await sha256(v);\n  return base64urlencode(hashed);\n}\n\n// If /.well-known/oauth-authorization-server exists and code_challenge_methods_supported includes \"S256\", means support PKCE\nexport async function supportsPKCE({ instanceURL }) {\n  if (!instanceURL) return false;\n  try {\n    const res = await fetch(\n      `https://${instanceURL}/.well-known/oauth-authorization-server`,\n    );\n    if (!res.ok || res.status !== 200) return false;\n    const json = await res.json();\n    if (json.code_challenge_methods_supported?.includes('S256')) return true;\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\n// For debugging\nwindow.__generateCodeChallenge = generateCodeChallenge;\n","import { generateCodeChallenge, verifier } from './oauth-pkce';\n\nconst {\n  DEV,\n  PHANPY_CLIENT_NAME: CLIENT_NAME,\n  PHANPY_WEBSITE: WEBSITE,\n} = import.meta.env;\n\nconst SCOPES = 'read write follow push';\n\n/*\n  PHANPY_WEBSITE is set to the default official site.\n  It's used in pre-built releases, so there's no way to change it dynamically\n  without rebuilding.\n  Therefore, we can't use it as redirect_uri.\n  We only use PHANPY_WEBSITE if it's \"same\" as current location URL.\n  \n  Very basic check based on location.hostname for now\n*/\nconst sameSite = WEBSITE\n  ? WEBSITE.toLowerCase().includes(location.hostname)\n  : false;\nconst currentLocation = location.origin + location.pathname;\nconst REDIRECT_URI = DEV || !sameSite ? currentLocation : WEBSITE;\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: REDIRECT_URI,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getPKCEAuthorizationURL({\n  instanceURL,\n  client_id,\n  forceLogin = false,\n}) {\n  const codeVerifier = verifier();\n  const codeChallenge = await generateCodeChallenge(codeVerifier);\n  const params = new URLSearchParams({\n    client_id,\n    code_challenge_method: 'S256',\n    code_challenge: codeChallenge,\n    redirect_uri: REDIRECT_URI,\n    response_type: 'code',\n    scope: SCOPES,\n  });\n  if (forceLogin) params.append('force_login', true);\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${params.toString()}`;\n  return [authorizationURL, codeVerifier];\n}\n\nexport async function getAuthorizationURL({\n  instanceURL,\n  client_id,\n  forceLogin = false,\n}) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: REDIRECT_URI,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  if (forceLogin) authorizationParams.append('force_login', true);\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n  code_verifier,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    redirect_uri: REDIRECT_URI,\n    grant_type: 'authorization_code',\n    code,\n    // scope: SCOPES, // Not needed\n    // client_secret,\n    // code_verifier,\n  });\n  if (client_secret) {\n    params.append('client_secret', client_secret);\n  }\n  if (code_verifier) {\n    params.append('code_verifier', code_verifier);\n  }\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n\nexport async function revokeAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  token,\n}) {\n  try {\n    const params = new URLSearchParams({\n      client_id,\n      client_secret,\n      token,\n    });\n\n    const revokeResponse = await fetch(`https://${instanceURL}/oauth/revoke`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: params.toString(),\n      keepalive: true,\n    });\n\n    return revokeResponse.ok;\n  } catch (error) {\n    console.erro('Error revoking token', error);\n    return false;\n  }\n}\n","import './accounts.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useReducer } from 'preact/hooks';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport { revokeAccessToken } from '../utils/auth';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getAccounts,\n  getCurrentAccountID,\n  saveAccounts,\n  setCurrentAccountID,\n} from '../utils/store-utils';\n\nconst isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n\nfunction Accounts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  // Accounts\n  const accounts = getAccounts();\n  const currentAccount = getCurrentAccountID();\n  const moreThanOneAccount = accounts.length > 1;\n\n  const [_, reload] = useReducer((x) => x + 1, 0);\n  const [accountsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"accounts-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Accounts</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul class=\"accounts-list\" ref={accountsListParent}>\n            {accounts.map((account, i) => {\n              const isCurrent = account.info.id === currentAccount;\n              const isDefault = i === 0; // first account is always default\n              return (\n                <li key={account.info.id}>\n                  <div>\n                    {moreThanOneAccount && (\n                      <span class={`current ${isCurrent ? 'is-current' : ''}`}>\n                        <Icon icon=\"check-circle\" alt={t`Current`} />\n                      </span>\n                    )}\n                    <Avatar\n                      url={account.info.avatarStatic}\n                      size=\"xxl\"\n                      onDblClick={async () => {\n                        if (isCurrent) {\n                          try {\n                            const info = await masto.v1.accounts\n                              .$select(account.info.id)\n                              .fetch();\n                            console.log('fetched account info', info);\n                            account.info = info;\n                            saveAccounts(accounts);\n                            reload();\n                          } catch (e) {}\n                        }\n                      }}\n                    />\n                    <NameText\n                      account={\n                        moreThanOneAccount\n                          ? {\n                              ...account.info,\n                              acct: /@/.test(account.info.acct)\n                                ? account.info.acct\n                                : `${account.info.acct}@${account.instanceURL}`,\n                            }\n                          : account.info\n                      }\n                      showAcct\n                      onClick={() => {\n                        if (isCurrent) {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        } else {\n                          setCurrentAccountID(account.info.id);\n                          location.reload();\n                        }\n                      }}\n                    />\n                  </div>\n                  <div class=\"actions\">\n                    {isDefault && moreThanOneAccount && (\n                      <>\n                        <span class=\"tag\">\n                          <Trans>Default</Trans>\n                        </span>{' '}\n                      </>\n                    )}\n                    <Menu2\n                      align=\"end\"\n                      menuButton={\n                        <button type=\"button\" class=\"plain more-button\">\n                          <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                        </button>\n                      }\n                    >\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isCurrent}\n                            onClick={() => {\n                              setCurrentAccountID(account.info.id);\n                              location.reload();\n                            }}\n                          >\n                            <Icon icon=\"transfer\" />{' '}\n                            <Trans>Switch to this account</Trans>\n                          </MenuItem>\n                          {!isStandalone && !isCurrent && (\n                            <MenuLink\n                              href={`./?account=${account.info.id}`}\n                              target=\"_blank\"\n                            >\n                              <Icon icon=\"external\" />\n                              <span>\n                                <Trans>Switch in new tab/window</Trans>\n                              </span>\n                            </MenuLink>\n                          )}\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuItem\n                        onClick={() => {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        }}\n                      >\n                        <Icon icon=\"user\" />\n                        <span>\n                          <Trans>View profile…</Trans>\n                        </span>\n                      </MenuItem>\n                      <MenuDivider />\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isDefault}\n                            onClick={() => {\n                              // Move account to the top of the list\n                              accounts.splice(i, 1);\n                              accounts.unshift(account);\n                              saveAccounts(accounts);\n                              reload();\n                            }}\n                          >\n                            <Icon icon=\"check-circle\" />\n                            <span>\n                              <Trans>Set as default</Trans>\n                            </span>\n                          </MenuItem>\n                          <MenuItem\n                            disabled={i <= 1}\n                            onClick={() => {\n                              // Move account one position up\n                              accounts.splice(i, 1);\n                              accounts.splice(i - 1, 0, account);\n                              saveAccounts(accounts);\n                              reload();\n                            }}\n                          >\n                            <Icon icon=\"arrow-up\" />\n                            <span>\n                              <Trans>Move up</Trans>\n                            </span>\n                          </MenuItem>\n                          <MenuItem\n                            disabled={i === 0 || i === accounts.length - 1}\n                            onClick={() => {\n                              // Move account one position down\n                              accounts.splice(i, 1);\n                              accounts.splice(i + 1, 0, account);\n                              saveAccounts(accounts);\n                              reload();\n                            }}\n                          >\n                            <Icon icon=\"arrow-down\" />\n                            <span>\n                              <Trans>Move down</Trans>\n                            </span>\n                          </MenuItem>\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuConfirm\n                        subMenu\n                        confirmLabel={\n                          <>\n                            <Icon icon=\"exit\" />\n                            <span>\n                              <Trans>\n                                Log out{' '}\n                                <span class=\"bidi-isolate\">\n                                  @{account.info.acct}\n                                </span>\n                                ?\n                              </Trans>\n                            </span>\n                          </>\n                        }\n                        disabled={!isCurrent}\n                        menuItemClassName=\"danger\"\n                        onClick={async () => {\n                          // const yes = confirm('Log out?');\n                          // if (!yes) return;\n                          await revokeAccessToken({\n                            instanceURL: account.instanceURL,\n                            client_id: account.clientId,\n                            client_secret: account.clientSecret,\n                            token: account.accessToken,\n                          });\n                          accounts.splice(i, 1);\n                          saveAccounts(accounts);\n                          // location.reload();\n                          location.href = location.pathname || '/';\n                        }}\n                      >\n                        <Icon icon=\"exit\" />\n                        <span>\n                          <Trans>Log out…</Trans>\n                        </span>\n                      </MenuConfirm>\n                      {!!account?.createdAt && (\n                        <div class=\"footer\">\n                          <Icon icon=\"account-add\" />\n                          <span>\n                            <Trans>\n                              Connected on {niceDateTime(account.createdAt)} (\n                              <RelativeTime datetime={account.createdAt} />)\n                            </Trans>\n                          </span>\n                        </div>\n                      )}\n                    </Menu2>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n          <p>\n            <Link to=\"/login\" class=\"button plain2\" onClick={onClose}>\n              <Icon icon=\"plus\" />{' '}\n              <span>\n                <Trans>Add an existing account</Trans>\n              </span>\n            </Link>\n          </p>\n          {moreThanOneAccount && (\n            <p>\n              <small>\n                <Trans>\n                  Note: <i>Default</i> account will always be used for first\n                  load. Switched accounts will persist during the session.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Accounts;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","import { useLingui } from '@lingui/react';\nimport { useMemo } from 'preact/hooks';\n\nimport { CATALOGS, DEFAULT_LANG, DEV_LOCALES, LOCALES } from '../locales';\nimport { activateLang } from '../utils/lang';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport store from '../utils/store';\n\nconst regionMaps = {\n  'zh-CN': 'zh-Hans',\n  'zh-TW': 'zh-Hant',\n  'pt-BR': 'pt-BR',\n};\n\nexport default function LangSelector() {\n  const { i18n } = useLingui();\n\n  // Sorted on render, so the order won't suddenly change based on current locale\n  const populatedLocales = useMemo(() => {\n    return LOCALES.map((lang) => {\n      // Don't need regions for now, it makes text too noisy\n      // Wait till there's too many languages and there are regional clashes\n      const regionlessCode = regionMaps[lang] || lang.replace(/-[a-z]+$/i, '');\n\n      const native = localeCode2Text({\n        code: regionlessCode,\n        locale: lang,\n        fallback: CATALOGS.find((c) => c.code === lang)?.nativeName,\n      });\n\n      // Not used when rendering because it'll change based on current locale\n      // Only used for sorting on render\n      const _common = localeCode2Text({\n        code: regionlessCode,\n        locale: i18n.locale,\n        fallback: CATALOGS.find((c) => c.code === lang)?.name,\n      });\n\n      return {\n        code: lang,\n        regionlessCode,\n        _common,\n        native,\n      };\n    }).sort((a, b) => {\n      // Sort by common name\n      const order = a._common.localeCompare(b._common, i18n.locale);\n      if (order !== 0) return order;\n      // Sort by code (fallback)\n      if (a.code < b.code) return -1;\n      if (a.code > b.code) return 1;\n      return 0;\n    });\n  }, []);\n\n  return (\n    <label class=\"lang-selector\">\n      🌐{' '}\n      <select\n        class=\"small\"\n        value={i18n.locale || DEFAULT_LANG}\n        onChange={(e) => {\n          store.local.set('lang', e.target.value);\n          activateLang(e.target.value);\n        }}\n      >\n        {populatedLocales.map(({ code, regionlessCode, native }) => {\n          // Common name changes based on current locale\n          const common = localeCode2Text({\n            code: regionlessCode,\n            locale: i18n.locale,\n            fallback: CATALOGS.find((c) => c.code === code)?.name,\n          });\n          const showCommon = !!common && common !== native;\n          return (\n            <option\n              value={code}\n              data-regionless-code={regionlessCode}\n              key={code}\n            >\n              {showCommon ? `${native} - ${common}` : native}\n            </option>\n          );\n        })}\n        {(import.meta.env.DEV || import.meta.env.PHANPY_SHOW_DEV_LOCALES) && (\n          <optgroup label=\"🚧 Development (<50% translated)\">\n            {DEV_LOCALES.map((code) => {\n              if (code === 'pseudo-LOCALE') {\n                return (\n                  <>\n                    <hr />\n                    <option value={code} key={code}>\n                      Pseudolocalization (test)\n                    </option>\n                  </>\n                );\n              }\n              const nativeName = CATALOGS.find(\n                (c) => c.code === code,\n              )?.nativeName;\n              const completion = CATALOGS.find(\n                (c) => c.code === code,\n              )?.completion;\n              return (\n                <option value={code} key={code}>\n                  {nativeName || code} &lrm;[{completion}%]\n                </option>\n              );\n            })}\n          </optgroup>\n        )}\n      </select>\n    </label>\n  );\n}\n","// Utils for push notifications\nimport { api } from './api';\nimport { getVapidKey } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const vapidKey = getVapidKey();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const vapidKey = getVapidKey();\n    if (vapidKey) {\n      const { applicationServerKey } = subscription.options;\n      const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n      const applicationServerKeyStr = new Uint8Array(\n        applicationServerKey,\n      ).toString();\n      const sameKey = vapidKeyStr === applicationServerKeyStr;\n      if (sameKey) {\n        // Subscription didn't change\n      } else {\n        // Subscription changed\n        console.error('🔔 Subscription changed', {\n          vapidKeyStr,\n          applicationServerKeyStr,\n          sameKey,\n        });\n        // Unsubscribe since backend doesn't have a subscription\n        await subscription.unsubscribe();\n        throw new Error('Subscription key and vapid key changed');\n      }\n    } else {\n      console.warn('No vapidKey found');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const vapidKey = getVapidKey();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './settings.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport logo from '../assets/logo.svg';\n\nimport Icon from '../components/icon';\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport RelativeTime from '../components/relative-time';\nimport languages from '../data/translang-languages';\nimport { api, getPreferences, setPreferences } from '../utils/api';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport prettyBytes from '../utils/pretty-bytes';\nimport {\n  initSubscription,\n  isPushSupported,\n  removeSubscription,\n  updateSubscription,\n} from '../utils/push-notifications';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getAPIVersions, getVapidKey } from '../utils/store-utils';\n\nconst DEFAULT_TEXT_SIZE = 16;\nconst TEXT_SIZES = [14, 15, 16, 17, 18, 19, 20];\nconst {\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_TRANSLANG_INSTANCES: TRANSLANG_INSTANCES,\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nconst targetLanguages = Object.entries(languages.tl).map(([code, name]) => ({\n  code,\n  name,\n}));\n\nconst TRANSLATION_API_NAME = 'TransLang API';\n\nfunction Settings({ onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const currentTheme = store.local.get('theme') || 'auto';\n  const themeFormRef = useRef();\n  const targetLanguage =\n    snapStates.settings.contentTranslationTargetLanguage || null;\n  const systemTargetLanguage = getTranslateTargetLanguage();\n  const systemTargetLanguageText = localeCode2Text(systemTargetLanguage);\n  const currentTextSize = store.local.get('textSize') || DEFAULT_TEXT_SIZE;\n\n  const [prefs, setPrefs] = useState(getPreferences());\n  const { masto, authenticated, instance } = api();\n  // Get preferences every time Settings is opened\n  // NOTE: Disabled for now because I don't expect this to change often. Also for some reason, the /api/v1/preferences endpoint is cached for a while and return old prefs if refresh immediately after changing them.\n  // useEffect(() => {\n  //   const { masto } = api();\n  //   (async () => {\n  //     try {\n  //       const preferences = await masto.v1.preferences.fetch();\n  //       setPrefs(preferences);\n  //       store.account.set('preferences', preferences);\n  //     } catch (e) {\n  //       // Silently fail\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  const [expTabBarV2, setExpTabBarV2] = useState(\n    store.local.get('experiments-tabBarV2') ?? false,\n  );\n\n  return (\n    <div\n      id=\"settings-container\"\n      class=\"sheet\"\n      tabIndex=\"-1\"\n      style={{\n        '--current-text-size': `${currentTextSize}px`,\n      }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Settings</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul>\n            <li>\n              <div>\n                <label>\n                  <Trans>Appearance</Trans>\n                </label>\n              </div>\n              <div>\n                <form\n                  ref={themeFormRef}\n                  onInput={(e) => {\n                    console.log(e);\n                    e.preventDefault();\n                    const formData = new FormData(themeFormRef.current);\n                    const theme = formData.get('theme');\n                    const html = document.documentElement;\n\n                    if (theme === 'auto') {\n                      html.classList.remove('is-light', 'is-dark');\n\n                      // Disable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = '';\n                      }\n                      // Enable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = 'theme-color';\n                      });\n                    } else {\n                      html.classList.toggle('is-light', theme === 'light');\n                      html.classList.toggle('is-dark', theme === 'dark');\n\n                      // Enable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = 'theme-color';\n                        $manualMeta.content =\n                          theme === 'light'\n                            ? $manualMeta.dataset.themeLightColor\n                            : $manualMeta.dataset.themeDarkColor;\n                      }\n                      // Disable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = '';\n                      });\n                    }\n                    document\n                      .querySelector('meta[name=\"color-scheme\"]')\n                      .setAttribute(\n                        'content',\n                        theme === 'auto' ? 'dark light' : theme,\n                      );\n\n                    if (theme === 'auto') {\n                      store.local.del('theme');\n                    } else {\n                      store.local.set('theme', theme);\n                    }\n                  }}\n                >\n                  <div class=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"light\"\n                        defaultChecked={currentTheme === 'light'}\n                      />\n                      <span>\n                        <Trans>Light</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"dark\"\n                        defaultChecked={currentTheme === 'dark'}\n                      />\n                      <span>\n                        <Trans>Dark</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"auto\"\n                        defaultChecked={\n                          currentTheme !== 'light' && currentTheme !== 'dark'\n                        }\n                      />\n                      <span>\n                        <Trans>Auto</Trans>\n                      </span>\n                    </label>\n                  </div>\n                </form>\n              </div>\n            </li>\n            <li>\n              <div>\n                <label>\n                  <Trans>Text size</Trans>\n                </label>\n              </div>\n              <div class=\"range-group\">\n                <span style={{ fontSize: TEXT_SIZES[0] }}>\n                  <Trans comment=\"Preview of one character, in smallest size\">\n                    A\n                  </Trans>\n                </span>{' '}\n                <input\n                  type=\"range\"\n                  min={TEXT_SIZES[0]}\n                  max={TEXT_SIZES[TEXT_SIZES.length - 1]}\n                  step=\"1\"\n                  value={currentTextSize}\n                  list=\"sizes\"\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value, 10);\n                    const html = document.documentElement;\n                    // set CSS variable\n                    html.style.setProperty('--text-size', `${value}px`);\n                    // save to local storage\n                    if (value === DEFAULT_TEXT_SIZE) {\n                      store.local.del('textSize');\n                    } else {\n                      store.local.set('textSize', e.target.value);\n                    }\n                  }}\n                />{' '}\n                <span style={{ fontSize: TEXT_SIZES[TEXT_SIZES.length - 1] }}>\n                  <Trans comment=\"Preview of one character, in largest size\">\n                    A\n                  </Trans>\n                </span>\n                <datalist id=\"sizes\">\n                  {TEXT_SIZES.map((size) => (\n                    <option value={size} />\n                  ))}\n                </datalist>\n              </div>\n            </li>\n            <li>\n              <span>\n                <label>\n                  <Trans>Display language</Trans>\n                </label>\n                <br />\n                <small>\n                  <a\n                    href=\"https://crowdin.com/project/phanpy\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <Trans>Volunteer translations</Trans>\n                  </a>\n                </small>\n              </span>\n              <LangSelector />\n            </li>\n          </ul>\n        </section>\n        {authenticated && (\n          <>\n            <h3>\n              <Trans>Posting</Trans>\n            </h3>\n            <section>\n              <ul>\n                <li>\n                  <div>\n                    <label for=\"posting-privacy-field\">\n                      <Trans>Default visibility</Trans>{' '}\n                      <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />\n                    </label>\n                  </div>\n                  <div>\n                    <select\n                      id=\"posting-privacy-field\"\n                      value={prefs['posting:default:visibility'] || 'public'}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        (async () => {\n                          try {\n                            await masto.v1.accounts.updateCredentials({\n                              source: {\n                                privacy: value,\n                              },\n                            });\n                            setPrefs({\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                            setPreferences({\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                          } catch (e) {\n                            alert(t`Failed to update posting privacy`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <option value=\"public\">\n                        <Trans>Public</Trans>\n                      </option>\n                      <option value=\"unlisted\">\n                        <Trans>Unlisted</Trans>\n                      </option>\n                      <option value=\"private\">\n                        <Trans>Followers only</Trans>\n                      </option>\n                    </select>\n                  </div>\n                </li>\n              </ul>\n            </section>\n            <p class=\"section-postnote\">\n              <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />{' '}\n              <small>\n                <Trans>\n                  Synced to your instance server's settings.{' '}\n                  <a\n                    href={`https://${instance}/`}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    Go to your instance ({instance}) for more settings.\n                  </a>\n                </Trans>\n              </small>\n            </p>\n          </>\n        )}\n        <h3>\n          <Trans>Experiments</Trans>\n        </h3>\n        <section>\n          <ul>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.autoRefresh}\n                  onChange={(e) => {\n                    states.settings.autoRefresh = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Auto refresh timeline posts</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.boostsCarousel}\n                  onChange={(e) => {\n                    states.settings.boostsCarousel = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Boosts carousel</Trans>\n              </label>\n            </li>\n            {!!TRANSLANG_INSTANCES && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.contentTranslation}\n                    onChange={(e) => {\n                      const { checked } = e.target;\n                      states.settings.contentTranslation = checked;\n                      if (!checked) {\n                        states.settings.contentTranslationTargetLanguage = null;\n                      }\n                    }}\n                  />{' '}\n                  <Trans>Post translation</Trans>\n                </label>\n                <div\n                  class={`sub-section ${\n                    !snapStates.settings.contentTranslation\n                      ? 'more-insignificant'\n                      : ''\n                  }`}\n                >\n                  <div>\n                    <label>\n                      <Trans>Translate to </Trans>{' '}\n                      <select\n                        value={targetLanguage || ''}\n                        disabled={!snapStates.settings.contentTranslation}\n                        style={{ width: '10em' }}\n                        onChange={(e) => {\n                          states.settings.contentTranslationTargetLanguage =\n                            e.target.value || null;\n                        }}\n                      >\n                        <option value=\"\">\n                          <Trans>\n                            System language ({systemTargetLanguageText})\n                          </Trans>\n                        </option>\n                        <option disabled>──────────</option>\n                        {targetLanguages.map((lang) => {\n                          const common = localeCode2Text({\n                            code: lang.code,\n                            fallback: lang.name,\n                          });\n                          const native = localeCode2Text({\n                            code: lang.code,\n                            locale: lang.code,\n                          });\n                          const showCommon = native && common !== native;\n                          return (\n                            <option value={lang.code}>\n                              {showCommon ? `${native} - ${common}` : common}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </label>\n                  </div>\n                  <hr />\n                  <div class=\"checkbox-fieldset\">\n                    <Plural\n                      value={\n                        snapStates.settings.contentTranslationHideLanguages\n                          .length\n                      }\n                      _0={`Hide \"Translate\" button for:`}\n                      other={`Hide \"Translate\" button for (#):`}\n                    />\n                    <div class=\"checkbox-fields\">\n                      {targetLanguages.map((lang) => {\n                        const common = localeCode2Text({\n                          code: lang.code,\n                          fallback: lang.name,\n                        });\n                        const native = localeCode2Text({\n                          code: lang.code,\n                          locale: lang.code,\n                        });\n                        const showCommon = native && common !== native;\n                        return (\n                          <label>\n                            <input\n                              type=\"checkbox\"\n                              checked={snapStates.settings.contentTranslationHideLanguages.includes(\n                                lang.code,\n                              )}\n                              onChange={(e) => {\n                                const { checked } = e.target;\n                                if (checked) {\n                                  states.settings.contentTranslationHideLanguages.push(\n                                    lang.code,\n                                  );\n                                } else {\n                                  states.settings.contentTranslationHideLanguages =\n                                    snapStates.settings.contentTranslationHideLanguages.filter(\n                                      (code) => code !== lang.code,\n                                    );\n                                }\n                              }}\n                            />{' '}\n                            {showCommon ? (\n                              <span>\n                                {native}{' '}\n                                <span class=\"insignificant ib\">- {common}</span>\n                              </span>\n                            ) : (\n                              common\n                            )}\n                          </label>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  <p class=\"insignificant\">\n                    <small>\n                      <Trans>\n                        Note: This feature uses external translation services,\n                        powered by{' '}\n                        <a\n                          href=\"https://github.com/cheeaun/translang-api\"\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                        >\n                          {TRANSLATION_API_NAME}\n                        </a>\n                        .\n                      </Trans>\n                    </small>\n                  </p>\n                  <hr />\n                  <div>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={\n                          snapStates.settings.contentTranslationAutoInline\n                        }\n                        disabled={!snapStates.settings.contentTranslation}\n                        onChange={(e) => {\n                          states.settings.contentTranslationAutoInline =\n                            e.target.checked;\n                        }}\n                      />{' '}\n                      <Trans>Auto inline translation</Trans>\n                    </label>\n                    <p class=\"insignificant\">\n                      <small>\n                        <Trans>\n                          Automatically show translation for posts in timeline.\n                          Only works for <b>short</b> posts without content\n                          warning, media and poll.\n                        </Trans>\n                      </small>\n                    </p>\n                  </div>\n                </div>\n              </li>\n            )}\n            {!!GIPHY_API_KEY && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.composerGIFPicker}\n                    onChange={(e) => {\n                      states.settings.composerGIFPicker = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>GIF Picker for composer</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external GIF search service,\n                      powered by{' '}\n                      <a\n                        href=\"https://developers.giphy.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        GIPHY\n                      </a>\n                      . G-rated (suitable for viewing by all ages), tracking\n                      parameters are stripped, referrer information is omitted\n                      from requests, but search queries and IP address\n                      information will still reach their servers.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {!!IMG_ALT_API_URL && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.mediaAltGenerator}\n                    onChange={(e) => {\n                      states.settings.mediaAltGenerator = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Image description generator</Trans>{' '}\n                  <Icon icon=\"sparkles2\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Only for new images while composing new posts.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external AI service, powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/img-alt-api\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        img-alt-api\n                      </a>\n                      . May not work well. Only for images and in English.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && getAPIVersions()?.mastodon >= 2 && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.groupedNotificationsAlpha}\n                    onChange={(e) => {\n                      states.settings.groupedNotificationsAlpha =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Server-side grouped notifications</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Alpha-stage feature. Potentially improved grouping window\n                      but basic grouping logic.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      snapStates.settings.shortcutSettingsCloudImportExport\n                    }\n                    onChange={(e) => {\n                      states.settings.shortcutSettingsCloudImportExport =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>\"Cloud\" import/export for shortcuts settings</Trans>{' '}\n                  <Icon icon=\"cloud\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      ⚠️⚠️⚠️ Very experimental.\n                      <br />\n                      Stored in your own profile’s notes. Profile (private)\n                      notes are mainly used for other profiles, and hidden for\n                      own profile.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses currently-logged-in instance\n                      server API.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.cloakMode}\n                  onChange={(e) => {\n                    states.settings.cloakMode = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>\n                  Cloak mode{' '}\n                  <span class=\"insignificant\">\n                    (<samp>Text</samp> → <samp>████</samp>)\n                  </span>\n                </Trans>\n              </label>\n              <div class=\"sub-section insignificant\">\n                <small>\n                  <Trans>\n                    Replace text as blocks, useful when taking screenshots, for\n                    privacy reasons.\n                  </Trans>\n                </small>\n              </div>\n            </li>\n            {authenticated && (\n              <li>\n                <button\n                  type=\"button\"\n                  class=\"light\"\n                  onClick={() => {\n                    states.showDrafts = true;\n                    states.showSettings = false;\n                  }}\n                >\n                  <Trans>Unsent drafts</Trans>\n                </button>\n              </li>\n            )}\n          </ul>\n        </section>\n        {authenticated && <PushNotificationsSection onClose={onClose} />}\n        <h3>\n          <Trans>About</Trans>\n        </h3>\n        <section>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 8,\n              lineHeight: 1.25,\n              alignItems: 'center',\n              marginTop: 8,\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"64\"\n              height=\"64\"\n              style={{\n                aspectRatio: '1/1',\n                verticalAlign: 'middle',\n                background: '#b7cdf9',\n                borderRadius: 12,\n              }}\n            />\n            <div>\n              <b>Phanpy</b>{' '}\n              <a\n                href=\"https://hachyderm.io/@phanpy\"\n                // target=\"_blank\"\n                rel=\"noopener\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.showAccount = 'phanpy@hachyderm.io';\n                }}\n              >\n                @phanpy\n              </a>\n              <br />\n              <Trans>\n                <a\n                  href=\"https://github.com/cheeaun/phanpy\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Built\n                </a>{' '}\n                by{' '}\n                <a\n                  href=\"https://mastodon.social/@cheeaun\"\n                  // target=\"_blank\"\n                  rel=\"noopener\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = 'cheeaun@mastodon.social';\n                  }}\n                >\n                  @cheeaun\n                </a>\n              </Trans>\n            </div>\n          </div>\n          <p>\n            <a\n              href=\"https://github.com/sponsors/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Sponsor</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Donate</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://patreon.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              Patreon\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://github.com/cheeaun/phanpy/blob/main/CHANGELOG.md\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>What's new</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\" rel=\"noopener\">\n              <Trans>Privacy Policy</Trans>\n            </a>\n          </p>\n          {__BUILD_TIME__ && (\n            <p>\n              {WEBSITE && (\n                <>\n                  <Trans>\n                    <span class=\"insignificant\">Site:</span>{' '}\n                    {WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')}\n                  </Trans>\n                  <br />\n                </>\n              )}\n              <Trans>\n                <span class=\"insignificant\">Version:</span>{' '}\n                <input\n                  type=\"text\"\n                  class=\"version-string\"\n                  readOnly\n                  size=\"18\" // Manually calculated here\n                  value={`${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n                    __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n                  }`}\n                  onClick={(e) => {\n                    e.target.select();\n                    // Copy to clipboard\n                    try {\n                      navigator.clipboard.writeText(e.target.value);\n                      showToast(t`Version string copied`);\n                    } catch (e) {\n                      console.warn(e);\n                      showToast(t`Unable to copy version string`);\n                    }\n                  }}\n                />{' '}\n                {!__FAKE_COMMIT_HASH__ && (\n                  <span class=\"ib insignificant\">\n                    (\n                    <a\n                      href={`https://github.com/cheeaun/phanpy/commit/${__COMMIT_HASH__}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <RelativeTime datetime={new Date(__BUILD_TIME__)} />\n                    </a>\n                    )\n                  </span>\n                )}\n              </Trans>\n            </p>\n          )}\n        </section>\n        {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n          <details class=\"debug-info\">\n            <summary></summary>\n            <p class=\"side\">\n              <Link\n                to=\"/_sandbox\"\n                onClick={onClose}\n                class=\"button plain6 small\"\n              >\n                Sandbox\n              </Link>\n            </p>\n            <p>Debugging</p>\n            <p>\n              <b>Vapid key</b>: {getVapidKey()}\n            </p>\n            {__BENCH_RESULTS?.size > 0 && (\n              <ul>\n                {Array.from(__BENCH_RESULTS.entries()).map(\n                  ([name, duration]) => (\n                    <li>\n                      <b>{name}</b>: {duration}ms\n                    </li>\n                  ),\n                )}\n              </ul>\n            )}\n            <p>Service Worker Cache</p>\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesKeys())}\n            >\n              Show keys count\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesSize())}\n            >\n              Show cache size\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                const key = prompt('Enter cache key');\n                if (!key) return;\n                try {\n                  clearCacheKey(key);\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear cache key\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                try {\n                  clearCaches();\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear all caches\n            </button>\n            <p>Temporary Experiments</p>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={expTabBarV2}\n                onChange={(e) => {\n                  const { checked } = e.target;\n                  document.body.classList.toggle('exp-tab-bar-v2', checked);\n                  setExpTabBarV2(checked);\n                  if (checked) {\n                    store.local.set('experiments-tabBarV2', true);\n                  } else {\n                    store.local.del('experiments-tabBarV2');\n                  }\n                }}\n              />{' '}\n              Tab bar v2\n            </label>\n          </details>\n        )}\n      </main>\n    </div>\n  );\n}\n\nasync function getCachesKeys() {\n  const keys = await caches.keys();\n  const total = {};\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    total[key] = k.length;\n  }\n  return total;\n}\n\nasync function getCachesSize() {\n  const keys = await caches.keys();\n  let total = {};\n  let TOTAL = 0;\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    for (const item of k) {\n      try {\n        const response = await cache.match(item);\n        const blob = await response.blob();\n        total[key] = (total[key] || 0) + blob.size;\n        TOTAL += blob.size;\n      } catch (e) {\n        alert('Failed to get cache size for ' + item);\n        alert(e);\n      }\n    }\n  }\n  return {\n    ...Object.fromEntries(\n      Object.entries(total).map(([k, v]) => [k, prettyBytes(v)]),\n    ),\n    TOTAL: prettyBytes(TOTAL),\n  };\n}\n\nfunction clearCacheKey(key) {\n  return caches.delete(key);\n}\n\nasync function clearCaches() {\n  const keys = await caches.keys();\n  for (const key of keys) {\n    await caches.delete(key);\n  }\n}\n\nfunction PushNotificationsSection({ onClose }) {\n  const { t } = useLingui();\n  if (!isPushSupported()) return null;\n\n  const { instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const pushFormRef = useRef();\n  const [allowNotifications, setAllowNotifications] = useState(false);\n  const [needRelogin, setNeedRelogin] = useState(false);\n  const previousPolicyRef = useRef();\n  useEffect(() => {\n    (async () => {\n      setUIState('loading');\n      try {\n        const { subscription, backendSubscription } = await initSubscription();\n        if (\n          backendSubscription?.policy &&\n          backendSubscription.policy !== 'none'\n        ) {\n          setAllowNotifications(true);\n          const { alerts, policy } = backendSubscription;\n          console.log('backendSubscription', backendSubscription);\n          previousPolicyRef.current = policy;\n          const { elements } = pushFormRef.current;\n          const policyEl = elements.namedItem('policy');\n          if (policyEl) policyEl.value = policy;\n          // alerts is {}, iterate it\n          Object.entries(alerts).forEach(([alert, value]) => {\n            const el = elements.namedItem(alert);\n            if (el?.type === 'checkbox') {\n              el.checked = !!value;\n            }\n          });\n        }\n        setUIState('default');\n      } catch (err) {\n        console.warn(err);\n        if (/outside.*authorized/i.test(err.message)) {\n          setNeedRelogin(true);\n        } else {\n          alert(err?.message || err);\n        }\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const isLoading = uiState === 'loading';\n\n  return (\n    <form\n      ref={pushFormRef}\n      onChange={() => {\n        setTimeout(() => {\n          const values = Object.fromEntries(new FormData(pushFormRef.current));\n          const allowNotifications = !!values['policy-allow'];\n          const params = {\n            data: {\n              policy: values.policy,\n              alerts: {\n                mention: !!values.mention,\n                favourite: !!values.favourite,\n                reblog: !!values.reblog,\n                follow: !!values.follow,\n                follow_request: !!values.followRequest,\n                poll: !!values.poll,\n                update: !!values.update,\n                status: !!values.status,\n              },\n            },\n          };\n\n          let alertsCount = 0;\n          // Remove false values from data.alerts\n          // API defaults to false anyway\n          Object.keys(params.data.alerts).forEach((key) => {\n            if (!params.data.alerts[key]) {\n              delete params.data.alerts[key];\n            } else {\n              alertsCount++;\n            }\n          });\n          const policyChanged =\n            previousPolicyRef.current !== params.data.policy;\n\n          console.log('PN Form', {\n            values,\n            allowNotifications: allowNotifications,\n            params,\n          });\n\n          if (allowNotifications && alertsCount > 0) {\n            if (policyChanged) {\n              console.debug('Policy changed.');\n              removeSubscription()\n                .then(() => {\n                  updateSubscription(params);\n                })\n                .catch((err) => {\n                  console.warn(err);\n                  alert(t`Failed to update subscription. Please try again.`);\n                });\n            } else {\n              updateSubscription(params).catch((err) => {\n                console.warn(err);\n                alert(t`Failed to update subscription. Please try again.`);\n              });\n            }\n          } else {\n            removeSubscription().catch((err) => {\n              console.warn(err);\n              alert(t`Failed to remove subscription. Please try again.`);\n            });\n          }\n        }, 100);\n      }}\n    >\n      <h3>\n        <Trans>Push Notifications (beta)</Trans>\n      </h3>\n      <section>\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"checkbox\"\n                disabled={isLoading || needRelogin}\n                name=\"policy-allow\"\n                checked={allowNotifications}\n                onChange={async (e) => {\n                  const { checked } = e.target;\n                  if (checked) {\n                    // Request permission\n                    const permission = await Notification.requestPermission();\n                    if (permission === 'granted') {\n                      setAllowNotifications(true);\n                    } else {\n                      setAllowNotifications(false);\n                      if (permission === 'denied') {\n                        alert(\n                          t`Push notifications are blocked. Please enable them in your browser settings.`,\n                        );\n                      }\n                    }\n                  } else {\n                    setAllowNotifications(false);\n                  }\n                }}\n              />{' '}\n              <Trans>\n                Allow from{' '}\n                <select\n                  name=\"policy\"\n                  disabled={isLoading || needRelogin || !allowNotifications}\n                >\n                  {[\n                    {\n                      value: 'all',\n                      label: t`anyone`,\n                    },\n                    {\n                      value: 'followed',\n                      label: t`people I follow`,\n                    },\n                    {\n                      value: 'follower',\n                      label: t`followers`,\n                    },\n                  ].map((type) => (\n                    <option value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </Trans>\n            </label>\n            <div\n              class=\"shazam-container no-animation\"\n              style={{\n                width: '100%',\n              }}\n              hidden={!allowNotifications}\n            >\n              <div class=\"shazam-container-inner\">\n                <div class=\"sub-section\">\n                  <ul>\n                    {[\n                      {\n                        value: 'mention',\n                        label: t`Mentions`,\n                      },\n                      {\n                        value: 'favourite',\n                        label: t`Likes`,\n                      },\n                      {\n                        value: 'reblog',\n                        label: t`Boosts`,\n                      },\n                      {\n                        value: 'follow',\n                        label: t`Follows`,\n                      },\n                      {\n                        value: 'followRequest',\n                        label: t`Follow requests`,\n                      },\n                      {\n                        value: 'poll',\n                        label: t`Polls`,\n                      },\n                      {\n                        value: 'update',\n                        label: t`Post edits`,\n                      },\n                      {\n                        value: 'status',\n                        label: t`New posts`,\n                      },\n                    ].map((alert) => (\n                      <li>\n                        <label>\n                          <input type=\"checkbox\" name={alert.value} />{' '}\n                          {alert.label}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {needRelogin && (\n              <div class=\"sub-section\">\n                <p>\n                  <Trans>\n                    Push permission was not granted since your last login.\n                    You'll need to{' '}\n                    <Link to={`/login?instance=${instance}`} onClick={onClose}>\n                      <b>log in</b> again to grant push permission\n                    </Link>\n                    .\n                  </Trans>\n                </p>\n              </div>\n            )}\n          </li>\n        </ul>\n      </section>\n      <p class=\"section-postnote\">\n        <small>\n          <Trans>\n            NOTE: Push notifications only work for <b>one account</b>.\n          </Trans>\n        </small>\n      </p>\n    </form>\n  );\n}\n\nexport default Settings;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus focused column\n      const focusedColumn = columns.querySelector('.deck-container.focus');\n      if (focusedColumn) {\n        focusedColumn.focus();\n      } else {\n        // Focus first column within viewport\n        const firstVisibleColumn = Array.from(\n          columns.querySelectorAll('.deck-container'),\n        ).find((column) => {\n          const columnRect = column.getBoundingClientRect();\n          return columnRect.left >= 0;\n        });\n        if (firstVisibleColumn) {\n          firstVisibleColumn.focus();\n        } else {\n          // Focus first column\n          columns.querySelector('.deck-container')?.focus?.();\n        }\n      }\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\n// Hook that runs a callback when the location changes\n// Won't run on the first render\n\nexport default function useLocationChange(fn) {\n  if (!fn) return;\n  const location = useLocation();\n  const currentLocationRef = useRef(location.pathname);\n  useEffect(() => {\n    // console.log('location', {\n    //   current: currentLocationRef.current,\n    //   next: location.pathname,\n    // });\n    if (\n      currentLocationRef.current &&\n      location.pathname !== currentLocationRef.current\n    ) {\n      fn?.();\n    }\n  }, [location.pathname, fn]);\n}\n","import { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\n\nexport const fetchLists = pmem(\n  async () => {\n    const { masto } = api();\n    const lists = await masto.v1.lists.list();\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n\n    if (lists.length) {\n      setTimeout(() => {\n        // Save to local storage, with saved timestamp\n        store.account.set('lists', {\n          lists,\n          updatedAt: Date.now(),\n        });\n      }, 1);\n    }\n\n    return lists;\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getLists() {\n  try {\n    const { lists, updatedAt } = store.account.get('lists') || {};\n    if (!lists?.length) return await fetchLists();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchLists();\n      return lists;\n    }\n    return lists;\n  } catch (e) {\n    return [];\n  }\n}\n\nexport const fetchList = pmem(\n  (id) => {\n    const { masto } = api();\n    return masto.v1.lists.$select(id).fetch();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getList(id) {\n  const { lists } = store.account.get('lists') || {};\n  console.log({ lists });\n  if (lists?.length) {\n    const theList = lists.find((l) => l.id === id);\n    if (theList) return theList;\n  }\n  try {\n    return fetchList(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getListTitle(id) {\n  const list = await getList(id);\n  return list?.title || '';\n}\n\nexport function addListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    lists.push(list);\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n    store.account.set('lists', {\n      lists,\n      updatedAt: Date.now(),\n    });\n  }\n}\n\nexport function updateListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === list.id);\n    if (index !== -1) {\n      lists[index] = list;\n      lists.sort((a, b) => a.title.localeCompare(b.title));\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n\nexport function deleteListStore(listID) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === listID);\n    if (index !== -1) {\n      lists.splice(index, 1);\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n","import './list-exclusive-badge.css';\n\nimport { useLingui } from '@lingui/react/macro';\n\nimport Icon from './icon';\n\nfunction ListExclusiveBadge({ insignificant }) {\n  const { t } = useLingui();\n  return (\n    <Icon\n      icon=\"filter\"\n      size=\"xs\"\n      class={`list-exclusive-badge ${insignificant ? 'insignificant' : ''}`}\n      title={t`Posts on this list are hidden from Home/Following`}\n    />\n  );\n}\n\nexport default ListExclusiveBadge;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { addListStore, deleteListStore, updateListStore } from '../utils/lists';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport ListExclusiveBadge from './list-exclusive-badge';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive =\n    supports('@mastodon/list-exclusive') ||\n    supports('@gotosocial/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? t`Edit list` : t`New list`}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n\n                setTimeout(() => {\n                  if (editMode) {\n                    updateListStore(listResult);\n                  } else {\n                    addListStore(listResult);\n                  }\n                }, 1);\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit list.`\n                    : t`Unable to create list.`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              <Trans>Name</Trans>{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">\n                <Trans>Show replies to list members</Trans>\n              </option>\n              <option value=\"followed\">\n                <Trans>Show replies to people I follow</Trans>\n              </option>\n              <option value=\"none\">\n                <Trans>Don't show replies</Trans>\n              </option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                <ListExclusiveBadge insignificant />{' '}\n                <Trans>Hide posts on this list from Home/Following</Trans>\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? t`Save` : t`Create`}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this list?`}\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                      setTimeout(() => {\n                        deleteListStore(list.id);\n                      }, 1);\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete list.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import './account-info.css';\n\nimport { msg, plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getLists } from '../utils/lists';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport showCompose from '../utils/show-compose';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getAccounts,\n  getCurrentAccountID,\n  saveAccounts,\n  updateAccount,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport Link from './link';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport SubMenu2 from './submenu2';\nimport TranslationBlock from './translation-block';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  60 * 60 * 24 * 30, // 30 days\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: msg`Forever`,\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n  2592_000: i18nDuration(30, 'day'),\n};\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .values()\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - new Date(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nconst ENDORSEMENTS_LIMIT = 80;\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n  showEndorsements = false,\n}) {\n  const { i18n, t } = useLingui();\n  const { masto, authenticated: currentAuthenticated } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n    hideCollections,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(() => id === getCurrentAccountID(), [id]);\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = getAccounts();\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        saveAccounts(accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = useMemo(() => {\n    if (!url) return null;\n    const hostname = URL.parse(url)?.hostname;\n    if (!hostname) return null;\n    const domain = punycode.toUnicode(hostname);\n    return domain;\n  }, [url]);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts\n        .$select(id)\n        .followers.list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      let familiarFollowers = [];\n      try {\n        familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch({\n          id: [id],\n        });\n      } catch (e) {}\n      familiarFollowersCache.current = familiarFollowers?.[0]?.accounts || [];\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts\n        .$select(id)\n        .following.list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  const onProfileUpdate = useCallback(\n    (newAccount) => {\n      if (newAccount.id === id) {\n        console.log('Updated account info', newAccount);\n        setInfo(newAccount);\n        states.accounts[`${newAccount.id}@${instance}`] = newAccount;\n      }\n    },\n    [id, instance],\n  );\n\n  const isStringURL = isString && account && /^https?:\\/\\//.test(account);\n\n  const [showEditProfile, setShowEditProfile] = useState(false);\n\n  const [renderEndorsements, setRenderEndorsements] = useState(false);\n\n  return (\n    <>\n      <div\n        tabIndex=\"-1\"\n        class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n        style={{\n          '--header-color-1': headerCornerColors[0],\n          '--header-color-2': headerCornerColors[1],\n          '--header-color-3': headerCornerColors[2],\n          '--header-color-4': headerCornerColors[3],\n        }}\n      >\n        {uiState === 'error' && (\n          <div class=\"ui-state\">\n            <p>\n              <Trans>Unable to load account.</Trans>\n            </p>\n            {isString ? (\n              <p>\n                {isStringURL ? (\n                  <a href={account} target=\"_blank\" rel=\"noopener\">\n                    {account}\n                  </a>\n                ) : (\n                  <code class=\"insignificant\">{account}</code>\n                )}\n              </p>\n            ) : (\n              <p>\n                <a href={url} target=\"_blank\" rel=\"noopener\">\n                  <Trans>Go to account page</Trans> <Icon icon=\"external\" />\n                </a>\n              </p>\n            )}\n          </div>\n        )}\n        {uiState === 'loading' ? (\n          <>\n            <header>\n              <AccountBlock avatarSize=\"xxxl\" skeleton />\n            </header>\n            <main>\n              <div class=\"note\">\n                <p>███████ ████ ████</p>\n                <p>████ ████████ ██████ █████████ ████ ██</p>\n              </div>\n              <div class=\"account-metadata-box\">\n                <div class=\"profile-metadata\">\n                  <div class=\"profile-field\">\n                    <b class=\"more-insignificant\">███</b>\n                    <p>██████</p>\n                  </div>\n                  <div class=\"profile-field\">\n                    <b class=\"more-insignificant\">████</b>\n                    <p>███████████</p>\n                  </div>\n                </div>\n                <div class=\"stats\">\n                  <div>\n                    <span>██</span> <Trans>Followers</Trans>\n                  </div>\n                  <div>\n                    <span>██</span>{' '}\n                    <Trans id=\"following.stats\">Following</Trans>\n                  </div>\n                  <div>\n                    <span>██</span> <Trans>Posts</Trans>\n                  </div>\n                </div>\n              </div>\n              <div class=\"actions\">\n                <span />\n                <span class=\"buttons\">\n                  <button type=\"button\" class=\"plain\" disabled>\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                </span>\n              </div>\n            </main>\n          </>\n        ) : (\n          info && (\n            <>\n              {!!moved && (\n                <div class=\"account-moved\">\n                  <p>\n                    <Trans>\n                      <b>{displayName}</b> has indicated that their new account\n                      is now:\n                    </Trans>\n                  </p>\n                  <AccountBlock\n                    account={moved}\n                    instance={instance}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      states.showAccount = moved;\n                    }}\n                  />\n                </div>\n              )}\n              {!!header && !/missing\\.png$/.test(header) && (\n                <img\n                  src={header}\n                  alt=\"\"\n                  class={`header-banner ${\n                    headerIsAvatar ? 'header-is-avatar' : ''\n                  }`}\n                  onError={(e) => {\n                    if (e.target.crossOrigin) {\n                      if (e.target.src !== headerStatic) {\n                        e.target.src = headerStatic;\n                      } else {\n                        e.target.removeAttribute('crossorigin');\n                        e.target.src = header;\n                      }\n                    } else if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.remove();\n                    }\n                  }}\n                  crossOrigin=\"anonymous\"\n                  onLoad={(e) => {\n                    e.target.classList.add('loaded');\n                    try {\n                      // Get color from four corners of image\n                      const canvas = window.OffscreenCanvas\n                        ? new OffscreenCanvas(1, 1)\n                        : document.createElement('canvas');\n                      const ctx = canvas.getContext('2d', {\n                        willReadFrequently: true,\n                      });\n                      canvas.width = e.target.width;\n                      canvas.height = e.target.height;\n                      ctx.imageSmoothingEnabled = false;\n                      ctx.drawImage(e.target, 0, 0);\n                      // const colors = [\n                      //   ctx.getImageData(0, 0, 1, 1).data,\n                      //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                      //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                      //   ctx.getImageData(\n                      //     e.target.width - 1,\n                      //     e.target.height - 1,\n                      //     1,\n                      //     1,\n                      //   ).data,\n                      // ];\n                      // Get 10x10 pixels from corners, get average color from each\n                      const pixelDimension = 10;\n                      const colors = [\n                        ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                          .data,\n                        ctx.getImageData(\n                          e.target.width - pixelDimension,\n                          0,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                        ctx.getImageData(\n                          0,\n                          e.target.height - pixelDimension,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                        ctx.getImageData(\n                          e.target.width - pixelDimension,\n                          e.target.height - pixelDimension,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                      ].map((data) => {\n                        let r = 0;\n                        let g = 0;\n                        let b = 0;\n                        let a = 0;\n                        for (let i = 0; i < data.length; i += 4) {\n                          r += data[i];\n                          g += data[i + 1];\n                          b += data[i + 2];\n                          a += data[i + 3];\n                        }\n                        const dataLength = data.length / 4;\n                        return [\n                          r / dataLength,\n                          g / dataLength,\n                          b / dataLength,\n                          a / dataLength,\n                        ];\n                      });\n                      const rgbColors = colors.map((color) => {\n                        const [r, g, b, a] = lightenRGB(color);\n                        return `rgba(${r}, ${g}, ${b}, ${a})`;\n                      });\n                      setHeaderCornerColors(rgbColors);\n                      console.log({ colors, rgbColors });\n                    } catch (e) {\n                      // Silently fail\n                    }\n                  }}\n                />\n              )}\n              <header>\n                {standalone ? (\n                  <Menu2\n                    shift={\n                      window.matchMedia('(min-width: calc(40em))').matches\n                        ? 114\n                        : 64\n                    }\n                    menuButton={\n                      <div>\n                        <AccountBlock\n                          account={info}\n                          instance={instance}\n                          avatarSize=\"xxxl\"\n                          onClick={() => {}}\n                        />\n                      </div>\n                    }\n                  >\n                    <div class=\"szh-menu__header\">\n                      <AccountHandleInfo acct={acct} instance={instance} />\n                    </div>\n                    <MenuItem\n                      onClick={() => {\n                        const handleWithInstance = acct.includes('@')\n                          ? `@${acct}`\n                          : `@${acct}@${instance}`;\n                        try {\n                          navigator.clipboard.writeText(handleWithInstance);\n                          showToast(t`Handle copied`);\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Unable to copy handle`);\n                        }\n                      }}\n                    >\n                      <Icon icon=\"link\" />\n                      <span>\n                        <Trans>Copy handle</Trans>\n                      </span>\n                    </MenuItem>\n                    <MenuItem href={url} target=\"_blank\">\n                      <Icon icon=\"external\" />\n                      <span>\n                        <Trans>Go to original profile page</Trans>\n                      </span>\n                    </MenuItem>\n                    <MenuDivider />\n                    <MenuItem\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: [\n                            {\n                              type: 'image',\n                              url: avatarStatic,\n                            },\n                          ],\n                        };\n                      }}\n                    >\n                      <Icon icon=\"user\" />\n                      <span>\n                        <Trans>View profile image</Trans>\n                      </span>\n                    </MenuItem>\n                    {!!headerStatic && !headerIsAvatar && (\n                      <MenuItem\n                        onClick={() => {\n                          states.showMediaModal = {\n                            mediaAttachments: [\n                              {\n                                type: 'image',\n                                url: headerStatic,\n                              },\n                            ],\n                          };\n                        }}\n                      >\n                        <Icon icon=\"media\" />\n                        <span>\n                          <Trans>View profile header</Trans>\n                        </span>\n                      </MenuItem>\n                    )}\n                    {currentAuthenticated &&\n                      isSelf &&\n                      supports('@mastodon/profile-edit') && (\n                        <>\n                          <MenuDivider />\n                          <MenuItem\n                            onClick={() => {\n                              setShowEditProfile(true);\n                            }}\n                          >\n                            <Icon icon=\"pencil\" />\n                            <span>\n                              <Trans>Edit profile</Trans>\n                            </span>\n                          </MenuItem>\n                        </>\n                      )}\n                  </Menu2>\n                ) : (\n                  <AccountBlock\n                    account={info}\n                    instance={instance}\n                    avatarSize=\"xxxl\"\n                    internal\n                  />\n                )}\n              </header>\n              <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n              <main>\n                {!!memorial && (\n                  <span class=\"tag\">\n                    <Trans>In Memoriam</Trans>\n                  </span>\n                )}\n                {!!bot && (\n                  <span class=\"tag\">\n                    <Icon icon=\"bot\" /> <Trans>Automated</Trans>\n                  </span>\n                )}\n                {!!group && (\n                  <span class=\"tag\">\n                    <Icon icon=\"group\" /> <Trans>Group</Trans>\n                  </span>\n                )}\n                {roles?.map((role) => (\n                  <span class=\"tag\">\n                    {role.name}\n                    {!!accountInstance && (\n                      <>\n                        {' '}\n                        <span class=\"more-insignificant\">\n                          {accountInstance}\n                        </span>\n                      </>\n                    )}\n                  </span>\n                ))}\n                <div\n                  class=\"note\"\n                  dir=\"auto\"\n                  onClick={handleContentLinks({\n                    instance: currentInstance,\n                  })}\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(note, { emojis }),\n                  }}\n                />\n                <div class=\"account-metadata-box\">\n                  {fields?.length > 0 && (\n                    <div class=\"profile-metadata\">\n                      {fields.map(({ name, value, verifiedAt }, i) => (\n                        <div\n                          class={`profile-field ${\n                            verifiedAt ? 'profile-verified' : ''\n                          }`}\n                          key={name + i}\n                          dir=\"auto\"\n                        >\n                          <b>\n                            <EmojiText text={name} emojis={emojis} />{' '}\n                            {!!verifiedAt && (\n                              <Icon\n                                icon=\"check-circle\"\n                                size=\"s\"\n                                alt={t`Verified`}\n                              />\n                            )}\n                          </b>\n                          <p\n                            dangerouslySetInnerHTML={{\n                              __html: enhanceContent(value, { emojis }),\n                            }}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  <div class=\"stats\">\n                    <LinkOrDiv\n                      tabIndex={0}\n                      to={accountLink}\n                      onClick={() => {\n                        // states.showAccount = false;\n                        setTimeout(() => {\n                          states.showGenericAccounts = {\n                            id: 'followers',\n                            heading: t`Followers`,\n                            fetchAccounts: fetchFollowers,\n                            instance,\n                            excludeRelationshipAttrs: isSelf\n                              ? ['followedBy']\n                              : [],\n                            blankCopy: hideCollections\n                              ? t`This user has chosen to not make this information available.`\n                              : undefined,\n                          };\n                        }, 0);\n                      }}\n                    >\n                      {!!familiarFollowers.length && (\n                        <span class=\"shazam-container-horizontal\">\n                          <span class=\"shazam-container-inner stats-avatars-bunch\">\n                            {familiarFollowers.map((follower) => (\n                              <Avatar\n                                url={follower.avatarStatic}\n                                size=\"s\"\n                                alt={`${follower.displayName} @${follower.acct}`}\n                                squircle={follower?.bot}\n                              />\n                            ))}\n                          </span>\n                        </span>\n                      )}\n                      <span title={followersCount}>\n                        {shortenNumber(followersCount)}\n                      </span>{' '}\n                      <Trans>Followers</Trans>\n                    </LinkOrDiv>\n                    <LinkOrDiv\n                      class=\"insignificant\"\n                      tabIndex={0}\n                      to={accountLink}\n                      onClick={() => {\n                        // states.showAccount = false;\n                        setTimeout(() => {\n                          states.showGenericAccounts = {\n                            heading: t({\n                              id: 'following.stats',\n                              message: 'Following',\n                            }),\n                            fetchAccounts: fetchFollowing,\n                            instance,\n                            excludeRelationshipAttrs: isSelf\n                              ? ['following']\n                              : [],\n                            blankCopy: hideCollections\n                              ? t`This user has chosen to not make this information available.`\n                              : undefined,\n                          };\n                        }, 0);\n                      }}\n                    >\n                      <span title={followingCount}>\n                        {shortenNumber(followingCount)}\n                      </span>{' '}\n                      <Trans id=\"following.stats\">Following</Trans>\n                      <br />\n                    </LinkOrDiv>\n                    <LinkOrDiv\n                      class=\"insignificant\"\n                      to={accountLink}\n                      // onClick={\n                      //   standalone\n                      //     ? undefined\n                      //     : () => {\n                      //         hideAllModals();\n                      //       }\n                      // }\n                    >\n                      <span title={statusesCount}>\n                        {shortenNumber(statusesCount)}\n                      </span>{' '}\n                      <Trans>Posts</Trans>\n                    </LinkOrDiv>\n                    {!!createdAt && (\n                      <div class=\"insignificant\">\n                        <Trans>\n                          Joined{' '}\n                          <time datetime={createdAt}>\n                            {niceDateTime(createdAt, {\n                              hideTime: true,\n                            })}\n                          </time>\n                        </Trans>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {!!postingStats && (\n                  <LinkOrDiv\n                    to={accountLink}\n                    class=\"account-metadata-box\"\n                    // onClick={() => {\n                    //   states.showAccount = false;\n                    // }}\n                  >\n                    <div class=\"shazam-container\">\n                      <div class=\"shazam-container-inner\">\n                        {hasPostingStats ? (\n                          <div\n                            class=\"posting-stats\"\n                            title={t`${(\n                              postingStats.originals / postingStats.total\n                            ).toLocaleString(i18n.locale || undefined, {\n                              style: 'percent',\n                            })} original posts, ${(\n                              postingStats.replies / postingStats.total\n                            ).toLocaleString(i18n.locale || undefined, {\n                              style: 'percent',\n                            })} replies, ${(\n                              postingStats.boosts / postingStats.total\n                            ).toLocaleString(i18n.locale || undefined, {\n                              style: 'percent',\n                            })} boosts`}\n                          >\n                            <div>\n                              {postingStats.daysSinceLastPost < 365\n                                ? plural(postingStats.total, {\n                                    one: plural(\n                                      postingStats.daysSinceLastPost,\n                                      {\n                                        one: `Last 1 post in the past 1 day`,\n                                        other: `Last 1 post in the past ${postingStats.daysSinceLastPost} days`,\n                                      },\n                                    ),\n                                    other: plural(\n                                      postingStats.daysSinceLastPost,\n                                      {\n                                        one: `Last ${postingStats.total} posts in the past 1 day`,\n                                        other: `Last ${postingStats.total} posts in the past ${postingStats.daysSinceLastPost} days`,\n                                      },\n                                    ),\n                                  })\n                                : plural(postingStats.total, {\n                                    one: 'Last 1 post in the past year(s)',\n                                    other: `Last ${postingStats.total} posts in the past year(s)`,\n                                  })}\n                            </div>\n                            <div\n                              class=\"posting-stats-bar\"\n                              style={{\n                                // [originals | replies | boosts]\n                                '--originals-percentage': `${\n                                  (postingStats.originals /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                                '--replies-percentage': `${\n                                  ((postingStats.originals +\n                                    postingStats.replies) /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                              }}\n                            />\n                            <div class=\"posting-stats-legends\">\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                                <Trans>Original</Trans>\n                              </span>{' '}\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                                <Trans>Replies</Trans>\n                              </span>{' '}\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                                <Trans>Boosts</Trans>\n                              </span>\n                            </div>\n                          </div>\n                        ) : (\n                          <div class=\"posting-stats\">\n                            <Trans>Post stats unavailable.</Trans>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </LinkOrDiv>\n                )}\n                {!moved && (\n                  <div class=\"account-metadata-box\">\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!!postingStats}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <button\n                          type=\"button\"\n                          class=\"posting-stats-button\"\n                          disabled={postingStatsUIState === 'loading'}\n                          onClick={() => {\n                            renderPostingStats();\n                          }}\n                        >\n                          <div\n                            class={`posting-stats-bar posting-stats-icon ${\n                              postingStatsUIState === 'loading' ? 'loading' : ''\n                            }`}\n                            style={{\n                              '--originals-percentage': '33%',\n                              '--replies-percentage': '66%',\n                            }}\n                          />\n                          <Trans>View post stats</Trans>{' '}\n                          {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </main>\n              <footer>\n                <RelatedActions\n                  info={info}\n                  instance={instance}\n                  standalone={standalone}\n                  authenticated={authenticated}\n                  onRelationshipChange={onRelationshipChange}\n                  onProfileUpdate={onProfileUpdate}\n                  setShowEditProfile={setShowEditProfile}\n                  showEndorsements={showEndorsements}\n                  renderEndorsements={renderEndorsements}\n                  setRenderEndorsements={setRenderEndorsements}\n                />\n              </footer>\n              <Endorsements\n                accountID={id}\n                info={info}\n                open={renderEndorsements}\n                onlyOpenIfHasEndorsements={\n                  renderEndorsements === 'onlyOpenIfHasEndorsements'\n                }\n              />\n            </>\n          )\n        )}\n      </div>\n      {!!showEditProfile && (\n        <Modal\n          onClose={() => {\n            setShowEditProfile(false);\n          }}\n        >\n          <EditProfileSheet\n            onClose={({ state, account } = {}) => {\n              setShowEditProfile(false);\n              if (state === 'success' && account) {\n                onProfileUpdate(account);\n              }\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction RelatedActions({\n  info,\n  instance,\n  standalone,\n  authenticated,\n  onRelationshipChange = () => {},\n  onProfileUpdate = () => {},\n  setShowEditProfile = () => {},\n  showEndorsements = false,\n  renderEndorsements = false,\n  setRenderEndorsements = () => {},\n}) {\n  if (!info) return null;\n  const { _, t } = useLingui();\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  const acctWithInstance = acct.includes('@') ? acct : `${acct}@${instance}`;\n\n  const supportsEndorsements = supports('@mastodon/endorsements');\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = getCurrentAccountID();\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.list({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        // if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">\n              <Trans>Follows you</Trans>\n            </span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              <Trans>\n                Last post:{' '}\n                <span class=\"ib\">\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </span>\n              </Trans>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && (\n            <span class=\"tag danger\">\n              <Trans>Muted</Trans>\n            </span>\n          )}\n          {blocking && (\n            <span class=\"tag danger\">\n              <Trans>Blocked</Trans>\n            </span>\n          )}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title={t`Private note`}\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\" disabled={loading}>\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf ? (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    showCompose({\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    });\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>\n                    <Trans>\n                      Mention <span class=\"bidi-isolate\">@{username}</span>\n                    </Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>\n                    <Trans>Translate bio</Trans>\n                  </span>\n                </MenuItem>\n                {supports('@mastodon/profile-private-note') && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowPrivateNoteModal(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      {privateNote ? t`Edit private note` : t`Add private note`}\n                    </span>\n                  </MenuItem>\n                )}\n                {following && !!relationship && (\n                  <>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                notify: !notifying,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.notifying\n                                ? t`Notifications enabled for @${username}'s posts.`\n                                : t` Notifications disabled for @${username}'s posts.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"notification\" />\n                      <span>\n                        {notifying\n                          ? t`Disable notifications`\n                          : t`Enable notifications`}\n                      </span>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                reblogs: !showingReblogs,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.showingReblogs\n                                ? t`Boosts from @${username} enabled.`\n                                : t`Boosts from @${username} disabled.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {showingReblogs ? t`Disable boosts` : t`Enable boosts`}\n                      </span>\n                    </MenuItem>\n                  </>\n                )}\n                {supportsEndorsements && following && (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          if (endorsed) {\n                            const newRelationship =\n                              await currentMasto.v1.accounts\n                                .$select(currentInfo?.id || id)\n                                .unpin();\n                            setRelationship(newRelationship);\n                            setRelationshipUIState('default');\n                            showToast(\n                              t`@${username} is no longer featured on your profile.`,\n                            );\n                          } else {\n                            const newRelationship =\n                              await currentMasto.v1.accounts\n                                .$select(currentInfo?.id || id)\n                                .pin();\n                            setRelationship(newRelationship);\n                            setRelationshipUIState('default');\n                            showToast(\n                              t`@${username} is now featured on your profile.`,\n                            );\n                          }\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                          if (endorsed) {\n                            showToast(\n                              t`Unable to unfeature @${username} on your profile.`,\n                            );\n                          } else {\n                            showToast(\n                              t`Unable to feature @${username} on your profile.`,\n                            );\n                          }\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"endorsement\" />\n                    {endorsed\n                      ? t`Don't feature on profile`\n                      : t`Feature on profile`}\n                  </MenuItem>\n                )}\n                {showEndorsements &&\n                  supportsEndorsements &&\n                  !renderEndorsements && (\n                    <MenuItem onClick={() => setRenderEndorsements(true)}>\n                      <Icon icon=\"endorsement\" />\n                      <span>\n                        <Trans>Show featured profiles</Trans>\n                      </span>\n                    </MenuItem>\n                  )}\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          <Trans>Add/Remove from Lists</Trans>\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>\n                        <Trans>Add/Remove from Lists</Trans>\n                      </span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            ) : (\n              supportsEndorsements &&\n              !renderEndorsements && (\n                <>\n                  <MenuItem onClick={() => setRenderEndorsements(true)}>\n                    <Icon icon=\"endorsement\" />\n                    Show featured profiles\n                  </MenuItem>\n                  <MenuDivider />\n                </>\n              )\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acctWithInstance}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast(t`Handle copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy handle`);\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                <Trans>Copy handle</Trans>\n                <br />\n                <span class=\"more-insignificant bidi-isolate\">\n                  @{currentInfo?.acct || acctWithInstance}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast(t`Link copied`);\n                  } catch (e) {\n                    console.error(e);\n                    showToast(t`Unable to copy link`);\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>\n                  <Trans>Copy</Trans>\n                </span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Sharing doesn't seem to work.`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>\n                      <Trans>Share…</Trans>\n                    </span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>\n                      <Trans>\n                        Unmute <span class=\"bidi-isolate\">@{username}</span>\n                      </Trans>\n                    </span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu2\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">\n                          <Trans>\n                            Mute <span class=\"bidi-isolate\">@{username}</span>…\n                          </Trans>\n                        </span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  t`Muted @${username} for ${\n                                    typeof MUTE_DURATIONS_LABELS[duration] ===\n                                    'function'\n                                      ? MUTE_DURATIONS_LABELS[duration]()\n                                      : _(MUTE_DURATIONS_LABELS[duration])\n                                  }`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(t`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {typeof MUTE_DURATIONS_LABELS[duration] === 'function'\n                            ? MUTE_DURATIONS_LABELS[duration]()\n                            : _(MUTE_DURATIONS_LABELS[duration])}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu2>\n                )}\n                {followedBy && (\n                  <MenuConfirm\n                    subMenu\n                    menuItemClassName=\"danger\"\n                    confirmLabel={\n                      <>\n                        <Icon icon=\"user-x\" />\n                        <span>\n                          <Trans>\n                            Remove <span class=\"bidi-isolate\">@{username}</span>{' '}\n                            from followers?\n                          </Trans>\n                        </span>\n                      </>\n                    }\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .removeFromFollowers();\n                          console.log(\n                            'removing from followers',\n                            newRelationship,\n                          );\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`@${username} removed from followers`);\n                          states.reloadGenericAccounts.id = 'followers';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"user-x\" />\n                    <span>\n                      <Trans>Remove follower…</Trans>\n                    </span>\n                  </MenuConfirm>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>?\n                        </Trans>\n                      </span>\n                    </>\n                  }\n                  itemProps={{\n                    className: 'danger',\n                  }}\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(t`Unable to unblock @${username}`);\n                        } else {\n                          showToast(t`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>\n                        <Trans>\n                          Unblock <span class=\"bidi-isolate\">@{username}</span>\n                        </Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>…\n                        </Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>\n                    <Trans>\n                      Report <span class=\"bidi-isolate\">@{username}</span>…\n                    </Trans>\n                  </span>\n                </MenuItem>\n              </>\n            )}\n            {currentAuthenticated &&\n              isSelf &&\n              standalone &&\n              supports('@mastodon/profile-edit') && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      setShowEditProfile(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      <Trans>Edit profile</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && !moved && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? t`Withdraw follow request?`\n                    : t`Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) {\n                      setRelationship(newRelationship);\n\n                      // Show endorsements if start following\n                      if (newRelationship.following) {\n                        setRenderEndorsements('onlyOpenIfHasEndorsements');\n                      }\n                    }\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>\n                      <Trans>Following</Trans>\n                    </span>\n                    <span>\n                      <Trans>Unfollow…</Trans>\n                    </span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>\n                      <Trans>Requested</Trans>\n                    </span>\n                    <span>\n                      <Trans>Withdraw…</Trans>\n                    </span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                ) : (\n                  t`Follow`\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// Apply more alpha if high luminence\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = URL.parse(url);\n  if (!urlObj) return;\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{punycode.toUnicode(host)}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const { t } = useLingui();\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Translated Bio</Trans>\n        </h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await getLists();\n        setLists(lists);\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Add/Remove from Lists</Trans>\n        </h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? t`Unable to remove from list.`\n                              : t`Unable to add to list.`,\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" alt=\"☑️\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Unable to load lists.</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state\">\n            <Trans>No lists.</Trans>\n          </p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" />{' '}\n          <span>\n            <Trans>New list</Trans>\n          </span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>\n            Private note about{' '}\n            <span class=\"bidi-isolate\">\n              @{account?.username || account?.acct}\n            </span>\n          </Trans>\n        </b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || t`Unable to update private note.`);\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n            dir=\"auto\"\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              <Trans>Cancel</Trans>\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                <Trans>Save &amp; close</Trans>\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nconst SUPPORTED_IMAGE_FORMATS = [\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'image/webp',\n];\nconst SUPPORTED_IMAGE_FORMATS_STR = SUPPORTED_IMAGE_FORMATS.join(',');\n\nfunction EditProfileSheet({ onClose = () => {} }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('loading');\n  const [account, setAccount] = useState(null);\n  const [headerPreview, setHeaderPreview] = useState(null);\n  const [avatarPreview, setAvatarPreview] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await masto.v1.accounts.verifyCredentials();\n        setAccount(acc);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  console.log('EditProfileSheet', account);\n  const { displayName, source, avatar, header } = account || {};\n  const { note, fields } = source || {};\n  const fieldsAttributesRef = useRef(null);\n\n  const avatarMediaAttachments = [\n    ...(avatar ? [{ type: 'image', url: avatar }] : []),\n    ...(avatarPreview ? [{ type: 'image', url: avatarPreview }] : []),\n  ];\n  const headerMediaAttachments = [\n    ...(header ? [{ type: 'image', url: header }] : []),\n    ...(headerPreview ? [{ type: 'image', url: headerPreview }] : []),\n  ];\n\n  return (\n    <div class=\"sheet\" id=\"edit-profile-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>Edit profile</Trans>\n        </b>\n      </header>\n      <main>\n        {uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const header = formData.get('header');\n              const avatar = formData.get('avatar');\n              const displayName = formData.get('display_name');\n              const note = formData.get('note');\n              const fieldsAttributesFields =\n                fieldsAttributesRef.current.querySelectorAll(\n                  'input[name^=\"fields_attributes\"]',\n                );\n              const fieldsAttributes = [];\n              fieldsAttributesFields.forEach((field) => {\n                const name = field.name;\n                const [_, index, key] =\n                  name.match(/fields_attributes\\[(\\d+)\\]\\[(.+)\\]/) || [];\n                const value = field.value ? field.value.trim() : '';\n                if (index && key && value) {\n                  if (!fieldsAttributes[index]) fieldsAttributes[index] = {};\n                  fieldsAttributes[index][key] = value;\n                }\n              });\n              // Fill in the blanks\n              fieldsAttributes.forEach((field) => {\n                if (field.name && !field.value) {\n                  field.value = '';\n                }\n              });\n\n              (async () => {\n                try {\n                  const newAccount = await masto.v1.accounts.updateCredentials({\n                    header,\n                    avatar,\n                    displayName,\n                    note,\n                    fieldsAttributes,\n                  });\n                  console.log('updated account', newAccount);\n                  onClose?.({\n                    state: 'success',\n                    account: newAccount,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(e?.message || t`Unable to update profile.`);\n                }\n              })();\n            }}\n          >\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Header picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"header\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setHeaderPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {header ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: headerMediaAttachments,\n                        mediaIndex: 0,\n                      };\n                    }}\n                  >\n                    <img src={header} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {headerPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: headerMediaAttachments,\n                          mediaIndex: 1,\n                        };\n                      }}\n                    >\n                      <img src={headerPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Profile picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"avatar\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setAvatarPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {avatar ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: avatarMediaAttachments,\n                        mediaIndex: 0,\n                      };\n                    }}\n                  >\n                    <img src={avatar} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {avatarPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: avatarMediaAttachments,\n                          mediaIndex: 1,\n                        };\n                      }}\n                    >\n                      <img src={avatarPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <p>\n              <label>\n                <Trans>Name</Trans>{' '}\n                <input\n                  type=\"text\"\n                  name=\"display_name\"\n                  defaultValue={displayName}\n                  maxLength={30}\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            <p>\n              <label>\n                <Trans>Bio</Trans>\n                <textarea\n                  defaultValue={note}\n                  name=\"note\"\n                  maxLength={500}\n                  rows=\"5\"\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            {/* Table for fields; name and values are in fields, min 4 rows */}\n            <p>\n              <Trans>Extra fields</Trans>\n            </p>\n            <table ref={fieldsAttributesRef}>\n              <thead>\n                <tr>\n                  <th>\n                    <Trans>Label</Trans>\n                  </th>\n                  <th>\n                    <Trans>Content</Trans>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from({ length: Math.max(4, fields.length) }).map(\n                  (_, i) => {\n                    const { name = '', value = '' } = fields[i] || {};\n                    return (\n                      <FieldsAttributesRow\n                        key={i}\n                        name={name}\n                        value={value}\n                        index={i}\n                        disabled={uiState === 'loading'}\n                      />\n                    );\n                  },\n                )}\n              </tbody>\n            </table>\n            <footer>\n              <button\n                type=\"button\"\n                class=\"light\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  onClose?.();\n                }}\n              >\n                <Trans>Cancel</Trans>\n              </button>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                <Trans>Save</Trans>\n              </button>\n            </footer>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction FieldsAttributesRow({ name, value, disabled, index: i }) {\n  const [hasValue, setHasValue] = useState(!!value);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][name]`}\n          defaultValue={name}\n          disabled={disabled}\n          maxLength={255}\n          required={hasValue}\n          dir=\"auto\"\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][value]`}\n          defaultValue={value}\n          disabled={disabled}\n          maxLength={255}\n          onChange={(e) => setHasValue(!!e.currentTarget.value)}\n          dir=\"auto\"\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction AccountHandleInfo({ acct, instance }) {\n  // acct = username or username@server\n  let [username, server] = acct.split('@');\n  if (!server) server = instance;\n  const encodedAcct = punycode.toASCII(acct);\n  return (\n    <div class=\"handle-info\">\n      <span class=\"handle-handle\" title={encodedAcct}>\n        <b class=\"handle-username\">{username}</b>\n        <span class=\"handle-at\">@</span>\n        <b class=\"handle-server\">{server}</b>\n      </span>\n      <div class=\"handle-legend\">\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon username\" /> <Trans>username</Trans>\n        </span>{' '}\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon server\" />{' '}\n          <Trans>server domain name</Trans>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nfunction Endorsements({\n  accountID: id,\n  info,\n  open = false,\n  onlyOpenIfHasEndorsements = false,\n}) {\n  const { masto } = api();\n  const endorsementsContainer = useRef();\n  const [endorsementsUIState, setEndorsementsUIState] = useState('default');\n  const [endorsements, setEndorsements] = useState([]);\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  useEffect(() => {\n    if (!supports('@mastodon/endorsements')) return;\n    if (!open) return;\n    (async () => {\n      setEndorsementsUIState('loading');\n      try {\n        const accounts = await masto.v1.accounts.$select(id).endorsements.list({\n          limit: ENDORSEMENTS_LIMIT,\n        });\n        console.log({ endorsements: accounts });\n        if (!accounts.length) {\n          setEndorsementsUIState('default');\n          return;\n        }\n        setEndorsements(accounts);\n        setEndorsementsUIState('default');\n        setTimeout(() => {\n          endorsementsContainer.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }, 300);\n\n        const relationships = await fetchRelationships(\n          accounts,\n          relationshipsMap,\n        );\n        if (relationships) {\n          setRelationshipsMap(relationships);\n        }\n      } catch (e) {\n        console.error(e);\n        setEndorsementsUIState('error');\n      }\n    })();\n  }, [open, id]);\n\n  const reallyOpen = onlyOpenIfHasEndorsements\n    ? open && endorsements.length > 0\n    : open;\n\n  if (!reallyOpen) return null;\n\n  return (\n    <div class=\"shazam-container\">\n      <div class=\"shazam-container-inner\">\n        <div class=\"endorsements-container\" ref={endorsementsContainer}>\n          <h3>\n            <Trans>Profiles featured by @{info.username}</Trans>\n          </h3>\n          {endorsementsUIState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : endorsements.length > 0 ? (\n            <ul\n              class={`endorsements ${\n                endorsements.length > 10 ? 'expanded' : ''\n              }`}\n            >\n              {endorsements.map((account) => (\n                <li>\n                  <AccountBlock\n                    key={account.id}\n                    account={account}\n                    showStats\n                    avatarSize=\"xxl\"\n                    relationship={relationshipsMap[account.id]}\n                  />\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p class=\"ui-state insignificant\">\n              <Trans>No featured profiles.</Trans>\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountInfo from './account-info';\nimport Icon from './icon';\n\nfunction AccountSheet({ account, instance: propInstance, onClose }) {\n  const { t } = useLingui();\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const isString = typeof account === 'string';\n\n  useEffect(() => {\n    if (!isString) {\n      states.accounts[`${account.id}@${instance}`] = account;\n    }\n  }, [account]);\n\n  useLocationChange(onClose);\n\n  return (\n    <div\n      class=\"sheet\"\n      // onClick={(e) => {\n      //   const accountBlock = e.target.closest('.account-block');\n      //   if (accountBlock) {\n      //     onClose({\n      //       destination: 'account-statuses',\n      //     });\n      //   }\n      // }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <AccountInfo\n        instance={instance}\n        authenticated={authenticated}\n        account={account}\n        fetchAccount={async () => {\n          if (isString) {\n            try {\n              const info = await masto.v1.accounts.lookup({\n                acct: account,\n                skip_webfinger: false,\n              });\n              return info;\n            } catch (e) {\n              const result = await masto.v2.search.list({\n                q: account,\n                type: 'accounts',\n                limit: authenticated ? 1 : 11, // Magic number\n                resolve: authenticated,\n              });\n              if (result.accounts.length) {\n                const accountWithSameString = result.accounts.find(\n                  (a) => a.url === account || account.startsWith(a.url),\n                );\n                if (accountWithSameString) {\n                  return accountWithSameString;\n                }\n              }\n              if (/^https?:\\/\\/[^/]+\\/@[^/]+$/.test(account)) {\n                const accountURL = URL.parse(account);\n                if (accountURL) {\n                  const { hostname, pathname } = accountURL;\n                  const acct =\n                    pathname.replace(/^\\//, '').replace(/\\/$/, '') +\n                    '@' +\n                    hostname;\n                  const result = await masto.v2.search.list({\n                    q: acct,\n                    type: 'accounts',\n                    limit: 1,\n                    resolve: authenticated,\n                  });\n                  if (result.accounts.length) {\n                    return result.accounts[0];\n                  }\n                }\n              }\n            }\n          } else {\n            return account;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountSheet;\n","import './drafts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\n\nfunction Drafts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [drafts, setDrafts] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const keys = await db.drafts.keys();\n        if (keys.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = keys.filter((key) => key.startsWith(ns));\n          if (ownKeys.length) {\n            const drafts = await db.drafts.getMany(ownKeys);\n            drafts.sort(\n              (a, b) =>\n                new Date(b.updatedAt).getTime() -\n                new Date(a.updatedAt).getTime(),\n            );\n            setDrafts(drafts);\n          } else {\n            setDrafts([]);\n          }\n        } else {\n          setDrafts([]);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const hasDrafts = drafts?.length > 0;\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Unsent drafts</Trans>{' '}\n          <Loader abrupt hidden={uiState !== 'loading'} />\n        </h2>\n        {hasDrafts && (\n          <div class=\"insignificant\">\n            <Trans>\n              Looks like you have unsent drafts. Let's continue where you left\n              off.\n            </Trans>\n          </div>\n        )}\n      </header>\n      <main>\n        {hasDrafts ? (\n          <>\n            <ul class=\"drafts-list\">\n              {drafts.map((draft) => {\n                const { updatedAt, key, draftStatus, replyTo } = draft;\n                const updatedAtDate = new Date(updatedAt);\n                return (\n                  <li key={updatedAt}>\n                    <div class=\"mini-draft-meta\">\n                      <b>\n                        <Icon icon={replyTo ? 'reply' : 'quill'} size=\"s\" />{' '}\n                        <time>\n                          {!!replyTo && (\n                            <>\n                              <span class=\"bidi-isolate\">\n                                @{replyTo.account.acct}\n                              </span>\n                              <br />\n                            </>\n                          )}\n                          {niceDateTime(updatedAtDate)}\n                        </time>\n                      </b>\n                      <MenuConfirm\n                        confirmLabel={\n                          <span>\n                            <Trans>Delete this draft?</Trans>\n                          </span>\n                        }\n                        menuItemClassName=\"danger\"\n                        align=\"end\"\n                        disabled={uiState === 'loading'}\n                        onClick={() => {\n                          (async () => {\n                            try {\n                              // const yes = confirm('Delete this draft?');\n                              // if (yes) {\n                              await db.drafts.del(key);\n                              reload();\n                              // }\n                            } catch (e) {\n                              alert(t`Error deleting draft! Please try again.`);\n                            }\n                          })();\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"small light\"\n                          disabled={uiState === 'loading'}\n                        >\n                          <Trans>Delete…</Trans>\n                        </button>\n                      </MenuConfirm>\n                    </div>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      class=\"draft-item\"\n                      onClick={async () => {\n                        // console.log({ draftStatus });\n                        let replyToStatus;\n                        if (replyTo) {\n                          setUIState('loading');\n                          try {\n                            replyToStatus = await masto.v1.statuses\n                              .$select(replyTo.id)\n                              .fetch();\n                          } catch (e) {\n                            console.error(e);\n                            alert(t`Error fetching reply-to status!`);\n                            setUIState('default');\n                            return;\n                          }\n                          setUIState('default');\n                        }\n                        window.__COMPOSE__ = {\n                          draftStatus,\n                          replyToStatus,\n                        };\n                        states.showCompose = true;\n                        states.showDrafts = false;\n                      }}\n                    >\n                      <MiniDraft draft={draft} />\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            {drafts.length > 1 && (\n              <p>\n                <MenuConfirm\n                  confirmLabel={\n                    <span>\n                      <Trans>Delete all drafts?</Trans>\n                    </span>\n                  }\n                  menuItemClassName=\"danger\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    (async () => {\n                      // const yes = confirm('Delete all drafts?');\n                      // if (yes) {\n                      setUIState('loading');\n                      try {\n                        await db.drafts.delMany(\n                          drafts.map((draft) => draft.key),\n                        );\n                        setUIState('default');\n                        reload();\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Error deleting drafts! Please try again.`);\n                        setUIState('error');\n                      }\n                      // }\n                    })();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"light danger\"\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Delete all…</Trans>\n                  </button>\n                </MenuConfirm>\n              </p>\n            )}\n          </>\n        ) : (\n          <p>\n            <Trans>No drafts found.</Trans>\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction MiniDraft({ draft }) {\n  const { t } = useLingui();\n  const { draftStatus, replyTo } = draft;\n  const { status, spoilerText, poll, mediaAttachments } = draftStatus;\n  const hasPoll = poll?.options?.length > 0;\n  const hasMedia = mediaAttachments?.length > 0;\n  const hasPollOrMedia = hasPoll || hasMedia;\n  const firstImageMedia = useMemo(() => {\n    if (!hasMedia) return;\n    const image = mediaAttachments.find((media) => /image/.test(media.type));\n    if (!image) return;\n    const { file } = image;\n    const objectURL = URL.createObjectURL(file);\n    return objectURL;\n  }, [hasMedia, mediaAttachments]);\n  return (\n    <>\n      <div class=\"mini-draft\">\n        {hasPollOrMedia && (\n          <div\n            class={`mini-draft-aside ${firstImageMedia ? 'has-image' : ''}`}\n            style={\n              firstImageMedia\n                ? {\n                    '--bg-image': `url(${firstImageMedia})`,\n                  }\n                : {}\n            }\n          >\n            {hasPoll && <Icon icon=\"poll\" alt={t`Poll`} />}\n            {hasMedia && (\n              <span>\n                <Icon icon=\"attachment\" alt={t`Media`} />{' '}\n                <small>{mediaAttachments?.length}</small>\n              </span>\n            )}\n          </div>\n        )}\n        <div class=\"mini-draft-main\">\n          {!!spoilerText && <div class=\"mini-draft-spoiler\">{spoilerText}</div>}\n          {!!status && <div class=\"mini-draft-status\">{status}</div>}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Drafts;\n","import './embed-modal.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport Icon from './icon';\n\nfunction EmbedModal({ html, url, width, height, onClose = () => {} }) {\n  const { t } = useLingui();\n  return (\n    <div class=\"embed-modal-container\">\n      <div class=\"top-controls\">\n        <button type=\"button\" class=\"light\" onClick={() => onClose()}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n        {url && (\n          <a href={url} target=\"_blank\" rel=\"noopener\" class=\"button plain\">\n            <span>\n              <Trans>Open in new window</Trans>\n            </span>{' '}\n            <Icon icon=\"external\" />\n          </a>\n        )}\n      </div>\n      <div\n        class=\"embed-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{\n          '--width': width + 'px',\n          '--height': height + 'px',\n          '--aspect-ratio': `${width}/${height}`,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EmbedModal;\n","import './generic-accounts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Link from './link';\nimport Loader from './loader';\nimport Status from './status';\n\nexport default function GenericAccounts({\n  instance,\n  excludeRelationshipAttrs = [],\n  postID,\n  onClose = () => {},\n  blankCopy,\n}) {\n  const { t } = useLingui();\n  const { masto, instance: currentInstance } = api();\n  const isCurrentInstance = instance ? instance === currentInstance : true;\n  const snapStates = useSnapshot(states);\n  ``;\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  useLocationChange(onClose);\n\n  if (!snapStates.showGenericAccounts) {\n    return null;\n  }\n\n  const {\n    id,\n    heading,\n    fetchAccounts,\n    accounts: staticAccounts,\n    showReactions,\n  } = snapStates.showGenericAccounts;\n\n  const [accounts, setAccounts] = useState(\n    staticAccounts?.length ? staticAccounts : [],\n  );\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    if (!isCurrentInstance) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (firstLoad) => {\n    if (!fetchAccounts) return;\n    if (firstLoad && !accounts?.length) setAccounts([]);\n    setUIState('loading');\n    (async () => {\n      try {\n        const { done, value } = await fetchAccounts(firstLoad);\n        if (Array.isArray(value)) {\n          if (firstLoad) {\n            const accounts = [];\n            for (let i = 0; i < value.length; i++) {\n              const account = value[i];\n              const theAccount = accounts.find(\n                (a, j) => a.id === account.id && i !== j,\n              );\n              if (!theAccount) {\n                accounts.push({\n                  _types: [],\n                  ...account,\n                });\n              } else {\n                theAccount._types.push(...account._types);\n              }\n            }\n            setAccounts(accounts);\n          } else {\n            // setAccounts((prev) => [...prev, ...value]);\n            // Merge accounts by id and _types\n            setAccounts((prev) => {\n              const newAccounts = prev;\n              for (const account of value) {\n                const theAccount = newAccounts.find((a) => a.id === account.id);\n                if (!theAccount) {\n                  newAccounts.push(account);\n                } else {\n                  theAccount._types.push(...account._types);\n                }\n              }\n              return newAccounts;\n            });\n          }\n          setShowMore(!done);\n\n          loadRelationships(value);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (accounts?.length > 0) {\n      // setAccounts(staticAccounts);\n      if (fetchAccounts) {\n        loadAccounts(true);\n        firstLoad.current = false;\n      } else {\n        loadRelationships(accounts);\n      }\n    } else {\n      loadAccounts(true);\n      firstLoad.current = false;\n    }\n  }, [fetchAccounts]);\n\n  useEffect(() => {\n    if (firstLoad.current) return;\n    // reloadGenericAccounts contains value like {id: 'mute', counter: 1}\n    // We only need to reload if the id matches\n    if (snapStates.reloadGenericAccounts?.id === id) {\n      loadAccounts(true);\n    }\n  }, [snapStates.reloadGenericAccounts.counter]);\n\n  const post = states.statuses[postID];\n\n  return (\n    <div id=\"generic-accounts-container\" class=\"sheet\" tabindex=\"-1\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>{heading || t`Accounts`}</h2>\n      </header>\n      <main>\n        {post && (\n          <Link\n            to={`/${instance || currentInstance}/s/${post.id}`}\n            class=\"post-preview\"\n          >\n            <Status status={post} size=\"s\" readOnly />\n          </Link>\n        )}\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"accounts-list\">\n              {accounts.map((account) => {\n                const relationship = relationshipsMap[account.id];\n                const key = `${account.id}-${account._types?.length || ''}`;\n                return (\n                  <li key={key}>\n                    {showReactions && account._types?.length > 0 && (\n                      <div class=\"reactions-block\">\n                        {account._types.map((type) => (\n                          <Icon\n                            icon={\n                              {\n                                reblog: 'rocket',\n                                favourite: 'heart',\n                              }[type]\n                            }\n                            class={`${type}-icon`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <div class=\"account-relationships\">\n                      <AccountBlock\n                        account={account}\n                        showStats\n                        relationship={relationship}\n                        excludeRelationshipAttrs={excludeRelationshipAttrs}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      loadAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => loadAccounts()}\n                  >\n                    <Trans>Show more…</Trans>\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">\n                  <Trans>The end.</Trans>\n                </p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Error loading accounts</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state insignificant\">\n            {blankCopy || t`Nothing to show`}\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeMatch from '../utils/locale-match';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Menu2 from './menu2';\nimport TranslationBlock from './translation-block';\n\nconst FORCE_TRANSLATE_LIMIT = 140;\n\nexport default function MediaAltModal({ alt, lang, onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [forceTranslate, setForceTranslate] = useState(false);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const differentLanguage =\n    !!lang &&\n    lang !== targetLanguage &&\n    !localeMatch([lang], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => lang === l || localeMatch([lang], [l]),\n    );\n\n  useEffect(() => {\n    const isShortAlt = alt?.length > 0 && alt?.length <= FORCE_TRANSLATE_LIMIT;\n    if (differentLanguage && isShortAlt) {\n      setForceTranslate(true);\n    }\n  }, [differentLanguage, alt]);\n\n  return (\n    <div class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Media description</Trans>\n        </h2>\n        <div class=\"header-side\">\n          <Menu2\n            align=\"end\"\n            menuButton={\n              <button type=\"button\" class=\"plain4\">\n                <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={forceTranslate}\n              onClick={() => {\n                setForceTranslate(true);\n              }}\n            >\n              <Icon icon=\"translate\" />\n              <span>\n                <Trans>Translate</Trans>\n              </span>\n            </MenuItem>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  speak(alt, lang);\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>\n                  <Trans>Speak</Trans>\n                </span>\n              </MenuItem>\n            )}\n          </Menu2>\n        </div>\n      </header>\n      <main lang={lang} dir=\"auto\">\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n            textWrap: 'pretty',\n          }}\n        >\n          {alt}\n        </p>\n        {(differentLanguage || forceTranslate) && (\n          <TranslationBlock\n            forceTranslate={forceTranslate}\n            sourceLanguage={lang}\n            text={alt}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklch2rgb, rgb2oklch } from '../utils/color-utils';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.focus();\n    carouselRef.current.scrollTo({\n      left: scrollLeft * (isRTL() ? -1 : 1),\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = (e) => {\n      onClose(e, currentIndex, mediaAttachments, carouselRef);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, [currentIndex, mediaAttachments]);\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      onClose(e, currentIndex, mediaAttachments, carouselRef);\n    },\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal || e.metaKey || e.ctrlKey || e.altKey || e.shiftKey;\n      },\n      useKey: true,\n    },\n    [onClose, currentIndex, mediaAttachments],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(Math.abs(scrollLeft) / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaOkColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        return rgb2oklch(averageColor);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentColors = useMemo(() => {\n    return mediaOkColors?.map((okColor) => {\n      if (okColor) {\n        return {\n          light: oklch2rgb([0.95, 0.01, okColor[2]]),\n          dark: oklch2rgb([0.35, 0.01, okColor[2]]),\n          default: oklch2rgb([0.6, okColor[1], okColor[2]]),\n        };\n      }\n      return null;\n    });\n  });\n  const mediaAccentGradients = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    const colors = mediaAccentColors.map((color, i) => {\n      const start = i * range + gap;\n      const end = (i + 1) * range - gap;\n      if (color?.light && color?.dark) {\n        return {\n          light: `\n                rgb(${color.light?.join(',')}) ${start}%, \n                rgb(${color.light?.join(',')}) ${end}%\n              `,\n          dark: `\n                rgb(${color.dark?.join(',')}) ${start}%, \n                rgb(${color.dark?.join(',')}) ${end}%\n              `,\n        };\n      }\n\n      return {\n        light: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n        dark: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n      };\n    });\n    const lightGradient = colors.map((color) => color.light).join(', ');\n    const darkGradient = colors.map((color) => color.dark).join(', ');\n    return {\n      light: lightGradient,\n      dark: darkGradient,\n    };\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const currentColor = mediaAccentColors[currentIndex];\n    let $meta;\n    let metaColor;\n    if (currentColor) {\n      const theme = store.local.get('theme');\n      if (theme) {\n        const mediaColor = `rgb(${currentColor[theme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      } else {\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        const mediaColor = `rgb(${currentColor[colorScheme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      }\n    }\n    return () => {\n      // Reset meta color\n      if ($meta && metaColor) {\n        $meta.content = metaColor;\n      }\n    };\n  }, [currentIndex, mediaAccentColors]);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose(e, currentIndex, mediaAttachments, carouselRef);\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                '--accent-gradient-light': mediaAccentGradients?.light,\n                '--accent-gradient-dark': mediaAccentGradients?.dark,\n                //     backgroundImage: `linear-gradient(\n                // to ${isRTL() ? 'left' : 'right'}, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor.default.join(',')})`,\n                      '--accent-light-color': `rgb(${accentColor.light?.join(\n                        ',',\n                      )})`,\n                      '--accent-dark-color': `rgb(${accentColor.dark?.join(\n                        ',',\n                      )})`,\n                      '--accent-alpha-color': `rgba(${accentColor.default.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={(e) =>\n              onClose(e, currentIndex, mediaAttachments, carouselRef)\n            }\n          >\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const left =\n                    carouselRef.current.clientWidth * i * (isRTL() ? -1 : 1);\n                  carouselRef.current.focus();\n                  carouselRef.current.scrollTo({ left, behavior: 'smooth' });\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" alt=\"⸱\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title={t`Open original media in new window`}\n            >\n              <Icon icon=\"popout\" />\n              <span>\n                <Trans>Open original media</Trans>\n              </span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: t`Attempting to describe image. Please wait…`,\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Failed to describe image`);\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>\n                      <Trans>Describe image…</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          {!!statusID && (\n            <Link\n              to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n                window.matchMedia('(min-width: calc(40em + 350px))').matches\n                  ? `?media=${currentIndex + 1}`\n                  : ''\n              }`}\n              class=\"button carousel-button media-post-link\"\n              // onClick={() => {\n              //   // if small screen (not media query min-width 40em + 350px), run onClose\n              //   if (\n              //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n              //   ) {\n              //     onClose();\n              //   }\n              // }}\n            >\n              <span class=\"button-label\">\n                <Trans>View post</Trans>{' '}\n              </span>\n              &raquo;\n            </Link>\n          )}\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex - 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" alt={t`Previous`} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex + 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" alt={t`Next`} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './report-modal.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport localeMatch from '../utils/locale-match';\nimport showToast from '../utils/show-toast';\nimport { getCurrentInstance } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Status from './status';\n\n// NOTE: `dislike` hidden for now, it's actually not used for reporting\n// Mastodon shows another screen for unfollowing, muting or blocking instead of reporting\n\nconst CATEGORIES = [/*'dislike' ,*/ 'spam', 'legal', 'violation', 'other'];\n// `violation` will be set if there are `rule_ids[]`\n\nconst CATEGORIES_INFO = {\n  // dislike: {\n  //   label: 'Dislike',\n  //   description: 'Not something you want to see',\n  // },\n  spam: {\n    label: msg`Spam`,\n    description: msg`Malicious links, fake engagement, or repetitive replies`,\n  },\n  legal: {\n    label: msg`Illegal`,\n    description: msg`Violates the law of your or the server's country`,\n  },\n  violation: {\n    label: msg`Server rule violation`,\n    description: msg`Breaks specific server rules`,\n    stampLabel: msg`Violation`,\n  },\n  other: {\n    label: msg`Other`,\n    description: msg`Issue doesn't fit other categories`,\n    excludeStamp: true,\n  },\n};\n\nfunction findMatchingLanguage(rule, currentLang) {\n  if (!rule.translations || !currentLang) return null;\n  const availableLanguages = Object.keys(rule.translations);\n  if (!availableLanguages?.length) return null;\n\n  let matchedLang = localeMatch([currentLang], availableLanguages, null);\n  if (!matchedLang) {\n    // localeMatch fails if there are keys like zhCn, zhTw\n    // Convert them something like zh-CN first, try again\n    // Detect uppercase, then split by dash\n    const normalizedLanguages = availableLanguages.map((lang) => {\n      const parts = lang.split(/(?=[A-Z])/);\n      return parts\n        .map((part, i) => (i === 0 ? part : part.toLowerCase()))\n        .join('-');\n    });\n    matchedLang = localeMatch([currentLang], normalizedLanguages, null);\n  }\n\n  // If matchedLang has dash, convert back to original format\n  // E.g. zh-cn to zhCn\n  if (matchedLang && matchedLang.includes('-')) {\n    const [lang, region] = matchedLang.split('-');\n    matchedLang = lang + region.charAt(0).toUpperCase() + region.slice(1);\n  }\n\n  return matchedLang;\n}\n\nfunction translateRules(rules, currentLang) {\n  if (!rules?.length) return [];\n  if (!currentLang) return rules;\n  return rules.map((rule) => {\n    const matchedLang = findMatchingLanguage(rule, currentLang);\n    return {\n      ...rule,\n      _translatedText: rule.translations?.[matchedLang]?.text || null,\n    };\n  });\n}\n\nfunction ReportModal({ account, post, onClose }) {\n  const { _, t, i18n } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [username, domain] = account.acct.split('@');\n\n  const [translatedRules, currentDomain] = useMemo(() => {\n    const { rules, domain } = getCurrentInstance();\n    const rawRules = rules || [];\n    return [translateRules(rawRules, i18n.locale), domain];\n  }, [i18n.locale]);\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  const rulesRef = useRef(null);\n  const [hasRules, setHasRules] = useState(false);\n\n  return (\n    <div class=\"report-modal-container\">\n      <div class=\"top-controls\">\n        <h1>{post ? t`Report Post` : t`Report @${username}`}</h1>\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          disabled={uiState === 'loading'}\n          onClick={() => onClose()}\n        >\n          <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n        </button>\n      </div>\n      <main>\n        <div class=\"report-preview\">\n          {post ? (\n            <Status status={post} size=\"s\" previewMode />\n          ) : (\n            <AccountBlock\n              account={account}\n              avatarSize=\"xxl\"\n              useAvatarStatic\n              showStats\n              showActivity\n            />\n          )}\n        </div>\n        {!!selectedCategory &&\n          !CATEGORIES_INFO[selectedCategory].excludeStamp && (\n            <span\n              class=\"rubber-stamp\"\n              key={selectedCategory}\n              aria-hidden=\"true\"\n            >\n              {_(\n                CATEGORIES_INFO[selectedCategory].stampLabel ||\n                  _(CATEGORIES_INFO[selectedCategory].label),\n              )}\n              <small>\n                <Trans>Pending review</Trans>\n              </small>\n            </span>\n          )}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n\n            let { category, comment, forward } = entries;\n            if (!comment) comment = undefined;\n            if (forward === 'on') forward = true;\n            const ruleIds =\n              category === 'violation'\n                ? Object.entries(entries)\n                    .filter(([key]) => key.startsWith('rule_ids'))\n                    .map(([key, value]) => value)\n                : undefined;\n\n            const params = {\n              category,\n              comment,\n              forward,\n              ruleIds,\n            };\n            console.log('PARAMS', params);\n\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.reports.create({\n                  accountId: account.id,\n                  statusIds: post?.id ? [post.id] : undefined,\n                  category,\n                  comment,\n                  ruleIds,\n                  forward,\n                });\n                setUIState('success');\n                showToast(post ? t`Post reported` : t`Profile reported`);\n                onClose();\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                showToast(\n                  error?.message ||\n                    (post\n                      ? t`Unable to report post`\n                      : t`Unable to report profile`),\n                );\n              }\n            })();\n          }}\n        >\n          <p>\n            {post\n              ? t`What's the issue with this post?`\n              : t`What's the issue with this profile?`}\n          </p>\n          <section class=\"report-categories\">\n            {CATEGORIES.map((category) =>\n              category === 'violation' && !translatedRules?.length ? null : (\n                <Fragment key={category}>\n                  <label class=\"report-category\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category}\n                      required\n                      disabled={uiState === 'loading'}\n                      onChange={(e) => {\n                        setSelectedCategory(e.target.value);\n                        setShowRules(e.target.value === 'violation');\n                      }}\n                    />\n                    <span>\n                      {_(CATEGORIES_INFO[category].label)} &nbsp;\n                      <small class=\"ib insignificant\">\n                        {_(CATEGORIES_INFO[category].description)}\n                      </small>\n                    </span>\n                  </label>\n                  {category === 'violation' && !!translatedRules?.length && (\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!showRules}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <div class=\"report-rules\" ref={rulesRef}>\n                          {translatedRules.map((rule, i) => (\n                            <label class=\"report-rule\" key={rule.id}>\n                              <input\n                                type=\"checkbox\"\n                                name={`rule_ids[${i}]`}\n                                value={rule.id}\n                                required={showRules && !hasRules}\n                                disabled={uiState === 'loading'}\n                                onChange={(e) => {\n                                  const { checked } = e.target;\n                                  if (checked) {\n                                    setHasRules(true);\n                                  } else {\n                                    const checkedInputs =\n                                      rulesRef.current.querySelectorAll(\n                                        'input:checked',\n                                      );\n                                    if (!checkedInputs.length) {\n                                      setHasRules(false);\n                                    }\n                                  }\n                                }}\n                              />\n                              <span>{rule._translatedText || rule.text}</span>\n                            </label>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </section>\n          <section class=\"report-comment\">\n            <p>\n              <label for=\"report-comment\">\n                <Trans>Additional info</Trans>\n              </label>\n            </p>\n            <textarea\n              maxlength=\"1000\"\n              rows=\"1\"\n              name=\"comment\"\n              id=\"report-comment\"\n              disabled={uiState === 'loading'}\n              required={!post} // Required if not reporting a post\n            />\n          </section>\n          {!!domain && domain !== currentDomain && (\n            <section>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    switch\n                    name=\"forward\"\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <span>\n                    <Trans>\n                      Forward to <i>{domain}</i>\n                    </Trans>\n                  </span>\n                </label>\n              </p>\n            </section>\n          )}\n          <footer>\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              <Trans>Send Report</Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).mute(); // Infinite duration\n                  showToast(t`Muted ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to mute ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Mute profile</small>\n              </Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).block();\n                  showToast(t`Blocked ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to block ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Block profile</small>\n              </Trans>\n            </button>\n            <Loader hidden={uiState !== 'loading'} />\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ReportModal;\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags\n    .list({\n      limit: LIMIT,\n    })\n    .values();\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { msg, t } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport { getLists, getListTitle } from '../utils/lists';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: msg`Home / Following`,\n  notifications: msg`Notifications`,\n  list: msg`Lists`,\n  public: msg`Public (Local / Federated)`,\n  search: msg`Search`,\n  'account-statuses': msg`Account`,\n  bookmarks: msg`Bookmarks`,\n  favourites: msg`Likes`,\n  hashtag: msg`Hashtag`,\n  trending: msg`Trending`,\n  mentions: msg`Mentions`,\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: msg`List ID`,\n      name: 'id',\n      notRequired: true,\n    },\n  ],\n  public: [\n    {\n      text: msg`Local only`,\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: msg`Search term`,\n      name: 'query',\n      type: 'text',\n      placeholder: msg`Optional, unless for multi-column mode`,\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: msg`e.g. PixelArt (Max 5, space-separated)`,\n      pattern: '[^#]+',\n    },\n    {\n      text: msg`Media only`,\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n};\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) =>\n      index === 0\n        ? t`Home`\n        : t({ id: 'following.title', message: 'Following' }),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: msg`Mentions`,\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: msg`Notifications`,\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: ({ id }) => (id ? 'list' : 'lists'),\n    title: ({ id }) => (id ? getListTitle(id) : t`Lists`),\n    path: ({ id }) => (id ? `/l/${id}` : '/l'),\n    icon: 'list',\n    excludeViewMode: ({ id }) => (!id ? ['multi-column'] : []),\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? t`Local` : t`Federated`),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: msg`Trending`,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : t`Search`),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: msg`Bookmarks`,\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: msg`Likes`,\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> <Trans>Shortcuts</Trans>{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            <Trans>beta</Trans>\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>\n          <Trans>Specify a list of shortcuts that'll appear&nbsp;as:</Trans>\n        </p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: t`Floating button`,\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: t`Tab/Menu bar`,\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: t`Multi-column`,\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                } else {\n                  title = _(title);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                } else {\n                  subtitle = _(subtitle);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          <Trans>Not available in current view mode</Trans>\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt={t`Move up`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt={t`Move down`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt={t`Edit`} />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    <Trans>\n                      Add more than one shortcut/column to make this work.\n                    </Trans>\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`No columns yet. Tap on the Add column button.`\n                : t`No shortcuts yet. Tap on the Add shortcut button.`}\n            </p>\n            <p>\n              <Trans>\n                Not sure what to add?\n                <br />\n                Try adding{' '}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.shortcuts = [\n                      {\n                        type: 'following',\n                      },\n                      {\n                        type: 'notifications',\n                      },\n                    ];\n                  }}\n                >\n                  Home / Following and Notifications\n                </a>{' '}\n                first.\n              </Trans>\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? t`Max ${SHORTCUTS_LIMIT} columns`\n              : t`Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            <Trans>Import/export</Trans>\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`Add column…`\n                : t`Add shortcut…`}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FORM_NOTES = {\n  list: msg`Specific list is optional. For multi-column mode, list is required, else the column will not be shown.`,\n  search: msg`For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: msg`Multiple hashtags are supported. Space-separated.`,\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  const { _ } = useLingui();\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await getLists();\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit shortcut` : t`Add shortcut`}</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>\n                <Trans>Timeline</Trans>\n              </span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n                dir=\"auto\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{_(TYPE_TEXT[type])}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>\n                        <Trans>List</Trans>\n                      </span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                        dir=\"auto\"\n                      >\n                        <option value=\"\"></option>\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{_(text)}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={_(placeholder)}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                      dir=\"auto\"\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {_(FORM_NOTES[currentType])}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? t`Save` : t`Add`}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                <Trans>Remove</Trans>\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>\n            Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n          </Trans>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Import</Trans>\n            </span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder={t`Paste shortcuts here`}\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n              dir=\"auto\"\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = getCurrentAccountID();\n                  showToast(\n                    t`Downloading saved shortcuts from instance server…`,\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to download shortcuts`);\n                  }\n                }}\n                title={t`Download shortcuts from instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {_(TYPE_TEXT[shortcut.type])}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>\n                    <Trans>* Exists in current shortcuts</Trans>\n                  </small>\n                  <br />\n                  <small>\n                    ⚠️{' '}\n                    <Trans>\n                      List may not work if it's from a different account.\n                    </Trans>\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>\n                ⚠️ <Trans>Invalid settings format</Trans>\n              </small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel={t`Append to current shortcuts?`}\n                  menuFooter={\n                    <div class=\"footer\">\n                      <Trans>\n                        Only shortcuts that don’t exist in current shortcuts\n                        will be appended.\n                      </Trans>\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast(t`No new shortcuts to import`);\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? t`Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : t`Shortcuts imported`,\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    <Trans>Import & append…</Trans>\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? t`Override current shortcuts?`\n                  : t`Import shortcuts?`\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast(t`Shortcuts imported`);\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? t`or override…` : t`Import…`}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Export</Trans>\n            </span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast(t`Shortcuts copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcuts`);\n                }\n              }}\n              dir=\"auto\"\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast(t`Shortcut settings copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcut settings`);\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" />{' '}\n              <span>\n                <Trans>Copy</Trans>\n              </span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Sharing doesn't seem to work.`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" />{' '}\n                  <span>\n                    <Trans>Share</Trans>\n                  </span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = getCurrentAccountID();\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      const settingsJSON = JSON.stringify({\n                        v: '1', // version\n                        dt: Date.now(), // datetime stamp\n                        data: shortcutsStr, // shortcuts settings string\n                      });\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast(t`Saving shortcuts to instance server…`);\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast(t`Shortcuts saved`);\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to save shortcuts`);\n                  }\n                }}\n                title={t`Sync to instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                <Plural\n                  value={shortcutsStr.length}\n                  one=\"# character\"\n                  other=\"# characters\"\n                />\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>\n                  <Trans>Raw Shortcuts JSON</Trans>\n                </small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" />{' '}\n              <Trans>\n                Import/export settings from/to instance server (Very\n                experimental)\n              </Trans>\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { subscribe, useSnapshot } from 'valtio';\n\nimport Accounts from '../pages/accounts';\nimport Settings from '../pages/settings';\nimport focusDeck from '../utils/focus-deck';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport AccountSheet from './account-sheet';\nimport ComposeSuspense, { preload } from './compose-suspense';\nimport Drafts from './drafts';\nimport EmbedModal from './embed-modal';\nimport GenericAccounts from './generic-accounts';\nimport MediaAltModal from './media-alt-modal';\nimport MediaModal from './media-modal';\nimport Modal from './modal';\nimport ReportModal from './report-modal';\nimport ShortcutsSettings from './shortcuts-settings';\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // When closing modal, focus on deck\n    if (/^show/i.test(path) && !value) {\n      focusDeck();\n    }\n  }\n});\n\nexport default function Modals() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(preload, 1000);\n  }, []);\n\n  return (\n    <>\n      {!!snapStates.showCompose && (\n        <Modal\n          class={`solid ${snapStates.composerState.minimized ? 'min' : ''}`}\n          minimized={!!snapStates.composerState.minimized}\n        >\n          <ComposeSuspense\n            replyToStatus={\n              typeof snapStates.showCompose !== 'boolean'\n                ? snapStates.showCompose.replyToStatus\n                : window.__COMPOSE__?.replyToStatus || null\n            }\n            editStatus={\n              states.showCompose?.editStatus ||\n              window.__COMPOSE__?.editStatus ||\n              null\n            }\n            draftStatus={\n              states.showCompose?.draftStatus ||\n              window.__COMPOSE__?.draftStatus ||\n              null\n            }\n            onClose={(results) => {\n              const { newStatus, instance, type, scheduledAt } = results || {};\n              states.showCompose = false;\n              window.__COMPOSE__ = null;\n              if (newStatus) {\n                states.reloadStatusPage++;\n                if (scheduledAt) states.reloadScheduledPosts++;\n                showToast({\n                  text: {\n                    post: scheduledAt\n                      ? t`Post scheduled`\n                      : t`Post published. Check it out.`,\n                    reply: scheduledAt\n                      ? t`Reply scheduled`\n                      : t`Reply posted. Check it out.`,\n                    edit: t`Post updated. Check it out.`,\n                  }[type || 'post'],\n                  delay: 1000,\n                  duration: 10_000, // 10 seconds\n                  onClick: (toast) => {\n                    toast.hideToast();\n                    states.prevLocation = location;\n                    if (scheduledAt) {\n                      navigate('/sp');\n                    } else {\n                      navigate(\n                        instance\n                          ? `/${instance}/s/${newStatus.id}`\n                          : `/s/${newStatus.id}`,\n                      );\n                    }\n                  },\n                });\n              }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showSettings && (\n        <Modal\n          onClose={() => {\n            states.showSettings = false;\n          }}\n        >\n          <Settings\n            onClose={() => {\n              states.showSettings = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccounts && (\n        <Modal\n          onClose={() => {\n            states.showAccounts = false;\n          }}\n        >\n          <Accounts\n            onClose={() => {\n              states.showAccounts = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccount && (\n        <Modal\n          onClose={() => {\n            states.showAccount = false;\n          }}\n        >\n          <AccountSheet\n            account={snapStates.showAccount?.account || snapStates.showAccount}\n            instance={snapStates.showAccount?.instance}\n            onClose={({ destination } = {}) => {\n              states.showAccount = false;\n              // states.showGenericAccounts = false;\n              // if (destination) {\n              //   states.showAccounts = false;\n              // }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showDrafts && (\n        <Modal\n          onClose={() => {\n            states.showDrafts = false;\n          }}\n        >\n          <Drafts onClose={() => (states.showDrafts = false)} />\n        </Modal>\n      )}\n      {!!snapStates.showMediaModal && (\n        <Modal\n          onClick={(e) => {\n            if (\n              e.target === e.currentTarget ||\n              e.target.classList.contains('media')\n            ) {\n              states.showMediaModal = false;\n            }\n          }}\n        >\n          <MediaModal\n            mediaAttachments={snapStates.showMediaModal.mediaAttachments}\n            instance={snapStates.showMediaModal.instance}\n            index={snapStates.showMediaModal.mediaIndex}\n            statusID={snapStates.showMediaModal.statusID}\n            onClose={() => {\n              states.showMediaModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showShortcutsSettings && (\n        <Modal\n          onClose={() => {\n            states.showShortcutsSettings = false;\n          }}\n        >\n          <ShortcutsSettings\n            onClose={() => (states.showShortcutsSettings = false)}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showGenericAccounts && (\n        <Modal\n          onClose={() => {\n            states.showGenericAccounts = false;\n          }}\n        >\n          <GenericAccounts\n            instance={snapStates.showGenericAccounts.instance}\n            excludeRelationshipAttrs={\n              snapStates.showGenericAccounts.excludeRelationshipAttrs\n            }\n            postID={snapStates.showGenericAccounts.postID}\n            onClose={() => (states.showGenericAccounts = false)}\n            blankCopy={snapStates.showGenericAccounts.blankCopy}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showMediaAlt && (\n        <Modal\n          onClose={(e) => {\n            states.showMediaAlt = false;\n          }}\n        >\n          <MediaAltModal\n            alt={snapStates.showMediaAlt.alt || snapStates.showMediaAlt}\n            lang={snapStates.showMediaAlt?.lang}\n            onClose={() => {\n              states.showMediaAlt = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showEmbedModal && (\n        <Modal\n          class=\"solid\"\n          onClose={() => {\n            states.showEmbedModal = false;\n          }}\n        >\n          <EmbedModal\n            html={snapStates.showEmbedModal.html}\n            url={snapStates.showEmbedModal.url}\n            width={snapStates.showEmbedModal.width}\n            height={snapStates.showEmbedModal.height}\n            onClose={() => {\n              states.showEmbedModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showReportModal && (\n        <Modal\n          onClose={() => {\n            states.showReportModal = false;\n          }}\n        >\n          <ReportModal\n            account={snapStates.showReportModal.account}\n            post={snapStates.showReportModal.post}\n            onClose={() => {\n              states.showReportModal = false;\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        <Trans>Accept</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        <Trans>Reject</Trans>\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon\n              icon=\"check-circle\"\n              alt={t`Accepted`}\n              class=\"follow-accepted\"\n            />\n          ) : (\n            <Icon icon=\"x-circle\" alt={t`Rejected`} class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { msg, t } from '@lingui/core/macro';\nimport { Plural, Select, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { api } from '../utils/api';\nimport { isFiltered } from '../utils/filters';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { statusKey } from '../utils/states';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport CustomEmoji from './custom-emoji';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n  severed_relationships: 'heart-break',\n  moderation_warning: 'alert',\n  emoji_reaction: 'emoji2',\n  'pleroma:emoji_reaction': 'emoji2',\n  annual_report: 'celebrate',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\nsevered_relationships = Severed relationships\nmoderation_warning = Moderation warning\n*/\n\nfunction emojiText({ account, emoji, emoji_url }) {\n  let url;\n  let staticUrl;\n  if (typeof emoji_url === 'string') {\n    url = emoji_url;\n  } else {\n    url = emoji_url?.url;\n    staticUrl = emoji_url?.staticUrl;\n  }\n  const emojiObject = url ? (\n    <CustomEmoji url={url} staticUrl={staticUrl} alt={emoji} />\n  ) : (\n    emoji\n  );\n  return (\n    <Trans>\n      {account} reacted to your post with {emojiObject}\n    </Trans>\n  );\n}\n\nconst contentText = {\n  status: ({ account }) => <Trans>{account} published a post.</Trans>,\n  reblog: ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted your reply.</Trans>}\n              other={<Trans>{account} boosted your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  follow: ({ account, count, components: { Subject } }) => (\n    <Plural\n      value={count}\n      _1={<Trans>{account} followed you.</Trans>}\n      other={\n        <Trans>\n          <Subject clickable={count > 1}>\n            <span title={count}>{shortenNumber(count)}</span> people\n          </Subject>{' '}\n          followed you.\n        </Trans>\n      }\n    />\n  ),\n  follow_request: ({ account }) => (\n    <Trans>{account} requested to follow you.</Trans>\n  ),\n  favourite: ({\n    account,\n    count,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} liked your reply.</Trans>}\n              other={<Trans>{account} liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  poll: () => t`A poll you have voted in or created has ended.`,\n  'poll-self': () => t`A poll you have created has ended.`,\n  'poll-voted': () => t`A poll you have voted in has ended.`,\n  update: () => t`A post you interacted with has been edited.`,\n  'favourite+reblog': ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted & liked your reply.</Trans>}\n              other={<Trans>{account} boosted & liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted & liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  'admin.sign_up': ({ account }) => <Trans>{account} signed up.</Trans>,\n  'admin.report': ({ account, targetAccount }) => (\n    <Trans>\n      {account} reported {targetAccount}\n    </Trans>\n  ),\n  severed_relationships: ({ name }) => (\n    <Trans>\n      Lost connections with <i>{name}</i>.\n    </Trans>\n  ),\n  moderation_warning: () => (\n    <b>\n      <Trans>Moderation warning</Trans>\n    </b>\n  ),\n  emoji_reaction: emojiText,\n  'pleroma:emoji_reaction': emojiText,\n  annual_report: ({ year }) => <Trans>Your {year} #Wrapstodon is here!</Trans>,\n};\n\n// account_suspension, domain_block, user_domain_block\nconst SEVERED_RELATIONSHIPS_TEXT = {\n  account_suspension: ({ from, targetName }) => (\n    <Trans>\n      An admin from <i>{from}</i> has suspended <i>{targetName}</i>, which means\n      you can no longer receive updates from them or interact with them.\n    </Trans>\n  ),\n  domain_block: ({ from, targetName, followersCount, followingCount }) => (\n    <Trans>\n      An admin from <i>{from}</i> has blocked <i>{targetName}</i>. Affected\n      followers: {followersCount}, followings: {followingCount}.\n    </Trans>\n  ),\n  user_domain_block: ({ targetName, followersCount, followingCount }) => (\n    <Trans>\n      You have blocked <i>{targetName}</i>. Removed followers: {followersCount},\n      followings: {followingCount}.\n    </Trans>\n  ),\n};\n\nconst MODERATION_WARNING_TEXT = {\n  none: msg`Your account has received a moderation warning.`,\n  disable: msg`Your account has been disabled.`,\n  mark_statuses_as_sensitive: msg`Some of your posts have been marked as sensitive.`,\n  delete_statuses: msg`Some of your posts have been deleted.`,\n  sensitive: msg`Your posts will be marked as sensitive from now on.`,\n  silence: msg`Your account has been limited.`,\n  suspend: msg`Your account has been suspended.`,\n};\n\nconst AVATARS_LIMIT = 30;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const {\n    id,\n    status,\n    account,\n    report,\n    event,\n    moderation_warning,\n    annualReport,\n    // Client-side grouped notification\n    _ids,\n    _accounts,\n    _statuses,\n    _groupKeys,\n    // Server-side grouped notification\n    sampleAccounts,\n    notificationsCount,\n    groupKey,\n    _notificationsCount,\n    _sampleAccountsCount,\n  } = notification;\n  let { type } = notification;\n\n  if (type === 'mention' && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = getCurrentAccountID();\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    if (_accounts) {\n      for (const account of _accounts) {\n        if (account._types?.includes('favourite')) {\n          favsCount++;\n        }\n        if (account._types?.includes('reblog')) {\n          reblogsCount++;\n        }\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = t`[Unknown notification type: ${type}]`;\n  }\n\n  const Subject = ({ clickable, ...props }) =>\n    clickable ? (\n      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts} {...props} />\n    ) : (\n      <b {...props} />\n    );\n\n  const diffCount =\n    notificationsCount > 0 && notificationsCount > sampleAccounts?.length;\n  const expandAccounts = diffCount ? 'remote' : 'local';\n\n  if (typeof text === 'function') {\n    const count =\n      (type === 'favourite' || type === 'reblog') && notificationsCount\n        ? diffCount\n          ? notificationsCount\n          : sampleAccounts?.length\n        : _accounts?.length || sampleAccounts?.length || (account ? 1 : 0);\n    const postsCount = _statuses?.length || (status ? 1 : 0);\n    if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text({\n          account: <NameText account={account} showAvatar />,\n          targetAccount: <NameText account={targetAccount} showAvatar />,\n        });\n      }\n    } else if (type === 'severed_relationships') {\n      const targetName = event?.targetName;\n      if (targetName) {\n        text = text({ name: targetName });\n      }\n    } else if (\n      (type === 'emoji_reaction' || type === 'pleroma:emoji_reaction') &&\n      notification.emoji\n    ) {\n      const emojiURL =\n        notification.emoji_url || // This is string\n        status?.emojis?.find?.(\n          (emoji) =>\n            emoji?.shortcode ===\n            notification.emoji.replace(/^:/, '').replace(/:$/, ''),\n        ); // Emoji object instead of string\n      text = text({\n        account: <NameText account={account} showAvatar />,\n        emoji: notification.emoji,\n        emojiURL,\n      });\n    } else if (type === 'annual_report') {\n      text = text({\n        ...notification.annualReport,\n      });\n    } else {\n      text = text({\n        account: account ? (\n          <NameText account={account} showAvatar />\n        ) : (\n          sampleAccounts?.[0] && (\n            <NameText account={sampleAccounts[0]} showAvatar />\n          )\n        ),\n        count,\n        postsCount,\n        postType: isReplyToOthers ? 'reply' : 'post',\n        components: { Subject },\n      });\n    }\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': t`Boosted/Liked by…`,\n      favourite: t`Liked by…`,\n      reblog: t`Boosted by…`,\n      follow: t`Followed by…`,\n    }[type] || t`Accounts`;\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n      postID: statusKey(actualStatusID, instance),\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  // If there's a status and filter action is 'hide', then the notification is hidden\n  if (!!status?.filtered) {\n    const isOwnPost = status?.account?.id === currentAccount;\n    const filterInfo = isFiltered(status.filtered, 'notifications');\n    if (!isSelf && !isOwnPost && filterInfo?.action === 'hide') {\n      return null;\n    }\n  }\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={_ids || id}\n      data-group-key={_groupKeys?.join(' ') || groupKey}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {/* {(type === 'favourite+reblog' ||\n          type === 'favourite' ||\n          type === 'reblog') && (\n          <>\n            💥 {type} {expandAccounts}{' '}\n            <mark>\n              N{_notificationsCount?.join(',')} + A\n              {_sampleAccountsCount?.join(',')}\n            </mark>{' '}\n            ‒{' '}\n            <mark>\n              N{notificationsCount} + A{sampleAccounts?.length}\n            </mark>\n          </>\n        )} */}\n        {type !== 'mention' && (\n          <>\n            <p>{text}</p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n            {type === 'severed_relationships' && (\n              <div>\n                {SEVERED_RELATIONSHIPS_TEXT[event.type]({\n                  from: instance,\n                  ...event,\n                })}\n                <br />\n                <a\n                  href={`https://${instance}/severed_relationships`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n                .\n              </div>\n            )}\n            {type === 'moderation_warning' && !!moderation_warning && (\n              <div>\n                {_(MODERATION_WARNING_TEXT[moderation_warning.action]())}\n                <br />\n                <a\n                  href={`/disputes/strikes/${moderation_warning.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n              </div>\n            )}\n            {type === 'annual_report' && (\n              <div>\n                <Link to={`/annual_report/${annualReport?.year}`}>\n                  <Trans>View #Wrapstodon</Trans>\n                </Link>\n              </div>\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                          ? 'xl'\n                          : 'l'\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {(type === 'favourite+reblog' ||\n              type === 'favourite' ||\n              type === 'reblog') &&\n            expandAccounts === 'remote' ? (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                data-group-keys={_groupKeys?.join(' ')}\n                onClick={() => {\n                  states.showGenericAccounts = {\n                    heading: genericAccountsHeading,\n                    accounts: _accounts,\n                    fetchAccounts: async () => {\n                      const keyAccounts = await Promise.allSettled(\n                        _groupKeys.map(async (gKey) => {\n                          const iterator = masto.v2.notifications\n                            .$select(gKey)\n                            .accounts.list()\n                            .values();\n                          return [gKey, (await iterator.next()).value];\n                        }),\n                      );\n                      const accounts = [];\n                      for (const keyAccount of keyAccounts) {\n                        const [key, _accounts] = keyAccount.value;\n                        const type = /^favourite/.test(key)\n                          ? 'favourite'\n                          : /^reblog/.test(key)\n                            ? 'reblog'\n                            : null;\n                        if (!type) continue;\n                        for (const account of _accounts) {\n                          const theAccount = accounts.find(\n                            (a) => a.id === account.id,\n                          );\n                          if (theAccount) {\n                            theAccount._types.push(type);\n                          } else {\n                            account._types = [type];\n                            accounts.push(account);\n                          }\n                        }\n                      }\n                      return {\n                        done: true,\n                        value: accounts,\n                      };\n                    },\n                    showReactions: type === 'favourite+reblog',\n                    postID: statusKey(actualStatusID, instance),\n                  };\n                }}\n              >\n                +\n                {(type === 'favourite' || type === 'reblog') &&\n                  notificationsCount - _accounts.length}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                onClick={handleOpenGenericAccounts}\n              >\n                {_accounts.length > AVATARS_LIMIT &&\n                  `+${_accounts.length - AVATARS_LIMIT}`}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            )}\n          </p>\n        )}\n        {!_accounts?.length && sampleAccounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {sampleAccounts.map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size=\"xxl\"\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {/* {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )} */}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {notificationsCount > sampleAccounts.length && (\n              <Link\n                to={\n                  instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                }\n                class=\"button small plain centered\"\n              >\n                +{notificationsCount - sampleAccounts.length}\n                <Icon icon=\"chevron-right\" />\n              </Link>\n            )}\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                    allowFilters\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n                allowFilters\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n                allowFilters\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more={t`Read more →`} ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  const { t } = useLingui();\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <b>\n              <Trans>Notification</Trans>\n            </b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>\n                <Trans>This notification is from your other account.</Trans>\n              </p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>\n                  <Trans>View all notifications</Trans>\n                </span>{' '}\n                <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { t } = useLingui();\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder={t`Search`}\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          formRef.current\n            ?.querySelector('.search-popover-item')\n            ?.classList.add('focus');\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const lastItem = document.querySelector(\n                    '.search-popover-item:last-child',\n                  );\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen || !query}>\n        {/* {!!query && (\n          <Link\n            to={`/search?q=${encodeURIComponent(query)}`}\n            class=\"search-popover-item focus\"\n            onClick={(e) => {\n              props?.onSubmit?.(e);\n            }}\n          >\n            <Icon icon=\"search\" />\n            <span>{query}</span>\n          </Link>\n        )} */}\n        {!!query &&\n          [\n            {\n              label: (\n                <Trans>\n                  {query}{' '}\n                  <small class=\"insignificant\">\n                    ‒ accounts, hashtags &amp; posts\n                  </small>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}`,\n              top: !type && !/\\s/.test(query),\n              hidden: !!type,\n            },\n            {\n              label: (\n                <Trans>\n                  Posts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=statuses`,\n              hidden: /^https?:/.test(query),\n              top: /\\s/.test(query),\n              icon: 'document',\n              queryType: 'statuses',\n            },\n            {\n              label: (\n                <Trans>\n                  Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n                </Trans>\n              ),\n              to: `/${instance}/t/${query.replace(/^#/, '')}`,\n              hidden:\n                /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n              top: /^#/.test(query),\n              type: 'link',\n              icon: 'hashtag',\n              queryType: 'hashtags',\n            },\n            {\n              label: (\n                <Trans>\n                  Look up <mark>{query}</mark>\n                </Trans>\n              ),\n              to: `/${query}`,\n              hidden: !/^https?:/.test(query),\n              top: /^https?:/.test(query),\n              type: 'link',\n            },\n            {\n              label: (\n                <Trans>\n                  Accounts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=accounts`,\n              icon: 'group',\n              queryType: 'accounts',\n            },\n          ]\n            .sort((a, b) => {\n              if (type) {\n                if (a.queryType === type) return -1;\n                if (b.queryType === type) return 1;\n              }\n              if (a.top && !b.top) return -1;\n              if (!a.top && b.top) return 1;\n              return 0;\n            })\n            .filter(({ hidden }) => !hidden)\n            .map(({ label, to, icon, type }, i) => (\n              <Link\n                to={to}\n                class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                // hidden={hidden}\n                onClick={(e) => {\n                  console.log('onClick', e);\n                  props?.onSubmit?.(e);\n                }}\n              >\n                <Icon\n                  icon={icon || (type === 'link' ? 'arrow-right' : 'search')}\n                  class=\"more-insignificant\"\n                />\n                <span>{label}</span>{' '}\n              </Link>\n            ))}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return (\n          isSearchPage ||\n          hasModal ||\n          e.metaKey ||\n          e.ctrlKey ||\n          e.altKey ||\n          e.shiftKey\n        );\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={!showSearch}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","import './shortcuts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport ListExclusiveBadge from './list-exclusive-badge';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction Shortcuts() {\n  const { t, _ } = useLingui();\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  const isMultiColumnMode =\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode);\n\n  const menuRef = useRef();\n  const tabBarRef = useRef();\n\n  const hasLists = useRef(false);\n  const formattedShortcuts = shortcuts\n    .map((pin, i) => {\n      const { type, ...data } = pin;\n      if (!SHORTCUTS_META[type]) return null;\n      let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n      if (typeof id === 'function') {\n        id = id(data, i);\n      }\n      if (typeof path === 'function') {\n        path = path(\n          {\n            ...data,\n            instance: data.instance || instance,\n          },\n          i,\n        );\n      }\n      if (typeof title === 'function') {\n        title = title(data, i);\n      } else {\n        title = _(title);\n      }\n      if (typeof subtitle === 'function') {\n        subtitle = subtitle(data, i);\n      } else {\n        subtitle = _(subtitle);\n      }\n      if (typeof icon === 'function') {\n        icon = icon(data, i);\n      }\n\n      if (id === 'lists') {\n        hasLists.current = true;\n      }\n\n      return {\n        id,\n        path,\n        title,\n        subtitle,\n        icon,\n      };\n    })\n    .filter(Boolean);\n\n  // Auto-scroll to active tab on first render\n  useEffect(() => {\n    if (\n      snapStates.settings.shortcutsViewMode === 'tab-menu-bar' &&\n      tabBarRef.current\n    ) {\n      const timeoutId = setTimeout(() => {\n        const activeTab = tabBarRef.current?.querySelector('.is-active');\n        if (activeTab) {\n          activeTab.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'center',\n          });\n        }\n      }, 100);\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, []);\n\n  const navigate = useNavigate();\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e) => {\n      const index = parseInt(e.key, 10) - 1;\n      if (index < formattedShortcuts.length) {\n        const { path } = formattedShortcuts[index];\n        if (path) {\n          navigate(path);\n          menuRef.current?.closeMenu?.();\n        }\n      }\n    },\n    {\n      enabled: !isMultiColumnMode,\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const [lists, setLists] = useState([]);\n\n  if (isMultiColumnMode) {\n    return null;\n  }\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          ref={tabBarRef}\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" alt={title} />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          onMenuChange={(e) => {\n            if (e.open && hasLists.current) {\n              getLists().then(setLists);\n            }\n          }}\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt={t`Shortcuts`} />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            if (id === 'lists') {\n              return (\n                <SubMenu2\n                  menuClassName=\"glass-menu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon={icon} size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <AsyncText>{title}</AsyncText>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuDivider />\n                  {lists?.map((list) => (\n                    <MenuLink key={list.id} to={`/l/${list.id}`}>\n                      <span>\n                        {list.title}\n                        {list.exclusive && (\n                          <>\n                            {' '}\n                            <ListExclusiveBadge />\n                          </>\n                        )}\n                      </span>\n                    </MenuLink>\n                  ))}\n                </SubMenu2>\n              );\n            }\n\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\nimport supports from './supports';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  const inReplyToIds = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          const aDate = new Date(a.createdAt);\n          const bDate = new Date(b.createdAt);\n          return aDate - bDate;\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    // PREPARE FOR REPLY HINTS\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        inReplyToIds.push({\n          sKey,\n          inReplyToId: item.inReplyToId,\n        });\n        // queueMicrotask(async () => {\n        //   try {\n        //     const { masto } = api({ instance });\n        //     // const replyToStatus = await masto.v1.statuses\n        //     //   .$select(item.inReplyToId)\n        //     //   .fetch();\n        //     const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n        //     saveStatus(replyToStatus, instance, {\n        //       skipThreading: true,\n        //       skipUnfurling: true,\n        //     });\n        //     states.statusReply[sKey] = {\n        //       id: replyToStatus.id,\n        //       instance,\n        //     };\n        //   } catch (e) {\n        //     // Silently fail\n        //     console.error(e);\n        //   }\n        // });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  // FETCH AND SHOW REPLY HINTS\n  if (inReplyToIds?.length) {\n    queueMicrotask(() => {\n      const { masto } = api({ instance });\n      console.log('REPLYHINT', inReplyToIds);\n\n      // Fallback if batch fetch fails or returns nothing or not supported\n      async function fallbackFetch() {\n        for (let i = 0; i < inReplyToIds.length; i++) {\n          const { sKey, inReplyToId } = inReplyToIds[i];\n          try {\n            const replyToStatus = await fetchStatus(inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n            // Pause 1s\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        }\n      }\n\n      if (supports('@mastodon/fetch-multiple-statuses')) {\n        // This is batch fetching yooo, woot\n        // Limit 20, returns 422 if exceeded https://github.com/mastodon/mastodon/pull/27871\n        const ids = inReplyToIds.map(({ inReplyToId }) => inReplyToId);\n        (async () => {\n          try {\n            const replyToStatuses = await masto.v1.statuses.list({ id: ids });\n            if (replyToStatuses?.length) {\n              for (const replyToStatus of replyToStatuses) {\n                saveStatus(replyToStatus, instance, {\n                  skipThreading: true,\n                });\n                const sKey = inReplyToIds.find(\n                  ({ inReplyToId }) => inReplyToId === replyToStatus.id,\n                )?.sKey;\n                if (sKey) {\n                  states.statusReply[sKey] = {\n                    id: replyToStatus.id,\n                    instance,\n                  };\n                }\n              }\n            } else {\n              fallbackFetch();\n            }\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n            fallbackFetch();\n          }\n        })();\n      } else {\n        fallbackFetch();\n      }\n    });\n  }\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { getPreferences } from '../utils/api';\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  const { t } = useLingui();\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const prefs = getPreferences();\n  const readingExpandMedia =\n    prefs['reading:expand:media']?.toLowerCase() || 'default';\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? t`Sensitive media` : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? filterTitleStr\n              ? t`Filtered: ${filterTitleStr}`\n              : t`Filtered`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getAccounts, getCurrentAccountID } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport ListExclusiveBadge from './list-exclusive-badge';\nimport MenuLink from './menu-link';\nimport SubMenu2 from './submenu2';\n\nfunction NavMenu(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, moreThanOneAccount] = useMemo(() => {\n    const accounts = getAccounts();\n    const acc =\n      accounts.find((account) => account.info.id === getCurrentAccountID()) ||\n      accounts[0];\n    return [acc, accounts.length > 1];\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes\n        .list({\n          limit: 80,\n        })\n        .values();\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks\n        .list({\n          limit: 80,\n        })\n        .values();\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${menuState === 'open' ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} alt={t`Menu`} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm(t`Reload page now to update?`);\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>\n                  <Trans>New update available…</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" />{' '}\n            <span>\n              <Trans>Home</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" />{' '}\n                  <span>\n                    <Trans id=\"following.title\">Following</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>\n                  <Trans>Catch-up</Trans>\n                </span>\n              </MenuLink>\n              {supports('@mastodon/mentions') && (\n                <MenuLink to=\"/mentions\">\n                  <Icon icon=\"at\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Mentions</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Notifications</Trans>\n                </span>\n                {snapStates.notificationsShowNew && (\n                  <sup title={t`New`} style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Profile</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <ListMenu menuState={menuState} />\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Bookmarks</Trans>\n                </span>\n              </MenuLink>\n              <SubMenu2\n                menuClassName=\"nav-submenu\"\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">\n                      <Trans>More…</Trans>\n                    </span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Likes</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/fh\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Followed Hashtags</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/sp\">\n                  <Icon icon=\"schedule\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Scheduled Posts</Trans>\n                  </span>\n                </MenuLink>\n                <MenuDivider />\n                {supports('@mastodon/filters') && (\n                  <MenuLink to=\"/ft\">\n                    <Icon icon=\"filters\" size=\"l\" />{' '}\n                    <span>\n                      <Trans>Filters</Trans>\n                    </span>\n                  </MenuLink>\n                )}\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: t`Muted users`,\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Muted users…</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: t`Blocked users`,\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Blocked users…</Trans>\n                  </span>\n                </MenuItem>{' '}\n              </SubMenu2>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Accounts…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Log in</Trans>\n                </span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" />{' '}\n            <span>\n              <Trans>Search</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" />{' '}\n            <span>\n              <Trans>Trending</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" />{' '}\n            <span>\n              <Trans>Local</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" />{' '}\n            <span>\n              <Trans>Federated</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Keyboard shortcuts</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Shortcuts / Columns…</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nfunction ListMenu({ menuState }) {\n  const supportsLists = supports('@mastodon/lists');\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!supportsLists) return;\n    if (menuState === 'open') {\n      getLists().then(setLists);\n    }\n  }, [menuState, supportsLists]);\n\n  return lists.length > 0 ? (\n    <SubMenu2\n      menuClassName=\"nav-submenu\"\n      overflow=\"auto\"\n      gap={-8}\n      label={\n        <>\n          <Icon icon=\"list\" size=\"l\" />\n          <span class=\"menu-grow\">\n            <Trans>Lists</Trans>\n          </span>\n          <Icon icon=\"chevron-right\" />\n        </>\n      }\n    >\n      <MenuLink to=\"/l\">\n        <span>\n          <Trans>All Lists</Trans>\n        </span>\n      </MenuLink>\n      {lists?.length > 0 && (\n        <>\n          <MenuDivider />\n          {lists.map((list) => (\n            <MenuLink key={list.id} to={`/l/${list.id}`}>\n              <span>\n                {list.title}\n                {list.exclusive && (\n                  <>\n                    {' '}\n                    <ListExclusiveBadge />\n                  </>\n                )}\n              </span>\n            </MenuLink>\n          ))}\n        </>\n      )}\n    </SubMenu2>\n  ) : (\n    supportsLists && (\n      <MenuLink to=\"/l\">\n        <Icon icon=\"list\" size=\"l\" />\n        <span>\n          <Trans>Lists</Trans>\n        </span>\n      </MenuLink>\n    )\n  );\n}\n\nexport default memo(NavMenu);\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\n\nconst scrollIntoViewOptions = {\n  block: 'start',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n  clearWhenRefresh,\n}) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('start');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n  __BENCHMARK.start(`timeline-${id}-load`);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const allowGrouping = view !== 'media';\n  const loadItemsTS = useRef(0); // Ensures only one loadItems at a time\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      // if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          const ts = (loadItemsTS.current = Date.now());\n          let { done, value } = await fetchItems(firstLoad);\n          if (ts !== loadItemsTS.current) return;\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n          __BENCHMARK.end(`timeline-${id}-load`);\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          if (firstLoad && !items.length && errorText) {\n            showToast(errorText);\n          }\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1_000,\n    {\n      leading: true,\n      // trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys(\n    'j, shift+j',\n    (e, handler) => {\n      // Fix bug: shift+j is fired even when j is pressed due to useKey: true\n      if (e.shiftKey !== handler.shift) return;\n\n      // focus on next status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      ).filter((item) => !!item.offsetHeight);\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (handler.shift) {\n          // get next status that's not .timeline-item-alt\n          nextItem = allItems.find(\n            (item, index) =>\n              index > activeItemIndex &&\n              !item.classList.contains('timeline-item-alt'),\n          );\n        }\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k, shift+k',\n    (e, handler) => {\n      // Fix bug: shift+k is fired even when k is pressed due to useKey: true\n      if (e.shiftKey !== handler.shift) return;\n\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      ).filter((item) => !!item.offsetHeight);\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (handler.shift) {\n          // get prev status that's not .timeline-item-alt\n          prevItem = allItems.findLast(\n            (item, index) =>\n              index < activeItemIndex &&\n              !item.classList.contains('timeline-item-alt'),\n          );\n        }\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey,\n    },\n  );\n\n  const oRef = useHotkeys(\n    ['enter', 'o'],\n    () => {\n      // open active status\n      const activeItem = document.activeElement;\n      if (activeItem?.matches(itemsSelector)) {\n        activeItem.click();\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    if (showNewPostsIndicator) loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems, showNewPostsIndicator]);\n  const dotRef = useHotkeys('.', handleLoadNewPosts, {\n    useKey: true,\n    ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n  });\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (firstLoad.current) {\n      firstLoad.current = false;\n      return;\n    }\n    if (clearWhenRefresh && items?.length) {\n      loadItems.cancel?.();\n      setItems([]);\n    }\n    loadItems(true);\n  }, [clearWhenRefresh, refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class={`deck-container ${\n          mediaFirst ? 'deck-container-media-first' : ''\n        }`}\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef.current = node;\n          kRef.current = node;\n          oRef.current = node;\n          dotRef.current = node;\n        }}\n        tabIndex=\"-1\"\n        onClick={(e) => {\n          // If click on timeline item, unhide header\n          if (\n            headerRef.current &&\n            e.target.closest('.timeline-item, .timeline-item-alt')\n          ) {\n            setTimeout(() => {\n              headerRef.current.hidden = false;\n            }, 250);\n          }\n        }}\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> <Trans>New posts</Trans>\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                    mediaFirst={mediaFirst}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      <Trans>Show more…</Trans>\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">\n                    <Trans>The end.</Trans>\n                  </p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton mediaFirst={mediaFirst} />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' &&\n            uiState !== 'start' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n    mediaFirst,\n  }) => {\n    const { t } = useLingui();\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n\n    if (items) {\n      let fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = plural(fItems.length, {\n          one: '# Boost',\n          other: '# Boosts',\n        });\n      } else if (type === 'pinned') {\n        title = t`Pinned posts`;\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        const filteredItemsIDs = new Set();\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered && aFiltered?.action !== 'blur') {\n            filteredItemsIDs.add(a.id);\n          }\n          if (bFiltered && bFiltered?.action !== 'blur') {\n            filteredItemsIDs.add(b.id);\n          }\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n\n        if (filteredItemsIDs.size >= 2) {\n          const GROUP_SIZE = 5;\n          // If 2 or more, group filtered items into one, limit to GROUP_SIZE in a group\n          const unfiltered = [];\n          const filtered = [];\n          fItems.forEach((item) => {\n            if (filteredItemsIDs.has(item.id)) {\n              filtered.push(item);\n            } else {\n              unfiltered.push(item);\n            }\n          });\n          const filteredItems = [];\n          for (let i = 0; i < filtered.length; i += GROUP_SIZE) {\n            filteredItems.push({\n              _grouped: true,\n              posts: filtered.slice(i, i + GROUP_SIZE),\n            });\n          }\n          fItems = unfiltered.concat(filteredItems);\n        }\n\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned, _grouped } = item;\n                if (_grouped) {\n                  return (\n                    <li key={statusID} class=\"timeline-item-carousel-group\">\n                      {item.posts.map((item) => {\n                        const { id: statusID, reblog, _pinned } = item;\n                        const actualStatusID = reblog?.id || statusID;\n                        const url = instance\n                          ? `/${instance}/s/${actualStatusID}`\n                          : `/s/${actualStatusID}`;\n                        if (_pinned) useItemID = false;\n                        return (\n                          <Link\n                            class=\"status-carousel-link timeline-item-alt\"\n                            to={url}\n                          >\n                            {useItemID ? (\n                              <Status\n                                statusID={statusID}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            ) : (\n                              <Status\n                                status={item}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            )}\n                          </Link>\n                        );\n                      })}\n                    </li>\n                  );\n                }\n\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact\n                  status={item}\n                  instance={instance}\n                  filterContext={filterContext}\n                />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const { t } = useLingui();\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? 1 : -1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" alt={t`Previous`} />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? -1 : 1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" alt={t`Next`} />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance, filterContext }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  const filterInfo = isFiltered(status.filtered, filterContext);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      {!!snapStates.statusThreadNumber[sKey] ? (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n          {snapStates.statusThreadNumber[sKey]\n            ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n            : ''}\n        </div>\n      ) : (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n        </div>\n      )}\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {!!filterInfo && filterInfo?.action !== 'blur' ? (\n          <b\n            class=\"status-filtered-badge badge-meta horizontal\"\n            title={filterInfo?.titlesStr || ''}\n          >\n            {filterInfo?.titlesStr ? (\n              <Trans>\n                <span>Filtered</span>: <span>{filterInfo.titlesStr}</span>\n              </Trans>\n            ) : (\n              <span>\n                <Trans>Filtered</Trans>\n              </span>\n            )}\n          </b>\n        ) : (\n          <>\n            {statusPeekText}\n            {status.sensitive && status.spoilerText && (\n              <>\n                {' '}\n                <span class=\"spoiler-badge\">\n                  <Icon icon=\"eye-close\" size=\"s\" alt={t`Content warning`} />\n                </span>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = (() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n})();\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.list({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const { i18n, t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.list({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    let results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .values()\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media || undefined,\n          tagged,\n        })\n        .values();\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      if (!supports('@mastodon/pinned-posts')) {\n        // Check if value is same as pinned post (results)\n        // If the index for every post is the same, means API might not support pinned posts\n        // TODO: This is a really weird check, fix this at some point\n        if (results.length) {\n          let pinnedStatusesIds = [];\n          if (results[0]?.type === 'pinned') {\n            pinnedStatusesIds = results[0].id;\n          } else {\n            pinnedStatusesIds = results\n              .filter((status) => status._pinned)\n              .map((status) => status.id);\n          }\n          const containsAllPinned = pinnedStatusesIds.every((postId) =>\n            value.some((status) => status.id === postId),\n          );\n          if (containsAllPinned) {\n            // Remove pinned posts\n            results = [];\n          }\n        }\n      }\n\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  let title = t`Account posts`;\n  if (account?.acct) {\n    const acctDisplay = (/@/.test(account.acct) ? '' : '@') + account.acct;\n    const accountDisplay = account?.displayName\n      ? `${account.displayName} (${acctDisplay})`\n      : `${acctDisplay}`;\n    if (!excludeReplies) {\n      title = t`${accountDisplay} (+ Replies)`;\n    } else if (excludeBoosts) {\n      title = t`${accountDisplay} (- Boosts)`;\n    } else if (tagged) {\n      title = t`${accountDisplay} (#${tagged})`;\n    } else if (media) {\n      title = t`${accountDisplay} (Media)`;\n    } else if (month) {\n      const monthYear = new Date(month).toLocaleString(i18n.locale, {\n        month: 'long',\n        year: 'numeric',\n      });\n      title = t`${accountDisplay} (${monthYear})`;\n    } else {\n      title = accountDisplay;\n    }\n  }\n  useTitle(title, '/:instance?/a/:id');\n\n  const fetchAccount = useCallback(() => {\n    return memFetchAccount(id, masto);\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      // No need, because the whole filter bar is hidden\n      // TODO: Revisit this\n      if (!mediaFirst) {\n        try {\n          const featuredTags = await masto.v1.accounts\n            .$select(id)\n            .featuredTags.list();\n          console.log({ featuredTags });\n          setFeaturedTags(featuredTags);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })();\n  }, [id, mediaFirst]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n          showEndorsements\n        />\n        {!mediaFirst && (\n          <div\n            class=\"filter-bar\"\n            ref={filterBarRef}\n            style={{\n              position: 'relative',\n            }}\n          >\n            {filtered ? (\n              <Link\n                to={`/${instance}/a/${id}`}\n                class=\"insignificant filter-clear\"\n                title={t`Clear filters`}\n                key=\"clear-filters\"\n              >\n                <Icon icon=\"x\" size=\"l\" alt={t`Clear`} />\n              </Link>\n            ) : (\n              <Icon\n                icon=\"filter\"\n                class=\"insignificant\"\n                size=\"l\"\n                alt={t`Filters`}\n              />\n            )}\n            <Link\n              to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n              onClick={() => {\n                if (excludeReplies) {\n                  showToast(t`Showing post with replies`);\n                }\n              }}\n              class={excludeReplies ? '' : 'is-active'}\n            >\n              <Trans>+ Replies</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n              onClick={() => {\n                if (!excludeBoosts) {\n                  showToast(t`Showing posts without boosts`);\n                }\n              }}\n              class={!excludeBoosts ? '' : 'is-active'}\n            >\n              <Trans>- Boosts</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n              onClick={() => {\n                if (!media) {\n                  showToast(t`Showing posts with media`);\n                }\n              }}\n              class={media ? 'is-active' : ''}\n            >\n              <Trans>Media</Trans>\n            </Link>\n            {featuredTags.map((tag) => (\n              <Link\n                key={tag.id}\n                to={`/${instance}/a/${id}${\n                  tagged === tag.name\n                    ? ''\n                    : `?tagged=${encodeURIComponent(tag.name)}`\n                }`}\n                onClick={() => {\n                  if (tagged !== tag.name) {\n                    showToast(t`Showing posts tagged with #${tag.name}`);\n                  }\n                }}\n                class={tagged === tag.name ? 'is-active' : ''}\n              >\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {tag.name}\n                </span>\n                {\n                  // The count differs based on instance 😅\n                }\n                {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n              </Link>\n            ))}\n            {searchEnabled &&\n              (supportsInputMonth ? (\n                <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                  <Icon icon=\"month\" size=\"l\" />\n                  <input\n                    type=\"month\"\n                    disabled={!account?.acct}\n                    value={month || ''}\n                    min={MIN_YEAR_MONTH}\n                    max={new Date().toISOString().slice(0, 7)}\n                    onInput={(e) => {\n                      const { value, validity } = e.currentTarget;\n                      if (!validity.valid) return;\n                      setSearchParams(\n                        value\n                          ? {\n                              month: value,\n                            }\n                          : {},\n                      );\n                      const [year, month] = value.split('-');\n                      const monthIndex = parseInt(month, 10) - 1;\n                      const date = new Date(year, monthIndex);\n                      showToast(\n                        t`Showing posts in ${date.toLocaleString(i18n.locale, {\n                          month: 'long',\n                          year: 'numeric',\n                        })}`,\n                      );\n                    }}\n                  />\n                </label>\n              ) : (\n                // Fallback to <select> for month and <input type=\"number\"> for year\n                <MonthPicker\n                  class={`filter-field ${month ? 'is-active' : ''}`}\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = URL.parse(account.url)?.hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={`${account?.acct ? '@' + account.acct : t`Posts`}`}\n        titleComponent={\n          <h1\n            class=\"header-double-lines header-account\"\n            // onClick={() => {\n            //   states.showAccount = {\n            //     account,\n            //     instance,\n            //   };\n            // }}\n          >\n            <b>\n              <EmojiText text={displayName} emojis={emojis} />\n            </b>\n            <div>\n              <span class=\"bidi-isolate\">@{acct}</span>\n            </div>\n          </h1>\n        }\n        id=\"account-statuses\"\n        instance={instance}\n        emptyText={t`Nothing to see here yet.`}\n        errorText={t`Unable to load posts`}\n        fetchItems={fetchAccountStatuses}\n        useItemID\n        view={media || mediaFirst ? 'media' : undefined}\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        timelineStart={TimelineStart}\n        refresh={[\n          excludeReplies,\n          excludeBoosts,\n          tagged,\n          media,\n          month + account?.acct,\n        ].toString()}\n        headerEnd={\n          <Menu2\n            portal\n            // setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={!allowSwitch}\n              onClick={() => {\n                (async () => {\n                  try {\n                    const { masto } = api({\n                      instance: accountInstance,\n                    });\n                    const acc = await masto.v1.accounts.lookup({\n                      acct: account.acct,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${accountInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert(t`Unable to fetch account info`);\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Switch to account's instance{' '}\n                  {accountInstance ? (\n                    <>\n                      {' '}\n                      (<b>{punycode.toUnicode(accountInstance)}</b>)\n                    </>\n                  ) : null}\n                </Trans>\n              </small>\n            </MenuItem>\n            {!sameCurrentInstance && (\n              <MenuItem\n                onClick={() => {\n                  (async () => {\n                    try {\n                      const acc = await currentMasto.v1.accounts.lookup({\n                        acct: account.acct + '@' + instance,\n                      });\n                      const { id } = acc;\n                      location.hash = `/${currentInstance}/a/${id}`;\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Unable to fetch account info`);\n                    }\n                  })();\n                }}\n              >\n                <Icon icon=\"transfer\" />{' '}\n                <small class=\"menu-double-lines\">\n                  <Trans>\n                    Switch to my instance (<b>{currentInstance}</b>)\n                  </Trans>\n                </small>\n              </MenuItem>\n            )}\n          </Menu2>\n        }\n      />\n      {acct && (\n        <data\n          class=\"compose-data\"\n          value={JSON.stringify({\n            draftStatus: {\n              status: `@${acct} `,\n            },\n          })}\n        />\n      )}\n    </>\n  );\n}\n\nfunction MonthPicker(props) {\n  const { i18n } = useLingui();\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">\n          <Trans>Month</Trans>\n        </option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1)\n                .toString()\n                .padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString(i18n.locale, {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount, {\n  maxAge: 30 * 60 * 1000, // 30 minutes\n});\n\nexport default AccountStatuses;\n","import './annual-report.css';\n\nimport { Trans } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NameText from '../components/name-text';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nexport default function AnnualReport() {\n  const params = useParams();\n  const { year } = params;\n  useTitle(year ? `Annual Report: ${year}` : 'Annual Report');\n  const { masto, instance } = api();\n  const [results, setResults] = useState(null);\n  const [uiState, setUIState] = useState('default');\n\n  useEffect(() => {\n    if (year) {\n      (async () => {\n        setUIState('loading');\n        const results = await masto.v1.annualReports.$select(year).fetch();\n        console.log('REPORT', results);\n        setResults(results);\n        setUIState('default');\n      })();\n    }\n  }, [year]);\n\n  const { accounts, annualReports, statuses } = results || {};\n  const report = annualReports?.find((report) => report.year == year)?.data;\n\n  const datePlaceholder = new Date();\n\n  return (\n    <div id=\"annual-report-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"report\">\n        <h1>{year} #Wrapstodon</h1>\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> <Trans>Loading…</Trans>\n          </p>\n        )}\n        {!!report && (\n          <dl>\n            {Object.entries(report).map(([key, value]) => (\n              <>\n                <dt>{key}</dt>\n                <dd class={`report-${key}`}>\n                  {Array.isArray(value) ? (\n                    <table>\n                      <thead>\n                        <tr>\n                          {Object.entries(value[0]).map(([key, value]) => (\n                            <th\n                              class={\n                                key !== 'month' && typeof value === 'number'\n                                  ? 'number'\n                                  : ''\n                              }\n                            >\n                              {key}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {value.map((item) => (\n                          <tr>\n                            {Object.entries(item).map(([k, value]) => (\n                              <td\n                                class={\n                                  k !== 'month' && typeof value === 'number'\n                                    ? 'number'\n                                    : ''\n                                }\n                              >\n                                {value &&\n                                /(accountId)/i.test(k) &&\n                                /^(mostRebloggedAccounts|commonlyInteractedWithAccounts)$/i.test(\n                                  key,\n                                ) ? (\n                                  <NameText\n                                    account={accounts?.find(\n                                      (a) => a.id === value,\n                                    )}\n                                    showAvatar\n                                  />\n                                ) : k === 'month' ? (\n                                  datePlaceholder.setMonth(value - 1) &&\n                                  datePlaceholder.toLocaleString(undefined, {\n                                    month: 'long',\n                                  })\n                                ) : typeof value === 'number' ? (\n                                  value.toLocaleString()\n                                ) : (\n                                  value\n                                )}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : typeof value === 'object' ? (\n                    /^(topStatuses)$/i.test(key) ? (\n                      <dl>\n                        {Object.entries(value).map(([k, value]) => (\n                          <>\n                            <dt>{k}</dt>\n                            <dd>\n                              {value && (\n                                <Link to={`/${instance}/s/${value}`}>\n                                  <Status\n                                    status={statuses?.find(\n                                      (s) => s.id === value,\n                                    )}\n                                    size=\"s\"\n                                    readOnly\n                                  />\n                                </Link>\n                              )}\n                            </dd>\n                          </>\n                        ))}\n                      </dl>\n                    ) : (\n                      <table>\n                        <tbody>\n                          {Object.entries(value).map(([k, value]) => (\n                            <tr>\n                              <th>{k}</th>\n                              <td\n                                class={\n                                  typeof value === 'number' ? 'number' : ''\n                                }\n                              >\n                                {value}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    )\n                  ) : typeof value === 'string' ? (\n                    value\n                  ) : (\n                    // Last resort\n                    JSON.stringify(value, null, 2)\n                  )}\n                </dd>\n              </>\n            ))}\n          </dl>\n        )}\n      </div>\n      <hr />\n      <p style={{ textAlign: 'center' }}>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  const { t } = useLingui();\n  useTitle(t`Bookmarks`, '/bookmarks');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks\n        .list({ limit: LIMIT })\n        .values();\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Bookmarks`}\n      id=\"bookmarks\"\n      emptyText={t`No bookmarks yet. Go bookmark something!`}\n      errorText={t`Unable to load bookmarks.`}\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","export default \"__VITE_ASSET__BL_1JinT__\"","import '../components/links-bar.css';\nimport './catchup.css';\n\nimport autoAnimate from '@formkit/auto-animate';\nimport { msg, select } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSearchParams } from 'react-router-dom';\nimport { uid } from 'uid/single';\n\nimport catchupUrl from '../assets/features/catch-up.png';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api, getPreferences } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport { isFiltered } from '../utils/filters';\nimport getDomain from '../utils/get-domain';\nimport htmlContentLength from '../utils/html-content-length';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport { getCurrentAccountID, getCurrentAccountNS } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport { assignFollowedTags } from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = 'home';\n\nconst RANGES = [\n  { label: msg`last 1 hour`, value: 1 },\n  { label: msg`last 2 hours`, value: 2 },\n  { label: msg`last 3 hours`, value: 3 },\n  { label: msg`last 4 hours`, value: 4 },\n  { label: msg`last 5 hours`, value: 5 },\n  { label: msg`last 6 hours`, value: 6 },\n  { label: msg`last 7 hours`, value: 7 },\n  { label: msg`last 8 hours`, value: 8 },\n  { label: msg`last 9 hours`, value: 9 },\n  { label: msg`last 10 hours`, value: 10 },\n  { label: msg`last 11 hours`, value: 11 },\n  { label: msg`last 12 hours`, value: 12 },\n  { label: msg`beyond 12 hours`, value: 13 },\n];\n\nconst FILTER_KEYS = {\n  original: msg`Original`,\n  replies: msg`Replies`,\n  boosts: msg`Boosts`,\n  followedTags: msg`Followed tags`,\n  groups: msg`Groups`,\n  filtered: msg`Filtered`,\n};\nconst FILTER_SORTS = [\n  'createdAt',\n  'repliesCount',\n  'favouritesCount',\n  'reblogsCount',\n  'density',\n];\nconst FILTER_GROUPS = [null, 'account'];\n\nconst DTF = mem(\n  (locale) =>\n    new Intl.DateTimeFormat(locale || undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n);\n\nfunction Catchup() {\n  const { i18n, _, t } = useLingui();\n  const dtf = DTF(i18n.locale);\n\n  useTitle(`Catch-up`, '/catchup');\n  const { masto, instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [uiState, setUIState] = useState('start');\n  const [showTopLinks, setShowTopLinks] = useState(false);\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = (accountID) => accountID === currentAccount;\n\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome({ maxCreatedAt }) {\n    const maxCreatedAtDate = maxCreatedAt ? new Date(maxCreatedAt) : null;\n    console.debug('fetchHome', maxCreatedAtDate);\n    const allResults = [];\n    const homeIterable = masto.v1.timelines.home.list({ limit: 40 });\n    const homeIterator = homeIterable.values();\n    mainloop: while (true) {\n      try {\n        if (supportsPixelfed && homeIterable.params) {\n          if (typeof homeIterable.params === 'string') {\n            homeIterable.params += '&include_reblogs=true';\n          } else {\n            homeIterable.params.include_reblogs = true;\n          }\n        }\n        const results = await homeIterator.next();\n        const { value } = results;\n        if (value?.length) {\n          // This ignores maxCreatedAt filter, but it's ok for now\n          await assignFollowedTags(value, instance);\n          let addedResults = false;\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const createdAtDate = new Date(item.createdAt);\n            if (!maxCreatedAtDate || createdAtDate >= maxCreatedAtDate) {\n              // Filtered\n              const selfPost = isSelf(\n                item.reblog?.account?.id || item.account.id,\n              );\n              const filterInfo =\n                !selfPost &&\n                isFiltered(\n                  item.reblog?.filtered || item.filtered,\n                  FILTER_CONTEXT,\n                );\n              if (filterInfo?.action === 'hide') continue;\n              item._filtered = filterInfo;\n\n              // Followed tags\n              const sKey = statusKey(item.id, instance);\n              item._followedTags = states.statusFollowedTags[sKey]\n                ? [...states.statusFollowedTags[sKey]]\n                : [];\n\n              allResults.push(item);\n              addedResults = true;\n            } else {\n              // Don't immediately stop, still add the other items that might still be within range\n              // break mainloop;\n            }\n            // Only stop when ALL items are outside of range\n            if (!addedResults) {\n              break mainloop;\n            }\n          }\n        } else {\n          break mainloop;\n        }\n        // Pause 1s\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.error(e);\n        break mainloop;\n      }\n    }\n\n    // Post-process all results\n    // 1. Threadify - tag 1st-post in a thread\n    allResults.forEach((status) => {\n      if (status?.inReplyToId) {\n        const replyToStatus = allResults.find(\n          (s) => s.id === status.inReplyToId,\n        );\n        if (replyToStatus && !replyToStatus.inReplyToId) {\n          replyToStatus._thread = true;\n        }\n      }\n    });\n\n    return allResults;\n  }\n\n  const [posts, setPosts] = useState([]);\n  const catchupRangeRef = useRef();\n  const catchupLastRef = useRef();\n  const NS = useMemo(() => getCurrentAccountNS(), []);\n  const handleCatchupClick = useCallback(async ({ duration } = {}) => {\n    const now = Date.now();\n    const maxCreatedAt = duration ? now - duration : null;\n    setUIState('loading');\n    const results = await fetchHome({ maxCreatedAt });\n    // Namespaced by account ID\n    // Possible conflict if ID matches between different accounts from different instances\n    const catchupID = `${NS}-${uid()}`;\n    try {\n      await db.catchup.set(catchupID, {\n        id: catchupID,\n        posts: results,\n        count: results.length,\n        startAt: maxCreatedAt,\n        endAt: now,\n      });\n      setSearchParams({ id: catchupID });\n    } catch (e) {\n      console.error(e, results);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        const catchup = await db.catchup.get(id);\n        if (catchup) {\n          catchup.posts.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\n          setPosts(catchup.posts);\n          setUIState('results');\n        }\n      })();\n    } else if (uiState === 'results') {\n      setPosts([]);\n      setUIState('start');\n    }\n  }, [id]);\n\n  const [reloadCatchupsCount, reloadCatchups] = useReducer((c) => c + 1, 0);\n  const [lastCatchupEndAt, setLastCatchupEndAt] = useState(null);\n  const [prevCatchups, setPrevCatchups] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const catchups = await db.catchup.keys();\n        if (catchups.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = catchups.filter((key) => key.startsWith(`${ns}-`));\n          if (ownKeys.length) {\n            let ownCatchups = await db.catchup.getMany(ownKeys);\n            ownCatchups.sort((a, b) => b.endAt - a.endAt);\n\n            // Split to 1st 3 last catchups, and the rest\n            let lastCatchups = ownCatchups.slice(0, 3);\n            let restCatchups = ownCatchups.slice(3);\n\n            const trimmedCatchups = lastCatchups.map((c) => {\n              const { id, count, startAt, endAt } = c;\n              return {\n                id,\n                count,\n                startAt,\n                endAt,\n              };\n            });\n            setPrevCatchups(trimmedCatchups);\n            setLastCatchupEndAt(lastCatchups[0].endAt);\n\n            // GC time\n            ownCatchups = null;\n            lastCatchups = null;\n\n            queueMicrotask(() => {\n              if (restCatchups.length) {\n                // delete them\n                db.catchup\n                  .delMany(restCatchups.map((c) => c.id))\n                  .then(() => {\n                    // GC time\n                    restCatchups = null;\n                  })\n                  .catch((e) => {\n                    console.error(e);\n                  });\n              }\n            });\n\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      setPrevCatchups([]);\n    })();\n  }, [reloadCatchupsCount]);\n  useEffect(() => {\n    if (uiState === 'start') {\n      reloadCatchups();\n    }\n  }, [uiState === 'start']);\n\n  const [filterCounts, links] = useMemo(() => {\n    let filtered = 0,\n      groups = 0,\n      boosts = 0,\n      replies = 0,\n      followedTags = 0,\n      original = 0;\n    const links = {};\n    for (const post of posts) {\n      if (post._filtered && post._filtered?.action !== 'blur') {\n        filtered++;\n        post.__FILTER = 'filtered';\n      } else if (post.group) {\n        groups++;\n        post.__FILTER = 'groups';\n      } else if (post.reblog) {\n        boosts++;\n        post.__FILTER = 'boosts';\n      } else if (post._followedTags?.length) {\n        followedTags++;\n        post.__FILTER = 'followedTags';\n      } else if (\n        post.inReplyToId &&\n        post.inReplyToAccountId !== post.account?.id\n      ) {\n        replies++;\n        post.__FILTER = 'replies';\n      } else {\n        original++;\n        post.__FILTER = 'original';\n      }\n\n      const thePost = post.reblog || post;\n      if (\n        post.__FILTER !== 'filtered' &&\n        thePost.card?.url &&\n        thePost.card?.image &&\n        thePost.card?.type === 'link'\n      ) {\n        const { card, favouritesCount, reblogsCount } = thePost;\n        let { url } = card;\n        url = url.replace(/\\/$/, '');\n        if (!links[url]) {\n          links[url] = {\n            postID: thePost.id,\n            card,\n            shared: 1,\n            sharers: [post.account],\n            likes: favouritesCount,\n            boosts: reblogsCount,\n          };\n        } else {\n          if (links[url].sharers.find((a) => a.id === post.account.id)) {\n            continue;\n          }\n          links[url].shared++;\n          links[url].sharers.push(post.account);\n          if (links[url].postID !== thePost.id) {\n            links[url].likes += favouritesCount;\n            links[url].boosts += reblogsCount;\n          }\n        }\n      }\n    }\n\n    let topLinks = [];\n    for (const link in links) {\n      topLinks.push({\n        url: link,\n        ...links[link],\n      });\n    }\n    topLinks.sort((a, b) => {\n      if (a.shared > b.shared) return -1;\n      if (a.shared < b.shared) return 1;\n      if (a.boosts > b.boosts) return -1;\n      if (a.boosts < b.boosts) return 1;\n      if (a.likes > b.likes) return -1;\n      if (a.likes < b.likes) return 1;\n      return 0;\n    });\n\n    // Slice links to shared > 1 but min 10 links\n    if (topLinks.length > 10) {\n      linksLoop: for (let i = 10; i < topLinks.length; i++) {\n        const { shared } = topLinks[i];\n        if (shared <= 1) {\n          topLinks = topLinks.slice(0, i);\n          break linksLoop;\n        }\n      }\n    }\n\n    return [\n      {\n        filtered,\n        groups,\n        boosts,\n        replies,\n        followedTags,\n        original,\n      },\n      topLinks,\n    ];\n  }, [posts]);\n\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState('all');\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const [range, setRange] = useState(1);\n\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [groupBy, setGroupBy] = useState(null);\n\n  const [filteredPosts, authors, authorCounts] = useMemo(() => {\n    const authorsHash = {};\n    const authorCountsMap = new Map();\n\n    let filteredPosts = posts.filter((post) => {\n      const postFilterMatches =\n        selectedFilterCategory === 'all' ||\n        post.__FILTER === selectedFilterCategory;\n\n      if (postFilterMatches) {\n        authorsHash[post.account.id] = post.account;\n        authorCountsMap.set(\n          post.account.id,\n          (authorCountsMap.get(post.account.id) || 0) + 1,\n        );\n      }\n\n      return postFilterMatches;\n    });\n\n    // Deduplicate boosts\n    const boostedPosts = {};\n    filteredPosts.forEach((post) => {\n      if (post.reblog) {\n        if (boostedPosts[post.reblog.id]) {\n          if (boostedPosts[post.reblog.id].__BOOSTERS) {\n            boostedPosts[post.reblog.id].__BOOSTERS.add(post.account);\n          } else {\n            boostedPosts[post.reblog.id].__BOOSTERS = new Set([post.account]);\n          }\n          post.__HIDDEN = true;\n        } else {\n          boostedPosts[post.reblog.id] = post;\n        }\n      }\n    });\n\n    if (selectedAuthor && authorCountsMap.has(selectedAuthor)) {\n      filteredPosts = filteredPosts.filter(\n        (post) =>\n          post.account.id === selectedAuthor ||\n          [...(post.__BOOSTERS || [])].find((a) => a.id === selectedAuthor),\n      );\n    }\n\n    return [filteredPosts, authorsHash, Object.fromEntries(authorCountsMap)];\n  }, [selectedFilterCategory, selectedAuthor, posts]);\n\n  const filteredPostsMap = useMemo(() => {\n    const map = {};\n    filteredPosts.forEach((post) => {\n      map[post.id] = post;\n    });\n    return map;\n  }, [filteredPosts]);\n\n  const authorCountsList = useMemo(\n    () =>\n      Object.keys(authorCounts).sort(\n        (a, b) => authorCounts[b] - authorCounts[a],\n      ),\n    [authorCounts],\n  );\n\n  const sortedFilteredPosts = useMemo(() => {\n    const authorIndices = {};\n    authorCountsList.forEach((authorID, index) => {\n      authorIndices[authorID] = index;\n    });\n    return filteredPosts\n      .filter((post) => !post.__HIDDEN)\n      .sort((a, b) => {\n        if (groupBy === 'account') {\n          const aAccountID = a.account.id;\n          const bAccountID = b.account.id;\n          const aIndex = authorIndices[aAccountID];\n          const bIndex = authorIndices[bAccountID];\n          const order = aIndex - bIndex;\n          if (order !== 0) {\n            return order;\n          }\n        }\n        if (sortBy !== 'createdAt') {\n          a = a.reblog || a;\n          b = b.reblog || b;\n          if (sortBy !== 'density' && a[sortBy] === b[sortBy]) {\n            return a.createdAt > b.createdAt ? 1 : -1;\n          }\n        }\n        if (sortBy === 'density') {\n          const aDensity = postDensity(a);\n          const bDensity = postDensity(b);\n          if (sortOrder === 'asc') {\n            return aDensity > bDensity ? 1 : -1;\n          } else {\n            return bDensity > aDensity ? 1 : -1;\n          }\n        }\n        if (sortOrder === 'asc') {\n          return a[sortBy] > b[sortBy] ? 1 : -1;\n        } else {\n          return b[sortBy] > a[sortBy] ? 1 : -1;\n        }\n      });\n  }, [filteredPosts, sortBy, sortOrder, groupBy, authorCountsList]);\n\n  const prevGroup = useRef(null);\n\n  const authorsListParent = useRef(null);\n  const autoAnimated = useRef(false);\n  useEffect(() => {\n    if (posts.length > 100 || autoAnimated.current) return;\n    if (authorsListParent.current) {\n      autoAnimate(authorsListParent.current, {\n        duration: 200,\n      });\n      autoAnimated.current = true;\n    }\n  }, [posts, authorsListParent]);\n\n  const postsBarType = posts.length > 160 ? '3d' : '2d';\n\n  const postsBar = useMemo(() => {\n    if (postsBarType !== '2d') return null;\n    return posts.map((post) => {\n      // If part of filteredPosts\n      const isFiltered = filteredPostsMap[post.id];\n      return (\n        <span\n          key={post.id}\n          class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n        />\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const postsBins = useMemo(() => {\n    if (postsBarType !== '3d') return null;\n    if (!posts?.length) return null;\n    const bins = binByTime(posts, 'createdAt', 320);\n    return bins.map((posts, i) => {\n      return (\n        <div class=\"posts-bin\" key={i}>\n          {posts.map((post) => {\n            const isFiltered = filteredPostsMap[post.id];\n            return (\n              <span\n                key={post.id}\n                class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const scrollableRef = useRef(null);\n\n  // if range value exceeded lastCatchupEndAt, show error\n  const lastCatchupRange = useMemo(() => {\n    // return hour, not ms\n    if (!lastCatchupEndAt) return null;\n    return (Date.now() - lastCatchupEndAt) / 1000 / 60 / 60;\n  }, [lastCatchupEndAt, range]);\n\n  useEffect(() => {\n    if (uiState !== 'results') return;\n    const authorUsername =\n      selectedAuthor && authors[selectedAuthor]\n        ? authors[selectedAuthor].username\n        : '';\n    const sortOrderIndex = sortOrder === 'asc' ? 0 : 1;\n    const groupByText = {\n      account: 'authors',\n    };\n    let toast = showToast({\n      duration: 5_000, // 5 seconds\n      // Note: I'm sorry, translators\n      text: t`Showing ${select(selectedFilterCategory, {\n        all: 'all posts',\n        original: 'original posts',\n        replies: 'replies',\n        boosts: 'boosts',\n        followedTags: 'followed tags',\n        groups: 'groups',\n        filtered: 'filtered posts',\n      })}, ${select(sortBy, {\n        createdAt: select(sortOrder, {\n          asc: 'oldest',\n          desc: 'latest',\n        }),\n        reblogsCount: select(sortOrder, {\n          asc: 'fewest boosts',\n          desc: 'most boosts',\n        }),\n        favouritesCount: select(sortOrder, {\n          asc: 'fewest likes',\n          desc: 'most likes',\n        }),\n        repliesCount: select(sortOrder, {\n          asc: 'fewest replies',\n          desc: 'most replies',\n        }),\n        density: select(sortOrder, { asc: 'least dense', desc: 'most dense' }),\n      })} first${select(groupBy, {\n        account: ', grouped by authors',\n        other: '',\n      })}`,\n    });\n    return () => {\n      toast?.hideToast?.();\n    };\n  }, [\n    uiState,\n    selectedFilterCategory,\n    selectedAuthor,\n    sortBy,\n    sortOrder,\n    groupBy,\n    authors,\n  ]);\n\n  useEffect(() => {\n    if (selectedAuthor) {\n      if (authors[selectedAuthor]) {\n        // Check if author is visible and within the scrollable area viewport\n        const authorElement = authorsListParent.current.querySelector(\n          `[data-author=\"${selectedAuthor}\"]`,\n        );\n        const scrollableRect =\n          authorsListParent.current?.getBoundingClientRect();\n        const authorRect = authorElement?.getBoundingClientRect();\n        console.log({\n          sLeft: scrollableRect.left,\n          sRight: scrollableRect.right,\n          aLeft: authorRect.left,\n          aRight: authorRect.right,\n        });\n        if (\n          authorRect.left < scrollableRect.left ||\n          authorRect.right > scrollableRect.right\n        ) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        } else if (authorRect.top < 0) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  }, [selectedAuthor, authors]);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const itemsSelector = '.catchup-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        const nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const hlRef = useHotkeys(\n    'h, l',\n    (_, handler) => {\n      // Go next/prev selectedAuthor in authorCountsList list\n      const key = handler.keys[0];\n      if (selectedAuthor) {\n        const index = authorCountsList.indexOf(selectedAuthor);\n        if (key === 'h') {\n          if (index > 0 && index < authorCountsList.length) {\n            setSelectedAuthor(authorCountsList[index - 1]);\n            scrollableRef.current?.focus();\n          }\n        } else if (key === 'l') {\n          if (index < authorCountsList.length - 1 && index >= 0) {\n            setSelectedAuthor(authorCountsList[index + 1]);\n            scrollableRef.current?.focus();\n          }\n        }\n      } else if (key === 'l') {\n        setSelectedAuthor(authorCountsList[0]);\n        scrollableRef.current?.focus();\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setSelectedAuthor(null);\n      scrollableRef.current?.focus();\n    },\n    {\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n      enableOnFormTags: ['input'],\n      useKey: true,\n    },\n  );\n\n  const dotRef = useHotkeys(\n    '.',\n    () => {\n      scrollableRef.current?.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const handleArrowKeys = useCallback((e) => {\n    const activeElement = document.activeElement;\n    const isRadio =\n      activeElement?.tagName === 'INPUT' && activeElement.type === 'radio';\n    const isArrowKeys =\n      e.key === 'ArrowDown' ||\n      e.key === 'ArrowUp' ||\n      e.key === 'ArrowLeft' ||\n      e.key === 'ArrowRight';\n    if (isArrowKeys && isRadio) {\n      // Note: page scroll won't trigger on first arrow key press due to this. Subsequent presses will.\n      activeElement.blur();\n      return;\n    }\n  }, []);\n\n  return (\n    <div\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        hlRef.current = node;\n        escRef.current = node;\n        dotRef.current = node;\n      }}\n      id=\"catchup-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n    >\n      <div class=\"timeline-deck deck wide\">\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n          }}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              {uiState === 'results' && (\n                <Link to=\"/catchup\" class=\"button plain\">\n                  <Icon icon=\"history2\" size=\"l\" alt={t`Catch-up`} />\n                </Link>\n              )}\n              {uiState === 'start' && (\n                <Link to=\"/\" class=\"button plain\">\n                  <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                </Link>\n              )}\n            </div>\n            <h1>\n              {uiState !== 'start' && (\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              {uiState !== 'start' && uiState !== 'loading' && (\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    setShowHelp(true);\n                  }}\n                >\n                  <Trans>Help</Trans>\n                </button>\n              )}\n            </div>\n          </div>\n        </header>\n        <main onKeyDown={handleArrowKeys}>\n          {uiState === 'start' && (\n            <div class=\"catchup-start\">\n              <h1>\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              </h1>\n              <details>\n                <summary>\n                  <Trans>What is this?</Trans>\n                </summary>\n                <p>\n                  <Trans>\n                    Catch-up is a separate timeline for your followings,\n                    offering a high-level view at a glance, with a simple,\n                    email-inspired interface to effortlessly sort and filter\n                    through posts.\n                  </Trans>\n                </p>\n                <img\n                  src={catchupUrl}\n                  width=\"1200\"\n                  height=\"900\"\n                  alt={t`Preview of Catch-up UI`}\n                />\n                <p>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.target.closest('details').open = false;\n                    }}\n                  >\n                    <Trans>Let's catch up</Trans>\n                  </button>\n                </p>\n              </details>\n              <p>\n                <Trans>Let's catch up on the posts from your followings.</Trans>\n              </p>\n              <p>\n                <b>\n                  <Trans>Show me all posts from…</Trans>\n                </b>\n              </p>\n              <div class=\"catchup-form\">\n                <input\n                  ref={catchupRangeRef}\n                  type=\"range\"\n                  value={range}\n                  min={RANGES[0].value}\n                  max={RANGES[RANGES.length - 1].value}\n                  step=\"1\"\n                  list=\"catchup-ranges\"\n                  onChange={(e) => setRange(+e.target.value)}\n                />{' '}\n                <span\n                  style={{\n                    width: '8em',\n                  }}\n                >\n                  {_(RANGES[range - 1].label)}\n                  <br />\n                  <small class=\"insignificant\">\n                    {range == RANGES[RANGES.length - 1].value\n                      ? t`until the max`\n                      : niceDateTime(\n                          new Date(Date.now() - range * 60 * 60 * 1000),\n                        )}\n                  </small>\n                </span>\n                <datalist id=\"catchup-ranges\">\n                  {RANGES.map(({ label, value }) => (\n                    <option value={value} label={_(label)} />\n                  ))}\n                </datalist>{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (range < RANGES[RANGES.length - 1].value) {\n                      let duration;\n                      if (\n                        range === RANGES[RANGES.length - 1].value &&\n                        catchupLastRef.current?.checked\n                      ) {\n                        duration = Date.now() - lastCatchupEndAt;\n                      } else {\n                        duration = range * 60 * 60 * 1000;\n                      }\n                      handleCatchupClick({ duration });\n                    } else {\n                      handleCatchupClick();\n                    }\n                  }}\n                >\n                  <Trans>Catch up</Trans>\n                </button>\n              </div>\n              {lastCatchupRange && range > lastCatchupRange ? (\n                <p class=\"catchup-info\">\n                  <Icon icon=\"info\" />{' '}\n                  <Trans>Overlaps with your last catch-up</Trans>\n                </p>\n              ) : range === RANGES[RANGES.length - 1].value &&\n                lastCatchupEndAt ? (\n                <p class=\"catchup-info\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      switch\n                      checked\n                      ref={catchupLastRef}\n                    />{' '}\n                    <Trans>\n                      Until the last catch-up (\n                      {dtf.format(new Date(lastCatchupEndAt))})\n                    </Trans>\n                  </label>\n                </p>\n              ) : null}\n              <p class=\"insignificant\">\n                <small>\n                  <Trans>\n                    Note: your instance might only show a maximum of 800 posts\n                    in the Home timeline regardless of the time range. Could be\n                    less or more.\n                  </Trans>\n                </small>\n              </p>\n              {!!prevCatchups?.length && (\n                <div class=\"catchup-prev\">\n                  <p>\n                    <Trans>Previously…</Trans>\n                  </p>\n                  <ul>\n                    {prevCatchups.map((pc) => (\n                      <li key={pc.id}>\n                        <Link to={`/catchup?id=${pc.id}`}>\n                          <Icon icon=\"history2\" />{' '}\n                          <span>\n                            {pc.startAt\n                              ? dtf.formatRange(\n                                  new Date(pc.startAt),\n                                  new Date(pc.endAt),\n                                )\n                              : `… – ${dtf.format(new Date(pc.endAt))}`}\n                          </span>\n                        </Link>{' '}\n                        <span>\n                          <small class=\"ib insignificant\">\n                            <Plural\n                              value={pc.count}\n                              one=\"# post\"\n                              other=\"# posts\"\n                            />\n                          </small>{' '}\n                          <button\n                            type=\"button\"\n                            class=\"light danger small\"\n                            onClick={async () => {\n                              const yes = confirm(t`Remove this catch-up?`);\n                              if (yes) {\n                                let st = showToast(\n                                  t`Removing Catch-up ${pc.id}`,\n                                );\n                                await db.catchup.del(pc.id);\n                                st?.hideToast?.();\n                                showToast(t`Catch-up ${pc.id} removed`);\n                                reloadCatchups();\n                              }\n                            }}\n                          >\n                            <Icon icon=\"x\" alt={t`Remove`} />\n                          </button>\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                  {prevCatchups.length >= 3 && (\n                    <p>\n                      <small>\n                        <Trans>\n                          Note: Only max 3 will be stored. The rest will be\n                          automatically removed.\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {uiState === 'loading' && (\n            <div class=\"ui-state catchup-start\">\n              <Loader abrupt />\n              <p class=\"insignificant\">\n                <Trans>Fetching posts…</Trans>\n              </p>\n              <p class=\"insignificant\">\n                <Trans>This might take a while.</Trans>\n              </p>\n            </div>\n          )}\n          {uiState === 'results' && (\n            <>\n              <div class=\"catchup-header\">\n                {posts.length > 0 && (\n                  <p>\n                    <b class=\"ib\">\n                      {dtf.formatRange(\n                        new Date(posts[0].createdAt),\n                        new Date(posts[posts.length - 1].createdAt),\n                      )}\n                    </b>\n                  </p>\n                )}\n                <aside>\n                  <button\n                    hidden={\n                      selectedFilterCategory === 'all' &&\n                      !selectedAuthor &&\n                      sortBy === 'createdAt' &&\n                      sortOrder === 'asc'\n                    }\n                    type=\"button\"\n                    class=\"plain4 small\"\n                    onClick={() => {\n                      setSelectedFilterCategory('all');\n                      setSelectedAuthor(null);\n                      setSortBy('createdAt');\n                      setGroupBy(null);\n                      setSortOrder('asc');\n                    }}\n                  >\n                    <Trans>Reset filters</Trans>\n                  </button>\n                  {links?.length > 0 && (\n                    <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => setShowTopLinks(!showTopLinks)}\n                    >\n                      <Trans>Top links</Trans>{' '}\n                      <Icon\n                        icon=\"chevron-down\"\n                        style={{\n                          transform: showTopLinks\n                            ? 'rotate(180deg)'\n                            : 'rotate(0deg)',\n                        }}\n                      />\n                    </button>\n                  )}\n                </aside>\n              </div>\n              <div class=\"shazam-container no-animation\" hidden={!showTopLinks}>\n                <div class=\"shazam-container-inner\">\n                  <div class=\"catchup-top-links links-bar\">\n                    {links.map((link) => {\n                      const { card, shared, sharers, likes, boosts } = link;\n                      const {\n                        blurhash,\n                        title,\n                        description,\n                        url,\n                        image,\n                        imageDescription,\n                        language,\n                        width,\n                        height,\n                        publishedAt,\n                      } = card;\n                      const domain = getDomain(url);\n                      let accentColor;\n                      if (blurhash) {\n                        const averageColor = getBlurHashAverageColor(blurhash);\n                        const labAverageColor = rgb2oklab(averageColor);\n                        accentColor = oklab2rgb([\n                          0.6,\n                          labAverageColor[1],\n                          labAverageColor[2],\n                        ]);\n                      }\n\n                      return (\n                        <a\n                          key={url}\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                          class=\"link-block\"\n                          style={\n                            accentColor\n                              ? {\n                                  '--accent-color': `rgb(${accentColor.join(\n                                    ',',\n                                  )})`,\n                                  '--accent-alpha-color': `rgba(${accentColor.join(\n                                    ',',\n                                  )}, 0.4)`,\n                                }\n                              : {}\n                          }\n                        >\n                          <article>\n                            <figure>\n                              <img\n                                src={image}\n                                alt={imageDescription}\n                                width={width}\n                                height={height}\n                                loading=\"lazy\"\n                              />\n                            </figure>\n                            <div class=\"article-body\">\n                              <header>\n                                <div class=\"article-meta\">\n                                  <span class=\"domain\">{domain}</span>{' '}\n                                  {!!publishedAt && <>&middot; </>}\n                                  {!!publishedAt && (\n                                    <>\n                                      <RelativeTime\n                                        datetime={publishedAt}\n                                        format=\"micro\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {!!title && (\n                                  <h1\n                                    class=\"title\"\n                                    lang={language}\n                                    dir=\"auto\"\n                                    title={title}\n                                  >\n                                    {title}\n                                  </h1>\n                                )}\n                              </header>\n                              {!!description && (\n                                <p\n                                  class=\"description\"\n                                  lang={language}\n                                  dir=\"auto\"\n                                  title={description}\n                                >\n                                  {description}\n                                </p>\n                              )}\n                              <hr />\n                              <p\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                }}\n                              >\n                                <Trans>\n                                  Shared by{' '}\n                                  {sharers.map((s) => {\n                                    const { avatarStatic, displayName } = s;\n                                    return (\n                                      <button\n                                        type=\"button\"\n                                        class=\"plain\"\n                                        style={{\n                                          padding: 0,\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          e.stopPropagation();\n                                          // Reset and filter to author\n                                          const { id } = s;\n                                          setSelectedAuthor(id);\n                                          setSelectedFilterCategory('all');\n                                        }}\n                                      >\n                                        <Avatar\n                                          url={avatarStatic}\n                                          size=\"s\"\n                                          alt={displayName}\n                                        />\n                                      </button>\n                                    );\n                                  })}\n                                </Trans>\n                              </p>\n                            </div>\n                          </article>\n                        </a>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              {posts.length >= 5 &&\n                (postsBarType === '3d' ? (\n                  <div class=\"catchup-posts-viz-time-bar\">{postsBins}</div>\n                ) : (\n                  <div class=\"catchup-posts-viz-bar\">{postsBar}</div>\n                ))}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <label class=\"filter-cat\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter-cat\"\n                      checked={selectedFilterCategory.toLowerCase() === 'all'}\n                      onChange={() => {\n                        setSelectedFilterCategory('all');\n                      }}\n                    />\n                    <Trans>All</Trans> <span class=\"count\">{posts.length}</span>\n                  </label>\n                  {Object.entries(FILTER_KEYS).map(\n                    ([key, label]) =>\n                      !!filterCounts[key] && (\n                        <label\n                          class=\"filter-cat\"\n                          key={_(label)}\n                          title={\n                            ((filterCounts[key] / posts.length) * 100).toFixed(\n                              2,\n                            ) + '%'\n                          }\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"filter-cat\"\n                            checked={\n                              selectedFilterCategory.toLowerCase() ===\n                              key.toLowerCase()\n                            }\n                            onChange={() => {\n                              setSelectedFilterCategory(key);\n                              if (key === 'boosts') {\n                                setSortBy('reblogsCount');\n                                setSortOrder('desc');\n                                setGroupBy(null);\n                              }\n                              // setSelectedAuthor(null);\n                            }}\n                          />\n                          {_(label)}{' '}\n                          <span class=\"count\">{filterCounts[key]}</span>\n                        </label>\n                      ),\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && !!authorCounts && (\n                <div\n                  class=\"catchup-filters authors-filters\"\n                  ref={authorsListParent}\n                >\n                  {authorCountsList.map((author) => (\n                    <label\n                      class=\"filter-author\"\n                      data-author={author}\n                      key={`${author}-${authorCounts[author]}`}\n                      // Preact messed up the order sometimes, need additional key besides just `author`\n                      // https://github.com/preactjs/preact/issues/2849\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"filter-author\"\n                        checked={selectedAuthor === author}\n                        onChange={() => {\n                          setSelectedAuthor(author);\n                          // setGroupBy(null);\n                        }}\n                        onClick={() => {\n                          if (selectedAuthor === author) {\n                            setSelectedAuthor(null);\n                          }\n                        }}\n                      />\n                      <Avatar\n                        url={\n                          authors[author].avatarStatic || authors[author].avatar\n                        }\n                        size=\"xxl\"\n                        alt={`${authors[author].displayName} (@${authors[author].acct})`}\n                      />{' '}\n                      <span class=\"count\">{authorCounts[author]}</span>\n                      <span class=\"username\">{authors[author].username}</span>\n                    </label>\n                  ))}\n                  {authorCountsList.length > 5 && (\n                    <small\n                      key=\"authors-count\"\n                      style={{\n                        whiteSpace: 'nowrap',\n                        paddingInline: '1em',\n                        opacity: 0.33,\n                      }}\n                    >\n                      <Plural\n                        value={authorCountsList.length}\n                        one=\"# author\"\n                        other=\"# authors\"\n                      />\n                    </small>\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <span class=\"filter-label\">\n                    <Trans>Sort</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_SORTS.map((key) => (\n                      <label\n                        class=\"filter-sort\"\n                        key={key}\n                        onClick={(e) => {\n                          if (sortBy === key) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-cat\"\n                          checked={sortBy === key}\n                          onChange={() => {\n                            setSortBy(key);\n                            const order = /(replies|favourites|reblogs)/.test(\n                              key,\n                            )\n                              ? 'desc'\n                              : 'asc';\n                            setSortOrder(order);\n                          }}\n                        />\n                        {\n                          {\n                            createdAt: t`Date`,\n                            repliesCount: t`Replies`,\n                            favouritesCount: t`Likes`,\n                            reblogsCount: t`Boosts`,\n                            density: t`Density`,\n                          }[key]\n                        }\n                        {sortBy === key && (sortOrder === 'asc' ? ' ↑' : ' ↓')}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {/* <fieldset class=\"radio-field-group\">\n                    {['asc', 'desc'].map((key) => (\n                      <label class=\"filter-sort\" key={key}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-dir\"\n                          checked={sortOrder === key}\n                          onChange={() => {\n                            setSortOrder(key);\n                          }}\n                        />\n                        {key === 'asc' ? '↑' : '↓'}\n                      </label>\n                    ))}\n                  </fieldset> */}\n                  <span class=\"filter-label\">\n                    <Trans id=\"group.filter\">Group</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_GROUPS.map((key) => (\n                      <label class=\"filter-group\" key={key || 'none'}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-group\"\n                          checked={groupBy === key}\n                          onChange={() => {\n                            setGroupBy(key);\n                          }}\n                          disabled={key === 'account' && selectedAuthor}\n                        />\n                        {{\n                          account: t`Authors`,\n                        }[key] || t`None`}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {\n                    selectedAuthor && authorCountsList.length > 1 ? (\n                      <button\n                        type=\"button\"\n                        class=\"plain6 small\"\n                        onClick={() => {\n                          setSelectedAuthor(null);\n                        }}\n                        style={{\n                          whiteSpace: 'nowrap',\n                        }}\n                      >\n                        <Trans>Show all authors</Trans>\n                      </button>\n                    ) : null\n                    // <button\n                    //   type=\"button\"\n                    //   class=\"plain4 small\"\n                    //   onClick={() => {}}\n                    // >\n                    //   Group by authors\n                    // </button>\n                  }\n                </div>\n              )}\n              <ul\n                class={`catchup-list catchup-filter-${\n                  selectedFilterCategory || ''\n                } ${sortBy ? `catchup-sort-${sortBy}` : ''} ${\n                  selectedAuthor && authors[selectedAuthor]\n                    ? `catchup-selected-author`\n                    : ''\n                } ${groupBy ? `catchup-group-${groupBy}` : ''}`}\n              >\n                {sortedFilteredPosts.map((post, i) => {\n                  const id = post.reblog?.id || post.id;\n                  let showSeparator = false;\n                  if (groupBy === 'account') {\n                    if (\n                      prevGroup.current &&\n                      post.account.id !== prevGroup.current &&\n                      i > 0\n                    ) {\n                      showSeparator = true;\n                    }\n                    prevGroup.current = post.account.id;\n                  }\n                  return (\n                    <Fragment key={`${post.id}-${showSeparator}`}>\n                      {showSeparator && <li class=\"separator\" />}\n                      <IntersectionPostLineItem\n                        to={`/${instance}/s/${id}`}\n                        post={post}\n                        root={scrollableRef.current}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </ul>\n              <footer>\n                {filteredPosts.length > 5 && (\n                  <p>\n                    {selectedFilterCategory === 'boosts'\n                      ? t`You don't have to read everything.`\n                      : t`That's all.`}{' '}\n                    <button\n                      type=\"button\"\n                      class=\"textual\"\n                      onClick={() => {\n                        scrollableRef.current.scrollTop = 0;\n                      }}\n                    >\n                      <Trans>Back to top</Trans>\n                    </button>\n                    .\n                  </p>\n                )}\n              </footer>\n            </>\n          )}\n        </main>\n      </div>\n      {showHelp && (\n        <Modal onClose={() => setShowHelp(false)}>\n          <div class=\"sheet\" id=\"catchup-help-sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowHelp(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Help</Trans>\n              </h2>\n            </header>\n            <main>\n              <dl>\n                <dt>\n                  <Trans>Top links</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Links shared by followings, sorted by shared counts, boosts\n                    and likes.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Sort: Density</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are sorted by information density or depth. Shorter\n                    posts are \"lighter\" while longer posts are \"heavier\". Posts\n                    with photos are \"heavier\" than posts without photos.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Group: Authors</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are grouped by authors, sorted by posts count per\n                    author.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Keyboard shortcuts</Trans>\n                </dt>\n                {/* <dd>\n                  <kbd>j</kbd>: <Trans>Next post</Trans>\n                </dd>\n                <dd>\n                  <kbd>k</kbd>: <Trans>Previous post</Trans>\n                </dd>\n                <dd>\n                  <kbd>l</kbd>: <Trans>Next author</Trans>\n                </dd>\n                <dd>\n                  <kbd>h</kbd>: <Trans>Previous author</Trans>\n                </dd>\n                <dd>\n                  <kbd>Enter</kbd>: <Trans>Open post details</Trans>\n                </dd>\n                <dd>\n                  <kbd>.</kbd>: <Trans>Scroll to top</Trans>\n                </dd> */}\n                <dd>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Trans>Next post</Trans>\n                        </td>\n                        <td>\n                          <kbd>j</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous post</Trans>\n                        </td>\n                        <td>\n                          <kbd>k</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Next author</Trans>\n                        </td>\n                        <td>\n                          <kbd>l</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous author</Trans>\n                        </td>\n                        <td>\n                          <kbd>h</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Open post details</Trans>\n                        </td>\n                        <td>\n                          <kbd>Enter</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Scroll to top</Trans>\n                        </td>\n                        <td>\n                          <kbd>.</kbd>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </dd>\n              </dl>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst PostLine = memo(\n  function ({ post }) {\n    const {\n      id,\n      account,\n      group,\n      reblog,\n      inReplyToId,\n      inReplyToAccountId,\n      _followedTags: isFollowedTags,\n      _filtered: filterInfo,\n      visibility,\n      __BOOSTERS,\n    } = post;\n    const isReplyTo = inReplyToId && inReplyToAccountId !== account.id;\n    const isFiltered = !!filterInfo && filterInfo?.action !== 'blur';\n\n    const debugHover = (e) => {\n      if (e.shiftKey) {\n        console.log({\n          ...post,\n        });\n      }\n    };\n\n    return (\n      <article\n        class={`post-line ${\n          group\n            ? 'group'\n            : reblog\n              ? 'reblog'\n              : isFollowedTags?.length\n                ? 'followed-tags'\n                : ''\n        } ${isReplyTo ? 'reply-to' : ''} ${\n          isFiltered ? 'filtered' : ''\n        } visibility-${visibility}`}\n        onMouseEnter={debugHover}\n      >\n        <span class=\"post-author\">\n          {reblog ? (\n            <span class=\"post-reblog-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />\n              {__BOOSTERS?.size > 0\n                ? [...__BOOSTERS].map((b) => (\n                    <Avatar url={b.avatarStatic || b.avatar} squircle={b.bot} />\n                  ))\n                : ''}{' '}\n              <Icon icon=\"rocket\" />{' '}\n              {/* <Avatar\n              url={reblog.account.avatarStatic || reblog.account.avatar}\n              squircle={reblog.account.bot}\n            /> */}\n              <NameText account={reblog.account} showAvatar />\n            </span>\n          ) : (\n            <NameText account={account} showAvatar />\n          )}\n        </span>\n        <PostPeek post={reblog || post} filterInfo={filterInfo} />\n        <span class=\"post-meta\">\n          <PostStats post={reblog || post} />{' '}\n          <RelativeTime\n            datetime={new Date(reblog?.createdAt || post.createdAt)}\n            format=\"micro\"\n          />\n        </span>\n      </article>\n    );\n  },\n  (oldProps, newProps) => {\n    return oldProps?.post?.id === newProps?.post?.id;\n  },\n);\n\nconst IntersectionPostLineItem = ({ root, to, ...props }) => {\n  const ref = useRef();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          queueMicrotask(() => setShow(true));\n          observer.unobserve(ref.current);\n        }\n      },\n      {\n        root,\n        rootMargin: `${Math.max(320, screen.height * 0.75)}px`,\n      },\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n\n  return show ? (\n    <li>\n      <Link to={to}>\n        <PostLine {...props} />\n      </Link>\n    </li>\n  ) : (\n    <li ref={ref} style={{ height: '4em' }} />\n  );\n};\n\n// A media speak a thousand words\nconst MEDIA_DENSITY = 8;\nconst CARD_DENSITY = 8;\nfunction postDensity(post) {\n  const { spoilerText, content, poll, mediaAttachments, card } = post;\n  const pollContent = poll?.options?.length\n    ? poll.options.reduce((acc, cur) => acc + cur.title, '')\n    : '';\n  const density =\n    (spoilerText.length + htmlContentLength(content) + pollContent.length) /\n      140 +\n    (mediaAttachments?.length\n      ? MEDIA_DENSITY * mediaAttachments.length\n      : card?.image\n        ? CARD_DENSITY\n        : 0);\n  return density;\n}\n\nconst MEDIA_SIZE = 48;\n\nfunction PostPeek({ post, filterInfo }) {\n  const { t } = useLingui();\n  const {\n    spoilerText,\n    sensitive,\n    content,\n    emojis,\n    poll,\n    mediaAttachments,\n    card,\n    inReplyToId,\n    inReplyToAccountId,\n    account,\n    _thread,\n  } = post;\n  const isThread =\n    (inReplyToId && inReplyToAccountId === account.id) || !!_thread;\n\n  const prefs = getPreferences();\n  const readingExpandSpoilers = !!prefs['reading:expand:spoilers'];\n  // const readingExpandSpoilers = true;\n  const showMedia =\n    readingExpandSpoilers ||\n    (!spoilerText && !sensitive && filterInfo?.action !== 'blur');\n  const postText = content ? statusPeek(post) : '';\n\n  const showPostContent = !spoilerText || readingExpandSpoilers;\n\n  return (\n    <div class=\"post-peek\" title={!spoilerText ? postText : ''}>\n      <span class=\"post-peek-content\">\n        {isThread && !showPostContent && (\n          <>\n            <span class=\"post-peek-tag post-peek-thread\">Thread</span>{' '}\n          </>\n        )}\n        {!!filterInfo && filterInfo?.action !== 'blur' ? (\n          <span class=\"post-peek-filtered\">\n            {/* Filtered{filterInfo?.titlesStr ? `: ${filterInfo.titlesStr}` : ''} */}\n            {filterInfo?.titlesStr\n              ? t`Filtered: ${filterInfo.titlesStr}`\n              : t`Filtered`}\n          </span>\n        ) : (\n          <>\n            {!!spoilerText && (\n              <span class=\"post-peek-spoiler\">\n                <Icon\n                  icon={`${readingExpandSpoilers ? 'eye-open' : 'eye-close'}`}\n                />{' '}\n                {spoilerText}\n              </span>\n            )}\n            {showPostContent && (\n              <div class=\"post-peek-html\">\n                {isThread && (\n                  <>\n                    <span class=\"post-peek-tag post-peek-thread\">\n                      <Trans>Thread</Trans>\n                    </span>{' '}\n                  </>\n                )}\n                {!!content && (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: emojifyText(content, emojis),\n                    }}\n                  />\n                )}\n                {!!poll?.options?.length &&\n                  poll.options.map((o) => (\n                    <div>\n                      {poll.multiple ? '▪️' : '•'} {o.title}\n                    </div>\n                  ))}\n                {!content &&\n                  mediaAttachments?.length === 1 &&\n                  mediaAttachments[0].description && (\n                    <>\n                      <span class=\"post-peek-tag post-peek-alt\">ALT</span>{' '}\n                      <div>{mediaAttachments[0].description}</div>\n                    </>\n                  )}\n              </div>\n            )}\n          </>\n        )}\n      </span>\n      {(!filterInfo || filterInfo?.action === 'blur') && (\n        <span class=\"post-peek-post-content\">\n          {!!poll && (\n            <span class=\"post-peek-tag post-peek-poll\">\n              <Icon icon=\"poll\" size=\"s\" />\n              <Trans>Poll</Trans>\n            </span>\n          )}\n          {!!mediaAttachments?.length\n            ? mediaAttachments.map((m) => {\n                const mediaURL = m.previewUrl || m.url;\n                const remoteMediaURL = m.previewRemoteUrl || m.remoteUrl;\n                const width = m.meta?.original\n                  ? m.meta.original.width\n                  : m.meta?.small?.width || m.meta?.original?.width;\n                const height = m.meta?.original\n                  ? m.meta.original.height\n                  : m.meta?.small?.height || m.meta?.original?.height;\n                return (\n                  <span key={m.id} class=\"post-peek-media\">\n                    {{\n                      image:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                            style={{\n                              '--anim-duration': `${Math.min(\n                                Math.max(Math.max(width, height) / 100, 5),\n                                120,\n                              )}s`,\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🖼</span>\n                        ),\n                      gifv:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🎞️</span>\n                        ),\n                      video:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">📹</span>\n                        ),\n                      audio: <span class=\"post-peek-faux-media\">🎵</span>,\n                    }[m.type] || null}\n                  </span>\n                );\n              })\n            : !!card &&\n              card.image &&\n              showMedia && (\n                <span\n                  class={`post-peek-media post-peek-card card-${\n                    card.type || ''\n                  }`}\n                >\n                  {card.image ? (\n                    <img\n                      src={card.image}\n                      width={MEDIA_SIZE}\n                      height={MEDIA_SIZE}\n                      alt={\n                        card.title || card.description || card.imageDescription\n                      }\n                      loading=\"lazy\"\n                      style={{\n                        '--anim-duration':\n                          card.width &&\n                          card.height &&\n                          `${Math.min(\n                            Math.max(\n                              Math.max(card.width, card.height) / 100,\n                              5,\n                            ),\n                            120,\n                          )}s`,\n                      }}\n                    />\n                  ) : (\n                    <span class=\"post-peek-faux-media\">🔗</span>\n                  )}\n                </span>\n              )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction PostStats({ post }) {\n  const { t } = useLingui();\n  const { reblogsCount, repliesCount, favouritesCount } = post;\n  return (\n    <span class=\"post-stats\">\n      {repliesCount > 0 && (\n        <span class=\"post-stat-replies\">\n          <Icon icon=\"comment2\" size=\"s\" alt={t`Replies`} />{' '}\n          {shortenNumber(repliesCount)}\n        </span>\n      )}\n      {favouritesCount > 0 && (\n        <span class=\"post-stat-likes\">\n          <Icon icon=\"heart\" size=\"s\" alt={t`Likes`} />{' '}\n          {shortenNumber(favouritesCount)}\n        </span>\n      )}\n      {reblogsCount > 0 && (\n        <span class=\"post-stat-boosts\">\n          <Icon icon=\"rocket\" size=\"s\" alt={t`Boosts`} />{' '}\n          {shortenNumber(reblogsCount)}\n        </span>\n      )}\n    </span>\n  );\n}\n\nfunction binByTime(data, key, numBins) {\n  // Extract dates from data objects\n  const dates = data.map((item) => new Date(item[key]));\n\n  // Find minimum and maximum dates directly (avoiding Math.min/max)\n  const minDate = dates.reduce(\n    (acc, date) => (date < acc ? date : acc),\n    dates[0],\n  );\n  const maxDate = dates.reduce(\n    (acc, date) => (date > acc ? date : acc),\n    dates[0],\n  );\n\n  // Calculate the time span in milliseconds\n  const range = Math.min(maxDate.getTime(), Date.now()) - minDate.getTime();\n\n  // Create empty bins and loop through data\n  const bins = Array.from({ length: numBins }, () => []);\n  data.forEach((item) => {\n    const date = new Date(item[key]);\n    if (date.getTime() > Date.now()) {\n      // Future dates go into the last bin\n      bins[bins.length - 1].push(item);\n    } else {\n      const normalized = (date.getTime() - minDate.getTime()) / range;\n      const binIndex = Math.floor(normalized * (numBins - 1));\n      bins[binIndex].push(item);\n    }\n  });\n\n  return bins;\n}\n\nexport default Catchup;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  const { t } = useLingui();\n  useTitle(t`Likes`, '/favourites');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites\n        .list({ limit: LIMIT })\n        .values();\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Likes`}\n      id=\"favourites\"\n      emptyText={t`No likes yet. Go like something!`}\n      errorText={t`Unable to load likes.`}\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import './filters.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getAPIVersions } from '../utils/store-utils';\nimport useInterval from '../utils/useInterval';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = ['home', 'public', 'notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_UNIMPLEMENTED = ['thread', 'account'];\nconst FILTER_CONTEXT_LABELS = {\n  home: msg`Home and lists`,\n  notifications: msg`Notifications`,\n  public: msg`Public timelines`,\n  thread: msg`Conversations`,\n  account: msg`Profiles`,\n};\n\nconst EXPIRY_DURATIONS = [\n  0, // forever\n  30 * 60, // 30 minutes\n  60 * 60, // 1 hour\n  6 * 60 * 60, // 6 hours\n  12 * 60 * 60, // 12 hours\n  60 * 60 * 24, // 24 hours\n  60 * 60 * 24 * 7, // 7 days\n  60 * 60 * 24 * 30, // 30 days\n];\n\nconst EXPIRY_DURATIONS_LABELS = {\n  0: msg`Never`,\n  1800: i18nDuration(30, 'minute'),\n  3600: i18nDuration(1, 'hour'),\n  21600: i18nDuration(6, 'hour'),\n  43200: i18nDuration(12, 'hour'),\n  86_400: i18nDuration(24, 'hour'),\n  604_800: i18nDuration(7, 'day'),\n  2_592_000: i18nDuration(30, 'day'),\n};\n\nfunction Filters() {\n  const { t } = useLingui();\n  const { masto } = api();\n  useTitle(t`Filters`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n  const [showFiltersAddEditModal, setShowFiltersAddEditModal] = useState(false);\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const filters = await masto.v2.filters.list();\n        filters.sort((a, b) => a.title.localeCompare(b.title));\n        filters.forEach((filter) => {\n          if (filter.keywords?.length) {\n            filter.keywords.sort((a, b) => a.id - b.id);\n          }\n        });\n        console.log(filters);\n        setFilters(filters);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"filters-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Filters</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  setShowFiltersAddEditModal(true);\n                }}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New filter`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {filters.length > 0 ? (\n            <>\n              <ul class=\"filters-list\">\n                {filters.map((filter) => {\n                  const { id, title, expiresAt, keywords } = filter;\n                  return (\n                    <li key={id}>\n                      <div>\n                        <h2>{title}</h2>\n                        {keywords?.length > 0 && (\n                          <div>\n                            {keywords.map((k) => (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {k.wholeWord ? `“${k.keyword}”` : k.keyword}\n                                </span>{' '}\n                              </>\n                            ))}\n                          </div>\n                        )}\n                        <small class=\"insignificant\">\n                          <ExpiryStatus expiresAt={expiresAt} />\n                        </small>\n                      </div>\n                      <button\n                        type=\"button\"\n                        class=\"plain\"\n                        onClick={() => {\n                          setShowFiltersAddEditModal({\n                            filter,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" size=\"l\" alt=\"Edit filter\" />\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n              {filters.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={filters.length}\n                      one=\"# filter\"\n                      other=\"# filters\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load filters.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No filters yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {!!showFiltersAddEditModal && (\n        <Modal\n          title={t`Add filter`}\n          onClose={() => {\n            setShowFiltersAddEditModal(false);\n          }}\n        >\n          <FiltersAddEdit\n            filter={showFiltersAddEditModal?.filter}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowFiltersAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nlet _id = 1;\nconst incID = () => _id++;\nfunction FiltersAddEdit({ filter, onClose }) {\n  const { _, t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!filter;\n  const { context, expiresAt, id, keywords, title, filterAction } =\n    filter || {};\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const [editKeywords, setEditKeywords] = useState(keywords || []);\n  const keywordsRef = useRef();\n\n  // Hacky way of handling removed keywords for both existing and new ones\n  const [removedKeywordIDs, setRemovedKeywordIDs] = useState([]);\n  const [removedKeyword_IDs, setRemovedKeyword_IDs] = useState([]);\n\n  const filteredEditKeywords = editKeywords.filter(\n    (k) =>\n      !removedKeywordIDs.includes(k.id) && !removedKeyword_IDs.includes(k._id),\n  );\n\n  return (\n    <div class=\"sheet\" id=\"filters-add-edit-modal\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit filter` : t`New filter`}</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const keywordIDs = formData.getAll('keyword_attributes[][id]');\n            const keywordKeywords = formData.getAll(\n              'keyword_attributes[][keyword]',\n            );\n            // const keywordWholeWords = formData.getAll(\n            //   'keyword_attributes[][whole_word]',\n            // );\n            // Not using getAll because it skips the empty checkboxes\n            const keywordWholeWords = [\n              ...keywordsRef.current.querySelectorAll(\n                'input[name=\"keyword_attributes[][whole_word]\"]',\n              ),\n            ].map((i) => i.checked);\n            const keywordsAttributes = keywordKeywords.map((k, i) => ({\n              id: keywordIDs[i] || undefined,\n              keyword: k,\n              wholeWord: keywordWholeWords[i],\n            }));\n            // if (editMode && keywords?.length) {\n            //   // Find which one got deleted and add to keywordsAttributes\n            //   keywords.forEach((k) => {\n            //     if (!keywordsAttributes.find((ka) => ka.id === k.id)) {\n            //       keywordsAttributes.push({\n            //         ...k,\n            //         _destroy: true,\n            //       });\n            //     }\n            //   });\n            // }\n            if (editMode && removedKeywordIDs?.length) {\n              removedKeywordIDs.forEach((id) => {\n                keywordsAttributes.push({\n                  id,\n                  _destroy: true,\n                });\n              });\n            }\n            const context = formData.getAll('context');\n            let expiresIn = formData.get('expires_in');\n            const filterAction = formData.get('filter_action');\n            console.log({\n              title,\n              keywordIDs,\n              keywords: keywordKeywords,\n              wholeWords: keywordWholeWords,\n              keywordsAttributes,\n              context,\n              expiresIn,\n              filterAction,\n            });\n\n            // Required fields\n            if (!title || !context?.length) {\n              return;\n            }\n\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let filterResult;\n\n                if (editMode) {\n                  if (expiresIn === '' || expiresIn === null) {\n                    // No value\n                    // Preserve existing expiry if not specified\n                    // Seconds from now to expiresAtDate\n                    // Other clients don't do this\n                    if (hasExpiry) {\n                      expiresIn = Math.floor(\n                        (expiresAtDate - new Date()) / 1000,\n                      );\n                    } else {\n                      expiresIn = null;\n                    }\n                  } else if (expiresIn === '0' || expiresIn === 0) {\n                    // 0 = Never\n                    expiresIn = null;\n                  } else {\n                    expiresIn = +expiresIn;\n                  }\n                  filterResult = await masto.v2.filters.$select(id).update({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                } else {\n                  expiresIn = +expiresIn || null;\n                  filterResult = await masto.v2.filters.create({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                }\n                console.log({ filterResult });\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  filter: filterResult,\n                });\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit filter`\n                    : t`Unable to create filter`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"filter-form-row\">\n            <label>\n              <b>\n                <Trans>Title</Trans>\n              </b>\n              <input\n                type=\"text\"\n                name=\"title\"\n                defaultValue={title}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n                required\n              />\n            </label>\n          </div>\n          <div class=\"filter-form-keywords\" ref={keywordsRef}>\n            {filteredEditKeywords.length ? (\n              <ul class=\"filter-keywords\">\n                {filteredEditKeywords.map((k) => {\n                  const { id, keyword, wholeWord, _id } = k;\n                  return (\n                    <li key={`${id}-${_id}`}>\n                      <input\n                        type=\"hidden\"\n                        name=\"keyword_attributes[][id]\"\n                        value={id}\n                      />\n                      <input\n                        name=\"keyword_attributes[][keyword]\"\n                        type=\"text\"\n                        defaultValue={keyword}\n                        disabled={uiState === 'loading'}\n                        required\n                        dir=\"auto\"\n                      />\n                      <div class=\"filter-keyword-actions\">\n                        <label>\n                          <input\n                            name=\"keyword_attributes[][whole_word]\"\n                            type=\"checkbox\"\n                            value={id} // Hacky way to map checkbox boolean to the keyword id\n                            defaultChecked={wholeWord}\n                            disabled={uiState === 'loading'}\n                          />{' '}\n                          <Trans>Whole word</Trans>\n                        </label>\n                        <button\n                          type=\"button\"\n                          class=\"light danger small\"\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            if (id) {\n                              removedKeywordIDs.push(id);\n                              setRemovedKeywordIDs([...removedKeywordIDs]);\n                            } else if (_id) {\n                              removedKeyword_IDs.push(_id);\n                              setRemovedKeyword_IDs([...removedKeyword_IDs]);\n                            }\n                          }}\n                        >\n                          <Icon icon=\"x\" alt={t`Remove`} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <div class=\"filter-keywords\">\n                <div class=\"insignificant\">\n                  <Trans>No keywords. Add one.</Trans>\n                </div>\n              </div>\n            )}\n            <footer class=\"filter-keywords-footer\">\n              <button\n                type=\"button\"\n                class=\"light\"\n                onClick={() => {\n                  setEditKeywords([\n                    ...editKeywords,\n                    {\n                      _id: incID(),\n                      keyword: '',\n                      wholeWord: true,\n                    },\n                  ]);\n                  setTimeout(() => {\n                    // Focus last input\n                    const fields =\n                      keywordsRef.current.querySelectorAll(\n                        'input[type=\"text\"]',\n                      );\n                    fields[fields.length - 1]?.focus?.();\n                  }, 10);\n                }}\n              >\n                <Trans>Add keyword</Trans>\n              </button>{' '}\n              {filteredEditKeywords?.length > 1 && (\n                <small class=\"insignificant\">\n                  <Plural\n                    value={filteredEditKeywords.length}\n                    one=\"# keyword\"\n                    other=\"# keywords\"\n                  />\n                </small>\n              )}\n            </footer>\n          </div>\n          <div class=\"filter-form-cols\">\n            <div class=\"filter-form-col\">\n              <div>\n                <b>\n                  <Trans>Filter from…</Trans>\n                </b>\n              </div>\n              {FILTER_CONTEXT.map((ctx) => (\n                <div>\n                  <label\n                    class={\n                      FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx)\n                        ? 'insignificant'\n                        : ''\n                    }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name=\"context\"\n                      value={ctx}\n                      defaultChecked={!!context ? context.includes(ctx) : true}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    {_(FILTER_CONTEXT_LABELS[ctx])}\n                    {FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx) ? '*' : ''}\n                  </label>{' '}\n                </div>\n              ))}\n              <p>\n                <small class=\"insignificant\">\n                  <Trans>* Not implemented yet</Trans>\n                </small>\n              </p>\n            </div>\n            <div class=\"filter-form-col\">\n              {editMode && (\n                <Trans>\n                  Status:{' '}\n                  <b>\n                    <ExpiryStatus expiresAt={expiresAt} showNeverExpires />\n                  </b>\n                </Trans>\n              )}\n              <div>\n                <label for=\"filters-expires_in\">\n                  {editMode ? t`Change expiry` : t`Expiry`}\n                </label>\n                <select\n                  id=\"filters-expires_in\"\n                  name=\"expires_in\"\n                  disabled={uiState === 'loading'}\n                  defaultValue={editMode ? undefined : 0}\n                >\n                  {editMode && <option></option>}\n                  {EXPIRY_DURATIONS.map((v) => (\n                    <option value={v}>\n                      {typeof EXPIRY_DURATIONS_LABELS[v] === 'function'\n                        ? EXPIRY_DURATIONS_LABELS[v]()\n                        : _(EXPIRY_DURATIONS_LABELS[v])}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <p>\n                <Trans>Filtered post will be…</Trans>\n                <br />\n                {getAPIVersions()?.mastodon >= 5 && (\n                  <label class=\"ib\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter_action\"\n                      value=\"blur\"\n                      defaultChecked={filterAction === 'blur'}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    <Trans>obscured (media only)</Trans>\n                  </label>\n                )}{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"warn\"\n                    defaultChecked={\n                      (filterAction !== 'hide' && filterAction !== 'blur') ||\n                      !editMode\n                    }\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>minimized</Trans>\n                </label>{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"hide\"\n                    defaultChecked={filterAction === 'hide'}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>hidden</Trans>\n                </label>\n              </p>\n            </div>\n          </div>\n          <footer class=\"filter-form-footer\">\n            <span>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                {editMode ? t`Save` : t`Create`}\n              </button>{' '}\n              <Loader abrupt hidden={uiState !== 'loading'} />\n            </span>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this filter?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await masto.v2.filters.$select(id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'success',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete filter.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  onClick={() => {}}\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ExpiryStatus({ expiresAt, showNeverExpires }) {\n  const { t } = useLingui();\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const expired = hasExpiry && expiresAtDate <= new Date();\n\n  // If less than a minute left, re-render interval every second, else every minute\n  const [_, rerender] = useReducer((c) => c + 1, 0);\n  useInterval(rerender, expired || 30_000);\n\n  return expired ? (\n    t`Expired`\n  ) : hasExpiry ? (\n    <Trans>\n      Expiring <RelativeTime datetime={expiresAtDate} />\n    </Trans>\n  ) : (\n    showNeverExpires && t`Never expires`\n  );\n}\n\nexport default Filters;\n","import { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  useTitle(t`Followed Hashtags`, `/fh`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Followed Hashtags</Trans>\n            </h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" alt=\"#\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={followedHashtags.length}\n                      one=\"# hashtag\"\n                      other=\"# hashtags\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load followed hashtags.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No hashtags followed yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { getStatus, saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  const { t } = useLingui();\n  useTitle(\n    title ||\n      t({\n        id: 'following.title',\n        message: 'Following',\n      }),\n    path || '/following',\n  );\n  const { masto, streaming, instance } = api();\n  const snapStates = useSnapshot(states);\n  const homeIterable = useRef();\n  const homeIterator = useRef();\n  const latestItem = useRef();\n  __BENCHMARK.end('time-to-following');\n\n  console.debug('RENDER Following', title, id);\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      __BENCHMARK.start('fetch-home-first');\n      homeIterable.current = masto.v1.timelines.home.list({ limit: LIMIT });\n      homeIterator.current = homeIterable.current.values();\n    }\n    if (supportsPixelfed && homeIterable.current?.params) {\n      if (typeof homeIterable.current.params === 'string') {\n        homeIterable.current.params += '&include_reblogs=true';\n      } else {\n        homeIterable.current.params.include_reblogs = true;\n      }\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      assignFollowedTags(value, instance);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        const aDate = new Date(a.createdAt);\n        const bDate = new Date(b.createdAt);\n        return bDate - aDate;\n      });\n    }\n    __BENCHMARK.end('fetch-home-first');\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const opts = {\n        limit: 5,\n        since_id: latestItem.current,\n      };\n      if (supports('@pixelfed/home-include-reblogs')) {\n        opts.include_reblogs = true;\n      }\n      const results = await masto.v1.timelines.home.list(opts).values().next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streaming) {\n        sub = streaming.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streaming]);\n\n  return (\n    <Timeline\n      title={title || t({ id: 'following.title', message: 'Following' })}\n      id={id || 'following'}\n      emptyText={t`Nothing to see here.`}\n      errorText={t`Unable to load posts.`}\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  const { t } = useLingui();\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const title = instance\n    ? media\n      ? t`${hashtagTitle} (Media only) on ${instance}`\n      : t`${hashtagTitle} on ${instance}`\n    : media\n      ? t`${hashtagTitle} (Media only)`\n      : t`${hashtagTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   }).values();\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media ? true : undefined,\n      })\n      .values()\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media || mediaFirst, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .values()\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  const [featuredUIState, setFeaturedUIState] = useState('default');\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const [isFeaturedTag, setIsFeaturedTag] = useState(false);\n  useEffect(() => {\n    if (!authenticated) return;\n    (async () => {\n      try {\n        const featuredTags = await masto.v1.featuredTags.list();\n        setFeaturedTags(featuredTags);\n        setIsFeaturedTag(\n          featuredTags.some(\n            (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n          ),\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <Timeline\n        key={instance + hashtagTitle}\n        title={title}\n        titleComponent={\n          !!instance && (\n            <h1 class=\"header-double-lines\">\n              <b dir=\"auto\">{hashtagTitle}</b>\n              <div>{instance}</div>\n            </h1>\n          )\n        }\n        id=\"hashtag\"\n        instance={instance}\n        emptyText={t`No one has posted anything with this tag yet.`}\n        errorText={t`Unable to load posts with this tag`}\n        fetchItems={fetchHashtags}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        view={media || mediaFirst ? 'media' : undefined}\n        refresh={media}\n        // allowFilters\n        filterContext=\"public\"\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            // viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            {!!info && hashtags.length === 1 && (\n              <>\n                <MenuConfirm\n                  subMenu\n                  confirm={info.following}\n                  confirmLabel={t`Unfollow #${hashtag}?`}\n                  disabled={followUIState === 'loading' || !authenticated}\n                  onClick={() => {\n                    setFollowUIState('loading');\n                    if (info.following) {\n                      // const yes = confirm(`Unfollow #${hashtag}?`);\n                      // if (!yes) {\n                      //   setFollowUIState('default');\n                      //   return;\n                      // }\n                      masto.v1.tags\n                        .$select(hashtag)\n                        .unfollow()\n                        .then(() => {\n                          setInfo({ ...info, following: false });\n                          showToast(t`Unfollowed #${hashtag}`);\n                        })\n                        .catch((e) => {\n                          alert(e);\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFollowUIState('default');\n                        });\n                    } else {\n                      masto.v1.tags\n                        .$select(hashtag)\n                        .follow()\n                        .then(() => {\n                          setInfo({ ...info, following: true });\n                          showToast(t`Followed #${hashtag}`);\n                        })\n                        .catch((e) => {\n                          alert(e);\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFollowUIState('default');\n                        });\n                    }\n                  }}\n                >\n                  {info.following ? (\n                    <>\n                      <Icon icon=\"check-circle\" />{' '}\n                      <span>\n                        <Trans>Following…</Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"plus\" />{' '}\n                      <span>\n                        <Trans>Follow</Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  type=\"checkbox\"\n                  checked={isFeaturedTag}\n                  disabled={featuredUIState === 'loading' || !authenticated}\n                  onClick={() => {\n                    setFeaturedUIState('loading');\n                    if (isFeaturedTag) {\n                      const featuredTagID = featuredTags.find(\n                        (tag) =>\n                          tag.name.toLowerCase() === hashtag.toLowerCase(),\n                      ).id;\n                      if (featuredTagID) {\n                        masto.v1.featuredTags\n                          .$select(featuredTagID)\n                          .remove()\n                          .then(() => {\n                            setIsFeaturedTag(false);\n                            showToast(t`Unfeatured on profile`);\n                            setFeaturedTags(\n                              featuredTags.filter(\n                                (tag) => tag.id !== featuredTagID,\n                              ),\n                            );\n                          })\n                          .catch((e) => {\n                            console.error(e);\n                          })\n                          .finally(() => {\n                            setFeaturedUIState('default');\n                          });\n                      } else {\n                        showToast(t`Unable to unfeature on profile`);\n                      }\n                    } else {\n                      masto.v1.featuredTags\n                        .create({\n                          name: hashtag,\n                        })\n                        .then((value) => {\n                          setIsFeaturedTag(true);\n                          showToast(t`Featured on profile`);\n                          setFeaturedTags(featuredTags.concat(value));\n                        })\n                        .catch((e) => {\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFeaturedUIState('default');\n                        });\n                    }\n                  }}\n                >\n                  {isFeaturedTag ? (\n                    <>\n                      <Icon icon=\"check-circle\" />\n                      <span>\n                        <Trans>Featured on profile</Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"check-circle\" />\n                      <span>\n                        <Trans>Feature on profile</Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuItem>\n                <MenuDivider />\n              </>\n            )}\n            {!mediaFirst && (\n              <>\n                <MenuHeader className=\"plain\">\n                  <Trans>Filters</Trans>\n                </MenuHeader>\n                <MenuItem\n                  type=\"checkbox\"\n                  checked={!!media}\n                  onClick={() => {\n                    if (media) {\n                      searchParams.delete('media');\n                    } else {\n                      searchParams.set('media', '1');\n                    }\n                    setSearchParams(searchParams);\n                  }}\n                >\n                  <Icon icon=\"check-circle\" alt=\"☑️\" />{' '}\n                  <span class=\"menu-grow\">\n                    <Trans>Media only</Trans>\n                  </span>\n                </MenuItem>\n                <MenuDivider />\n              </>\n            )}\n            <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n              {({ ref }) => (\n                <form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    const newHashtag = e.target[0].value?.trim?.();\n                    // Use includes but need to be case insensitive\n                    if (\n                      newHashtag &&\n                      !hashtags.some(\n                        (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                      )\n                    ) {\n                      hashtags.push(newHashtag);\n                      hashtags.sort();\n                      // navigate(\n                      //   instance\n                      //     ? `/${instance}/t/${hashtags.join('+')}`\n                      //     : `/t/${hashtags.join('+')}`,\n                      // );\n                      location.hash = instance\n                        ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                        : `/t/${hashtags.join('+')}${linkParams}`;\n                    }\n                  }}\n                >\n                  <Icon icon=\"hashtag\" />\n                  <input\n                    ref={ref}\n                    type=\"text\"\n                    placeholder={\n                      reachLimit\n                        ? plural(TOTAL_TAGS_LIMIT, {\n                            other: 'Max # tags',\n                          })\n                        : t`Add hashtag`\n                    }\n                    required\n                    autocorrect=\"off\"\n                    autocapitalize=\"off\"\n                    spellCheck={false}\n                    // no spaces, no hashtags\n                    pattern=\"[^#][^\\s#]+[^#]\"\n                    disabled={reachLimit}\n                    dir=\"auto\"\n                  />\n                </form>\n              )}\n            </FocusableItem>\n            <MenuGroup takeOverflow>\n              {hashtags.map((tag, i) => (\n                <MenuItem\n                  key={tag}\n                  disabled={hashtags.length === 1}\n                  onClick={(e) => {\n                    hashtags.splice(i, 1);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }}\n                >\n                  <Icon icon=\"x\" alt={t`Remove hashtag`} class=\"danger-icon\" />\n                  <span class=\"bidi-isolate\">\n                    <span class=\"more-insignificant\">#</span>\n                    {tag}\n                  </span>\n                </MenuItem>\n              ))}\n            </MenuGroup>\n            <MenuDivider />\n            <MenuItem\n              disabled={!currentAuthenticated}\n              onClick={() => {\n                if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                  alert(\n                    plural(SHORTCUTS_LIMIT, {\n                      one: 'Max # shortcut reached. Unable to add shortcut.',\n                      other: 'Max # shortcuts reached. Unable to add shortcut.',\n                    }),\n                  );\n                  return;\n                }\n                const shortcut = {\n                  type: 'hashtag',\n                  hashtag: hashtags.join(' '),\n                  instance,\n                  media: media ? 'on' : undefined,\n                };\n                // Check if already exists\n                const exists = states.shortcuts.some(\n                  (s) =>\n                    s.type === shortcut.type &&\n                    s.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') ===\n                      shortcut.hashtag\n                        .split(/[\\s+]+/)\n                        .sort()\n                        .join(' ') &&\n                    (s.instance ? s.instance === shortcut.instance : true) &&\n                    (s.media ? !!s.media === !!shortcut.media : true),\n                );\n                if (exists) {\n                  alert(t`This shortcut already exists`);\n                } else {\n                  states.shortcuts.push(shortcut);\n                  showToast(t`Hashtag shortcut added`);\n                }\n              }}\n            >\n              <Icon icon=\"shortcut\" />{' '}\n              <span>\n                <Trans>Add to Shortcuts</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                let newInstance = prompt(\n                  t`Enter a new instance e.g. \"mastodon.social\"`,\n                );\n                if (!/\\./.test(newInstance)) {\n                  if (newInstance) alert(t`Invalid instance`);\n                  return;\n                }\n                if (newInstance) {\n                  newInstance = newInstance.toLowerCase().trim();\n                  // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                  location.hash = `/${newInstance}/t/${hashtags.join(\n                    '+',\n                  )}${linkParams}`;\n                }\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <span>\n                <Trans>Go to another instance…</Trans>\n              </span>\n            </MenuItem>\n            {currentInstance !== instance && (\n              <MenuItem\n                onClick={() => {\n                  location.hash = `/${currentInstance}/t/${hashtags.join(\n                    '+',\n                  )}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"bus\" />{' '}\n                <small class=\"menu-double-lines\">\n                  <Trans>\n                    Go to my instance (<b>{currentInstance}</b>)\n                  </Trans>\n                </small>\n              </MenuItem>\n            )}\n          </Menu2>\n        }\n      />\n      {!columnMode && !!hashtags?.length && (\n        <data\n          class=\"compose-data\"\n          value={JSON.stringify({\n            draftStatus: {\n              status: `${hashtags.length > 1 ? '\\n\\n' : ' '}${hashtagTitle}`,\n            },\n          })}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport ListAddEdit from '../components/list-add-edit';\nimport ListExclusiveBadge from '../components/list-exclusive-badge';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport { getList, getLists } from '../utils/lists';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list\n        .$select(id)\n        .list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'home');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [lists, setLists] = useState([]);\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await getList(id);\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText={t`Nothing yet.`}\n        errorText={t`Unable to load posts.`}\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          // <Link to=\"/l\" class=\"button plain\">\n          //   <Icon icon=\"list\" size=\"l\" />\n          // </Link>\n          <Menu2\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"list\" size=\"l\" alt={t`Lists`} />\n                <Icon icon=\"chevron-down\" size=\"s\" />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (e.open) {\n                getLists().then(setLists);\n              }\n            }}\n          >\n            <MenuLink to=\"/l\">\n              <span>\n                <Trans>All Lists</Trans>\n              </span>\n            </MenuLink>\n            {lists?.length > 0 && (\n              <>\n                <MenuDivider />\n                {lists.map((list) => (\n                  <MenuLink key={list.id} to={`/l/${list.id}`}>\n                    <span>\n                      {list.title}\n                      {list.exclusive && (\n                        <>\n                          {' '}\n                          <ListExclusiveBadge />\n                        </>\n                      )}\n                    </span>\n                  </MenuLink>\n                ))}\n              </>\n            )}\n          </Menu2>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            {list?.exclusive && (\n              <>\n                <MenuHeader className=\"plain\">\n                  <ListExclusiveBadge />{' '}\n                  <Trans>\n                    Posts on this list are hidden from Home/Following\n                  </Trans>\n                </MenuHeader>\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>\n                <Trans>Edit</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>\n                <Trans>Manage members</Trans>\n              </span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\n\nfunction ListManageMembers({ listID, onClose }) {\n  const { t } = useLingui();\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            })\n            .values();\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Manage members</Trans>\n        </h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                <Trans>Show more…</Trans>\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={\n        <span>\n          <Trans>\n            Remove <span class=\"bidi-isolate\">@{account.username}</span> from\n            list?\n          </Trans>\n        </span>\n      }\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? t`Add` : t`Remove…`}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\n\nconst GROUP_TYPES = ['favourite', 'reblog', 'follow'];\nconst groupable = (type) => GROUP_TYPES.includes(type);\n\nexport function fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nexport function massageNotifications2(notifications) {\n  if (notifications?.notificationGroups) {\n    const {\n      accounts = [],\n      notificationGroups = [],\n      statuses = [],\n    } = notifications;\n    return notificationGroups.map((group) => {\n      const { sampleAccountIds, statusId } = group;\n      const sampleAccounts =\n        sampleAccountIds?.map((id) => accounts.find((a) => a.id === id)) || [];\n      const status = statuses?.find((s) => s.id === statusId) || null;\n      return {\n        ...group,\n        sampleAccounts,\n        status,\n      };\n    });\n  }\n  return notifications;\n}\n\nexport function groupNotifications2(groupNotifications) {\n  // Make grouped notifications to look like faux grouped notifications\n  const newGroupNotifications = groupNotifications.map((gn) => {\n    const {\n      latestPageNotificationAt,\n      mostRecentNotificationId,\n      sampleAccounts,\n      notificationsCount,\n    } = gn;\n\n    return {\n      id: '' + mostRecentNotificationId,\n      createdAt: latestPageNotificationAt,\n      account: sampleAccounts[0],\n      ...gn,\n    };\n  });\n\n  // Merge favourited and reblogged of same status into a single notification\n  // - new type: \"favourite+reblog\"\n  // - sum numbers for `notificationsCount` and `sampleAccounts`\n  const notificationsMap = {};\n  const newGroupNotifications1 = [];\n  for (let i = 0; i < newGroupNotifications.length; i++) {\n    const gn = newGroupNotifications[i];\n    const {\n      type,\n      status,\n      createdAt,\n      notificationsCount,\n      sampleAccounts,\n      groupKey,\n    } = gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    // const sameCount = notificationsCount > 0 && notificationsCount === sampleAccounts?.length;\n    // if (sameCount && (type === 'favourite' || type === 'reblog')) {\n    const sampleCountDiffNotificationsCount =\n      notificationsCount > 0 &&\n      sampleAccounts?.length > 0 &&\n      notificationsCount > sampleAccounts?.length;\n    if (\n      !sampleCountDiffNotificationsCount &&\n      (type === 'favourite' || type === 'reblog')\n    ) {\n      virtualType = 'favourite+reblog';\n    }\n    // const key = `${status?.id}-${virtualType}-${date}-${sameCount ? 1 : 0}`;\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      newGroupNotifications1.push(gn);\n    } else if (mappedNotification) {\n      // Merge sampleAccounts + merge _types\n      sampleAccounts.forEach((a) => {\n        const mappedAccount = mappedNotification.sampleAccounts.find(\n          (ma) => ma.id === a.id,\n        );\n        if (!mappedAccount) {\n          mappedNotification.sampleAccounts.push({\n            ...a,\n            _types: [type],\n          });\n        } else {\n          mappedAccount._types.push(type);\n          mappedAccount._types.sort().reverse();\n        }\n      });\n      // mappedNotification.notificationsCount =\n      //   mappedNotification.sampleAccounts.length;\n      mappedNotification.notificationsCount = Math.min(\n        mappedNotification.notificationsCount,\n        notificationsCount,\n      );\n      mappedNotification._notificationsCount.push(notificationsCount);\n      mappedNotification._sampleAccountsCount.push(sampleAccounts?.length);\n      mappedNotification._accounts = mappedNotification.sampleAccounts;\n      mappedNotification._groupKeys.push(groupKey);\n    } else {\n      const accounts = sampleAccounts.map((a) => ({\n        ...a,\n        _types: [type],\n      }));\n      notificationsMap[key] = {\n        ...gn,\n        sampleAccounts: accounts,\n        type: virtualType,\n        _accounts: accounts,\n        _groupKeys: groupKey ? [groupKey] : [],\n        _notificationsCount: [notificationsCount],\n        _sampleAccountsCount: [sampleAccounts?.length],\n      };\n      newGroupNotifications1.push(notificationsMap[key]);\n    }\n  }\n\n  // 2nd pass.\n  // - Group 1 account favourte/reblog multiple posts\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const newGroupNotifications2 = [];\n  for (let i = 0; i < newGroupNotifications1.length; i++) {\n    const gn = newGroupNotifications1[i];\n    const { type, account, _accounts, sampleAccounts, createdAt, groupKey } =\n      gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    const hasOneAccount =\n      sampleAccounts?.length === 1 || _accounts?.length === 1;\n    if (\n      (type === 'favourite' ||\n        type === 'reblog' ||\n        type === 'favourite+reblog') &&\n      hasOneAccount\n    ) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(gn.status);\n        mappedNotification._ids += `-${gn.id}`;\n        mappedNotification._groupKeys.push(groupKey);\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...gn,\n          type,\n          _ids: gn.id,\n          _statuses: [gn.status],\n          _groupKeys: groupKey ? [groupKey] : [],\n        });\n        newGroupNotifications2.push(n);\n      }\n    } else {\n      newGroupNotifications2.push(gn);\n    }\n  }\n\n  console.log('newGroupNotifications2', newGroupNotifications2);\n\n  return newGroupNotifications2;\n}\n\nexport default function groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification._ids += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification._ids += `-${id}`;\n      }\n    } else {\n      if (account) account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _ids: id,\n        _accounts: account ? [account] : [],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification._ids += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _ids: id,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { fixNotifications } from '../utils/group-notifications';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(type === 'private' ? t`Private mentions` : t`Mentions`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications\n        .list({\n          limit: LIMIT,\n          types: ['mention'],\n        })\n        .values();\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = fixNotifications(value);\n\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations\n        .list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .values()\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        const valueContainsLatestItem =\n          value[0]?.id === latestConversationItem.current; // since_id might not be supported\n        if (value?.length && !valueContainsLatestItem) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .values()\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          <Trans>All</Trans>\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          <Trans>Private</Trans>\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title={t`Mentions`}\n      id=\"mentions\"\n      emptyText={t`No one mentioned you :(`}\n      errorText={t`Unable to load mentions.`}\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n      filterContext=\"notifications\"\n    />\n  );\n}\n\nexport default Mentions;\n","import './notifications.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport FilterContext from '../utils/filter-context';\nimport groupNotifications, {\n  groupNotifications2,\n  massageNotifications2,\n} from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport { getAPIVersions, getCurrentInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst NOTIFICATIONS_LIMIT = 80;\nconst NOTIFICATIONS_GROUPED_LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nconst memSupportsGroupedNotifications = mem(\n  () => getAPIVersions()?.mastodon >= 2,\n  {\n    maxAge: 1000 * 60 * 5, // 5 minutes\n  },\n);\n\nfunction mastoFetchNotificationsIterable(opts = {}) {\n  const { masto } = api();\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    // https://github.com/mastodon/mastodon/pull/29889\n    return masto.v2.notifications.list({\n      limit: NOTIFICATIONS_GROUPED_LIMIT,\n      ...opts,\n    });\n  } else {\n    return masto.v1.notifications.list({\n      limit: NOTIFICATIONS_LIMIT,\n      ...opts,\n    });\n  }\n}\nexport function mastoFetchNotifications(opts = {}) {\n  return mastoFetchNotificationsIterable(opts).values();\n}\n\nexport function getGroupedNotifications(notifications) {\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    return groupNotifications2(notifications);\n  } else {\n    return groupNotifications(notifications);\n  }\n}\n\nconst NOTIFICATIONS_POLICIES = [\n  'forNotFollowing',\n  'forNotFollowers',\n  'forNewAccounts',\n  'forPrivateMentions',\n  'forLimitedAccounts',\n];\nconst NOTIFICATIONS_POLICIES_TEXT = {\n  forNotFollowing: msg`You don't follow`,\n  forNotFollowers: msg`Who don't follow you`,\n  forNewAccounts: msg`With a new account`,\n  forPrivateMentions: msg`Who unsolicitedly private mention you`,\n  forLimitedAccounts: msg`Who are limited by server moderators`,\n};\n\nfunction Notifications({ columnMode }) {\n  const { _, t } = useLingui();\n  useTitle(t`Notifications`, '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterable = useRef();\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterable.current = mastoFetchNotificationsIterable({\n        excludeTypes: ['follow_request'],\n      });\n      notificationsIterator.current = notificationsIterable.current.values();\n    }\n    if (/max_id=($|&)/i.test(notificationsIterator.current?.nextParams)) {\n      // Pixelfed returns next paginationed link with empty max_id\n      // I assume, it's done (end of list)\n      return {\n        done: true,\n      };\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      // TEST: Slot in a fake notification to test 'severed_relationships'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'severed_relationships',\n      //   createdAt: '2024-03-22T19:20:08.316Z',\n      //   event: {\n      //     type: 'account_suspension',\n      //     targetName: 'mastodon.dev',\n      //     followersCount: 0,\n      //     followingCount: 0,\n      //   },\n      // });\n\n      // TEST: Slot in a fake notification to test 'moderation_warning'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'moderation_warning',\n      //   createdAt: new Date().toISOString(),\n      //   moderation_warning: {\n      //     id: '1231234',\n      //     action: 'mark_statuses_as_sensitive',\n      //   },\n      // });\n\n      // console.log({ notifications });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = groupedNotifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: groupedNotifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const supportsFilteredNotifications = supports(\n    '@mastodon/filtered-notifications',\n  );\n  const [showNotificationsSettings, setShowNotificationsSettings] =\n    useState(false);\n  const [notificationsPolicy, setNotificationsPolicy] = useState({});\n  function fetchNotificationsPolicy() {\n    return masto.v2.notifications.policy.fetch().catch(() => {});\n  }\n  function loadNotificationsPolicy() {\n    fetchNotificationsPolicy()\n      .then((policy) => {\n        console.log('✨ Notifications policy', policy);\n        setNotificationsPolicy(policy);\n      })\n      .catch(() => {});\n  }\n  const [notificationsRequests, setNotificationsRequests] = useState(null);\n  function fetchNotificationsRequest() {\n    return masto.v1.notifications.requests.list();\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                const aDate = new Date(a.updatedAt || a.createdAt);\n                const bDate = new Date(b.updatedAt || b.createdAt);\n                return bDate - aDate;\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n\n          if (supportsFilteredNotifications) {\n            loadNotificationsPolicy();\n          }\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    let unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n      if (firstLoad.current) {\n        firstLoad.current = false;\n        return;\n      }\n      if (uiState === 'loading') return;\n      if (v) loadUpdates();\n      setShowNew(v);\n    });\n    return () => unsub?.();\n  }, []);\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const [annualReportNotification, setAnnualReportNotification] =\n    useState(null);\n  useEffect(async () => {\n    // Skip this if not in December\n    const date = new Date();\n    if (date.getMonth() !== 11) return;\n\n    // Skip if doesn't support annual report\n    if (!supports('@mastodon/annual-report')) return;\n\n    let annualReportNotification = store.account.get(\n      'annualReportNotification',\n    );\n    if (annualReportNotification) {\n      setAnnualReportNotification(annualReportNotification);\n      return;\n    }\n    const notificationIterator = mastoFetchNotifications({\n      types: ['annual_report'],\n    });\n    try {\n      const notification = await notificationIterator.next();\n      annualReportNotification = notification?.value?.notificationGroups?.[0];\n      const annualReportYear = annualReportNotification?.annualReport?.year;\n      // If same year, show the annual report\n      if (annualReportYear == date.getFullYear()) {\n        console.log(\n          'ANNUAL REPORT',\n          annualReportYear,\n          annualReportNotification,\n        );\n        setAnnualReportNotification(annualReportNotification);\n        store.account.set('annualReportNotification', annualReportNotification);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const oRef = useHotkeys(\n    ['enter', 'o'],\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const statusLink = activeItem?.querySelector('.status-link');\n      if (statusLink) {\n        statusLink.click();\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const today = new Date();\n  const todaySubHeading = useMemo(() => {\n    return niceDateTime(today, {\n      forceOpts: {\n        weekday: 'long',\n      },\n    });\n  }, [today]);\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        oRef.current = node;\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Notifications</Trans>\n            </h1>\n            <div class=\"header-side\">\n              {supportsFilteredNotifications && (\n                <button\n                  type=\"button\"\n                  class=\"button plain4\"\n                  onClick={() => {\n                    setShowNotificationsSettings(true);\n                  }}\n                >\n                  <Icon\n                    icon=\"settings\"\n                    size=\"l\"\n                    alt={t`Notifications settings`}\n                  />\n                </button>\n              )}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> <Trans>New notifications</Trans>\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <Plural\n                      value={announcements.length}\n                      one=\"Announcement\"\n                      other=\"Announcements\"\n                    />{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">\n              <Trans>Follow requests</Trans>\n            </h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>\n                  <Plural\n                    value={followRequests.length}\n                    one=\"# follow request\"\n                    other=\"# follow requests\"\n                  />\n                </summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        {supportsFilteredNotifications &&\n          notificationsPolicy?.summary?.pendingRequestsCount > 0 && (\n            <div class=\"shazam-container\">\n              <div class=\"shazam-container-inner\">\n                <div class=\"filtered-notifications\">\n                  <details\n                    onToggle={async (e) => {\n                      const { open } = e.target;\n                      if (open) {\n                        const requests = await fetchNotificationsRequest();\n                        setNotificationsRequests(requests);\n                        console.log({ open, requests });\n                      }\n                    }}\n                  >\n                    <summary>\n                      <Plural\n                        value={notificationsPolicy.summary.pendingRequestsCount}\n                        one=\"Filtered notifications from # person\"\n                        other=\"Filtered notifications from # people\"\n                      />\n                    </summary>\n                    {!notificationsRequests ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      notificationsRequests?.length > 0 && (\n                        <ul>\n                          {notificationsRequests.map((request) => (\n                            <li key={request.id}>\n                              <div class=\"request-notifcations\">\n                                {!request.lastStatus?.id && (\n                                  <AccountBlock\n                                    useAvatarStatic\n                                    showStats\n                                    account={request.account}\n                                  />\n                                )}\n                                {request.lastStatus?.id && (\n                                  <div class=\"last-post\">\n                                    <Link\n                                      class=\"status-link\"\n                                      to={`/${instance}/s/${request.lastStatus.id}`}\n                                    >\n                                      <Status\n                                        status={request.lastStatus}\n                                        size=\"s\"\n                                        readOnly\n                                      />\n                                    </Link>\n                                  </div>\n                                )}\n                                <NotificationRequestModalButton\n                                  request={request}\n                                />\n                              </div>\n                              <NotificationRequestButtons\n                                request={request}\n                                onChange={() => {\n                                  loadNotifications(true);\n                                }}\n                              />\n                            </li>\n                          ))}\n                        </ul>\n                      )\n                    )}\n                  </details>\n                </div>\n              </div>\n            </div>\n          )}\n        {annualReportNotification && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <Notification notification={annualReportNotification} />\n            </div>\n          </div>\n        )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            <Trans>Only mentions</Trans>\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">\n          <Trans>Today</Trans>{' '}\n          <small class=\"insignificant bidi-isolate\">{todaySubHeading}</small>\n        </h2>\n        {showTodayEmpty && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? t`You're all caught up.` : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <FilterContext.Provider value=\"notifications\">\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? t`Yesterday`\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                const subHeading = niceDateTime(currentDay, {\n                  forceOpts: {\n                    weekday: 'long',\n                  },\n                });\n                return (\n                  <Fragment key={notification._ids || notification.id}>\n                    {differentDay && (\n                      <h2 class=\"timeline-header\">\n                        <span>{heading}</span>{' '}\n                        <small class=\"insignificant bidi-isolate\">\n                          {subHeading}\n                        </small>\n                      </h2>\n                    )}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification._ids || notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </FilterContext.Provider>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load notifications</Trans>\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <Trans>Show more…</Trans>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n      {supportsFilteredNotifications && showNotificationsSettings && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowNotificationsSettings(false);\n            }\n          }}\n        >\n          <div class=\"sheet\" id=\"notifications-settings\" tabIndex=\"-1\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowNotificationsSettings(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Notifications settings</Trans>\n              </h2>\n            </header>\n            <main>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const {\n                    forNotFollowing,\n                    forNotFollowers,\n                    forNewAccounts,\n                    forPrivateMentions,\n                    forLimitedAccounts,\n                  } = e.target;\n                  const newPolicy = {\n                    ...notificationsPolicy,\n                    forNotFollowing: forNotFollowing.value,\n                    forNotFollowers: forNotFollowers.value,\n                    forNewAccounts: forNewAccounts.value,\n                    forPrivateMentions: forPrivateMentions.value,\n                    forLimitedAccounts: forLimitedAccounts.value,\n                  };\n                  setNotificationsPolicy(newPolicy);\n                  setShowNotificationsSettings(false);\n                  (async () => {\n                    try {\n                      await masto.v2.notifications.policy.update(newPolicy);\n                      showToast(t`Notifications settings updated`);\n                    } catch (e) {\n                      console.error(e);\n                    }\n                  })();\n                }}\n              >\n                <p>\n                  <Trans>Filter out notifications from people:</Trans>\n                </p>\n                <div class=\"notification-policy-fields\">\n                  {NOTIFICATIONS_POLICIES.map((key) => {\n                    const value = notificationsPolicy[key];\n                    return (\n                      <div key={key}>\n                        <label>\n                          {_(NOTIFICATIONS_POLICIES_TEXT[key])}\n                          <select name={key} defaultValue={value} class=\"small\">\n                            <option value=\"accept\">\n                              <Trans>Accept</Trans>\n                            </option>\n                            <option value=\"filter\">\n                              <Trans>Filter</Trans>\n                            </option>\n                            <option value=\"drop\">\n                              <Trans>Ignore</Trans>\n                            </option>\n                          </select>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p>\n                  <button type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </p>\n              </form>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              <Trans>\n                Updated{' '}\n                <time datetime={updatedAtDate.toISOString()}>\n                  {niceDateTime(updatedAtDate)}\n                </time>\n              </Trans>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction fetchNotficationsByAccount(accountID) {\n  const { masto } = api();\n  return masto.v1.notifications.list({\n    accountID,\n  });\n}\nfunction NotificationRequestModalButton({ request }) {\n  const { instance } = api();\n  const [uiState, setUIState] = useState('loading');\n  const { account, lastStatus } = request;\n  const [showModal, setShowModal] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  function onClose() {\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    if (!request?.account?.id) return;\n    if (!showModal) return;\n    setUIState('loading');\n    (async () => {\n      const notifs = await fetchNotficationsByAccount(request.account.id);\n      setNotifications(notifs || []);\n      setUIState('default');\n    })();\n  }, [showModal, request?.account?.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        class=\"plain4 request-notifications-account\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      >\n        <Icon icon=\"notification\" class=\"more-insignificant\" />{' '}\n        <small>\n          <Trans>\n            View notifications from{' '}\n            <span class=\"bidi-isolate\">@{account.username}</span>\n          </Trans>\n        </small>{' '}\n        <Icon icon=\"chevron-down\" />\n      </button>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              onClose();\n            }\n          }}\n        >\n          <div class=\"sheet\" tabIndex=\"-1\">\n            <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <b>\n                <Trans>\n                  Notifications from{' '}\n                  <span class=\"bidi-isolate\">@{account.username}</span>\n                </Trans>\n              </b>\n            </header>\n            <main>\n              {uiState === 'loading' ? (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              ) : (\n                notifications.map((notification) => (\n                  <div\n                    class=\"notification-peek\"\n                    onClick={(e) => {\n                      const { target } = e;\n                      // If button or links\n                      if (\n                        e.target.tagName === 'BUTTON' ||\n                        e.target.tagName === 'A'\n                      ) {\n                        onClose();\n                      }\n                    }}\n                  >\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      isStatic\n                    />\n                  </div>\n                ))\n              )}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction NotificationRequestButtons({ request, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, dismiss\n  const hasRequestState = requestState !== null;\n\n  return (\n    <p class=\"notification-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .accept();\n              setRequestState('accept');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'accept',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not be filtered from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to accept notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Allow</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .dismiss();\n              setRequestState('dismiss');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'dismiss',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not show up in Filtered notifications from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to dismiss notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Dismiss</Trans>\n      </button>\n      <span class=\"notification-request-states\">\n        {uiState === 'loading' ? (\n          <Loader abrupt />\n        ) : requestState === 'accept' ? (\n          <Icon\n            icon=\"check-circle\"\n            alt={t`Accepted`}\n            class=\"notification-accepted\"\n          />\n        ) : (\n          requestState === 'dismiss' && (\n            <Icon\n              icon=\"x-circle\"\n              alt={t`Dismissed`}\n              class=\"notification-dismissed\"\n            />\n          )\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default memo(Notifications);\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = isLocal\n    ? t`Local timeline (${instance})`\n    : t`Federated timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      const opts = {\n        limit: LIMIT,\n        local: isLocal || undefined,\n      };\n      if (!isLocal && supports('@pixelfed/global-feed')) {\n        opts.remote = true;\n      }\n      publicIterator.current = masto.v1.timelines.public.list(opts).values();\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .values()\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? t`Local timeline` : t`Federated timeline`}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText={t`No one has posted anything yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Federated</Trans>\n                </span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Local</Trans>\n                </span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Search({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  let title = t`Search`;\n  if (q) {\n    switch (type) {\n      case 'statuses':\n        title = t`Search: ${q} (Posts)`;\n        break;\n      case 'accounts':\n        title = t`Search: ${q} (Accounts)`;\n        break;\n      case 'hashtags':\n        title = t`Search: ${q} (Hashtags)`;\n        break;\n      default:\n        title = t`Search: ${q}`;\n    }\n  }\n  useTitle(title, `/search`);\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const typeResults = {\n    statuses: statusResults,\n    accounts: accountResults,\n    hashtags: hashtagResults,\n  };\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.list(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            // If first item is the same, it means API doesn't support offset\n            // I know this is a very basic check, but it works for now\n            if (results[type]?.[0]?.id === typeResults[type]?.[0]?.id) {\n              setShowMore(false);\n            } else {\n              setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n              const length = results[type]?.length;\n              offsetRef.current = offsetRef.current + LIMIT;\n              setShowMore(!!length);\n            }\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    let timer;\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      timer = setTimeout(() => {\n        searchFormRef.current?.focus?.();\n      }, 150); // Right after focusDeck runs\n    }\n    return () => clearTimeout(timer);\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n      searchFormRef.current?.select?.();\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const itemsSelector = '.timeline > li > a, .hashtag-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div\n      id=\"search-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n      }}\n    >\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" alt={t`Search`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  <Icon icon=\"chevron-left\" /> <Trans>All</Trans>\n                </Link>\n              )}\n              {[\n                {\n                  label: t`Accounts`,\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: t`Hashtags`,\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: t`Posts`,\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Accounts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            <Trans>See more accounts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No accounts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Hashtags</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" alt=\"#\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            <Trans>See more hashtags</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No hashtags found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Posts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            <Trans>See more posts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No posts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        <Trans>Show more…</Trans>\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">\n                      <Trans>The end.</Trans>\n                    </p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>\n                Enter your search term or paste a URL above to get started.\n              </Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import '../components/links-bar.css';\nimport './trending.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport getDomain from '../utils/get-domain';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst TREND_CACHE_TIME = 10 * 60 * 1000; // 10 minutes\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().values().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nconst fetchHashtags = pmem(\n  (masto) => {\n    return masto.v1.trends.tags.list().values().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nfunction fetchTrendsStatuses(masto) {\n  if (supports('@pixelfed/trending')) {\n    return masto.pixelfed.v2.discover.posts.trending\n      .list({\n        range: 'daily',\n      })\n      .values();\n  }\n  return masto.v1.trends.statuses\n    .list({\n      limit: LIMIT,\n    })\n    .values();\n}\n\nfunction fetchLinkList(masto, params) {\n  return masto.v1.timelines.link.list(params).values();\n}\n\nfunction Trending({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = t`Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const sameCurrentInstance = instance === currentInstance;\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n\n  async function fetchTrends(firstLoad) {\n    console.log('fetchTrend', firstLoad);\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = fetchTrendsStatuses(masto);\n\n      // Get hashtags\n      if (supports('@mastodon/trending-hashtags')) {\n        try {\n          // const iterator = masto.v1.trends.tags.list();\n          const { value: tags } = await fetchHashtags(masto);\n          console.log('tags', tags);\n          if (tags?.length) {\n            setHashtags(tags);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Get links\n      if (supports('@mastodon/trending-links')) {\n        try {\n          const { value } = await fetchLinks(masto, instance);\n          // 4 types available: link, photo, video, rich\n          // Only want links for now\n          const links = value?.filter?.((link) => link.type === 'link');\n          console.log('links', links);\n          if (links?.length) {\n            setLinks(links);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  // Link mentions\n  // https://github.com/mastodon/mastodon/pull/30381\n  const [currentLinkMentionsLoading, setCurrentLinkMentionsLoading] =\n    useState(false);\n  const currentLinkMentionsIterator = useRef();\n  const [currentLink, setCurrentLink] = useState(null);\n  const hasCurrentLink = !!currentLink;\n  const currentLinkRef = useRef();\n  const supportsTrendingLinkPosts =\n    sameCurrentInstance && supports('@mastodon/trending-link-posts');\n\n  useEffect(() => {\n    if (currentLink && currentLinkRef.current) {\n      currentLinkRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center',\n      });\n    }\n  }, [currentLink]);\n\n  const prevCurrentLink = useRef();\n  async function fetchLinkMentions(firstLoad) {\n    if (firstLoad || !currentLinkMentionsIterator.current) {\n      setCurrentLinkMentionsLoading(true);\n      currentLinkMentionsIterator.current = fetchLinkList(masto, {\n        url: currentLink,\n      });\n    }\n    prevCurrentLink.current = currentLink;\n    const results = await currentLinkMentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    if (prevCurrentLink.current === currentLink) {\n      setCurrentLinkMentionsLoading(false);\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .values()\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span dir=\"auto\">\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>\n                <Trans>Trending News</Trans>\n              </h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authors,\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const author = authors?.[0]?.account?.id\n                ? authors[0].account\n                : null;\n              const isShortTitle = title.length < 30;\n              const hasAuthor = !!(authorName || author);\n              const domain = getDomain(url);\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <div key={url}>\n                  <a\n                    ref={currentLink === url ? currentLinkRef : null}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    class={`link-block ${\n                      hasCurrentLink\n                        ? currentLink === url\n                          ? 'active'\n                          : 'inactive'\n                        : ''\n                    }`}\n                    style={\n                      accentColor\n                        ? {\n                            '--accent-color': `rgb(${accentColor.join(',')})`,\n                            '--accent-alpha-color': `rgba(${accentColor.join(\n                              ',',\n                            )}, 0.4)`,\n                          }\n                        : {}\n                    }\n                  >\n                    <article>\n                      <figure>\n                        <img\n                          src={image}\n                          alt={imageDescription}\n                          width={width}\n                          height={height}\n                          loading=\"lazy\"\n                        />\n                      </figure>\n                      <div class=\"article-body\">\n                        <header>\n                          <div class=\"article-meta\">\n                            <span class=\"domain\">{domain}</span>{' '}\n                            {!!publishedAt && <>&middot; </>}\n                            {!!publishedAt && (\n                              <>\n                                <RelativeTime\n                                  datetime={publishedAt}\n                                  format=\"micro\"\n                                />\n                              </>\n                            )}\n                          </div>\n                          {!!title && (\n                            <h1\n                              class=\"title\"\n                              lang={language}\n                              dir=\"auto\"\n                              title={title}\n                            >\n                              {title}\n                            </h1>\n                          )}\n                        </header>\n                        {!!description && (\n                          <p\n                            class={`description ${\n                              hasAuthor && !isShortTitle ? '' : 'more-lines'\n                            }`}\n                            lang={language}\n                            dir=\"auto\"\n                            title={description}\n                          >\n                            {description}\n                          </p>\n                        )}\n                        {hasAuthor && (\n                          <>\n                            <hr />\n                            <p class=\"byline\">\n                              <small>\n                                <Trans comment=\"By [Author]\">\n                                  By{' '}\n                                  {author ? (\n                                    <NameText account={author} showAvatar />\n                                  ) : authorUrl ? (\n                                    <a\n                                      href={authorUrl}\n                                      target=\"_blank\"\n                                      rel=\"noopener\"\n                                    >\n                                      {authorName}\n                                    </a>\n                                  ) : (\n                                    authorName\n                                  )}\n                                </Trans>\n                              </small>\n                            </p>\n                          </>\n                        )}\n                      </div>\n                    </article>\n                  </a>\n                  {supportsTrendingLinkPosts && (\n                    <button\n                      type=\"button\"\n                      class=\"small plain4 block\"\n                      onClick={() => {\n                        setCurrentLink(url);\n                      }}\n                      disabled={url === currentLink}\n                    >\n                      <Icon icon=\"comment2\" />{' '}\n                      <span>\n                        <Trans>Mentions</Trans>\n                      </span>{' '}\n                      <Icon icon=\"chevron-down\" />\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {supportsTrendingLinkPosts && !!links.length && (\n          <div\n            class={`timeline-header-block ${hasCurrentLink ? 'blended' : ''}`}\n          >\n            {hasCurrentLink ? (\n              <>\n                <div style={{ width: 50, flexShrink: 0, textAlign: 'center' }}>\n                  {currentLinkMentionsLoading ? (\n                    <Loader abrupt />\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"light\"\n                      onClick={() => {\n                        setCurrentLink(null);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt={t`Back to showing trending posts`} />\n                    </button>\n                  )}\n                </div>\n                <p>\n                  <Trans>\n                    Showing posts mentioning{' '}\n                    <span class=\"link-text\">\n                      {currentLink\n                        .replace(/^https?:\\/\\/(www\\.)?/i, '')\n                        .replace(/\\/$/, '')}\n                    </span>\n                  </Trans>\n                </p>\n              </>\n            ) : (\n              <p class=\"insignificant\">\n                <Trans>Trending posts</Trans>\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links, currentLink, currentLinkMentionsLoading]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>\n            <Trans>Trending</Trans>\n          </b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText={t`No trending posts.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={hasCurrentLink ? fetchLinkMentions : fetchTrends}\n      checkForUpdates={hasCurrentLink ? undefined : checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      refresh={currentLink}\n      clearWhenRefresh\n      view={hasCurrentLink ? 'link-mentions' : undefined}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { useLingui } from '@lingui/react/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport isRTL from '../utils/is-rtl';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'nearest',\n  behavior: 'smooth',\n};\n\nfunction Columns() {\n  const { t } = useLingui();\n  useTitle(t`Home`, '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    // Don't show List column with no list, for now\n    if (type === 'list' && !params.id) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e) => {\n      try {\n        const index = parseInt(e.key, 10) - 1;\n        const $column = document.querySelectorAll('#columns > *')[index];\n        if ($column) {\n          $column.focus();\n          $column.scrollIntoView(scrollIntoViewOptions);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    ['[', ']'],\n    (e, handler) => {\n      const key = handler.keys[0];\n      const currentFocusedColumn =\n        document.activeElement.closest('#columns > *');\n\n      const rtl = isRTL();\n      const prevColKey = rtl ? ']' : '[';\n      const nextColKey = rtl ? '[' : ']';\n      let $column;\n\n      if (key === prevColKey) {\n        // If [, focus on left of focused column, else first column\n        $column = currentFocusedColumn\n          ? currentFocusedColumn.previousElementSibling\n          : document.querySelectorAll('#columns > *')[0];\n      } else if (key === nextColKey) {\n        // If ], focus on right of focused column, else 2nd column\n        $column = currentFocusedColumn\n          ? currentFocusedColumn.nextElementSibling\n          : document.querySelectorAll('#columns > *')[1];\n      }\n      if ($column) {\n        $column.focus();\n        $column.scrollIntoView(scrollIntoViewOptions);\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n      onFocus={() => {\n        // Get current focused column\n        const currentFocusedColumn =\n          document.activeElement.closest('#columns > *');\n        if (currentFocusedColumn) {\n          // Remove focus classes from all columns\n          // Add focus class to current focused column\n          document.querySelectorAll('#columns > *').forEach((column) => {\n            column.classList.toggle('focus', column === currentFocusedColumn);\n          });\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport FilterContext from '../utils/filter-context';\nimport { massageNotifications2 } from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\nimport {\n  getGroupedNotifications,\n  mastoFetchNotifications,\n} from './notifications';\n\nfunction Home() {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  __BENCHMARK.end('time-to-home');\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title={_(msg`Home`)}\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt={t`Notifications`} />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = mastoFetchNotifications();\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      states.notificationsLast = groupedNotifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: groupedNotifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications({ skipFollowRequests = false } = {}) {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        if (!skipFollowRequests) {\n          const followRequests = await fetchFollowRequests();\n          setHasFollowRequests(!!followRequests?.length);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  const menuRef = useRef();\n  const headerHeight = 52;\n  useEffect(() => {\n    if (state !== 'open') return;\n    if (snapStates.notificationsShowNew) {\n      const menuElement = menuRef.current;\n      if (menuElement?.scrollTop <= headerHeight) {\n        loadNotifications({\n          skipFollowRequests: true,\n        });\n      }\n    } else {\n      loadNotifications();\n    }\n  }, [state, snapStates.notificationsShowNew]);\n\n  return (\n    <ControlledMenu\n      ref={menuRef}\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      containerProps={{\n        onClick: () => {\n          menuRef.current?.closeMenu?.();\n        },\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>\n          <Trans>Notifications</Trans>\n        </h2>\n      </header>\n      <FilterContext.Provider value=\"notifications\">\n        <main>\n          {snapStates.notifications.length ? (\n            <>\n              {snapStates.notifications\n                .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n                .map((notification) => (\n                  <Notification\n                    key={notification._ids || notification.id}\n                    instance={instance}\n                    notification={notification}\n                    disableContextMenu\n                  />\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <div class=\"ui-state\">\n              <Loader abrupt />\n            </div>\n          ) : (\n            uiState === 'error' && (\n              <div class=\"ui-state\">\n                <p>\n                  <Trans>Unable to fetch notifications.</Trans>\n                </p>\n                <p>\n                  <button type=\"button\" onClick={loadNotifications}>\n                    <Trans>Try again</Trans>\n                  </button>\n                </p>\n              </div>\n            )\n          )}\n        </main>\n      </FilterContext.Provider>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" />{' '}\n          <span>\n            <Trans>Mentions</Trans>\n          </span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <Trans>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </Trans>\n          ) : (\n            <b>\n              <Trans>See all</Trans>\n            </b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+\\/post\\/([^\\/]+)/i, // Threads\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n  /^\\/p\\/[^\\/]+\\/([^\\/]+)/i, // Pixelfed\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const theURL = URL.parse(url);\n  if (!theURL) return {};\n  const { hostname, pathname } = theURL;\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { Trans } from '@lingui/react/macro';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        if (id) {\n          const { masto } = api({ instance });\n          const status = await masto.v1.statuses.$select(id).fetch();\n          if (status) {\n            window.location.hash = statusURL + '?view=full';\n            return;\n          }\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.list({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>\n            <Trans>Resolving…</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>\n            <Trans>Unable to resolve URL</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport ListExclusiveBadge from '../components/list-exclusive-badge';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { fetchLists } from '../utils/lists';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  const { t } = useLingui();\n  useTitle(t`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await fetchLists();\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  const hasExclusiveLists = lists.some((list) => list.exclusive);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Lists</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New list`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <Icon icon=\"list\" />{' '}\n                      <span>\n                        {list.title}\n                        {list.exclusive && (\n                          <>\n                            {' '}\n                            <ListExclusiveBadge insignificant />\n                          </>\n                        )}\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  {hasExclusiveLists && (\n                    <p>\n                      <small class=\"insignificant\">\n                        <ListExclusiveBadge />{' '}\n                        <Trans>\n                          Posts on this list are hidden from Home/Following\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                  <p>\n                    <small class=\"insignificant\">\n                      <Plural\n                        value={lists.length}\n                        one=\"# list\"\n                        other=\"# lists\"\n                      />\n                    </small>\n                  </p>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load lists.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No lists yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"__VITE_ASSET__Bj_CmqRM__\"","import './login.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport Fuse from 'fuse.js';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport {\n  getAuthorizationURL,\n  getPKCEAuthorizationURL,\n  registerApplication,\n} from '../utils/auth';\nimport { supportsPKCE } from '../utils/oauth-pkce';\nimport store from '../utils/store';\nimport {\n  getCredentialApplication,\n  hasAccountInInstance,\n  storeCredentialApplication,\n} from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  const { t } = useLingui();\n  useTitle(t`Log in`, '/login');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  const searcher = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n        searcher.current = new Fuse(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n\n    (async () => {\n      // WEB_DOMAIN vs LOCAL_DOMAIN negotiation time\n      // https://docs.joinmastodon.org/admin/config/#web_domain\n      try {\n        const res = await fetch(`https://${instanceURL}/.well-known/host-meta`); // returns XML\n        const text = await res.text();\n        // Parse XML\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, 'text/xml');\n        // Get Link[template]\n        const link = xmlDoc.getElementsByTagName('Link')[0];\n        const template = link.getAttribute('template');\n        const url = URL.parse(template);\n        const { host } = url; // host includes the port\n        if (instanceURL !== host) {\n          console.log(`💫 ${instanceURL} -> ${host}`);\n          instanceURL = host;\n        }\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n\n      store.local.set('instanceURL', instanceURL);\n\n      setUIState('loading');\n      try {\n        let credentialApplication = getCredentialApplication(instanceURL);\n        if (\n          !credentialApplication ||\n          !credentialApplication.client_id ||\n          !credentialApplication.client_secret\n        ) {\n          credentialApplication = await registerApplication({\n            instanceURL,\n          });\n          storeCredentialApplication(instanceURL, credentialApplication);\n        }\n\n        const { client_id, client_secret } = credentialApplication;\n\n        const authPKCE = await supportsPKCE({ instanceURL });\n        console.log({ authPKCE });\n        const forceLogin = hasAccountInInstance(instanceURL);\n        if (authPKCE) {\n          if (client_id && client_secret) {\n            const [url, verifier] = await getPKCEAuthorizationURL({\n              instanceURL,\n              client_id,\n              forceLogin,\n            });\n            store.sessionCookie.set('codeVerifier', verifier);\n            location.href = url;\n          } else {\n            alert(t`Failed to register application`);\n          }\n        } else {\n          if (client_id && client_secret) {\n            location.href = await getAuthorizationURL({\n              instanceURL,\n              client_id,\n              forceLogin,\n            });\n          } else {\n            alert(t`Failed to register application`);\n          }\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? searcher.current\n        ?.search(cleanInstanceText, {\n          limit: 10,\n        })\n        ?.map((match) => match.item)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n      ? instancesSuggestions[0]\n      : instanceText\n        ? instancesList.find((instance) => instance.includes(instanceText))\n        : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          <Trans>Log in</Trans>\n        </h1>\n        <label>\n          <p>\n            <Trans>Instance</Trans>\n          </p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder={t`instance domain`}\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n            dir=\"auto\"\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">\n              <Trans>e.g. &ldquo;mastodon.social&rdquo;</Trans>\n            </div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            <Trans>\n              Failed to log in. Please try again or try another instance.\n            </Trans>\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? t`Continue with ${selectedInstanceText}`\n              : t`Continue`}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              <Trans>Don't have an account? Create one!</Trans>\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">\n            <Trans>Go home</Trans>\n          </Link>\n        </p>\n        <LangSelector />\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import './scheduled-posts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useMemo, useReducer, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport ScheduledAtField, {\n  getLocalTimezoneName,\n} from '../components/ScheduledAtField';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 40;\n\nexport default function ScheduledPosts() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  useTitle(t`Scheduled Posts`, '/sp');\n  const { masto } = api();\n  const [scheduledPosts, setScheduledPosts] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [showScheduledPostModal, setShowScheduledPostModal] = useState(false);\n\n  useEffect(reload, [snapStates.reloadScheduledPosts]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const postsIterator = masto.v1.scheduledStatuses\n          .list({ limit: LIMIT })\n          .values();\n        const allPosts = [];\n        let posts;\n        do {\n          const result = await postsIterator.next();\n          posts = result.value;\n          if (posts?.length) {\n            allPosts.push(...posts);\n          }\n        } while (posts?.length);\n        setScheduledPosts(allPosts);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      } finally {\n        setUIState('default');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"scheduled-posts-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Scheduled Posts</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <Menu2\n                portal\n                setDownOverflow\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                position=\"anchor\"\n                menuButton={\n                  <button type=\"button\" class=\"plain\">\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                }\n              >\n                <MenuItem\n                  onClick={() => {\n                    reload();\n                  }}\n                >\n                  <Icon icon=\"refresh\" size=\"l\" />\n                  <span>\n                    <Trans>Refresh</Trans>\n                  </span>\n                </MenuItem>\n              </Menu2>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!scheduledPosts.length ? (\n            <p class=\"ui-state\">\n              {uiState === 'loading' ? <Loader /> : t`No scheduled posts.`}\n            </p>\n          ) : (\n            <ul class=\"posts-list\">\n              {scheduledPosts.map((post) => {\n                const { id, params, scheduledAt, mediaAttachments } = post;\n                const {\n                  inReplyToId,\n                  language,\n                  poll,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                } = params;\n                const status = {\n                  // account: account.info,\n                  id,\n                  inReplyToId,\n                  language,\n                  mediaAttachments,\n                  poll: poll\n                    ? {\n                        ...poll,\n                        expiresAt: new Date(Date.now() + poll.expiresIn * 1000),\n                        options: poll.options.map((option) => ({\n                          title: option,\n                          votesCount: 0,\n                        })),\n                      }\n                    : undefined,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                  content: `<p>${text}</p>`,\n                  // createdAt: scheduledAt,\n                };\n\n                return (\n                  <li key={id}>\n                    <ScheduledPostPreview\n                      status={status}\n                      scheduledAt={scheduledAt}\n                      onClick={() => {\n                        setShowScheduledPostModal({\n                          post: status,\n                          scheduledAt: new Date(scheduledAt),\n                        });\n                      }}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {showScheduledPostModal && (\n            <Modal\n              onClick={(e) => {\n                if (e.target === e.currentTarget) {\n                  setShowScheduledPostModal(false);\n                }\n              }}\n            >\n              <ScheduledPostEdit\n                post={showScheduledPostModal.post}\n                scheduledAt={showScheduledPostModal.scheduledAt}\n                onClose={() => setShowScheduledPostModal(false)}\n              />\n            </Modal>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction ScheduledPostPreview({ status, scheduledAt, onClick }) {\n  // Look at scheduledAt, if it's months away, ICON = 'month'. If it's days away, ICON = 'day', else ICON = 'time'\n  const icon = useMemo(() => {\n    const hours =\n      (new Date(scheduledAt).getTime() - Date.now()) / (1000 * 60 * 60);\n    if (hours < 24) {\n      return 'time';\n    } else if (hours < 720) {\n      // 30 days\n      return 'day';\n    } else {\n      return 'month';\n    }\n  }, [scheduledAt]);\n\n  return (\n    <button type=\"button\" class=\"textual block\" onClick={onClick}>\n      <div class={`post-schedule-meta post-schedule-${icon}`}>\n        <Icon icon={icon} class=\"insignificant\" />{' '}\n        <span>\n          <Trans comment=\"Scheduled [in 1 day] ([Thu, Feb 27, 6:30:00 PM])\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>{' '}\n            <small>\n              (\n              {niceDateTime(scheduledAt, {\n                formatOpts: {\n                  weekday: 'short',\n                  second: 'numeric',\n                },\n              })}\n              )\n            </small>\n          </Trans>\n        </span>\n      </div>\n      <Status status={status} size=\"s\" previewMode readOnly />\n    </button>\n  );\n}\n\nfunction ScheduledPostEdit({ post, scheduledAt, onClose }) {\n  const { masto } = api();\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const [newScheduledAt, setNewScheduledAt] = useState();\n  const differentScheduledAt =\n    newScheduledAt && newScheduledAt.getTime() !== scheduledAt.getTime();\n  const localTZ = getLocalTimezoneName();\n  const pastSchedule = scheduledAt && scheduledAt <= Date.now();\n\n  const { inReplyToId } = post;\n  const [replyToStatus, setReplyToStatus] = useState(null);\n  // TODO: Uncomment this once https://github.com/mastodon/mastodon/issues/34000 is fixed\n  // useEffect(() => {\n  //   if (inReplyToId) {\n  //     (async () => {\n  //       try {\n  //         const status = await masto.v1.statuses.$select(inReplyToId).fetch();\n  //         setReplyToStatus(status);\n  //       } catch (e) {\n  //         console.error(e);\n  //       }\n  //     })();\n  //   }\n  // }, [inReplyToId]);\n\n  return (\n    <div id=\"scheduled-post-sheet\" class=\"sheet\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" size=\"l\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>\n          <Trans comment=\"Scheduled [in 1 day]\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>\n          </Trans>\n          <br />\n          <small>\n            {niceDateTime(scheduledAt, {\n              formatOpts: {\n                weekday: 'short',\n                second: 'numeric',\n              },\n            })}\n          </small>\n        </h2>\n      </header>\n      <main tabIndex=\"-1\">\n        {!!replyToStatus && (\n          <div class=\"status-reply\">\n            <Status status={replyToStatus} size=\"s\" previewMode readOnly />\n          </div>\n        )}\n        <Status\n          status={post}\n          size=\"s\"\n          previewMode\n          readOnly\n          onMediaClick={(e, i, media, status) => {\n            e.preventDefault();\n            states.showMediaModal = {\n              mediaAttachments: post.mediaAttachments,\n              mediaIndex: i,\n            };\n          }}\n        />\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.scheduledStatuses.$select(post.id).update({\n                  scheduledAt: newScheduledAt.toISOString(),\n                });\n                showToast(t`Scheduled post rescheduled`);\n                onClose();\n                setUIState('default');\n                states.reloadScheduledPosts++;\n              } catch (e) {\n                setUIState('error');\n                console.error(e);\n                showToast(t`Failed to reschedule post`);\n              }\n            })();\n          }}\n        >\n          <footer>\n            <div class=\"row\">\n              <span>\n                <ScheduledAtField\n                  scheduledAt={scheduledAt}\n                  setScheduledAt={(date) => {\n                    setNewScheduledAt(date);\n                  }}\n                />{' '}\n                <small class=\"ib\">{localTZ}</small>\n              </span>\n            </div>\n            <div class=\"row\">\n              <button\n                disabled={\n                  !differentScheduledAt || uiState === 'loading' || pastSchedule\n                }\n              >\n                <Trans>Reschedule</Trans>\n              </button>\n              <span class=\"grow\" />\n              <MenuConfirm\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete scheduled post?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await api()\n                        .masto.v1.scheduledStatuses.$select(post.id)\n                        .remove();\n                      showToast(t`Scheduled post deleted`);\n                      onClose();\n                      setUIState('default');\n                      states.reloadScheduledPosts++;\n                    } catch (e) {\n                      setUIState('error');\n                      console.error(e);\n                      showToast(t`Failed to delete scheduled post`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading' || pastSchedule}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            </div>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n","import './status.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { getSafeViewTransitionName } from '../components/media';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nfunction StatusPage(params) {\n  const { t } = useLingui();\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? snapStates.statuses[statusKey(mediaStatusID, instance)]?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const postViewState = () =>\n    window.matchMedia('(min-width: calc(40em + 350px))').matches\n      ? 'large'\n      : 'small';\n  const mediaClose = useCallback(() => {\n    console.log('xxx', {\n      postViewState: postViewState(),\n      showMediaOnly,\n    });\n    if (postViewState() === 'small' && snapStates.prevLocation) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n  const handleMediaClose = useCallback(\n    (e, currentIndex, mediaAttachments, carouselRef) => {\n      if (postViewState() === 'large' && !showMediaOnly) {\n        mediaClose();\n        return;\n      }\n      if (showMedia && document.startViewTransition) {\n        const media = mediaAttachments[currentIndex];\n        const { id, blurhash, url } = media;\n        const mediaVTN = getSafeViewTransitionName(id || blurhash || url);\n        const els = document.querySelectorAll(\n          `.status .media [data-view-transition-name=\"${mediaVTN}\"]`,\n        );\n        const foundEls = [...els]?.filter?.((el) => {\n          const elBounds = el.getBoundingClientRect();\n          return (\n            elBounds.top < window.innerHeight &&\n            elBounds.bottom > 0 &&\n            elBounds.left < window.innerWidth &&\n            elBounds.right > 0\n          );\n        });\n        // If more than one, get the one in status page\n        const el =\n          foundEls.length === 1\n            ? foundEls[0]\n            : foundEls.find((el) => !!el.closest('.status-deck'));\n\n        console.log('xxx', { media, id, els, el });\n        if (el) {\n          const transition = document.startViewTransition(() => {\n            el.style.viewTransitionName = mediaVTN;\n            if (carouselRef?.current) {\n              carouselRef.current\n                .querySelectorAll('.media img, .media video')\n                ?.forEach((el) => {\n                  el.style.viewTransitionName = '';\n                });\n            }\n            mediaClose();\n          });\n          transition.ready.finally(() => {\n            el.style.viewTransitionName = '';\n          });\n        } else {\n          mediaClose();\n        }\n      } else {\n        mediaClose();\n      }\n    },\n    [showMedia, showMediaOnly],\n  );\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  useEffect(() => {\n    const $deckContainers = document.querySelectorAll('.deck-container');\n    $deckContainers.forEach(($deckContainer) => {\n      $deckContainer.setAttribute('inert', '');\n    });\n    return () => {\n      $deckContainers.forEach(($deckContainer) => {\n        $deckContainer.removeAttribute('inert');\n      });\n    };\n  }, []);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <StatusThread\n          id={id}\n          instance={params.instance}\n          closeLink={closeLink}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\n// oldest first\nfunction createdAtSort(a, b) {\n  return new Date(b.created_at) - new Date(a.created_at);\n}\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors, descendants } = context;\n\n        ancestors.sort(createdAtSort);\n        descendants.sort(createdAtSort);\n\n        totalDescendants.current = descendants?.length || 0;\n\n        const missingStatuses = new Set();\n        ancestors.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n          if (\n            status.inReplyToId &&\n            !ancestors.find((s) => s.id === status.inReplyToId)\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n        });\n        const ancestorsIsThread = ancestors.every(\n          (s) => s.account.id === heroStatus.account.id,\n        );\n        const nestedDescendants = [];\n        descendants.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n\n          if (\n            status.inReplyToId &&\n            !descendants.find((s) => s.id === status.inReplyToId) &&\n            status.inReplyToId !== heroStatus.id\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n\n          if (status.inReplyToAccountId === status.account.id) {\n            // If replying to self, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else if (status.inReplyToId === heroStatus.id) {\n            // If replying to the hero status, it's a reply, level 1\n            nestedDescendants.push(status);\n          } else if (\n            !status.inReplyToAccountId &&\n            nestedDescendants.find(\n              (s) =>\n                s.id === status.inReplyToId &&\n                s.account.id === heroStatus.account.id,\n            ) &&\n            status.account.id === heroStatus.account.id\n          ) {\n            // If replying to hero's own statuses, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else {\n            // If replying to someone else, it's a reply to a reply, level 2\n            const parent = descendants.find((s) => s.id === status.inReplyToId);\n            if (parent) {\n              if (!parent.__replies) {\n                parent.__replies = [];\n              }\n              parent.__replies.push(status);\n            } else {\n              // If no parent, something is wrong\n              console.warn('No parent found for', status);\n            }\n          }\n        });\n\n        // sort hero author to top\n        nestedDescendants.sort((a, b) => {\n          const heroAccountID = heroStatus.account.id;\n          if (a.account.id === heroAccountID && b.account.id !== heroAccountID)\n            return -1;\n          if (b.account.id === heroAccountID && a.account.id !== heroAccountID)\n            return 1;\n          return 0;\n        });\n\n        console.log({ ancestors, descendants, nestedDescendants });\n        if (missingStatuses.size) {\n          console.error('Missing statuses', [...missingStatuses]);\n        }\n\n        let descendantLevelsCount = 1;\n        function expandReplies(_replies, level) {\n          const nextLevel = level + 1;\n          if (nextLevel > descendantLevelsCount) {\n            descendantLevelsCount = level;\n          }\n          return _replies?.map((_r) => ({\n            id: _r.id,\n            account: _r.account,\n            repliesCount: _r.repliesCount,\n            content: _r.content,\n            weight: calcStatusWeight(_r),\n            level: nextLevel,\n            replies: expandReplies(_r.__replies, nextLevel),\n          }));\n        }\n\n        const allStatuses = [\n          ...ancestors.map((s) => ({\n            id: s.id,\n            ancestor: true,\n            isThread: ancestorsIsThread,\n            accountID: s.account.id,\n            account: s.account,\n            repliesCount: s.repliesCount,\n            weight: calcStatusWeight(s),\n          })),\n          {\n            id,\n            accountID: heroStatus.account.id,\n            weight: calcStatusWeight(heroStatus),\n          },\n          ...nestedDescendants.map((s) => ({\n            id: s.id,\n            account: s.account,\n            accountID: s.account.id,\n            descendant: true,\n            thread: s.account.id === heroStatus.account.id,\n            weight: calcStatusWeight(s),\n            level: 1,\n            replies: expandReplies(s.__replies, 1),\n          })),\n        ];\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        // const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        const heroLimit = ancestors.length || 0; // 0-indexed\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        console.log({ allStatuses, descendantLevelsCount });\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : t({\n          id: 'post.title',\n          message: 'Post',\n        }),\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return URL.parse(url)?.hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal || e.metaKey || e.ctrlKey || e.altKey || e.shiftKey;\n      },\n      useKey: true,\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys(\n    'backspace',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    'j',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      const activeStatusRect = activeStatus?.getBoundingClientRect();\n      const allStatusLinks = Array.from(\n        scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n      );\n      console.log({ allStatusLinks });\n      if (\n        activeStatus &&\n        activeStatusRect.top < scrollableRef.current.clientHeight &&\n        activeStatusRect.bottom > 0\n      ) {\n        const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n        let nextStatus = allStatusLinks[activeStatusIndex + 1];\n        if (nextStatus) {\n          nextStatus.focus();\n          nextStatus.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostStatusLink = allStatusLinks.find((statusLink) => {\n          const statusLinkRect = statusLink.getBoundingClientRect();\n          return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostStatusLink) {\n          topmostStatusLink.focus();\n          topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    'k',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      const activeStatusRect = activeStatus?.getBoundingClientRect();\n      const allStatusLinks = Array.from(\n        scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n      );\n      if (\n        activeStatus &&\n        activeStatusRect.top < scrollableRef.current.clientHeight &&\n        activeStatusRect.bottom > 0\n      ) {\n        const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n        let prevStatus = allStatusLinks[activeStatusIndex - 1];\n        if (prevStatus) {\n          prevStatus.focus();\n          prevStatus.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostStatusLink = allStatusLinks.find((statusLink) => {\n          const statusLinkRect = statusLink.getBoundingClientRect();\n          return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostStatusLink) {\n          topmostStatusLink.focus();\n          topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys(\n    'x',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      if (activeStatus) {\n        const details = activeStatus.nextElementSibling;\n        if (details && details.tagName.toLowerCase() === 'details') {\n          details.open = !details.open;\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n        level,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    <Trans>\n                      You're not logged in. Interactions (reply, boost, etc) are\n                      not possible.\n                    </Trans>\n                  </p>\n                  <Link\n                    to={\n                      DEFAULT_INSTANCE\n                        ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                        : '/login'\n                    }\n                    class=\"button\"\n                  >\n                    <Trans>Log in</Trans>\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      <Trans>\n                        This post is from another instance (<b>{instance}</b>).\n                        Interactions (reply, boost, etc) are not possible.\n                      </Trans>\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.list({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert(t`Error: ${e}`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" />{' '}\n                      <Trans>\n                        Switch to my instance to enable interactions\n                      </Trans>\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={level}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                <Trans>Unable to load replies.</Trans>\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  const statusesList = useMemo(\n    () => statuses.slice(0, limit).map(renderStatus),\n    [statuses, limit, renderStatus],\n  );\n\n  // If there's spoiler in hero status, auto-expand it\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (!heroStatusRef.current) return;\n      const spoilerButton = heroStatusRef.current.querySelector(\n        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n      );\n      if (spoilerButton) spoilerButton.click();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      ref={scrollableRef}\n      class={`status-deck deck contained ${\n        statuses.length > 1 ? 'padded-bottom' : ''\n      } ${\n        initialPageState.current === 'status' && !firstLoad.current\n          ? 'slide-in'\n          : ''\n      } ${viewMode ? `deck-view-${viewMode}` : ''}`}\n      onAnimationEnd={(e) => {\n        // Fix the bounce effect when switching viewMode\n        // `slide-in` animation kicks in when switching viewMode\n        if (initialPageState.current === 'status') {\n          // e.target.classList.remove('slide-in');\n          initialPageState.current = null;\n        }\n      }}\n    >\n      <header\n        class={`${uiState === 'loading' ? 'loading' : ''}`}\n        onDblClick={(e) => {\n          // reload statuses\n          states.reloadStatusPage++;\n        }}\n      >\n        {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n        <div class=\"header-grid header-grid-2\">\n          <h1>\n            {prevLocationIsStatusPage && (\n              <button\n                type=\"button\"\n                class=\"plain deck-back\"\n                onClick={() => {\n                  history.back();\n                }}\n              >\n                <Icon icon=\"chevron-left\" size=\"xl\" alt={t`Back`} />\n              </button>\n            )}\n            {!heroInView && heroStatus && uiState !== 'loading' ? (\n              <>\n                <span class=\"hero-heading\">\n                  <NameText\n                    account={heroStatus.account}\n                    instance={instance}\n                    showAvatar\n                    short\n                  />{' '}\n                  <span class=\"insignificant\">\n                    &bull;{' '}\n                    <RelativeTime\n                      datetime={heroStatus.createdAt}\n                      format=\"micro\"\n                    />\n                  </span>\n                </span>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    heroStatusRef.current.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start',\n                    });\n                  }}\n                  title={t`Go to main post`}\n                >\n                  <Icon\n                    icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                  />\n                </button>\n              </>\n            ) : (\n              <>\n                <Trans id=\"post.title\">Post</Trans>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    // Scroll to top\n                    e.preventDefault();\n                    e.stopPropagation();\n                    scrollableRef.current.scrollTo({\n                      top: 0,\n                      behavior: 'smooth',\n                    });\n                  }}\n                  hidden={!ancestors.length || reachTopPost}\n                  title={t`${ancestors.length} posts above ‒ Go to top`}\n                >\n                  <Icon icon=\"arrow-up\" />\n                  {ancestors\n                    .filter(\n                      (a, i, arr) =>\n                        arr.findIndex((b) => b.accountID === a.accountID) === i,\n                    )\n                    .slice(0, 3)\n                    .map((ancestor) => (\n                      <Avatar\n                        key={ancestor.account.id}\n                        url={\n                          ancestor.account.avatarStatic ||\n                          ancestor.account.avatar\n                        }\n                        alt={ancestor.account.displayName}\n                        squircle={ancestor.account?.bot}\n                      />\n                    ))}\n                  {/* <Icon icon=\"comment\" />{' '} */}\n                  {ancestors.length > 3 && (\n                    <>\n                      {' '}\n                      <span class=\"insignificant\">\n                        {shortenNumber(ancestors.length)}\n                      </span>\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n          </h1>\n          <div class=\"header-side\">\n            <button\n              type=\"button\"\n              class=\"plain4 button-switch-view\"\n              style={{\n                display: viewMode === 'full' ? '' : 'none',\n              }}\n              onClick={() => {\n                setViewMode(null);\n                searchParams.delete('media');\n                searchParams.delete('media-only');\n                searchParams.delete('view');\n                setSearchParams(searchParams);\n              }}\n              title={t`Switch to Side Peek view`}\n            >\n              <Icon icon=\"layout4\" size=\"l\" />\n            </button>\n            {showRefresh && (\n              <button\n                type=\"button\"\n                class=\"plain button-refresh\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                  setShowRefresh(false);\n                }}\n              >\n                <Icon icon=\"refresh\" size=\"l\" alt={t`Refresh`} />\n              </button>\n            )}\n            <Menu2\n              align=\"end\"\n              portal={{\n                // Need this, else the menu click will cause scroll jump\n                target: scrollableRef.current,\n              }}\n              menuButton={\n                <button type=\"button\" class=\"button plain4\">\n                  <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n                </button>\n              }\n            >\n              <MenuItem\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Icon icon=\"refresh\" />\n                <span>\n                  <Trans>Refresh</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                className=\"menu-switch-view\"\n                onClick={() => {\n                  setViewMode(viewMode === 'full' ? null : 'full');\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  if (viewMode === 'full') {\n                    searchParams.delete('view');\n                  } else {\n                    searchParams.set('view', 'full');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon\n                  icon={\n                    {\n                      '': 'layout5',\n                      full: 'layout4',\n                    }[viewMode || '']\n                  }\n                />\n                <span>\n                  {viewMode === 'full'\n                    ? t`Switch to Side Peek view`\n                    : t`Switch to Full view`}\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  // Click all buttons with class .spoiler but not .spoiling\n                  const buttons = Array.from(\n                    scrollableRef.current.querySelectorAll(\n                      '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                    ),\n                  );\n                  buttons.forEach((button) => {\n                    button.click();\n                  });\n                }}\n              >\n                <Icon icon=\"eye-open\" />{' '}\n                <span>\n                  <Trans>Show all sensitive content</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n              <MenuHeader className=\"plain\">\n                <Trans>Experimental</Trans>\n              </MenuHeader>\n              <MenuItem\n                disabled={!postInstance || postSameInstance}\n                onClick={() => {\n                  const statusURL = getInstanceStatusURL(heroStatus.url);\n                  if (statusURL) {\n                    location.hash = statusURL;\n                  } else {\n                    alert(t`Unable to switch`);\n                  }\n                }}\n              >\n                <Icon icon=\"transfer\" />\n                <small class=\"menu-double-lines\">\n                  {postInstance\n                    ? t`Switch to post's instance (${punycode.toUnicode(\n                        postInstance,\n                      )})`\n                    : t`Switch to post's instance`}\n                </small>\n              </MenuItem>\n            </Menu2>\n            <Link class=\"button plain deck-close\" to={closeLink}>\n              <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n            </Link>\n          </div>\n        </div>\n      </header>\n      {!!statuses.length && heroStatus ? (\n        <ul\n          class={`timeline flat contextual grow ${\n            uiState === 'loading' ? 'loading' : ''\n          }`}\n        >\n          {statusesList}\n          {showMore > 0 && (\n            <li class=\"descendant descendant-more\">\n              <button\n                type=\"button\"\n                class=\"plain block show-more\"\n                disabled={uiState === 'loading'}\n                onClick={() => setLimit((l) => l + LIMIT)}\n                style={{ marginBlockEnd: '6em' }}\n                data-state-post-ids={moreStatusesKeys.join(' ')}\n              >\n                <div class=\"ib avatars-bunch\">\n                  {/* show avatars for first 5 statuses */}\n                  {statuses.slice(limit, limit + 5).map((status) => (\n                    <Avatar\n                      key={status.id}\n                      url={status.account.avatarStatic}\n                      // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                    />\n                  ))}\n                </div>{' '}\n                <div class=\"ib\">\n                  <Trans>Show more…</Trans>{' '}\n                  <span class=\"tag\">\n                    {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                  </span>\n                </div>\n              </button>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <>\n          {uiState === 'loading' && (\n            <ul class=\"timeline flat contextual grow loading\">\n              <li>\n                <Status skeleton size=\"l\" />\n              </li>\n            </ul>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              <Trans>Unable to load post</Trans>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      // NOTE: this scrollLeft works for RTL too\n      // Browsers do the magic for us\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // If not open, delay render replies\n  const [renderReplies, setRenderReplies] = useState(openBefore || open);\n  useEffect(() => {\n    let timer;\n    if (!openBefore && !open) {\n      timer = setTimeout(() => setRenderReplies(true), 100);\n    }\n    return () => clearTimeout(timer);\n  }, [openBefore, open]);\n\n  const Container = open ? 'div' : 'details';\n  const isDetails = Container === 'details';\n\n  return (\n    <Container\n      ref={detailsRef}\n      class=\"replies\"\n      open={isDetails ? openBefore || open : undefined}\n      onToggle={\n        isDetails\n          ? (e) => {\n              const { open } = e.target;\n              // use first reply as ID\n              cachedRepliesToggle[replies[0].id] = open;\n            }\n          : undefined\n      }\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      {!open && (\n        <summary class=\"replies-summary\" hidden={open}>\n          <span class=\"avatars\">\n            {accounts.map((a) => (\n              <Avatar\n                key={a.id}\n                url={a.avatarStatic}\n                title={`${a.displayName} @${a.username}`}\n                squircle={a?.bot}\n              />\n            ))}\n          </span>\n          <span class=\"replies-counts\">\n            <b>\n              <Plural\n                value={replies.length}\n                one=\"# reply\"\n                other={\n                  <Trans>\n                    <span title={replies.length}>\n                      {shortenNumber(replies.length)}\n                    </span>{' '}\n                    replies\n                  </Trans>\n                }\n              />\n            </b>\n            {!sameCount && totalComments > 1 && (\n              <>\n                {' '}\n                &middot;{' '}\n                <span>\n                  <Plural\n                    value={totalComments}\n                    one=\"# comment\"\n                    other={\n                      <Trans>\n                        <span title={totalComments}>\n                          {shortenNumber(totalComments)}\n                        </span>{' '}\n                        comments\n                      </Trans>\n                    }\n                  />\n                </span>\n              </>\n            )}\n          </span>\n          <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n          {!!parentLink && (\n            <Link\n              class=\"replies-parent-link\"\n              to={parentLink.to}\n              onClick={parentLink.onClick}\n              title={t`View post with its replies`}\n            >\n              &raquo;\n            </Link>\n          )}\n        </summary>\n      )}\n      {renderReplies && (\n        <ul>\n          {replies.map((r) => (\n            <li key={r.id}>\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n              <div class=\"status-focus\" tabIndex={0}>\n                <Status\n                  statusID={r.id}\n                  instance={instance}\n                  withinContext\n                  size=\"s\"\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  showActionsBar\n                />\n                {!r.replies?.length && r.repliesCount > 0 && (\n                  <div class=\"replies-link\">\n                    <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                    <span title={r.repliesCount}>\n                      {shortenNumber(r.repliesCount)}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {/* </Link> */}\n              {r.replies?.length && (\n                <SubComments\n                  instance={instance}\n                  replies={r.replies}\n                  level={r.level}\n                  accWeight={!open ? r.weight : totalWeight}\n                  openAll={openAll}\n                  parentLink={{\n                    to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                    onClick: () => {\n                      resetScrollPosition(r.id);\n                    },\n                  }}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__BbkKeAoc__\"","export default \"__VITE_ASSET__C$apFnmr__\"","export default \"__VITE_ASSET__MUCjVR2Z__\"","export default \"__VITE_ASSET__Pb$jWfr9__\"","export default \"__VITE_ASSET__DJIucEyS__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logo from '../assets/logo.svg';\nimport logoText from '../assets/logo-text.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  const { t } = useLingui();\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">\n            <Trans>A minimalistic opinionated Mastodon web client.</Trans>\n          </p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? t`Log in` : t`Log in with Mastodon`}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                <Trans>Sign up</Trans>\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                <Trans>\n                  Connect your existing Mastodon/Fediverse account.\n                  <br />\n                  Your credentials are not stored on this server.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <Trans>\n            <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n              Built\n            </a>{' '}\n            by{' '}\n            <a\n              href=\"https://mastodon.social/@cheeaun\"\n              target=\"_blank\"\n              onClick={(e) => {\n                e.preventDefault();\n                states.showAccount = 'cheeaun@mastodon.social';\n              }}\n            >\n              @cheeaun\n            </a>\n            .{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n              Privacy Policy\n            </a>\n            .\n          </Trans>\n        </p>\n        <div>\n          <LangSelector />\n        </div>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt={t`Screenshot of Boosts Carousel`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Boosts Carousel</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Visually separate original posts and re-shared posts (boosted\n                posts).\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt={t`Screenshot of nested comments thread`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Nested comments thread</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Effortlessly follow conversations. Semi-collapsible replies.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt={t`Screenshot of grouped notifications`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Grouped notifications</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Similar notifications are grouped and collapsed to reduce\n                clutter.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt={t`Screenshot of multi-column UI`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Single or multi-column</Trans>\n            </h4>\n            <p>\n              <Trans>\n                By default, single column for zen-mode seekers. Configurable\n                multi-column for power users.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt={t`Screenshot of multi-hashtag timeline with a form to add more hashtags`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Multi-hashtag timeline</Trans>\n            </h4>\n            <p>\n              <Trans>Up to 5 hashtags combined into a single timeline.</Trans>\n            </p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport { useLingui } from '@lingui/react';\nimport debounce from 'just-debounce-it';\nimport { lazy, memo, Suspense } from 'preact/compat';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\n\nimport 'swiped-events';\n\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\nimport Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport AnnualReport from './pages/annual-report';\nimport Bookmarks from './pages/bookmarks';\nimport Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport Filters from './pages/filters';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport ScheduledPosts from './pages/scheduled-posts';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  hasInstance,\n  hasPreferences,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport {\n  getAccount,\n  getCredentialApplication,\n  getCurrentAccount,\n  getVapidKey,\n  setCurrentAccountID,\n} from './utils/store-utils';\n\nimport './utils/toast-alert';\n\n// Lazy load Sandbox component only in development\nconst Sandbox =\n  import.meta.env.DEV || import.meta.env.PHANPY_DEV\n    ? lazy(() => import('./pages/sandbox'))\n    : () => null;\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(\n  () => {\n    if (!window.__IDLE__) return;\n    const { statuses, unfurledLinks, notifications } = states;\n    let keysCount = 0;\n    const { instance } = api();\n    for (const key in statuses) {\n      if (!window.__IDLE__) break;\n      try {\n        const $post = document.querySelector(\n          `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n        );\n        const postInNotifications = notifications.some(\n          (n) => key === statusKey(n.status?.id, instance),\n        );\n        if (!$post && !postInNotifications) {\n          delete states.statuses[key];\n          delete states.statusQuotes[key];\n          for (const link in unfurledLinks) {\n            const unfurled = unfurledLinks[link];\n            const sKey = statusKey(unfurled.id, unfurled.instance);\n            if (sKey === key) {\n              delete states.unfurledLinks[link];\n              break;\n            }\n          }\n          keysCount++;\n        }\n      } catch (e) {}\n    }\n    if (keysCount) {\n      console.info(`GC: Removed ${keysCount} keys`);\n    }\n  },\n  15 * 60 * 1000,\n);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    setTimeout(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else if (typeof ICONS[icon] === 'object') {\n        ICONS[icon].module?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    }, 1);\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      // Don't reset theme color if media modal is showing\n      // Media modal will set its own theme color based on the media's color\n      const showingMediaModal =\n        document.getElementsByClassName('media-modal-container').length > 0;\n      if (showingMediaModal) return;\n\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'dark light');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nconst BENCHES = new Map();\nwindow.__BENCH_RESULTS = new Map();\nwindow.__BENCHMARK = {\n  start(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    // If already started, ignore\n    if (BENCHES.has(name)) return;\n    const start = performance.now();\n    BENCHES.set(name, start);\n  },\n  end(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    const start = BENCHES.get(name);\n    if (start) {\n      const end = performance.now();\n      const duration = end - start;\n      __BENCH_RESULTS.set(name, duration);\n      BENCHES.delete(name);\n    }\n  },\n};\n\nif (import.meta.env.DEV) {\n  // If press shift down, set --time-scale to 10 in root\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'Shift') {\n      document.documentElement.classList.add('slow-mo');\n    }\n  });\n  document.addEventListener('keyup', (e) => {\n    if (e.key === 'Shift') {\n      document.documentElement.classList.remove('slow-mo');\n    }\n  });\n}\n\n{\n  // Temporary Experiments\n  // May be removed in the future\n  document.body.classList.toggle(\n    'exp-tab-bar-v2',\n    store.local.get('experiments-tabBarV2') ?? false,\n  );\n}\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n  __BENCHMARK.start('app-init');\n  __BENCHMARK.start('time-to-following');\n  __BENCHMARK.start('time-to-home');\n  __BENCHMARK.start('time-to-isLoggedIn');\n  useLingui();\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const {\n        client_id: clientID,\n        client_secret: clientSecret,\n        vapid_key,\n      } = getCredentialApplication(instanceURL) || {};\n      const vapidKey = getVapidKey(instanceURL) || vapid_key;\n      const verifier = store.sessionCookie.get('codeVerifier');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n          code_verifier: verifier || undefined,\n        });\n\n        if (accessToken) {\n          const client = initClient({ instance: instanceURL, accessToken });\n          await Promise.allSettled([\n            initPreferences(client),\n            initInstance(client, instanceURL),\n            initAccount(client, instanceURL, accessToken, vapidKey),\n          ]);\n          initStates();\n          window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n\n          setIsLoggedIn(true);\n          setUIState('default');\n        } else {\n          setUIState('error');\n        }\n        __BENCHMARK.end('app-init');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const searchAccount = decodeURIComponent(\n        (window.location.search.match(/account=([^&]+)/) || [, ''])[1],\n      );\n      let account;\n      if (searchAccount) {\n        account = getAccount(searchAccount);\n        console.log('searchAccount', searchAccount, account);\n        if (account) {\n          setCurrentAccountID(account.info.id);\n          window.history.replaceState(\n            {},\n            document.title,\n            window.location.pathname || '/',\n          );\n        }\n      }\n      if (!account) {\n        account = getCurrentAccount();\n      }\n      if (account) {\n        setCurrentAccountID(account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        setUIState('loading');\n        (async () => {\n          try {\n            if (hasPreferences() && hasInstance(instance)) {\n              // Non-blocking\n              initPreferences(client);\n              initInstance(client, instance);\n            } else {\n              await Promise.allSettled([\n                initPreferences(client),\n                initInstance(client, instance),\n              ]);\n            }\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n            __BENCHMARK.end('app-init');\n          }\n        })();\n      } else {\n        setUIState('default');\n        __BENCHMARK.end('app-init');\n      }\n    }\n\n    // Cleanup\n    store.sessionCookie.del('clientID');\n    store.sessionCookie.del('clientSecret');\n    store.sessionCookie.del('codeVerifier');\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  if (uiState === 'loading') {\n    return <Loader id=\"loader-root\" />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      <Routes>\n        <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n      </Routes>\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Modals />\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      <SearchCommand onClose={focusDeck} />\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction Root({ isLoggedIn }) {\n  if (isLoggedIn) {\n    __BENCHMARK.end('time-to-isLoggedIn');\n  }\n  return isLoggedIn ? <Home /> : <Welcome />;\n}\n\nconst PrimaryRoutes = memo(({ isLoggedIn }) => {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome|_sandbox)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route path=\"/\" element={<Root isLoggedIn={isLoggedIn} />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n      {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n        <Route\n          path=\"/_sandbox\"\n          element={\n            <Suspense fallback={<Loader id=\"loader-sandbox\" />}>\n              <Sandbox />\n            </Suspense>\n          }\n        />\n      )}\n    </Routes>\n  );\n});\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/fh\" element={<FollowedHashtags />} />\n          <Route path=\"/sp\" element={<ScheduledPosts />} />\n          <Route path=\"/ft\" element={<Filters />} />\n          <Route path=\"/catchup\" element={<Catchup />} />\n          <Route path=\"/annual_report/:year\" element={<AnnualReport />} />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\nimport './cloak-mode.css';\nimport './polyfills';\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\n// import '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\nimport { initActivateLang } from './utils/lang';\n\ninitActivateLang();\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\nrender(\n  <I18nProvider i18n={i18n}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </I18nProvider>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\n// Service worker cache cleanup\nif ('serviceWorker' in navigator && typeof caches !== 'undefined') {\n  const MAX_SW_CACHE_SIZE = 50;\n  const IGNORE_CACHE_KEYS = ['icons'];\n  let clearRanOnce = false;\n  const FAST_INTERVAL = 10_000; // 10 seconds\n  const SLOW_INTERVAL = 60 * 60 * 1000; // 1 hour\n  async function clearCaches() {\n    if (window.__IDLE__) {\n      try {\n        const keys = await caches.keys();\n        for (const key of keys) {\n          if (IGNORE_CACHE_KEYS.includes(key)) continue;\n          const cache = await caches.open(key);\n          const _keys = await cache.keys();\n          if (_keys.length > MAX_SW_CACHE_SIZE) {\n            console.warn('Cleaning cache', key, _keys.length);\n            const deleteKeys = _keys.slice(MAX_SW_CACHE_SIZE);\n            for (const deleteKey of deleteKeys) {\n              await cache.delete(deleteKey);\n            }\n          }\n        }\n        clearRanOnce = true;\n      } catch (e) {} // Silent fail\n    }\n    // Once cleared, clear again at slower interval\n    setTimeout(clearCaches, clearRanOnce ? SLOW_INTERVAL : FAST_INTERVAL);\n  }\n  setTimeout(clearCaches, FAST_INTERVAL);\n}\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","t","_useLingui","visible","setVisible","useState","visibleTimeout","clearTimeout","setTimeout","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","values","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","streamTimeout","pollNotifications","streaming","api","hasStreaming","user","notification","subscribe","log","entry","_a","checkForUpdates","clearInterval","r","info","useInterval","lastCheckDate","useHotkeys","currentCloakMode","diff","showToast","_t","settings","fetchLatestPostsMemoized","pmem","currentAccountID","statusesIterator","accounts","$select","statuses","exclude_replies","exclude_reblogs","maxAge","ComposeButton","snapStates","useSnapshot","menuOpen","setMenuOpen","latestPosts","setLatestPosts","loadingPosts","setLoadingPosts","buttonRef","menuRef","columnMode","shortcutsViewMode","handleButton","key","toLowerCase","composerState","minimized","openOSK","composeDataElements","querySelectorAll","opts","JSON","parse","undefined","shiftKey","openCompose","showCompose","useKey","ignoreEventWhen","querySelector","metaKey","ctrlKey","altKey","bindLongPress","useLongPress","threshold","fetchLatestPosts","useCallback","getCurrentAccountID","posts","handleReplyToPost","post","replyToStatus","_jsxs","_Fragment","children","_jsx","ref","type","onClick","onContextMenu","preventDefault","class","publishing","publishingError","Icon","icon","size","alt","ControlledMenu","state","anchorRef","onClose","direction","gap","unmountOnClose","portal","target","body","boundingBoxPadding","safeBoundingBoxPadding","containerProps","style","zIndex","closeMenu","submenuOpenDelay","MenuLink","to","_Trans","MenuDivider","SubMenu2","align","shift","disabled","label","className","map","createdDate","Date","createdAt","isWithinDay","getTime","MenuItem","statusPeek","RelativeTime","datetime","format","dateTime","toISOString","title","toLocaleString","niceDateTime","KeyboardShortcutsHelp","showKeyboardShortcutsHelp","location","Modal","tabindex","keys","0","action","1","2","parents","coords","siblings","animations","intersections","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","forEach","lowPriority","poll","callback","resize","supportedBrowser","nodes","mutation","node","i","child","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","prev","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","element","useAutoAnimate","controller","setController","setEnabled","dec2hex","dec","toString","slice","verifier","array","Uint32Array","crypto","getRandomValues","Array","from","join","sha256","plain","data","TextEncoder","encode","subtle","digest","base64urlencode","a","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","replace","generateCodeChallenge","v","hashed","supportsPKCE","instanceURL","res","ok","status","json","code_challenge_methods_supported","includes","__generateCodeChallenge","DEV","PHANPY_CLIENT_NAME","CLIENT_NAME","PHANPY_WEBSITE","WEBSITE","import","SCOPES","sameSite","hostname","currentLocation","origin","pathname","REDIRECT_URI","registerApplication","registrationParams","URLSearchParams","client_name","redirect_uris","scopes","website","method","headers","getPKCEAuthorizationURL","registrationJSON","client_id","forceLogin","codeChallenge","codeVerifier","code_challenge_method","code_challenge","authorizationParams","scope","authorizationURL","client_secret","code","code_verifier","append","tokenJSON","tokenResponse","token","error","isStandalone","matchMedia","matches","Accounts","getAccounts","currentAccount","moreThanOneAccount","_","reload","useReducer","accountsListParent","tabIndex","account","isCurrent","isDefault","Avatar","url","avatarStatic","onDblClick","saveAccounts","NameText","test","showAcct","setCurrentAccountID","Menu2","menuButton","href","splice","subMenu","confirmLabel","menuItemClassName","clientId","clientSecret","Link","logo","regionMaps","LangSelector","i18n","useLingui","populatedLocales","useMemo","LOCALES","lang","regionlessCode","native","localeCode2Text","locale","fallback","CATALOGS","find","c","nativeName","_common","name","sort","b","order","localeCompare","DEFAULT_LANG","onChange","store","local","set","common","createBackendPushSubscription","subscription","push","create","fetchBackendPushSubscription","updateBackendPushSubscription","update","removeBackendPushSubscription","isPushSupported","navigator","getRegistration","serviceWorker","getSubscription","registration","pushManager","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","sameKey","vapidKey","key2","applicationServerKey","vapidKeyStr","applicationServerKeyStr","updateSubscription","policy","removeSubscription","DEFAULT_TEXT_SIZE","TEXT_SIZES","PHANPY_PRIVACY_POLICY_URL","PRIVACY_POLICY_URL","PHANPY_TRANSLANG_INSTANCES","TRANSLANG_INSTANCES","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","targetLanguages","Object","languages","tl","TRANSLATION_API_NAME","Settings","currentTheme","get","themeFormRef","targetLanguage","contentTranslationTargetLanguage","systemTargetLanguage","getTranslateTargetLanguage","systemTargetLanguageText","currentTextSize","prefs","setPrefs","getPreferences","authenticated","expTabBarV2","setExpTabBarV2","onInput","formData","theme","documentElement","html","classList","$manualMeta","$autoMetas","m","toggle","defaultChecked","fontSize","min","max","step","parseInt","setProperty","rel","for","setPreferences","checked","autoRefresh","boostsCarousel","showCommon","contentTranslationHideLanguages","contentTranslation","composerGIFPicker","mediaAltGenerator","getAPIVersions","groupedNotificationsAlpha","shortcutSettingsCloudImportExport","cloakMode","PushNotificationsSection","display","flexWrap","lineHeight","src","aspectRatio","verticalAlign","borderRadius","readOnly","__BUILD_TIME__","caches","uiState","setUIState","allowNotifications","setAllowNotifications","setNeedRelogin","pushFormRef","needRelogin","alerts","previousPolicyRef","policyEl","namedItem","isLoading","mention","favourite","reblog","follow","alertsCount","allowNotifications2","_t2","permission","components","alert2","alert","focusDeck","timer","columns","getElementById","focusedColumn","focus","firstVisibleColumn","column","getBoundingClientRect","modals","modal","modalFocusElement","pages","page","useLocationChange","useLocation","currentLocationRef","FETCH_MAX_AGE","MAX_AGE","fetchLists","lists","updatedAt","now","getLists","fetchList","getList","theList","getListTitle","addListStore","updateListStore","index","deleteListStore","listID","findIndex","ListExclusiveBadge","insignificant","ListAddEdit","editMode","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","supports","onSubmit","FormData","listResult","replies_policy","MenuConfirm","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","i18nDuration","LIMIT","ACCOUNT_INFO_MAX_AGE","fetchFamiliarFollowers","currentID","familiarFollowers","memFetchFamiliarFollowers","fetchPostingStats","accountID","fetchStatuses","total","originals","replies","stats","boosts","memFetchPostingStats","AccountInfo","fetchAccount","standalone","showEndorsements","currentAuthenticated","currentMasto","currentInstance","isString","setInfo","sameCurrentInstance","info2","acct","avatar","bot","displayName","emojis","fields","group","lastStatusAt","locked","note","statusesCount","username","memorial","moved","roles","hideCollections","header","headerStatic","headerIsAvatar","isSelf","infoHasEssentials","account2","updated","accountInstance","setHeaderCornerColors","domain","toUnicode","fetchFollowers","firstLoad","followersIterator","familiarFollowersCache","results","newValue","familiarFollowers2","familiar","followingIterator","fetchFollowing","LinkOrDiv","accountLink","postingStats","setPostingStats","renderFamiliarFollowers","setFamiliarFollowers","postingStatsUIState","setPostingStatsUIState","hasPostingStats","followers","renderPostingStats","onRelationshipChange","onProfileUpdate","newAccount","isStringURL","headerCornerColors","renderEndorsements","stopPropagation","onError","ctx","canvas","onLoad","pixelDimension","rgbColors","OffscreenCanvas","createElement","g","imageSmoothingEnabled","drawImage","colors","getImageData","dataLength","lightenRGB","color","AccountBlock","avatarSize","handleWithInstance","clipboard","setShowEditProfile","enhanceContent","verifiedAt","__html","EmojiText","text","blankCopy","follower","followersCount","shortenNumber","followingCount","excludeRelationshipAttrs","hideTime","_i18n","daysSinceLastPost","setRenderEndorsements","Endorsements","sameInstance","setRelationshipUIState","relationship","setRelationship","following","showingReblogs","currentInfo","setCurrentInfo","notifying","followedBy","blocking","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","privateNote","setIsSelf","acctWithInstance","supportsEndorsements","q","fetchRelationships2","relationships","relationship2","showAddRemoveLists","setShowAddRemoveLists","showPrivateNoteModal","updateAccount","showTranslatedBio","setLists","setShowPrivateNoteModal","lists2","loading","onMenuChange","setShowTranslatedBio","newRelationship","share","reloadGenericAccounts","counter","duration","relationshipUIState","Loader","luminence","alpha","urlObj","TranslatedBioSheet","getHTMLText","fieldsText","Math","host","path","TranslationBlock","AddRemoveListsSheet","_t4","_t3","listsContainingAccount","setListsContainingAccount","reloadCount","listsContainingAccount2","l","inList","accountIds","showListAddEditModal","setShowListAddEditModal","result","PrivateNoteSheet","_t5","textareaRef","initialNote","_b","e2","trim","EditProfileSheet","_t6","headerPreview","setHeaderPreview","avatarPreview","acc","setAccount","source","fieldsAttributesRef","avatarMediaAttachments","SUPPORTED_IMAGE_FORMATS_STR","header2","avatar2","fieldsAttributesFields","field","fieldsAttributes","displayName2","note2","blob","headerMediaAttachments","files","file","setAvatarPreview","accept","FieldsAttributesRow","rows","dir","hasValue","setHasValue","AccountHandleInfo","server","encodedAcct","punycode","required","open","onlyOpenIfHasEndorsements","endorsementsContainer","toASCII","setEndorsementsUIState","fetchRelationships","relationshipsMap","setRelationshipsMap","endorsements","endorsementsUIState","setEndorsements","ENDORSEMENTS_LIMIT","AccountSheet","propInstance","lookup","skip_webfinger","v2","search","resolve","accountWithSameString","startsWith","accountURL","URL","Drafts","drafts","setDrafts","db","ns","getCurrentAccountNS","ownKeys","filter","getMany","hasDrafts","abrupt","draft","draftStatus","replyTo","updatedAtDate","MiniDraft","spoilerText","mediaAttachments","hasPoll","hasMedia","firstImageMedia","image","objectURL","createObjectURL","hasPollOrMedia","EmbedModal","dangerouslySetInnerHTML","GenericAccounts","postID","isCurrentInstance","showMore","setShowMore","showGenericAccounts","heading","fetchAccounts","staticAccounts","showReactions","setAccounts","loadRelationships","loadAccounts","done","isArray","theAccount","j","_types","newAccounts","Status","showStats","InView","FORCE_TRANSLATE_LIMIT","MediaAltModal","forceTranslate","setForceTranslate","differentLanguage","localeMatch","isShortAlt","supportsTTS","speak","whiteSpace","textWrap","sourceLanguage","classToType","obj","unpack","keyOrder","k","PI","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","multiplyMatrices","A","B","B_cols","product","row","col","labConstants","compand","linear","sign","xyz2rgb","z","MtxAdaptMa","MtxAdaptMaI","MtxXYZ2RGB","RefWhiteRGB","Xn","Yn","Zn","LAB_CONSTANTS","As","Bs","Cs","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","oklab2rgb","L","rest","X","Y","Z","OKLab_to_XYZ","b_","OKLab","LMStoXYZ","OKLabtoLMS","LMSnl","gammaAdjustSRGB","companded","rgb2xyz","MtxRGB2XYZ","rgb2oklab","xyz","XYZ_to_OKLab","XYZ","XYZtoLMS","LMStoOKLab","LMS","sin","cos","lch2lab","h","oklch2rgb","sqrt","atan2","round","lab2lch","rgb2oklch","MediaModal","statusID","carouselRef","currentIndex","setCurrentIndex","carouselFocusItem","useLayoutEffect","scrollIntoView","prevStatusID","scrollLeft","clientWidth","differentStatusID","scrollTo","isRTL","behavior","showControls","setShowControls","handleSwipe","addEventListener","removeEventListener","handleScroll","abs","passive","mediaOkColors","media","blurhash","averageColor","getBlurHashAverageColor","mediaAccentColors","okColor","light","dark","default","mediaAccentGradients","range","lightGradient","darkGradient","toastRef","hideToast","currentColor","$meta","metaColor","mediaColor","colorScheme","content","accentColor","description","showMediaAlt","CATEGORIES","CATEGORIES_INFO","spam","legal","violation","stampLabel","other","excludeStamp","findMatchingLanguage","rule","currentLang","translations","availableLanguages","matchedLang","normalizedLanguages","split","part","region","charAt","toUpperCase","translateRules","rules","_translatedText","ReportModal","translatedRules","currentDomain","getCurrentInstance","selectedCategory","setSelectedCategory","showRules","setShowRules","rulesRef","hasRules","setHasRules","previewMode","useAvatarStatic","showActivity","fromEntries","category","comment","forward","ruleIds","reports","accountId","statusIds","Fragment","maxlength","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","compressed","uncompressed","buf","TotalLen","current_value","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","getFollowedTags","fauxDiv","extractTagsFromStatus","hashtagLinks","AsyncText","setText","Promise","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","public","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","placeholder","pattern","fetchAccountTitle","SHORTCUTS_META","excludeViewMode","subtitle","query","encodeURIComponent","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","opacity","textTransform","imgURL","multiColumnUrl","Boolean","shortcut","excludedViewMode","shortcutsArr","temp","shortcutIndex","justifyContent","alignItems","currentTarget","ShortcutForm","mode","ImportExport","FORM_NOTES","currentType","setCurrentType","setFollowedHashtags","form","formRef","switch","followedHashtags","autocorrect","autocapitalize","tag","shortcutsStr","compressToEncodedURIComponent","importShortcutStr","setImportShortcutStr","parsedImportShortcutStr","setImportUIState","parsed","decompressFromEncodedURIComponent","hasCurrentSettings","shortcutsImportFieldRef","dt","s","importUIState","menuFooter","nonUniqueShortcuts","exceededLimit","newShortcuts","writeText","settingsJSON","newNote","changes","prevValue","Modals","navigate","useNavigate","preload","ComposeSuspense","__COMPOSE__","editStatus","newStatus","scheduledAt","reloadStatusPage","reloadScheduledPosts","reply","edit","toast","prevLocation","showSettings","showAccounts","showAccount","destination","showDrafts","showMediaModal","contains","mediaIndex","showShortcutsSettings","showEmbedModal","showReportModal","FollowRequestButtons","requestState","setRequestState","hasRelationship","followRequests","authorize","Error","NOTIFICATION_ICONS","follow_request","severed_relationships","moderation_warning","emoji_reaction","annual_report","emojiText","emoji","emoji_url","staticUrl","emojiObject","CustomEmoji","contentText","count","postsCount","postType","Subject","clickable","3","poll-self","poll-voted","favourite+reblog","admin.sign_up","admin.report","targetAccount","year","SEVERED_RELATIONSHIPS_TEXT","account_suspension","targetName","domain_block","user_domain_block","MODERATION_WARNING_TEXT","none","disable","mark_statuses_as_sensitive","delete_statuses","sensitive","silence","suspend","AVATARS_LIMIT","Notification","isStatic","disableContextMenu","report","annualReport","_ids","_accounts","_statuses","_groupKeys","sampleAccounts","notificationsCount","groupKey","_notificationsCount","_sampleAccountsCount","actualStatus","actualStatusID","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","props","handleOpenGenericAccounts","diffCount","expandAccounts","showAvatar","emojiURL","shortcode","formattedCreatedAt","genericAccountsHeading","statusKey","debug","_g","isOwnPost","isFiltered","filtered","type2","gKey","keyAccounts","keyAccount","_accounts2","status2","allowContextMenu","TruncatedLink","dispatchEvent","clientX","clientY","useTruncated","oldProps","newProps","accessToken","NotificationService","routeNotification","showNotificationSheet","notificationAccount","hasAccount","hasModal","hash","warn","id2","setShowNotificationSheet","tagName","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","setQuery","searchFieldRef","useImperativeHandle","setValue","select","blur","autocomplete","spellCheck","onSearch","onFocus","onBlur","onKeyDown","focusItem","nextItem","nextElementSibling","parentElement","firstItem","prevItem","previousElementSibling","lastItem","click","queryType","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enableOnFormTags","Shortcuts","isMultiColumnMode","shortcutsColumnsMode","tabBarRef","hasLists","formattedShortcuts","pin","timeoutId","activeTab","block","inline","updatesButton","instanceRef","overflow","viewScroll","menuClassName","position","groupBoosts","newValues","boostStash","serialBoosts","item","boostStashID","items","half","floor","dedupeBoosts","boostedStatusIDs","filteredItems","boosterID","groupContext","contexts","contextIndex","repliedItem","self","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","inReplyToIds","contextItems","aDate","bDate","every","it","sKey","statusReply","queueMicrotask","fallbackFetch","fetchStatus","saveStatus","skipThreading","ids","replyToStatuses","assignFollowedTags","statusFollowedTags","statusWithFollowedTags","extractedTags","itemFollowedTags","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","scrollTop","onScroll","scrollHeight","scrollWidth","clientHeight","scrollStart","scrollDimension","clientDimension","scrollDistance","init","Event","useScrollFn","useThrottledCallback","MediaPost","onMediaClick","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","visibility","language","editedAt","card","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","filterInfo","showSpoilerMedia","filterTitleStr","hasSpoiler","Media","NavMenu","showFollowing","detect","cancelOnMovement","menuState","setMenuState","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","buttonClickTS","squircle","appVersion","commitHash","__COMMIT_HASH__","confirm","ListMenu","supportsLists","scrollIntoViewOptions","Timeline","titleComponent","emptyText","errorText","useItemID","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","clearWhenRefresh","setItems","showNew","setShowNew","isMediaFirstInstance","mediaFirst","allowGrouping","loadItemsTS","firstLoad2","loadItems","useDebouncedCallback","ts","otherPosts","pinnedPosts","items2","itemsSelector","jRef","handler","activeItem","closest","activeItemRect","allItems","activeItemIndex","indexOf","itemRect","topmostItem","kRef","findLast","oRef","showNewPostsIndicator","handleLoadNewPosts","dotRef","headerRef","nearReachStart2","hiddenUI","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","visible2","hasUpdate","lastHiddenTime","TimelineItem","skeleton","inView","fItems","filteredItemsIDs","aFiltered","bFiltered","isCarousel","unfiltered","filteredItems2","has","StatusCarousel","_pinned2","_grouped","item2","statusID3","_pinned3","actualStatusID3","reblog3","statusID2","actualStatusID2","reblog2","url2","showCompact","_differentAuthor","isSpoiler","manyItems","isMiddle","isStart","isEnd","TimelineStatusCompact","itemKey","enableCommentHint","startButtonRef","oldID","setRender","render","endButtonRef","statusPeekText","statusThreadNumber","titlesStr","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","setAttribute","_isSearchEnabled","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","searchOffsetRef","searchEnabled","setSearchEnabled","isValidMonth","_year","_month","monthIndex","after","afterStr","before","beforeStr","searchResults","value2","offset","pinnedStatuses","pinnedStatusesIds","postId","containsAllPinned","featuredTags","setFeaturedTags","acctDisplay","accountDisplay","monthYear","fetchAccount2","memFetchAccount","featuredTags2","useTitle","cachedAccount","filterBarRef","month2","date","validity","MonthPicker","active","allowSwitch","offsetLeft","fetchAccountStatuses","TimelineStart","masto2","yearFieldRef","minYear","minMonth","maxYear","maxMonth","checkValidity","monthFieldRef","AnnualReport","setResults","annualReports","report2","datePlaceholder","Bookmarks","bookmarksIterator","fetchBookmarks","catchupUrl","FILTER_CONTEXT","RANGES","FILTER_KEYS","original","groups","FILTER_SORTS","FILTER_GROUPS","DTF","mem","Intl","DateTimeFormat","day","hour","minute","Catchup","dtf","showTopLinks","setShowTopLinks","supportsPixelfed","fetchHome","maxCreatedAt","maxCreatedAtDate","allResults","homeIterator","homeIterable","mainloop","createdAtDate","selfPost","addedResults","catchupRangeRef","catchupLastRef","handleCatchupClick","catchupID","catchup","setPosts","reloadCatchups","setLastCatchupEndAt","prevCatchups","setPrevCatchups","lastCatchupEndAt","catchups","ownCatchups","trimmedCatchups","lastCatchups","restCatchups","endAt","startAt","reloadCatchupsCount","_filtered","_followedTags","_f","thePost","__FILTER","links","sharers","links2","link","topLinks","shared","linksLoop","likes","filteredPosts","authors","authorCounts","selectedFilterCategory","filteredPosts2","setSelectedAuthor","sortBy","authorsHash","setSortOrder","authorCountsMap","postFilterMatches","boostedPosts","__BOOSTERS","selectedAuthor","filteredPostsMap","authorID","authorCountsList","sortedFilteredPosts","aAccountID","authorIndices","bAccountID","aIndex","bIndex","postDensity","bDensity","aDensity","sortOrder","groupBy","prevGroup","authorsListParent","autoAnimated","isFiltered2","postsBar","postsBarType","posts2","postsBins","binByTime","lastCatchupRange","sortOrderIndex","authorElement","scrollableRect","authorRect","right","showHelp","setShowHelp","hlRef","_2","escRef","activeElement","isRadio","handleArrowKeys","isArrowKeys","setRange","pc","st","yes","del","setSelectedFilterCategory","setSortBy","formatRange","setGroupBy","transform","imageDescription","publishedAt","labAverageColor","filterCounts","author","paddingInline","showSeparator","IntersectionPostLineItem","isFollowedTags","PostLine","isReplyTo","show","setShow","IntersectionObserver","unobserve","MEDIA_DENSITY","CARD_DENSITY","pollContent","cur","htmlContentLength","PostPeek","density","_thread","readingExpandSpoilers","postText","showPostContent","isThread","emojifyText","o","multiple","remoteMediaURL","_h","_j","_i","showMedia","mediaURL","MEDIA_SIZE","previewUrl","gifv","video","audio","PostStats","numBins","dates","minDate","maxDate","bins","normalized","binIndex","Favourites","favouritesIterator","fetchFavourites","FILTER_CONTEXT_UNIMPLEMENTED","FILTER_CONTEXT_LABELS","home","thread","EXPIRY_DURATIONS","EXPIRY_DURATIONS_LABELS","Filters","showFiltersAddEditModal","setShowFiltersAddEditModal","filters","setFilters","keywords","expiresAt","keyword","ExpiryStatus","_id","incID","FiltersAddEdit","filterAction","hasExpiry","expiresAtDate","editKeywords","setEditKeywords","keywordsRef","setRemovedKeyword_IDs","filteredEditKeywords","setRemovedKeywordIDs","removedKeyword_IDs","title2","keywordIDs","getAll","keywordKeywords","keywordWholeWords","wholeWord","removedKeywordIDs","keywordsAttributes","context2","expiresIn","filterResult","filterAction2","_id2","showNeverExpires","expired","rerender","FollowedHashtags","Following","latestItem","__BENCHMARK","latestItemChanged","clearFollowedTagsState","payload","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","hashtags","linkParams","hashtagTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","valueContainsLatestItem","followUIState","setFollowUIState","reachLimit","featuredUIState","setFeaturedUIState","isFeaturedTag","setIsFeaturedTag","finally","featuredTagID","catch","MenuHeader","delete","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","setList","showManageMembersModal","setShowManageMembersModal","list2","setDownOverflow","ListManageMembers","MEMBERS_LIMIT","members","setMembers","membersIterator","fetchMembers","member","as","RemoveAddButton","removed","setRemoved","notificationTypeKeys","GROUP_TYPES","groupable","fixNotifications","massageNotifications2","notificationGroups","sampleAccountIds","statusId","groupNotifications2","groupNotifications","newGroupNotifications","gn","latestPageNotificationAt","mostRecentNotificationId","newGroupNotifications1","notificationsMap","virtualType","mappedNotification","ma","mappedAccount","newGroupNotifications2","notificationsMap2","hasOneAccount","toLocaleDateString","n","cleanNotifications","cleanNotifications2","emptySearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","NOTIFICATIONS_LIMIT","NOTIFICATIONS_GROUPED_LIMIT","memSupportsGroupedNotifications","mastodon","mastoFetchNotificationsIterable","mastoFetchNotifications","getGroupedNotifications","NOTIFICATIONS_POLICIES","NOTIFICATIONS_POLICIES_TEXT","forNotFollowing","forNotFollowers","forNewAccounts","forPrivateMentions","forLimitedAccounts","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","notificationsIterable","excludeTypes","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","supportsFilteredNotifications","showNotificationsSettings","setNotificationsPolicy","fetchNotificationsPolicy","loadNotificationsPolicy","notificationsRequests","setNotificationsRequests","fetchNotificationsRequest","loadNotifications","fetchNotificationsPromise","fetchNotifications","loadUpdates","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","setAnnualReportNotification","annualReportNotification2","annualReportYear","getFullYear","statusLink","todaySubHeading","today","forceOpts","setShowNotificationsSettings","announcement","notificationsPolicy","onToggle","request","pendingRequestsCount","NotificationRequestModalButton","NotificationRequestButtons","annualReportNotification","differentDay","notificationDay","toDateString","subHeading","newPolicy","AnnouncementBlock","contact","contactAccount","startsAt","endsAt","published","allDay","reactions","publishedAtDate","read","publishedDateText","updatedAtText","reaction","me","fetchNotficationsByAccount","showModal","setShowModal","notifs","setNotifications","hasRequestState","Public","isLocal","publicIterator","fetchPublic","remote","prompt","SHORT_LIMIT","Search","offsetRef","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","typeResults","setTypeResultsFunc","loadResults","_c","_e","_d","filterBarParent","history","reduce","TREND_CACHE_TIME","fetchLinks","trends","fetchTrendsStatuses","pixelfed","discover","fetchLinkList","Trending","setHashtags","setLinks","trendIterator","fetchTrends","currentLinkMentionsLoading","setCurrentLinkMentionsLoading","currentLinkMentionsIterator","currentLink","setCurrentLink","supportsTrendingLinkPosts","currentLinkRef","hasCurrentLink","fetchLinkMentions","prevCurrentLink","authorUrl","authorName","providerName","providerUrl","isShortTitle","hasAuthor","flexShrink","textAlign","Columns","Hashtag","Component","$column","currentFocusedColumn","prevColKey","nextColKey","Home","NotificationsLink","notificationLinkRef","NotificationsMenu","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","skipFollowRequests","headerHeight","menuElement","Provider","statusPostRegexes","getInstanceStatusObject","theURL","regex","match","getInstanceStatusURL","HttpRoute","statusObject","statusURL","Lists","hasExclusiveLists","instancesListURL","PHANPY_DEFAULT_INSTANCE","DEFAULT_INSTANCE","Login","instanceURLRef","cachedInstanceURL","submit","instanceText","setInstanceText","instancesList","setInstancesList","searcher","Fuse","submitInstance","xmlDoc","parseFromString","template","getCredentialApplication","credentialApplication","storeCredentialApplication","authPKCE","sessionCookie","cleanInstanceText","instanceTextLooksLikeDomain","instancesSuggestions","instance2","selectedInstanceText","ScheduledPosts","scheduledPosts","setScheduledPosts","showScheduledPostModal","setShowScheduledPostModal","postsIterator","scheduledStatuses","allPosts","option","votesCount","ScheduledPostPreview","ScheduledPostEdit","hours","weekday","setNewScheduledAt","differentScheduledAt","newScheduledAt","localTZ","pastSchedule","ScheduledAtField","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaStatusID","mediaStatus","getStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","matchStatusPath","matchPath","postViewState","mediaClose","mediaAttachments2","handleMediaClose","mediaVTN","getSafeViewTransitionName","els","foundEls","el2","innerHeight","transition","ready","$carousel","$deckContainer","$deckContainers","StatusParent","linkable","restProps","createdAtSort","created_at","viewMode","setViewMode","totalDescendants","setStatuses","heroStatusRef","scrollOffsets","lastInitContextTS","reloadHero","heroTimer","reallyCachedStatuses","cachedStatuses","heroFetch","pRetry","contextFetch","hasStatus","heroStatus2","_replies","level","nextLevel","descendantLevelsCount","_r","expandReplies","descendants","weight","ancestors2","missingStatuses","ancestors","nestedDescendants","ancestorsIsThread","heroAccountID","allStatuses","__replies","calcStatusWeight","initContext","showRefresh","offsetTop","heroLimit","setLimit","scrollPosition","threadifyStatus","newScrollTop","newScrollOffsets","interval","setShowRefresh","getCurrentAccount","contextURL","statusWeightCache","heroDisplayName","div","heroContentText","postInstance","apiCache","postSameInstance","heroInView","activeStatus","activeStatusRect","activeStatusIndex","allStatusLinks","nextStatus","topmostStatusLink","statusLinkRect","heroPointer","prevStatus","details","handleMediaClick","handleStatusLinkClick","renderStatus","descendant","isHero","reachTopPost","translate","ancestor","requestAnimationFrame","setHeroInView","setReachTopPost","SubComments","isLinkable","hasDescendants","enableTranslate","showActionsBar","prevLocationIsStatusPage","prevEntry","moreStatusesKeys","getIDs","openAll","spoilerButton","initialPageState","onAnimationEnd","button","full","buttons","hasParentThread","accWeight","parentLink","diveDeep","replies2","replies3","totalComments","sameCount","arr","totalWeight","openBefore","detailsRef","dataset","setRenderReplies","Container","MEDIA_VIRTUAL_LENGTH","POLL_VIRTUAL_LENGTH","CARD_VIRTUAL_LENGTH","WEIGHT_SEGMENT","renderReplies","mediaLength","pollLength","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL","DEFAULT_INSTANCE_REGISTRATION_URL","appSite","Welcome","marginBlockEnd","nativeAlert","__nativeAlert","Toastify","gravity","__STATES__","__STATES_STATS__","counts","unmountedPosts","setInterval","unfurledLinks","postInNotifications","$post","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","isIOS","tempColor","themeDarkColor","textSize","$app","BENCHES","App","setIsLoggedIn","decodeURIComponent","getVapidKey","vapid_key","clientID","initStates","searchAccount","getAccount","client","hasPreferences","hasInstance","initPreferences","initInstance","PrimaryRoutes","Routes","Route","Root","nonRootLocation","backgroundLocation","getPrevLocation","isModalPage","initActivateLang","I18nProvider","HashRouter","localStorage","removeItem","sessionStorage","IGNORE_CACHE_KEYS","clearRanOnce","FAST_INTERVAL","SLOW_INTERVAL","clearCaches","cache","_keys","MAX_SW_CACHE_SIZE","deleteKeys"],"mappings":"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","x_google_ignoreList":[0,1,6,7,26,27,28,29,30,31,32,33,34,35,36,37,38,39,42]}