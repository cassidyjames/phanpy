{"version":3,"file":"main-CqGAdsQ2.js","sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../src/utils/oauth-pkce.js","../../src/utils/auth.js","../../src/pages/accounts.jsx","../../src/assets/logo.svg","../../src/components/lang-selector.jsx","../../src/utils/push-notifications.js","../../src/pages/settings.jsx","../../src/utils/focus-deck.js","../../src/utils/useLocationChange.js","../../src/components/account-handle-info.jsx","../../src/components/edit-profile-sheet.jsx","../../src/components/endorsements.jsx","../../src/utils/lists.js","../../src/components/list-exclusive-badge.jsx","../../src/components/list-add-edit.jsx","../../src/components/add-remove-lists-sheet.jsx","../../src/components/private-note-sheet.jsx","../../src/components/translated-bio-sheet.jsx","../../src/components/related-actions.jsx","../../src/components/account-info.jsx","../../src/components/account-sheet.jsx","../../src/components/drafts.jsx","../../src/components/embed-modal.jsx","../../src/components/generic-accounts.jsx","../../src/components/media-alt-modal.jsx","../../node_modules/chroma-js/src/utils/limit.js","../../node_modules/chroma-js/src/utils/type.js","../../node_modules/chroma-js/src/utils/unpack.js","../../node_modules/chroma-js/src/utils/index.js","../../node_modules/chroma-js/src/utils/multiply-matrices.js","../../node_modules/chroma-js/src/io/lab/lab-constants.js","../../node_modules/chroma-js/src/io/lab/lab2rgb.js","../../node_modules/chroma-js/src/io/oklab/oklab2rgb.js","../../node_modules/chroma-js/src/io/lab/rgb2lab.js","../../node_modules/chroma-js/src/io/oklab/rgb2oklab.js","../../node_modules/chroma-js/src/io/lch/lch2lab.js","../../node_modules/chroma-js/src/io/oklch/oklch2rgb.js","../../node_modules/chroma-js/src/io/lch/lab2lch.js","../../node_modules/chroma-js/src/io/oklch/rgb2oklch.js","../../src/components/media-modal.jsx","../../src/components/open-link-sheet.jsx","../../src/components/report-modal.jsx","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/modals.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/utils/search-history.js","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../src/components/shortcuts.jsx","../../src/utils/timeline-utils.js","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/annual-report.jsx","../../src/pages/bookmarks.jsx","../../src/assets/features/catch-up.png","../../src/pages/catchup.jsx","../../src/pages/favourites.jsx","../../src/pages/filters.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/utils/group-notifications.js","../../src/pages/mentions.jsx","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/components/recent-searches.jsx","../../src/pages/search.jsx","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/data/instances.json?url","../../src/pages/login.jsx","../../src/pages/scheduled-posts.jsx","../../src/components/edit-history-controls.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 20_000; // 20 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  const { t } = useLingui();\n\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  const visibleTimeout = useRef();\n  usePageVisibility((visible) => {\n    clearTimeout(visibleTimeout.current);\n    if (visible) {\n      setVisible(true);\n    } else {\n      visibleTimeout.current = setTimeout(() => {\n        setVisible(false);\n      }, POLL_INTERVAL);\n    }\n  });\n\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications\n        .list({\n          limit: 1,\n          sinceId: states.notificationsLast.id,\n        })\n        .values();\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let streamTimeout;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          streamTimeout = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(streamTimeout);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys(\n    'shift+alt+k',\n    (e) => {\n      // Need modifers check due to useKey: true\n      if (!e.shiftKey || !e.altKey) return;\n\n      const currentCloakMode = states.settings.cloakMode;\n      states.settings.cloakMode = !currentCloakMode;\n      showToast({\n        text: currentCloakMode ? t`Cloak mode disabled` : t`Cloak mode enabled`,\n      });\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey,\n    },\n  );\n\n  return null;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport openCompose from '../utils/open-compose';\nimport openOSK from '../utils/open-osk';\nimport pmem from '../utils/pmem';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport showCompose from '../utils/show-compose';\nimport states from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuLink from './menu-link';\nimport RelativeTime from './relative-time';\nimport SubMenu2 from './submenu2';\n\n// Function to fetch the latest posts from the current user\n// Use pmem to memoize fetch results for 1 minute\nconst fetchLatestPostsMemoized = pmem(\n  async (masto, currentAccountID) => {\n    const statusesIterator = masto.v1.accounts\n      .$select(currentAccountID)\n      .statuses.list({\n        limit: 3,\n        exclude_replies: true,\n        exclude_reblogs: true,\n      })\n      .values();\n    const { value } = await statusesIterator.next();\n    return value || [];\n  },\n  { maxAge: 60000 },\n); // 1 minute cache\n\nexport default function ComposeButton() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto } = api();\n\n  // Context menu state\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [latestPosts, setLatestPosts] = useState([]);\n  const [loadingPosts, setLoadingPosts] = useState(false);\n  const buttonRef = useRef(null);\n  const menuRef = useRef(null);\n\n  const columnMode = snapStates.settings.shortcutsViewMode === 'multi-column';\n\n  function handleButton(e) {\n    // useKey will even listen to Shift\n    // e.g. press Shift (without c) will trigger this 😱\n    if (e.key && e.key.toLowerCase() !== 'c') return;\n\n    if (snapStates.composerState.minimized) {\n      states.composerState.minimized = false;\n      openOSK();\n      return;\n    }\n\n    const composeDataElements = document.querySelectorAll('data.compose-data');\n    // If there's a lot of them, ignore\n    const opts =\n      !columnMode && composeDataElements.length === 1\n        ? JSON.parse(composeDataElements[0].value)\n        : undefined;\n\n    if (e.shiftKey) {\n      const newWin = openCompose(opts);\n\n      if (!newWin) {\n        states.showCompose = opts || true;\n      }\n    } else {\n      openOSK();\n      states.showCompose = opts || true;\n    }\n  }\n\n  useHotkeys('c, shift+c', handleButton, {\n    useKey: true,\n    ignoreEventWhen: (e) => {\n      const hasModal = !!document.querySelector('#modal-container > *');\n      return hasModal || e.metaKey || e.ctrlKey || e.altKey;\n    },\n  });\n\n  // Setup longpress handler to open context menu\n  const bindLongPress = useLongPress(\n    () => {\n      setMenuOpen(true);\n    },\n    {\n      threshold: 600,\n    },\n  );\n\n  const fetchLatestPosts = useCallback(async () => {\n    try {\n      setLoadingPosts(true);\n      const currentAccountID = getCurrentAccountID();\n      if (!currentAccountID) {\n        return;\n      }\n      const posts = await fetchLatestPostsMemoized(masto, currentAccountID);\n      setLatestPosts(posts);\n    } catch (error) {\n    } finally {\n      setLoadingPosts(false);\n    }\n  }, [masto]);\n\n  // Function to handle opening the compose window to reply to a post\n  const handleReplyToPost = useCallback((post) => {\n    showCompose({\n      replyToStatus: post,\n    });\n    setMenuOpen(false);\n  }, []);\n\n  useEffect(() => {\n    if (menuOpen) {\n      fetchLatestPosts();\n    }\n  }, [fetchLatestPosts, menuOpen]);\n\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        id=\"compose-button\"\n        onClick={handleButton}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          setMenuOpen(true);\n        }}\n        {...bindLongPress()}\n        class={`${snapStates.composerState.minimized ? 'min' : ''} ${\n          snapStates.composerState.publishing ? 'loading' : ''\n        } ${snapStates.composerState.publishingError ? 'error' : ''}`}\n      >\n        <Icon icon=\"quill\" size=\"xl\" alt={t`Compose`} />\n      </button>\n      <ControlledMenu\n        ref={menuRef}\n        state={menuOpen ? 'open' : undefined}\n        anchorRef={buttonRef}\n        onClose={() => setMenuOpen(false)}\n        direction=\"top\"\n        gap={8} // Add gap between menu and button\n        unmountOnClose\n        portal={{\n          target: document.body,\n        }}\n        boundingBoxPadding={safeBoundingBoxPadding()}\n        containerProps={{\n          style: {\n            zIndex: 19,\n          },\n          onClick: () => {\n            menuRef.current?.closeMenu?.();\n          },\n        }}\n        submenuOpenDelay={600}\n      >\n        <MenuLink to=\"/sp\">\n          <Icon icon=\"schedule\" />{' '}\n          <span>\n            <Trans>Scheduled Posts</Trans>\n          </span>\n        </MenuLink>\n        <MenuDivider />\n        <SubMenu2\n          align=\"end\"\n          direction=\"top\"\n          shift={-8}\n          disabled={loadingPosts || latestPosts.length === 0}\n          label={\n            <>\n              <Icon icon=\"comment\" />{' '}\n              <span className=\"menu-grow\">\n                <Trans>Add to thread</Trans>\n              </span>\n              {loadingPosts ? '…' : <Icon icon=\"chevron-right\" />}\n            </>\n          }\n        >\n          {latestPosts.length > 0 &&\n            latestPosts.map((post) => {\n              const createdDate = new Date(post.createdAt);\n              const isWithinDay = Date.now() - createdDate.getTime() < 86400000;\n\n              return (\n                <MenuItem key={post.id} onClick={() => handleReplyToPost(post)}>\n                  <small>\n                    <div class=\"menu-post-text\">{statusPeek(post)}</div>\n                    <span className=\"more-insignificant\">\n                      {/* Show relative time if within a day */}\n                      {isWithinDay && (\n                        <>\n                          <RelativeTime datetime={createdDate} format=\"micro\" />{' '}\n                          ‒{' '}\n                        </>\n                      )}\n                      <time\n                        className=\"created\"\n                        dateTime={createdDate.toISOString()}\n                        title={createdDate.toLocaleString()}\n                      >\n                        {niceDateTime(post.createdAt)}\n                      </time>\n                    </span>\n                  </small>\n                </MenuItem>\n              );\n            })}\n        </SubMenu2>\n      </ControlledMenu>\n    </>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?',\n    () => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => {\n        const isCatchUpPage = /\\/catchup/i.test(location.hash);\n        return isCatchUpPage || e.metaKey || e.ctrlKey || e.altKey;\n        // const hasModal = !!document.querySelector('#modal-container > *');\n        // return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <h2>\n              <Trans>Keyboard shortcuts</Trans>\n            </h2>\n          </header>\n          <main>\n            <table>\n              <tbody>\n                {[\n                  {\n                    action: t`Keyboard shortcuts help`,\n                    keys: <kbd>?</kbd>,\n                  },\n                  {\n                    action: t`Next post`,\n                    keys: <kbd>j</kbd>,\n                  },\n                  {\n                    action: t`Previous post`,\n                    keys: <kbd>k</kbd>,\n                  },\n                  {\n                    action: t`Skip carousel to next post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>j</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Skip carousel to previous post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Load new posts`,\n                    keys: <kbd>.</kbd>,\n                  },\n                  {\n                    action: t`Open post details`,\n                    keys: (\n                      <Trans>\n                        <kbd>Enter</kbd> or <kbd>o</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: (\n                      <Trans>\n                        Expand content warning or\n                        <br />\n                        toggle expanded/collapsed thread\n                      </Trans>\n                    ),\n                    keys: <kbd>x</kbd>,\n                  },\n                  {\n                    action: t`Close post or dialogs`,\n                    keys: (\n                      <Trans>\n                        <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus column in multi-column mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>1</kbd> to <kbd>9</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus next column in multi-column mode`,\n                    keys: <kbd>]</kbd>,\n                  },\n                  {\n                    action: t`Focus previous column in multi-column mode`,\n                    keys: <kbd>[</kbd>,\n                  },\n                  {\n                    action: t`Compose new post`,\n                    keys: <kbd>c</kbd>,\n                  },\n                  {\n                    action: t`Compose new post (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>c</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Send post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                        <kbd>Enter</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Search`,\n                    keys: <kbd>/</kbd>,\n                  },\n                  {\n                    action: t`Reply`,\n                    keys: <kbd>r</kbd>,\n                  },\n                  {\n                    action: t`Reply (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>r</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Like (favourite)`,\n                    keys: (\n                      <Trans>\n                        <kbd>l</kbd> or <kbd>f</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Boost`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>b</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Quote`,\n                    keys: <kbd>q</kbd>,\n                  },\n                  {\n                    action: t`Bookmark`,\n                    keys: <kbd>d</kbd>,\n                  },\n                  {\n                    action: t`Toggle Cloak mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                ].map(({ action, className, keys }) => (\n                  <tr key={action}>\n                    <th class={className}>{action}</th>\n                    <td>{keys}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * A map of existing mutation observers used to track element movements.\n */\nconst mutationObservers = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Determine if an element is fully outside of the current viewport.\n * @param el - Element to test\n */\nfunction isOffscreen(el) {\n    const rect = el.getBoundingClientRect();\n    const vw = (root === null || root === void 0 ? void 0 : root.clientWidth) || 0;\n    const vh = (root === null || root === void 0 ? void 0 : root.clientHeight) || 0;\n    return rect.bottom < 0 || rect.top > vh || rect.right < 0 || rect.left > vw;\n}\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${ -1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n * @param debounce - Whether or not to debounce the update. After an animation is finished, it should update as soon as possible to prevent flickering on quick toggles.\n */\nfunction updatePos(el, debounce = true) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = debounce\n        ? isPlugin(optionsOrPlugin)\n            ? 500\n            : optionsOrPlugin.duration\n        : 0;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a, _b;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (((_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.playState) !== \"finished\") {\n        (_b = animations.get(el)) === null || _b === void 0 ? void 0 : _b.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    if (isOffscreen(el)) {\n        // When element is offscreen, skip FLIP to avoid broken transforms\n        coords.set(el, newCoords);\n        observePosition(el);\n        return;\n    }\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        let deltaLeft = oldCoords.left - newCoords.left;\n        let deltaTop = oldCoords.top - newCoords.top;\n        const deltaRight = oldCoords.left + oldCoords.width - (newCoords.left + newCoords.width);\n        const deltaBottom = oldCoords.top + oldCoords.height - (newCoords.top + newCoords.height);\n        // element is probably anchored and doesn't need to be offset\n        if (deltaBottom == 0)\n            deltaTop = 0;\n        if (deltaRight == 0)\n            deltaLeft = 0;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaLeft}px, ${deltaTop}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el, false), {\n        once: true,\n    });\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    if (isOffscreen(el)) {\n        // Skip entry animation if element is not visible in viewport\n        observePosition(el);\n        return;\n    }\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el, false), {\n        once: true,\n    });\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next &&\n        next.parentNode &&\n        next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], {\n            duration: optionsOrPlugin.duration,\n            easing: \"ease-out\",\n        });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset =\n                (options === null || options === void 0 ? void 0 : options.styleReset) ||\n                    styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", () => cleanUp(el, styleReset), {\n        once: true,\n    });\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration >\n                    performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    var _a;\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = !animations.has(el) || ((_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.playState) === \"finished\"\n        ? getCoords(offsetParent)\n        : coords.get(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (supportedBrowser && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, {\n                    duration: 250,\n                    easing: \"ease-in-out\",\n                    ...config,\n                });\n            }\n            const mo = new MutationObserver(handleMutations);\n            mo.observe(el, { childList: true });\n            mutationObservers.set(el, mo);\n            parents.add(el);\n        }\n    }\n    const controller = Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n            // Cancel any in-flight animations and pending timers for immediate effect\n            forEach(el, (node) => {\n                const a = animations.get(node);\n                try {\n                    a === null || a === void 0 ? void 0 : a.cancel();\n                }\n                catch { }\n                animations.delete(node);\n                const d = debounces.get(node);\n                if (d)\n                    clearTimeout(d);\n                debounces.delete(node);\n                const i = intervals.get(node);\n                if (i)\n                    clearInterval(i);\n                intervals.delete(node);\n            });\n        },\n        isEnabled: () => enabled.has(el),\n        destroy: () => {\n            enabled.delete(el);\n            parents.delete(el);\n            options.delete(el);\n            const mo = mutationObservers.get(el);\n            mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            mutationObservers.delete(el);\n            forEach(el, (node) => {\n                // unobserve resize\n                resize === null || resize === void 0 ? void 0 : resize.unobserve(node);\n                // cancel animations\n                const a = animations.get(node);\n                try {\n                    a === null || a === void 0 ? void 0 : a.cancel();\n                }\n                catch { }\n                animations.delete(node);\n                // disconnect observers\n                const io = intersections.get(node);\n                io === null || io === void 0 ? void 0 : io.disconnect();\n                intersections.delete(node);\n                // clear intervals and debounces\n                const i = intervals.get(node);\n                if (i)\n                    clearInterval(i);\n                intervals.delete(node);\n                const d = debounces.get(node);\n                if (d)\n                    clearTimeout(d);\n                debounces.delete(node);\n                // clear state\n                coords.delete(node);\n                siblings.delete(node);\n            });\n        },\n    });\n    return controller;\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        const ctl = autoAnimate(el, binding.value || {});\n        Object.defineProperty(el, \"__aa_ctl\", { value: ctl, configurable: true });\n    },\n    unmounted: (el) => {\n        var _a;\n        const ctl = el[\"__aa_ctl\"];\n        (_a = ctl === null || ctl === void 0 ? void 0 : ctl.destroy) === null || _a === void 0 ? void 0 : _a.call(ctl);\n        try {\n            delete el[\"__aa_ctl\"];\n        }\n        catch { }\n    },\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate, autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    useEffect(() => {\n        return () => {\n            var _a;\n            (_a = controller === null || controller === void 0 ? void 0 : controller.destroy) === null || _a === void 0 ? void 0 : _a.call(controller);\n        };\n    }, [controller]);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","function dec2hex(dec) {\n  return ('0' + dec.toString(16)).slice(-2);\n}\nexport function verifier() {\n  var array = new Uint32Array(56 / 2);\n  window.crypto.getRandomValues(array);\n  return Array.from(array, dec2hex).join('');\n}\nfunction sha256(plain) {\n  // returns promise ArrayBuffer\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n}\nfunction base64urlencode(a) {\n  let str = '';\n  const bytes = new Uint8Array(a);\n  const len = bytes.byteLength;\n  for (var i = 0; i < len; i++) {\n    str += String.fromCharCode(bytes[i]);\n  }\n  return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function generateCodeChallenge(v) {\n  const hashed = await sha256(v);\n  return base64urlencode(hashed);\n}\n\n// If /.well-known/oauth-authorization-server exists and code_challenge_methods_supported includes \"S256\", means support PKCE\nexport async function supportsPKCE({ instanceURL }) {\n  if (!instanceURL) return false;\n  try {\n    const res = await fetch(\n      `https://${instanceURL}/.well-known/oauth-authorization-server`,\n    );\n    if (!res.ok || res.status !== 200) return false;\n    const json = await res.json();\n    if (json.code_challenge_methods_supported?.includes('S256')) return true;\n    return false;\n  } catch (e) {\n    return false;\n  }\n}\n\n// For debugging\nwindow.__generateCodeChallenge = generateCodeChallenge;\n","import { generateCodeChallenge, verifier } from './oauth-pkce';\n\nconst {\n  DEV,\n  PHANPY_CLIENT_NAME: CLIENT_NAME,\n  PHANPY_WEBSITE: WEBSITE,\n} = import.meta.env;\n\nconst SCOPES = 'read write follow push';\n\n/*\n  PHANPY_WEBSITE is set to the default official site.\n  It's used in pre-built releases, so there's no way to change it dynamically\n  without rebuilding.\n  Therefore, we can't use it as redirect_uri.\n  We only use PHANPY_WEBSITE if it's \"same\" as current location URL.\n  \n  Very basic check based on location.hostname for now\n*/\nconst sameSite = WEBSITE\n  ? WEBSITE.toLowerCase().includes(location.hostname)\n  : false;\nconst currentLocation = location.origin + location.pathname;\nconst REDIRECT_URI = DEV || !sameSite ? currentLocation : WEBSITE;\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: REDIRECT_URI,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getPKCEAuthorizationURL({\n  instanceURL,\n  client_id,\n  forceLogin = false,\n}) {\n  const codeVerifier = verifier();\n  const codeChallenge = await generateCodeChallenge(codeVerifier);\n  const params = new URLSearchParams({\n    client_id,\n    code_challenge_method: 'S256',\n    code_challenge: codeChallenge,\n    redirect_uri: REDIRECT_URI,\n    response_type: 'code',\n    scope: SCOPES,\n  });\n  if (forceLogin) params.append('force_login', true);\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${params.toString()}`;\n  return [authorizationURL, codeVerifier];\n}\n\nexport async function getAuthorizationURL({\n  instanceURL,\n  client_id,\n  forceLogin = false,\n}) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: REDIRECT_URI,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  if (forceLogin) authorizationParams.append('force_login', true);\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n  code_verifier,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    redirect_uri: REDIRECT_URI,\n    grant_type: 'authorization_code',\n    code,\n    // scope: SCOPES, // Not needed\n    // client_secret,\n    // code_verifier,\n  });\n  if (client_secret) {\n    params.append('client_secret', client_secret);\n  }\n  if (code_verifier) {\n    params.append('code_verifier', code_verifier);\n  }\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n\nexport async function revokeAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  token,\n}) {\n  try {\n    const params = new URLSearchParams({\n      client_id,\n      client_secret,\n      token,\n    });\n\n    const revokeResponse = await fetch(`https://${instanceURL}/oauth/revoke`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: params.toString(),\n      keepalive: true,\n    });\n\n    return revokeResponse.ok;\n  } catch (error) {\n    console.erro('Error revoking token', error);\n    return false;\n  }\n}\n","import './accounts.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useReducer } from 'preact/hooks';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport { revokeAccessToken } from '../utils/auth';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport {\n  getAccounts,\n  getCurrentAccountID,\n  saveAccounts,\n  setCurrentAccountID,\n} from '../utils/store-utils';\n\nconst isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n\nfunction Accounts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  // Accounts\n  const accounts = getAccounts();\n  const currentAccount = getCurrentAccountID();\n  const moreThanOneAccount = accounts.length > 1;\n\n  const [_, reload] = useReducer((x) => x + 1, 0);\n  const [accountsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"accounts-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Accounts</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul class=\"accounts-list\" ref={accountsListParent}>\n            {accounts.map((account, i) => {\n              const isCurrent = account.info.id === currentAccount;\n              const isDefault = i === 0; // first account is always default\n              return (\n                <li key={account.info.id}>\n                  <div>\n                    {moreThanOneAccount && (\n                      <span class={`current ${isCurrent ? 'is-current' : ''}`}>\n                        <Icon icon=\"check-circle\" alt={t`Current`} />\n                      </span>\n                    )}\n                    <Avatar\n                      url={account.info.avatarStatic}\n                      size=\"xxl\"\n                      onDblClick={async () => {\n                        if (isCurrent) {\n                          try {\n                            const info = await masto.v1.accounts\n                              .$select(account.info.id)\n                              .fetch();\n                            console.log('fetched account info', info);\n                            account.info = info;\n                            saveAccounts(accounts);\n                            reload();\n                          } catch (e) {}\n                        }\n                      }}\n                    />\n                    <NameText\n                      account={\n                        moreThanOneAccount\n                          ? {\n                              ...account.info,\n                              acct: /@/.test(account.info.acct)\n                                ? account.info.acct\n                                : `${account.info.acct}@${account.instanceURL}`,\n                            }\n                          : account.info\n                      }\n                      showAcct\n                      onClick={() => {\n                        if (isCurrent) {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        } else {\n                          setCurrentAccountID(account.info.id);\n                          location.reload();\n                        }\n                      }}\n                    />\n                  </div>\n                  <div class=\"actions\">\n                    {isDefault && moreThanOneAccount && (\n                      <>\n                        <span class=\"tag\">\n                          <Trans>Default</Trans>\n                        </span>{' '}\n                      </>\n                    )}\n                    <Menu2\n                      align=\"end\"\n                      menuButton={\n                        <button type=\"button\" class=\"plain more-button\">\n                          <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                        </button>\n                      }\n                    >\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isCurrent}\n                            onClick={() => {\n                              setCurrentAccountID(account.info.id);\n                              location.reload();\n                            }}\n                          >\n                            <Icon icon=\"transfer\" />{' '}\n                            <Trans>Switch to this account</Trans>\n                          </MenuItem>\n                          {!isStandalone && !isCurrent && (\n                            <MenuLink\n                              href={`./?account=${account.info.id}`}\n                              target=\"_blank\"\n                            >\n                              <Icon icon=\"external\" />\n                              <span>\n                                <Trans>Switch in new tab/window</Trans>\n                              </span>\n                            </MenuLink>\n                          )}\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuItem\n                        onClick={() => {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        }}\n                      >\n                        <Icon icon=\"user\" />\n                        <span>\n                          <Trans>View profile…</Trans>\n                        </span>\n                      </MenuItem>\n                      <MenuDivider />\n                      {moreThanOneAccount && (\n                        <>\n                          <MenuItem\n                            disabled={isDefault}\n                            onClick={() => {\n                              // Move account to the top of the list\n                              accounts.splice(i, 1);\n                              accounts.unshift(account);\n                              saveAccounts(accounts);\n                              reload();\n                            }}\n                          >\n                            <Icon icon=\"check-circle\" />\n                            <span>\n                              <Trans>Set as default</Trans>\n                            </span>\n                          </MenuItem>\n                          <MenuItem\n                            disabled={i <= 1}\n                            onClick={() => {\n                              // Move account one position up\n                              accounts.splice(i, 1);\n                              accounts.splice(i - 1, 0, account);\n                              saveAccounts(accounts);\n                              reload();\n                            }}\n                          >\n                            <Icon icon=\"arrow-up\" />\n                            <span>\n                              <Trans>Move up</Trans>\n                            </span>\n                          </MenuItem>\n                          <MenuItem\n                            disabled={i === 0 || i === accounts.length - 1}\n                            onClick={() => {\n                              // Move account one position down\n                              accounts.splice(i, 1);\n                              accounts.splice(i + 1, 0, account);\n                              saveAccounts(accounts);\n                              reload();\n                            }}\n                          >\n                            <Icon icon=\"arrow-down\" />\n                            <span>\n                              <Trans>Move down</Trans>\n                            </span>\n                          </MenuItem>\n                          <MenuDivider />\n                        </>\n                      )}\n                      <MenuConfirm\n                        subMenu\n                        confirmLabel={\n                          <>\n                            <Icon icon=\"exit\" />\n                            <span>\n                              <Trans>\n                                Log out{' '}\n                                <span class=\"bidi-isolate\">\n                                  @{account.info.acct}\n                                </span>\n                                ?\n                              </Trans>\n                            </span>\n                          </>\n                        }\n                        disabled={!isCurrent}\n                        menuItemClassName=\"danger\"\n                        onClick={async () => {\n                          // const yes = confirm('Log out?');\n                          // if (!yes) return;\n                          await revokeAccessToken({\n                            instanceURL: account.instanceURL,\n                            client_id: account.clientId,\n                            client_secret: account.clientSecret,\n                            token: account.accessToken,\n                          });\n                          accounts.splice(i, 1);\n                          saveAccounts(accounts);\n                          // location.reload();\n                          try {\n                            // Clean up session currentAccount if same as deleted\n                            if (\n                              store.session.get('currentAccount') ===\n                              account.info.id\n                            ) {\n                              store.session.del('currentAccount');\n                            }\n                          } catch (e) {}\n                          location.href = location.pathname || '/';\n                        }}\n                      >\n                        <Icon icon=\"exit\" />\n                        <span>\n                          <Trans>Log out…</Trans>\n                        </span>\n                      </MenuConfirm>\n                      {!!account?.createdAt && (\n                        <div class=\"footer\">\n                          <Icon icon=\"account-add\" />\n                          <span>\n                            <Trans>\n                              Connected on {niceDateTime(account.createdAt)} (\n                              <RelativeTime datetime={account.createdAt} />)\n                            </Trans>\n                          </span>\n                        </div>\n                      )}\n                    </Menu2>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n          <p>\n            <Link to=\"/login\" class=\"button plain2\" onClick={onClose}>\n              <Icon icon=\"plus\" />{' '}\n              <span>\n                <Trans>Add an existing account</Trans>\n              </span>\n            </Link>\n          </p>\n          {moreThanOneAccount && (\n            <p>\n              <small>\n                <Trans>\n                  Note: <i>Default</i> account will always be used for first\n                  load. Switched accounts will persist during the session.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Accounts;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","import { useLingui } from '@lingui/react';\nimport { useMemo } from 'preact/hooks';\n\nimport { CATALOGS, DEFAULT_LANG, DEV_LOCALES, LOCALES } from '../locales';\nimport { activateLang } from '../utils/lang';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport store from '../utils/store';\n\nconst regionMaps = {\n  'zh-CN': 'zh-Hans',\n  'zh-TW': 'zh-Hant',\n  'pt-BR': 'pt-BR',\n};\n\nexport default function LangSelector() {\n  const { i18n } = useLingui();\n\n  // Sorted on render, so the order won't suddenly change based on current locale\n  const populatedLocales = useMemo(() => {\n    return LOCALES.map((lang) => {\n      // Don't need regions for now, it makes text too noisy\n      // Wait till there's too many languages and there are regional clashes\n      const regionlessCode = regionMaps[lang] || lang.replace(/-[a-z]+$/i, '');\n\n      const native = localeCode2Text({\n        code: regionlessCode,\n        locale: lang,\n        fallback: CATALOGS.find((c) => c.code === lang)?.nativeName,\n      });\n\n      // Not used when rendering because it'll change based on current locale\n      // Only used for sorting on render\n      const _common = localeCode2Text({\n        code: regionlessCode,\n        locale: i18n.locale,\n        fallback: CATALOGS.find((c) => c.code === lang)?.name,\n      });\n\n      return {\n        code: lang,\n        regionlessCode,\n        _common,\n        native,\n      };\n    }).sort((a, b) => {\n      // Sort by common name\n      const order = a._common.localeCompare(b._common, i18n.locale);\n      if (order !== 0) return order;\n      // Sort by code (fallback)\n      if (a.code < b.code) return -1;\n      if (a.code > b.code) return 1;\n      return 0;\n    });\n  }, []);\n\n  return (\n    <label class=\"lang-selector\">\n      🌐{' '}\n      <select\n        class=\"small\"\n        value={i18n.locale || DEFAULT_LANG}\n        onChange={(e) => {\n          store.local.set('lang', e.target.value);\n          activateLang(e.target.value);\n        }}\n      >\n        {populatedLocales.map(({ code, regionlessCode, native }) => {\n          // Common name changes based on current locale\n          const common = localeCode2Text({\n            code: regionlessCode,\n            locale: i18n.locale,\n            fallback: CATALOGS.find((c) => c.code === code)?.name,\n          });\n          const showCommon = !!common && common !== native;\n          return (\n            <option\n              value={code}\n              data-regionless-code={regionlessCode}\n              key={code}\n            >\n              {showCommon ? `${native} - ${common}` : native}\n            </option>\n          );\n        })}\n        {(import.meta.env.DEV || import.meta.env.PHANPY_SHOW_DEV_LOCALES) && (\n          <optgroup label=\"🚧 Development (<50% translated)\">\n            {DEV_LOCALES.map((code) => {\n              if (code === 'pseudo-LOCALE') {\n                return (\n                  <>\n                    <hr />\n                    <option value={code} key={code}>\n                      Pseudolocalization (test)\n                    </option>\n                  </>\n                );\n              }\n              const nativeName = CATALOGS.find(\n                (c) => c.code === code,\n              )?.nativeName;\n              const completion = CATALOGS.find(\n                (c) => c.code === code,\n              )?.completion;\n              return (\n                <option value={code} key={code}>\n                  {nativeName || code} &lrm;[{completion}%]\n                </option>\n              );\n            })}\n          </optgroup>\n        )}\n      </select>\n    </label>\n  );\n}\n","// Utils for push notifications\nimport { api } from './api';\nimport { getVapidKey } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const vapidKey = getVapidKey();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const vapidKey = getVapidKey();\n    if (vapidKey) {\n      const { applicationServerKey } = subscription.options;\n      const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n      const applicationServerKeyStr = new Uint8Array(\n        applicationServerKey,\n      ).toString();\n      const sameKey = vapidKeyStr === applicationServerKeyStr;\n      if (sameKey) {\n        // Subscription didn't change\n      } else {\n        // Subscription changed\n        console.error('🔔 Subscription changed', {\n          vapidKeyStr,\n          applicationServerKeyStr,\n          sameKey,\n        });\n        // Unsubscribe since backend doesn't have a subscription\n        await subscription.unsubscribe();\n        throw new Error('Subscription key and vapid key changed');\n      }\n    } else {\n      console.warn('No vapidKey found');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const vapidKey = getVapidKey();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './settings.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport logo from '../assets/logo.svg';\n\nimport Icon from '../components/icon';\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport RelativeTime from '../components/relative-time';\nimport languages from '../data/translang-languages';\nimport { api, getPreferences, setPreferences } from '../utils/api';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport prettyBytes from '../utils/pretty-bytes';\nimport {\n  initSubscription,\n  isPushSupported,\n  removeSubscription,\n  updateSubscription,\n} from '../utils/push-notifications';\nimport { supportsNativeQuote } from '../utils/quote-utils';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getAPIVersions, getVapidKey } from '../utils/store-utils';\n\nconst DEFAULT_TEXT_SIZE = 16;\nconst TEXT_SIZES = [14, 15, 16, 17, 18, 19, 20];\nconst {\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_TRANSLANG_INSTANCES: TRANSLANG_INSTANCES,\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nconst targetLanguages = Object.entries(languages.tl).map(([code, name]) => ({\n  code,\n  name,\n}));\n\nconst TRANSLATION_API_NAME = 'TransLang API';\n\nfunction Settings({ onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const currentTheme = store.local.get('theme') || 'auto';\n  const themeFormRef = useRef();\n  const targetLanguage =\n    snapStates.settings.contentTranslationTargetLanguage || null;\n  const systemTargetLanguage = getTranslateTargetLanguage();\n  const systemTargetLanguageText = localeCode2Text(systemTargetLanguage);\n  const currentTextSize = store.local.get('textSize') || DEFAULT_TEXT_SIZE;\n\n  const [prefs, setPrefs] = useState(getPreferences());\n  const { masto, authenticated, instance } = api();\n  // Get preferences every time Settings is opened\n  // NOTE: Disabled for now because I don't expect this to change often. Also for some reason, the /api/v1/preferences endpoint is cached for a while and return old prefs if refresh immediately after changing them.\n  // useEffect(() => {\n  //   const { masto } = api();\n  //   (async () => {\n  //     try {\n  //       const preferences = await masto.v1.preferences.fetch();\n  //       setPrefs(preferences);\n  //       store.account.set('preferences', preferences);\n  //     } catch (e) {\n  //       // Silently fail\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  const [expTabBarV2, setExpTabBarV2] = useState(\n    store.local.get('experiments-tabBarV2') ?? false,\n  );\n\n  const disableQuotePolicy = prefs['posting:default:visibility'] === 'private';\n\n  return (\n    <div\n      id=\"settings-container\"\n      class=\"sheet\"\n      tabIndex=\"-1\"\n      style={{\n        '--current-text-size': `${currentTextSize}px`,\n      }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Settings</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul>\n            <li>\n              <div>\n                <label>\n                  <Trans>Appearance</Trans>\n                </label>\n              </div>\n              <div>\n                <form\n                  ref={themeFormRef}\n                  onInput={(e) => {\n                    console.log(e);\n                    e.preventDefault();\n                    const formData = new FormData(themeFormRef.current);\n                    const theme = formData.get('theme');\n                    const html = document.documentElement;\n\n                    if (theme === 'auto') {\n                      html.classList.remove('is-light', 'is-dark');\n\n                      // Disable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = '';\n                      }\n                      // Enable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = 'theme-color';\n                      });\n                    } else {\n                      html.classList.toggle('is-light', theme === 'light');\n                      html.classList.toggle('is-dark', theme === 'dark');\n\n                      // Enable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = 'theme-color';\n                        $manualMeta.content =\n                          theme === 'light'\n                            ? $manualMeta.dataset.themeLightColor\n                            : $manualMeta.dataset.themeDarkColor;\n                      }\n                      // Disable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = '';\n                      });\n                    }\n                    document\n                      .querySelector('meta[name=\"color-scheme\"]')\n                      .setAttribute(\n                        'content',\n                        theme === 'auto' ? 'light dark' : theme,\n                      );\n\n                    if (theme === 'auto') {\n                      store.local.del('theme');\n                    } else {\n                      store.local.set('theme', theme);\n                    }\n                  }}\n                >\n                  <div class=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"light\"\n                        defaultChecked={currentTheme === 'light'}\n                      />\n                      <span>\n                        <Trans>Light</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"dark\"\n                        defaultChecked={currentTheme === 'dark'}\n                      />\n                      <span>\n                        <Trans>Dark</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"auto\"\n                        defaultChecked={\n                          currentTheme !== 'light' && currentTheme !== 'dark'\n                        }\n                      />\n                      <span>\n                        <Trans>Auto</Trans>\n                      </span>\n                    </label>\n                  </div>\n                </form>\n              </div>\n            </li>\n            <li>\n              <div>\n                <label>\n                  <Trans>Text size</Trans>\n                </label>\n              </div>\n              <div class=\"range-group\">\n                <span style={{ fontSize: TEXT_SIZES[0] }}>\n                  <Trans comment=\"Preview of one character, in smallest size\">\n                    A\n                  </Trans>\n                </span>{' '}\n                <input\n                  type=\"range\"\n                  min={TEXT_SIZES[0]}\n                  max={TEXT_SIZES[TEXT_SIZES.length - 1]}\n                  step=\"1\"\n                  value={currentTextSize}\n                  list=\"sizes\"\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value, 10);\n                    const html = document.documentElement;\n                    // set CSS variable\n                    html.style.setProperty('--text-size', `${value}px`);\n                    // save to local storage\n                    if (value === DEFAULT_TEXT_SIZE) {\n                      store.local.del('textSize');\n                    } else {\n                      store.local.set('textSize', e.target.value);\n                    }\n                  }}\n                />{' '}\n                <span style={{ fontSize: TEXT_SIZES[TEXT_SIZES.length - 1] }}>\n                  <Trans comment=\"Preview of one character, in largest size\">\n                    A\n                  </Trans>\n                </span>\n                <datalist id=\"sizes\">\n                  {TEXT_SIZES.map((size) => (\n                    <option value={size} />\n                  ))}\n                </datalist>\n              </div>\n            </li>\n            <li>\n              <span>\n                <label>\n                  <Trans>Display language</Trans>\n                </label>\n                <br />\n                <small>\n                  <a\n                    href=\"https://crowdin.com/project/phanpy\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    <Trans>Volunteer translations</Trans>\n                  </a>\n                </small>\n              </span>\n              <LangSelector />\n            </li>\n          </ul>\n        </section>\n        {authenticated && (\n          <>\n            <h3>\n              <Trans>Posting</Trans>\n            </h3>\n            <section>\n              <ul>\n                <li>\n                  <div>\n                    <label for=\"posting-privacy-field\">\n                      <Trans>Default visibility</Trans>{' '}\n                      <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />\n                    </label>\n                  </div>\n                  <div>\n                    <select\n                      id=\"posting-privacy-field\"\n                      value={prefs['posting:default:visibility'] || 'public'}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        (async () => {\n                          try {\n                            await masto.v1.accounts.updateCredentials({\n                              source: {\n                                privacy: value,\n                              },\n                            });\n                            const newPrefs = {\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            };\n                            if (value === 'private') {\n                              newPrefs['posting:default:quote_policy'] =\n                                'nobody';\n                            }\n                            setPrefs(newPrefs);\n                            setPreferences(newPrefs);\n                          } catch (e) {\n                            alert(t`Failed to update posting privacy`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <option value=\"public\">\n                        <Trans>Public</Trans>\n                      </option>\n                      <option value=\"unlisted\">\n                        <Trans>Quiet public</Trans>\n                      </option>\n                      <option value=\"private\">\n                        <Trans>Followers</Trans>\n                      </option>\n                    </select>\n                  </div>\n                </li>\n                {supportsNativeQuote() && (\n                  <li>\n                    <div>\n                      <label for=\"posting-quote-policy-field\">\n                        <Trans>Quote settings</Trans>{' '}\n                        <Icon\n                          icon=\"cloud\"\n                          alt={t`Synced`}\n                          class=\"synced-icon\"\n                        />\n                      </label>\n                    </div>\n                    <div>\n                      <select\n                        id=\"posting-quote-policy-field\"\n                        value={\n                          prefs['posting:default:quote_policy'] ||\n                          disableQuotePolicy\n                            ? 'nobody'\n                            : 'public'\n                        }\n                        disabled={disableQuotePolicy}\n                        onChange={(e) => {\n                          const { value } = e.target;\n                          (async () => {\n                            try {\n                              await masto.v1.accounts.updateCredentials({\n                                source: {\n                                  quote_policy: value,\n                                },\n                              });\n                              setPrefs({\n                                ...prefs,\n                                'posting:default:quote_policy': value,\n                              });\n                              setPreferences({\n                                ...prefs,\n                                'posting:default:quote_policy': value,\n                              });\n                            } catch (e) {\n                              alert(t`Failed to update quote settings`);\n                              console.error(e);\n                            }\n                          })();\n                        }}\n                      >\n                        <option value=\"public\" disabled={disableQuotePolicy}>\n                          <Trans>Anyone can quote</Trans>\n                        </option>\n                        <option value=\"followers\" disabled={disableQuotePolicy}>\n                          <Trans>Your followers can quote</Trans>\n                        </option>\n                        <option value=\"nobody\">\n                          <Trans>Only you can quote</Trans>\n                        </option>\n                      </select>\n                    </div>\n                  </li>\n                )}\n              </ul>\n            </section>\n            <p class=\"section-postnote\">\n              <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />{' '}\n              <small>\n                <Trans>\n                  Synced to your instance server's settings.{' '}\n                  <a\n                    href={`https://${instance}/`}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    Go to your instance ({instance}) for more settings.\n                  </a>\n                </Trans>\n              </small>\n            </p>\n          </>\n        )}\n        <h3>\n          <Trans>Experiments</Trans>\n        </h3>\n        <section>\n          <ul>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.autoRefresh}\n                  onChange={(e) => {\n                    states.settings.autoRefresh = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Auto refresh timeline posts</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.boostsCarousel}\n                  onChange={(e) => {\n                    states.settings.boostsCarousel = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Boosts carousel</Trans>\n              </label>\n            </li>\n            {!!TRANSLANG_INSTANCES && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.contentTranslation}\n                    onChange={(e) => {\n                      const { checked } = e.target;\n                      states.settings.contentTranslation = checked;\n                      if (!checked) {\n                        states.settings.contentTranslationTargetLanguage = null;\n                      }\n                    }}\n                  />{' '}\n                  <Trans>Post translation</Trans>\n                </label>\n                <div\n                  class={`sub-section ${\n                    !snapStates.settings.contentTranslation\n                      ? 'more-insignificant'\n                      : ''\n                  }`}\n                >\n                  <div>\n                    <label>\n                      <Trans>Translate to </Trans>{' '}\n                      <select\n                        value={targetLanguage || ''}\n                        disabled={!snapStates.settings.contentTranslation}\n                        style={{ width: '10em' }}\n                        onChange={(e) => {\n                          states.settings.contentTranslationTargetLanguage =\n                            e.target.value || null;\n                        }}\n                      >\n                        <option value=\"\">\n                          <Trans>\n                            System language ({systemTargetLanguageText})\n                          </Trans>\n                        </option>\n                        <option disabled>──────────</option>\n                        {targetLanguages.map((lang) => {\n                          const common = localeCode2Text({\n                            code: lang.code,\n                            fallback: lang.name,\n                          });\n                          const native = localeCode2Text({\n                            code: lang.code,\n                            locale: lang.code,\n                          });\n                          const showCommon = native && common !== native;\n                          return (\n                            <option value={lang.code}>\n                              {showCommon ? `${native} - ${common}` : common}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    </label>\n                  </div>\n                  <hr />\n                  <div class=\"checkbox-fieldset\">\n                    <Plural\n                      value={\n                        snapStates.settings.contentTranslationHideLanguages\n                          .length\n                      }\n                      _0={`Hide \"Translate\" button for:`}\n                      other={`Hide \"Translate\" button for (#):`}\n                    />\n                    <div class=\"checkbox-fields\">\n                      {targetLanguages.map((lang) => {\n                        const common = localeCode2Text({\n                          code: lang.code,\n                          fallback: lang.name,\n                        });\n                        const native = localeCode2Text({\n                          code: lang.code,\n                          locale: lang.code,\n                        });\n                        const showCommon = native && common !== native;\n                        return (\n                          <label>\n                            <input\n                              type=\"checkbox\"\n                              checked={snapStates.settings.contentTranslationHideLanguages.includes(\n                                lang.code,\n                              )}\n                              onChange={(e) => {\n                                const { checked } = e.target;\n                                if (checked) {\n                                  states.settings.contentTranslationHideLanguages.push(\n                                    lang.code,\n                                  );\n                                } else {\n                                  states.settings.contentTranslationHideLanguages =\n                                    snapStates.settings.contentTranslationHideLanguages.filter(\n                                      (code) => code !== lang.code,\n                                    );\n                                }\n                              }}\n                            />{' '}\n                            {showCommon ? (\n                              <span>\n                                {native}{' '}\n                                <span class=\"insignificant ib\">- {common}</span>\n                              </span>\n                            ) : (\n                              common\n                            )}\n                          </label>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  <p class=\"insignificant\">\n                    <small>\n                      <Trans>\n                        Note: This feature uses external translation services,\n                        powered by{' '}\n                        <a\n                          href=\"https://github.com/cheeaun/translang-api\"\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                        >\n                          {TRANSLATION_API_NAME}\n                        </a>\n                        .\n                      </Trans>\n                    </small>\n                  </p>\n                  <hr />\n                  <div>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        checked={\n                          snapStates.settings.contentTranslationAutoInline\n                        }\n                        disabled={!snapStates.settings.contentTranslation}\n                        onChange={(e) => {\n                          states.settings.contentTranslationAutoInline =\n                            e.target.checked;\n                        }}\n                      />{' '}\n                      <Trans>Auto inline translation</Trans>\n                    </label>\n                    <p class=\"insignificant\">\n                      <small>\n                        <Trans>\n                          Automatically show translation for posts in timeline.\n                          Only works for <b>short</b> posts without content\n                          warning, media and poll.\n                        </Trans>\n                      </small>\n                    </p>\n                  </div>\n                </div>\n              </li>\n            )}\n            {!!GIPHY_API_KEY && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.composerGIFPicker}\n                    onChange={(e) => {\n                      states.settings.composerGIFPicker = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>GIF Picker for composer</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external GIF search service,\n                      powered by{' '}\n                      <a\n                        href=\"https://developers.giphy.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        GIPHY\n                      </a>\n                      . G-rated (suitable for viewing by all ages), tracking\n                      parameters are stripped, referrer information is omitted\n                      from requests, but search queries and IP address\n                      information will still reach their servers.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {!!IMG_ALT_API_URL && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.mediaAltGenerator}\n                    onChange={(e) => {\n                      states.settings.mediaAltGenerator = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Image description generator</Trans>{' '}\n                  <Icon icon=\"sparkles2\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Only for new images while composing new posts.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external AI service, powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/img-alt-api\"\n                        target=\"_blank\"\n                        rel=\"noopener\"\n                      >\n                        img-alt-api\n                      </a>\n                      . May not work well. Only for images and in English.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && getAPIVersions()?.mastodon >= 2 && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.groupedNotificationsAlpha}\n                    onChange={(e) => {\n                      states.settings.groupedNotificationsAlpha =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Server-side grouped notifications</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Alpha-stage feature. Potentially improved grouping window\n                      but basic grouping logic.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      snapStates.settings.shortcutSettingsCloudImportExport\n                    }\n                    onChange={(e) => {\n                      states.settings.shortcutSettingsCloudImportExport =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>\"Cloud\" import/export for shortcuts settings</Trans>{' '}\n                  <Icon icon=\"cloud\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      ⚠️⚠️⚠️ Very experimental.\n                      <br />\n                      Stored in your own profile’s notes. Profile (private)\n                      notes are mainly used for other profiles, and hidden for\n                      own profile.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses currently-logged-in instance\n                      server API.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.cloakMode}\n                  onChange={(e) => {\n                    states.settings.cloakMode = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>\n                  Cloak mode{' '}\n                  <span class=\"insignificant\">\n                    (<samp>Text</samp> → <samp>████</samp>)\n                  </span>\n                </Trans>\n              </label>\n              <div class=\"sub-section insignificant\">\n                <small>\n                  <Trans>\n                    Replace text as blocks, useful when taking screenshots, for\n                    privacy reasons.\n                  </Trans>\n                </small>\n              </div>\n            </li>\n            {authenticated && (\n              <li>\n                <button\n                  type=\"button\"\n                  class=\"light\"\n                  onClick={() => {\n                    states.showDrafts = true;\n                    states.showSettings = false;\n                  }}\n                >\n                  <Trans>Unsent drafts</Trans>\n                </button>\n              </li>\n            )}\n          </ul>\n        </section>\n        {authenticated && <PushNotificationsSection onClose={onClose} />}\n        <h3>\n          <Trans>About</Trans>\n        </h3>\n        <section>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 8,\n              lineHeight: 1.25,\n              alignItems: 'center',\n              marginTop: 8,\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"64\"\n              height=\"64\"\n              style={{\n                aspectRatio: '1/1',\n                verticalAlign: 'middle',\n                background: '#b7cdf9',\n                borderRadius: 12,\n              }}\n            />\n            <div>\n              <b>Phanpy</b>{' '}\n              <a\n                href=\"https://hachyderm.io/@phanpy\"\n                // target=\"_blank\"\n                rel=\"noopener\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.showAccount = 'phanpy@hachyderm.io';\n                }}\n              >\n                @phanpy\n              </a>\n              <br />\n              <Trans>\n                <a\n                  href=\"https://github.com/cheeaun/phanpy\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  Built\n                </a>{' '}\n                by{' '}\n                <a\n                  href=\"https://mastodon.social/@cheeaun\"\n                  // target=\"_blank\"\n                  rel=\"noopener\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = 'cheeaun@mastodon.social';\n                  }}\n                >\n                  @cheeaun\n                </a>\n              </Trans>\n            </div>\n          </div>\n          <p>\n            <a\n              href=\"https://github.com/sponsors/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Sponsor</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>Donate</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://patreon.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              Patreon\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://github.com/cheeaun/phanpy/blob/main/CHANGELOG.md\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Trans>What's new</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\" rel=\"noopener\">\n              <Trans>Privacy Policy</Trans>\n            </a>\n          </p>\n          {__BUILD_TIME__ && (\n            <p>\n              {WEBSITE && (\n                <>\n                  <Trans>\n                    <span class=\"insignificant\">Site:</span>{' '}\n                    {WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')}\n                  </Trans>\n                  <br />\n                </>\n              )}\n              <Trans>\n                <span class=\"insignificant\">Version:</span>{' '}\n                <input\n                  type=\"text\"\n                  class=\"version-string\"\n                  readOnly\n                  size=\"18\" // Manually calculated here\n                  value={`${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n                    __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n                  }`}\n                  onClick={(e) => {\n                    e.target.select();\n                    // Copy to clipboard\n                    try {\n                      navigator.clipboard.writeText(e.target.value);\n                      showToast(t`Version string copied`);\n                    } catch (e) {\n                      console.warn(e);\n                      showToast(t`Unable to copy version string`);\n                    }\n                  }}\n                />{' '}\n                {!__FAKE_COMMIT_HASH__ && (\n                  <span class=\"ib insignificant\">\n                    (\n                    <a\n                      href={`https://github.com/cheeaun/phanpy/commit/${__COMMIT_HASH__}`}\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <RelativeTime datetime={new Date(__BUILD_TIME__)} />\n                    </a>\n                    )\n                  </span>\n                )}\n              </Trans>\n            </p>\n          )}\n        </section>\n        {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n          <details class=\"debug-info\">\n            <summary></summary>\n            <p class=\"side\">\n              <Link\n                to=\"/_sandbox\"\n                onClick={onClose}\n                class=\"button plain6 small\"\n              >\n                Sandbox\n              </Link>\n            </p>\n            <p>Debugging</p>\n            <p>\n              <b>Vapid key</b>: {getVapidKey()}\n            </p>\n            {__BENCH_RESULTS?.size > 0 && (\n              <ul>\n                {Array.from(__BENCH_RESULTS.entries()).map(\n                  ([name, duration]) => (\n                    <li>\n                      <b>{name}</b>: {duration}ms\n                    </li>\n                  ),\n                )}\n              </ul>\n            )}\n            <p>Service Worker Cache</p>\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesKeys())}\n            >\n              Show keys count\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={async () => alert(await getCachesSize())}\n            >\n              Show cache size\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                const key = prompt('Enter cache key');\n                if (!key) return;\n                try {\n                  clearCacheKey(key);\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear cache key\n            </button>{' '}\n            <button\n              type=\"button\"\n              class=\"plain2 small\"\n              onClick={() => {\n                try {\n                  clearCaches();\n                } catch (e) {\n                  alert(e);\n                }\n              }}\n            >\n              Clear all caches\n            </button>\n            <p>Temporary Experiments</p>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={expTabBarV2}\n                onChange={(e) => {\n                  const { checked } = e.target;\n                  document.body.classList.toggle('exp-tab-bar-v2', checked);\n                  setExpTabBarV2(checked);\n                  if (checked) {\n                    store.local.set('experiments-tabBarV2', true);\n                  } else {\n                    store.local.del('experiments-tabBarV2');\n                  }\n                }}\n              />{' '}\n              Tab bar v2\n            </label>\n          </details>\n        )}\n      </main>\n    </div>\n  );\n}\n\nasync function getCachesKeys() {\n  const keys = await caches.keys();\n  const total = {};\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    total[key] = k.length;\n  }\n  return total;\n}\n\nasync function getCachesSize() {\n  const keys = await caches.keys();\n  let total = {};\n  let TOTAL = 0;\n  for (const key of keys) {\n    const cache = await caches.open(key);\n    const k = await cache.keys();\n    for (const item of k) {\n      try {\n        const response = await cache.match(item);\n        const blob = await response.blob();\n        total[key] = (total[key] || 0) + blob.size;\n        TOTAL += blob.size;\n      } catch (e) {\n        alert('Failed to get cache size for ' + item);\n        alert(e);\n      }\n    }\n  }\n  return {\n    ...Object.fromEntries(\n      Object.entries(total).map(([k, v]) => [k, prettyBytes(v)]),\n    ),\n    TOTAL: prettyBytes(TOTAL),\n  };\n}\n\nfunction clearCacheKey(key) {\n  return caches.delete(key);\n}\n\nasync function clearCaches() {\n  const keys = await caches.keys();\n  for (const key of keys) {\n    await caches.delete(key);\n  }\n}\n\nfunction PushNotificationsSection({ onClose }) {\n  const { t } = useLingui();\n  if (!isPushSupported()) return null;\n\n  const { instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const pushFormRef = useRef();\n  const [allowNotifications, setAllowNotifications] = useState(false);\n  const [needRelogin, setNeedRelogin] = useState(false);\n  const previousPolicyRef = useRef();\n  useEffect(() => {\n    (async () => {\n      setUIState('loading');\n      try {\n        const { subscription, backendSubscription } = await initSubscription();\n        if (\n          backendSubscription?.policy &&\n          backendSubscription.policy !== 'none'\n        ) {\n          setAllowNotifications(true);\n          const { alerts, policy } = backendSubscription;\n          console.log('backendSubscription', backendSubscription);\n          previousPolicyRef.current = policy;\n          const { elements } = pushFormRef.current;\n          const policyEl = elements.namedItem('policy');\n          if (policyEl) policyEl.value = policy;\n          // alerts is {}, iterate it\n          Object.entries(alerts).forEach(([alert, value]) => {\n            const el = elements.namedItem(alert);\n            if (el?.type === 'checkbox') {\n              el.checked = !!value;\n            }\n          });\n        }\n        setUIState('default');\n      } catch (err) {\n        console.warn(err);\n        if (/outside.*authorized/i.test(err.message)) {\n          setNeedRelogin(true);\n        } else {\n          alert(err?.message || err);\n        }\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const isLoading = uiState === 'loading';\n\n  return (\n    <form\n      ref={pushFormRef}\n      onChange={() => {\n        setTimeout(() => {\n          const values = Object.fromEntries(new FormData(pushFormRef.current));\n          const allowNotifications = !!values['policy-allow'];\n          const params = {\n            data: {\n              policy: values.policy,\n              alerts: {\n                mention: !!values.mention,\n                favourite: !!values.favourite,\n                reblog: !!values.reblog,\n                follow: !!values.follow,\n                follow_request: !!values.followRequest,\n                poll: !!values.poll,\n                update: !!values.update,\n                status: !!values.status,\n              },\n            },\n          };\n\n          let alertsCount = 0;\n          // Remove false values from data.alerts\n          // API defaults to false anyway\n          Object.keys(params.data.alerts).forEach((key) => {\n            if (!params.data.alerts[key]) {\n              delete params.data.alerts[key];\n            } else {\n              alertsCount++;\n            }\n          });\n          const policyChanged =\n            previousPolicyRef.current !== params.data.policy;\n\n          console.log('PN Form', {\n            values,\n            allowNotifications: allowNotifications,\n            params,\n          });\n\n          if (allowNotifications && alertsCount > 0) {\n            if (policyChanged) {\n              console.debug('Policy changed.');\n              removeSubscription()\n                .then(() => {\n                  updateSubscription(params);\n                })\n                .catch((err) => {\n                  console.warn(err);\n                  alert(t`Failed to update subscription. Please try again.`);\n                });\n            } else {\n              updateSubscription(params).catch((err) => {\n                console.warn(err);\n                alert(t`Failed to update subscription. Please try again.`);\n              });\n            }\n          } else {\n            removeSubscription().catch((err) => {\n              console.warn(err);\n              alert(t`Failed to remove subscription. Please try again.`);\n            });\n          }\n        }, 100);\n      }}\n    >\n      <h3>\n        <Trans>Push Notifications (beta)</Trans>\n      </h3>\n      <section>\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"checkbox\"\n                disabled={isLoading || needRelogin}\n                name=\"policy-allow\"\n                checked={allowNotifications}\n                onChange={async (e) => {\n                  const { checked } = e.target;\n                  if (checked) {\n                    // Request permission\n                    const permission = await Notification.requestPermission();\n                    if (permission === 'granted') {\n                      setAllowNotifications(true);\n                    } else {\n                      setAllowNotifications(false);\n                      if (permission === 'denied') {\n                        alert(\n                          t`Push notifications are blocked. Please enable them in your browser settings.`,\n                        );\n                      }\n                    }\n                  } else {\n                    setAllowNotifications(false);\n                  }\n                }}\n              />{' '}\n              <Trans>\n                Allow from{' '}\n                <select\n                  name=\"policy\"\n                  disabled={isLoading || needRelogin || !allowNotifications}\n                >\n                  {[\n                    {\n                      value: 'all',\n                      label: t`anyone`,\n                    },\n                    {\n                      value: 'followed',\n                      label: t`people I follow`,\n                    },\n                    {\n                      value: 'follower',\n                      label: t`followers`,\n                    },\n                  ].map((type) => (\n                    <option value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </Trans>\n            </label>\n            <div\n              class=\"shazam-container no-animation\"\n              style={{\n                width: '100%',\n              }}\n              hidden={!allowNotifications}\n            >\n              <div class=\"shazam-container-inner\">\n                <div class=\"sub-section\">\n                  <ul>\n                    {[\n                      {\n                        value: 'mention',\n                        label: t`Mentions`,\n                      },\n                      {\n                        value: 'favourite',\n                        label: t`Likes`,\n                      },\n                      {\n                        value: 'reblog',\n                        label: t`Boosts`,\n                      },\n                      {\n                        value: 'follow',\n                        label: t`Follows`,\n                      },\n                      {\n                        value: 'followRequest',\n                        label: t`Follow requests`,\n                      },\n                      {\n                        value: 'poll',\n                        label: t`Polls`,\n                      },\n                      {\n                        value: 'update',\n                        label: t`Post edits`,\n                      },\n                      {\n                        value: 'status',\n                        label: t`New posts`,\n                      },\n                    ].map((alert) => (\n                      <li>\n                        <label>\n                          <input type=\"checkbox\" name={alert.value} />{' '}\n                          {alert.label}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {needRelogin && (\n              <div class=\"sub-section\">\n                <p>\n                  <Trans>\n                    Push permission was not granted since your last login.\n                    You'll need to{' '}\n                    <Link to={`/login?instance=${instance}`} onClick={onClose}>\n                      <b>log in</b> again to grant push permission\n                    </Link>\n                    .\n                  </Trans>\n                </p>\n              </div>\n            )}\n          </li>\n        </ul>\n      </section>\n      <p class=\"section-postnote\">\n        <small>\n          <Trans>\n            NOTE: Push notifications only work for <b>one account</b>.\n          </Trans>\n        </small>\n      </p>\n    </form>\n  );\n}\n\nexport default Settings;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus focused column\n      const focusedColumn = columns.querySelector('.deck-container.focus');\n      if (focusedColumn) {\n        focusedColumn.focus();\n      } else {\n        // Focus first column within viewport\n        const firstVisibleColumn = Array.from(\n          columns.querySelectorAll('.deck-container'),\n        ).find((column) => {\n          const columnRect = column.getBoundingClientRect();\n          return columnRect.left >= 0;\n        });\n        if (firstVisibleColumn) {\n          firstVisibleColumn.focus();\n        } else {\n          // Focus first column\n          columns.querySelector('.deck-container')?.focus?.();\n        }\n      }\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\n// Hook that runs a callback when the location changes\n// Won't run on the first render\n\nexport default function useLocationChange(fn) {\n  if (!fn) return;\n  const location = useLocation();\n  const currentLocationRef = useRef(location.pathname);\n  useEffect(() => {\n    // console.log('location', {\n    //   current: currentLocationRef.current,\n    //   next: location.pathname,\n    // });\n    if (\n      currentLocationRef.current &&\n      location.pathname !== currentLocationRef.current\n    ) {\n      fn?.();\n    }\n  }, [location.pathname, fn]);\n}\n","import { Trans } from '@lingui/react/macro';\nimport punycode from 'punycode/';\n\nfunction AccountHandleInfo({ acct, instance }) {\n  // acct = username or username@server\n  let [username, server] = acct.split('@');\n  if (!server) server = instance;\n  const encodedAcct = punycode.toASCII(acct);\n  return (\n    <div class=\"handle-info\">\n      <span class=\"handle-handle\" title={encodedAcct}>\n        <b class=\"handle-username\">{username}</b>\n        <span class=\"handle-at\">@</span>\n        <b class=\"handle-server\">{server}</b>\n      </span>\n      <div class=\"handle-legend\">\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon username\" /> <Trans>username</Trans>\n        </span>{' '}\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon server\" />{' '}\n          <Trans>server domain name</Trans>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountHandleInfo;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nconst SUPPORTED_IMAGE_FORMATS = [\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'image/webp',\n];\nconst SUPPORTED_IMAGE_FORMATS_STR = SUPPORTED_IMAGE_FORMATS.join(',');\n\nfunction FieldsAttributesRow({ name, value, disabled, index: i }) {\n  const [hasValue, setHasValue] = useState(!!value);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][name]`}\n          defaultValue={name}\n          disabled={disabled}\n          maxLength={255}\n          required={hasValue}\n          dir=\"auto\"\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][value]`}\n          defaultValue={value}\n          disabled={disabled}\n          maxLength={255}\n          onChange={(e) => setHasValue(!!e.currentTarget.value)}\n          dir=\"auto\"\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction EditProfileSheet({ onClose = () => {} }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('loading');\n  const [account, setAccount] = useState(null);\n  const [headerPreview, setHeaderPreview] = useState(null);\n  const [avatarPreview, setAvatarPreview] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await masto.v1.accounts.verifyCredentials();\n        setAccount(acc);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  console.log('EditProfileSheet', account);\n  const { displayName, source, avatar, header } = account || {};\n  const { note, fields } = source || {};\n  const fieldsAttributesRef = useRef(null);\n\n  const avatarMediaAttachments = [\n    ...(avatar ? [{ type: 'image', url: avatar }] : []),\n    ...(avatarPreview ? [{ type: 'image', url: avatarPreview }] : []),\n  ];\n  const headerMediaAttachments = [\n    ...(header ? [{ type: 'image', url: header }] : []),\n    ...(headerPreview ? [{ type: 'image', url: headerPreview }] : []),\n  ];\n\n  return (\n    <div class=\"sheet\" id=\"edit-profile-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>Edit profile</Trans>\n        </b>\n      </header>\n      <main>\n        {uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const header = formData.get('header');\n              const avatar = formData.get('avatar');\n              const displayName = formData.get('display_name');\n              const note = formData.get('note');\n              const fieldsAttributesFields =\n                fieldsAttributesRef.current.querySelectorAll(\n                  'input[name^=\"fields_attributes\"]',\n                );\n              const fieldsAttributes = [];\n              fieldsAttributesFields.forEach((field) => {\n                const name = field.name;\n                const [_, index, key] =\n                  name.match(/fields_attributes\\[(\\d+)\\]\\[(.+)\\]/) || [];\n                const value = field.value ? field.value.trim() : '';\n                if (index && key && value) {\n                  if (!fieldsAttributes[index]) fieldsAttributes[index] = {};\n                  fieldsAttributes[index][key] = value;\n                }\n              });\n              // Fill in the blanks\n              fieldsAttributes.forEach((field) => {\n                if (field.name && !field.value) {\n                  field.value = '';\n                }\n              });\n\n              (async () => {\n                try {\n                  const newAccount = await masto.v1.accounts.updateCredentials({\n                    header,\n                    avatar,\n                    displayName,\n                    note,\n                    fieldsAttributes,\n                  });\n                  console.log('updated account', newAccount);\n                  onClose?.({\n                    state: 'success',\n                    account: newAccount,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(e?.message || t`Unable to update profile.`);\n                }\n              })();\n            }}\n          >\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Header picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"header\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setHeaderPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {header ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: headerMediaAttachments,\n                        mediaIndex: 0,\n                      };\n                    }}\n                  >\n                    <img src={header} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {headerPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: headerMediaAttachments,\n                          mediaIndex: 1,\n                        };\n                      }}\n                    >\n                      <img src={headerPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <div class=\"edit-profile-media-container\">\n              <label>\n                <Trans>Profile picture</Trans>{' '}\n                <input\n                  type=\"file\"\n                  name=\"avatar\"\n                  accept={SUPPORTED_IMAGE_FORMATS_STR}\n                  onChange={(e) => {\n                    const file = e.target.files[0];\n                    if (file) {\n                      const blob = URL.createObjectURL(file);\n                      setAvatarPreview(blob);\n                    }\n                  }}\n                />\n              </label>\n              <div class=\"edit-profile-media-field\">\n                {avatar ? (\n                  <div\n                    class=\"edit-media\"\n                    tabIndex=\"0\"\n                    onClick={() => {\n                      states.showMediaModal = {\n                        mediaAttachments: avatarMediaAttachments,\n                        mediaIndex: 0,\n                      };\n                    }}\n                  >\n                    <img src={avatar} alt=\"\" />\n                  </div>\n                ) : (\n                  <div class=\"edit-media\"></div>\n                )}\n                {avatarPreview && (\n                  <>\n                    <Icon icon=\"arrow-right\" />\n                    <div\n                      class=\"edit-media\"\n                      tabIndex=\"0\"\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: avatarMediaAttachments,\n                          mediaIndex: 1,\n                        };\n                      }}\n                    >\n                      <img src={avatarPreview} alt=\"\" />\n                    </div>\n                  </>\n                )}\n              </div>\n            </div>\n            <p>\n              <label>\n                <Trans>Name</Trans>{' '}\n                <input\n                  type=\"text\"\n                  name=\"display_name\"\n                  defaultValue={displayName}\n                  maxLength={30}\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            <p>\n              <label>\n                <Trans>Bio</Trans>\n                <textarea\n                  defaultValue={note}\n                  name=\"note\"\n                  maxLength={500}\n                  rows=\"5\"\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            {/* Table for fields; name and values are in fields, min 4 rows */}\n            <p>\n              <Trans>Extra fields</Trans>\n            </p>\n            <table ref={fieldsAttributesRef}>\n              <thead>\n                <tr>\n                  <th>\n                    <Trans>Label</Trans>\n                  </th>\n                  <th>\n                    <Trans>Content</Trans>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from({ length: Math.max(4, fields.length) }).map(\n                  (_, i) => {\n                    const { name = '', value = '' } = fields[i] || {};\n                    return (\n                      <FieldsAttributesRow\n                        key={i}\n                        name={name}\n                        value={value}\n                        index={i}\n                        disabled={uiState === 'loading'}\n                      />\n                    );\n                  },\n                )}\n              </tbody>\n            </table>\n            <footer>\n              <button\n                type=\"button\"\n                class=\"light\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  onClose?.();\n                }}\n              >\n                <Trans>Cancel</Trans>\n              </button>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                <Trans>Save</Trans>\n              </button>\n            </footer>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default EditProfileSheet;\n","import { Trans } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport Loader from './loader';\n\nconst ENDORSEMENTS_LIMIT = 80;\n\nfunction Endorsements({\n  accountID: id,\n  info,\n  open = false,\n  onlyOpenIfHasEndorsements = false,\n}) {\n  const { masto } = api();\n  const endorsementsContainer = useRef();\n  const [endorsementsUIState, setEndorsementsUIState] = useState('default');\n  const [endorsements, setEndorsements] = useState([]);\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  useEffect(() => {\n    if (!supports('@mastodon/endorsements')) return;\n    if (!open) return;\n    (async () => {\n      setEndorsementsUIState('loading');\n      try {\n        const accounts = await masto.v1.accounts.$select(id).endorsements.list({\n          limit: ENDORSEMENTS_LIMIT,\n        });\n        console.log({ endorsements: accounts });\n        if (!accounts.length) {\n          setEndorsementsUIState('default');\n          return;\n        }\n        setEndorsements(accounts);\n        setEndorsementsUIState('default');\n        setTimeout(() => {\n          endorsementsContainer.current.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n          });\n        }, 300);\n\n        const relationships = await fetchRelationships(\n          accounts,\n          relationshipsMap,\n        );\n        if (relationships) {\n          setRelationshipsMap(relationships);\n        }\n      } catch (e) {\n        console.error(e);\n        setEndorsementsUIState('error');\n      }\n    })();\n  }, [open, id]);\n\n  const reallyOpen = onlyOpenIfHasEndorsements\n    ? open && endorsements.length > 0\n    : open;\n\n  if (!reallyOpen) return null;\n\n  return (\n    <div class=\"shazam-container\">\n      <div class=\"shazam-container-inner\">\n        <div class=\"endorsements-container\" ref={endorsementsContainer}>\n          <h3>\n            <Trans>Profiles featured by @{info.username}</Trans>\n          </h3>\n          {endorsementsUIState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : endorsements.length > 0 ? (\n            <ul\n              class={`endorsements ${\n                endorsements.length > 10 ? 'expanded' : ''\n              }`}\n            >\n              {endorsements.map((account) => (\n                <li>\n                  <AccountBlock\n                    key={account.id}\n                    account={account}\n                    showStats\n                    avatarSize=\"xxl\"\n                    relationship={relationshipsMap[account.id]}\n                  />\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p class=\"ui-state insignificant\">\n              <Trans>No featured profiles.</Trans>\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Endorsements;\n","import { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\n\nexport const fetchLists = pmem(\n  async () => {\n    const { masto } = api();\n    const lists = await masto.v1.lists.list();\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n\n    if (lists.length) {\n      setTimeout(() => {\n        // Save to local storage, with saved timestamp\n        store.account.set('lists', {\n          lists,\n          updatedAt: Date.now(),\n        });\n      }, 1);\n    }\n\n    return lists;\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getLists() {\n  try {\n    const { lists, updatedAt } = store.account.get('lists') || {};\n    if (!lists?.length) return await fetchLists();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchLists();\n      return lists;\n    }\n    return lists;\n  } catch (e) {\n    return [];\n  }\n}\n\nexport const fetchList = pmem(\n  (id) => {\n    const { masto } = api();\n    return masto.v1.lists.$select(id).fetch();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getList(id) {\n  const { lists } = store.account.get('lists') || {};\n  console.log({ lists });\n  if (lists?.length) {\n    const theList = lists.find((l) => l.id === id);\n    if (theList) return theList;\n  }\n  try {\n    return fetchList(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getListTitle(id) {\n  const list = await getList(id);\n  return list?.title || '';\n}\n\nexport function addListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    lists.push(list);\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n    store.account.set('lists', {\n      lists,\n      updatedAt: Date.now(),\n    });\n  }\n}\n\nexport function updateListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === list.id);\n    if (index !== -1) {\n      lists[index] = list;\n      lists.sort((a, b) => a.title.localeCompare(b.title));\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n\nexport function deleteListStore(listID) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === listID);\n    if (index !== -1) {\n      lists.splice(index, 1);\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n","import './list-exclusive-badge.css';\n\nimport { useLingui } from '@lingui/react/macro';\n\nimport Icon from './icon';\n\nfunction ListExclusiveBadge({ insignificant }) {\n  const { t } = useLingui();\n  return (\n    <Icon\n      icon=\"filter\"\n      size=\"xs\"\n      class={`list-exclusive-badge ${insignificant ? 'insignificant' : ''}`}\n      title={t`Posts on this list are hidden from Home/Following`}\n    />\n  );\n}\n\nexport default ListExclusiveBadge;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { addListStore, deleteListStore, updateListStore } from '../utils/lists';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport ListExclusiveBadge from './list-exclusive-badge';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive =\n    supports('@mastodon/list-exclusive') ||\n    supports('@gotosocial/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? t`Edit list` : t`New list`}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n\n                setTimeout(() => {\n                  if (editMode) {\n                    updateListStore(listResult);\n                  } else {\n                    addListStore(listResult);\n                  }\n                }, 1);\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit list.`\n                    : t`Unable to create list.`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              <Trans>Name</Trans>{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">\n                <Trans>Show replies to list members</Trans>\n              </option>\n              <option value=\"followed\">\n                <Trans>Show replies to people I follow</Trans>\n              </option>\n              <option value=\"none\">\n                <Trans>Don't show replies</Trans>\n              </option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                <ListExclusiveBadge insignificant />{' '}\n                <Trans>Hide posts on this list from Home/Following</Trans>\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? t`Save` : t`Create`}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this list?`}\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                      setTimeout(() => {\n                        deleteListStore(list.id);\n                      }, 1);\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete list.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\n\nimport Icon from './icon';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport Modal from './modal';\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await getLists();\n        setLists(lists);\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Add/Remove from Lists</Trans>\n        </h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? t`Unable to remove from list.`\n                              : t`Unable to add to list.`,\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" alt=\"☑️\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Unable to load lists.</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state\">\n            <Trans>No lists.</Trans>\n          </p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" />{' '}\n          <span>\n            <Trans>New list</Trans>\n          </span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default AddRemoveListsSheet;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>\n            Private note about{' '}\n            <span class=\"bidi-isolate\">\n              @{account?.username || account?.acct}\n            </span>\n          </Trans>\n        </b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || t`Unable to update private note.`);\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n            dir=\"auto\"\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              <Trans>Cancel</Trans>\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                <Trans>Save &amp; close</Trans>\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default PrivateNoteSheet;\n","import { Trans, useLingui } from '@lingui/react/macro';\n\nimport getHTMLText from '../utils/getHTMLText';\n\nimport Icon from './icon';\nimport TranslationBlock from './translation-block';\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const { t } = useLingui();\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Translated Bio</Trans>\n        </h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nexport default TranslatedBioSheet;\n","import { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\n\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport niceDateTime from '../utils/nice-date-time';\nimport showCompose from '../utils/show-compose';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport { getCurrentAccountID, updateAccount } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AddRemoveListsSheet from './add-remove-lists-sheet';\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport PrivateNoteSheet from './private-note-sheet';\nimport SubMenu2 from './submenu2';\nimport TranslatedBioSheet from './translated-bio-sheet';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  60 * 60 * 24 * 30, // 30 days\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: msg`Forever`,\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n  2592_000: i18nDuration(30, 'day'),\n};\n\nfunction RelatedActions({\n  info,\n  instance,\n  standalone,\n  authenticated,\n  onRelationshipChange = () => {},\n  setShowEditProfile = () => {},\n  showEndorsements = false,\n  renderEndorsements = false,\n  setRenderEndorsements = () => {},\n}) {\n  if (!info) return null;\n  const { _, t } = useLingui();\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  const acctWithInstance = acct.includes('@') ? acct : `${acct}@${instance}`;\n\n  const supportsEndorsements = supports('@mastodon/endorsements');\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = getCurrentAccountID();\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.list({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        // if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">\n              <Trans>Follows you</Trans>\n            </span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              <Trans>\n                Last post:{' '}\n                <span class=\"ib\">\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </span>\n              </Trans>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && (\n            <span class=\"tag danger\">\n              <Trans>Muted</Trans>\n            </span>\n          )}\n          {blocking && (\n            <span class=\"tag danger\">\n              <Trans>Blocked</Trans>\n            </span>\n          )}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title={t`Private note`}\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\" disabled={loading}>\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf ? (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    showCompose({\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    });\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>\n                    <Trans>\n                      Mention <span class=\"bidi-isolate\">@{username}</span>\n                    </Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>\n                    <Trans>Translate bio</Trans>\n                  </span>\n                </MenuItem>\n                {supports('@mastodon/profile-private-note') && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowPrivateNoteModal(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      {privateNote ? t`Edit private note` : t`Add private note`}\n                    </span>\n                  </MenuItem>\n                )}\n                {following && !!relationship && (\n                  <>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                notify: !notifying,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.notifying\n                                ? t`Notifications enabled for @${username}'s posts.`\n                                : t` Notifications disabled for @${username}'s posts.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"notification\" />\n                      <span>\n                        {notifying\n                          ? t`Disable notifications`\n                          : t`Enable notifications`}\n                      </span>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                reblogs: !showingReblogs,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.showingReblogs\n                                ? t`Boosts from @${username} enabled.`\n                                : t`Boosts from @${username} disabled.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {showingReblogs ? t`Disable boosts` : t`Enable boosts`}\n                      </span>\n                    </MenuItem>\n                  </>\n                )}\n                {supportsEndorsements && following && (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          if (endorsed) {\n                            const newRelationship =\n                              await currentMasto.v1.accounts\n                                .$select(currentInfo?.id || id)\n                                .unpin();\n                            setRelationship(newRelationship);\n                            setRelationshipUIState('default');\n                            showToast(\n                              t`@${username} is no longer featured on your profile.`,\n                            );\n                          } else {\n                            const newRelationship =\n                              await currentMasto.v1.accounts\n                                .$select(currentInfo?.id || id)\n                                .pin();\n                            setRelationship(newRelationship);\n                            setRelationshipUIState('default');\n                            showToast(\n                              t`@${username} is now featured on your profile.`,\n                            );\n                          }\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                          if (endorsed) {\n                            showToast(\n                              t`Unable to unfeature @${username} on your profile.`,\n                            );\n                          } else {\n                            showToast(\n                              t`Unable to feature @${username} on your profile.`,\n                            );\n                          }\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"endorsement\" />\n                    {endorsed\n                      ? t`Don't feature on profile`\n                      : t`Feature on profile`}\n                  </MenuItem>\n                )}\n                {showEndorsements &&\n                  supportsEndorsements &&\n                  !renderEndorsements && (\n                    <MenuItem onClick={() => setRenderEndorsements(true)}>\n                      <Icon icon=\"endorsement\" />\n                      <span>\n                        <Trans>Show featured profiles</Trans>\n                      </span>\n                    </MenuItem>\n                  )}\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          <Trans>Add/Remove from Lists</Trans>\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>\n                        <Trans>Add/Remove from Lists</Trans>\n                      </span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            ) : (\n              supportsEndorsements &&\n              !renderEndorsements && (\n                <>\n                  <MenuItem onClick={() => setRenderEndorsements(true)}>\n                    <Icon icon=\"endorsement\" />\n                    Show featured profiles\n                  </MenuItem>\n                  <MenuDivider />\n                </>\n              )\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acctWithInstance}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast(t`Handle copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy handle`);\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                <Trans>Copy handle</Trans>\n                <br />\n                <span class=\"more-insignificant bidi-isolate\">\n                  @{currentInfo?.acct || acctWithInstance}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast(t`Link copied`);\n                  } catch (e) {\n                    console.error(e);\n                    showToast(t`Unable to copy link`);\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>\n                  <Trans>Copy</Trans>\n                </span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Sharing doesn't seem to work.`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>\n                      <Trans>Share…</Trans>\n                    </span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>\n                      <Trans>\n                        Unmute <span class=\"bidi-isolate\">@{username}</span>\n                      </Trans>\n                    </span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu2\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">\n                          <Trans>\n                            Mute <span class=\"bidi-isolate\">@{username}</span>…\n                          </Trans>\n                        </span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  t`Muted @${username} for ${\n                                    typeof MUTE_DURATIONS_LABELS[duration] ===\n                                    'function'\n                                      ? MUTE_DURATIONS_LABELS[duration]()\n                                      : _(MUTE_DURATIONS_LABELS[duration])\n                                  }`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(t`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {typeof MUTE_DURATIONS_LABELS[duration] === 'function'\n                            ? MUTE_DURATIONS_LABELS[duration]()\n                            : _(MUTE_DURATIONS_LABELS[duration])}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu2>\n                )}\n                {followedBy && (\n                  <MenuConfirm\n                    subMenu\n                    menuItemClassName=\"danger\"\n                    confirmLabel={\n                      <>\n                        <Icon icon=\"user-x\" />\n                        <span>\n                          <Trans>\n                            Remove <span class=\"bidi-isolate\">@{username}</span>{' '}\n                            from followers?\n                          </Trans>\n                        </span>\n                      </>\n                    }\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .removeFromFollowers();\n                          console.log(\n                            'removing from followers',\n                            newRelationship,\n                          );\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`@${username} removed from followers`);\n                          states.reloadGenericAccounts.id = 'followers';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"user-x\" />\n                    <span>\n                      <Trans>Remove follower…</Trans>\n                    </span>\n                  </MenuConfirm>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>?\n                        </Trans>\n                      </span>\n                    </>\n                  }\n                  itemProps={{\n                    className: 'danger',\n                  }}\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(t`Unable to unblock @${username}`);\n                        } else {\n                          showToast(t`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>\n                        <Trans>\n                          Unblock <span class=\"bidi-isolate\">@{username}</span>\n                        </Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>…\n                        </Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>\n                    <Trans>\n                      Report <span class=\"bidi-isolate\">@{username}</span>…\n                    </Trans>\n                  </span>\n                </MenuItem>\n              </>\n            )}\n            {currentAuthenticated &&\n              isSelf &&\n              standalone &&\n              supports('@mastodon/profile-edit') && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      setShowEditProfile(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      <Trans>Edit profile</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && !moved && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? t`Withdraw follow request?`\n                    : t`Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) {\n                      setRelationship(newRelationship);\n\n                      // Show endorsements if start following\n                      if (\n                        showEndorsements &&\n                        supportsEndorsements &&\n                        !renderEndorsements &&\n                        newRelationship.following\n                      ) {\n                        setRenderEndorsements('onlyOpenIfHasEndorsements');\n                      }\n                    }\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>\n                      <Trans>Following</Trans>\n                    </span>\n                    <span>\n                      <Trans>Unfollow…</Trans>\n                    </span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>\n                      <Trans>Requested</Trans>\n                    </span>\n                    <span>\n                      <Trans>Withdraw…</Trans>\n                    </span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                ) : (\n                  t`Follow`\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = URL.parse(url);\n  if (!urlObj) return;\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{punycode.toUnicode(host)}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nexport default RelatedActions;\n","import './account-info.css';\n\nimport { plural } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getDomain from '../utils/get-domain';\nimport handleContentLinks from '../utils/handle-content-links';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport { supportsNativeQuote } from '../utils/quote-utils';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport {\n  getAccounts,\n  getCurrentAccountID,\n  saveAccounts,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport AccountHandleInfo from './account-handle-info';\nimport Avatar from './avatar';\nimport EditProfileSheet from './edit-profile-sheet';\nimport EmojiText from './emoji-text';\nimport Endorsements from './endorsements';\nimport Icon from './icon';\nimport Link from './link';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport RelatedActions from './related-actions';\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .values()\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n    quotes: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  // - Quotes\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else if (\n      supportsNativeQuote() &&\n      (status.quote?.id || status.quote?.quotedStatus?.id)\n    ) {\n      stats.quotes++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - Date.parse(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n  showEndorsements = false,\n}) {\n  const { i18n, t } = useLingui();\n  const { masto, authenticated: currentAuthenticated } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n    hideCollections,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(() => id === getCurrentAccountID(), [id]);\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = getAccounts();\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        saveAccounts(accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = getDomain(url);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts\n        .$select(id)\n        .followers.list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      let familiarFollowers = [];\n      try {\n        familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch({\n          id: [id],\n        });\n      } catch (e) {}\n      familiarFollowersCache.current = familiarFollowers?.[0]?.accounts || [];\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts\n        .$select(id)\n        .following.list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  const onProfileUpdate = useCallback(\n    (newAccount) => {\n      if (newAccount.id === id) {\n        console.log('Updated account info', newAccount);\n        setInfo(newAccount);\n        states.accounts[`${newAccount.id}@${instance}`] = newAccount;\n      }\n    },\n    [id, instance],\n  );\n\n  const isStringURL = isString && account && /^https?:\\/\\//.test(account);\n\n  const [showEditProfile, setShowEditProfile] = useState(false);\n\n  const [renderEndorsements, setRenderEndorsements] = useState(false);\n\n  return (\n    <>\n      <div\n        tabIndex=\"-1\"\n        class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n        style={{\n          '--header-color-1': headerCornerColors[0],\n          '--header-color-2': headerCornerColors[1],\n          '--header-color-3': headerCornerColors[2],\n          '--header-color-4': headerCornerColors[3],\n        }}\n      >\n        {uiState === 'error' && (\n          <div class=\"ui-state\">\n            <p>\n              <Trans>Unable to load account.</Trans>\n            </p>\n            {isString ? (\n              <p>\n                {isStringURL ? (\n                  <a href={account} target=\"_blank\" rel=\"noopener\">\n                    {account}\n                  </a>\n                ) : (\n                  <code class=\"insignificant\">{account}</code>\n                )}\n              </p>\n            ) : (\n              <p>\n                <a href={url} target=\"_blank\" rel=\"noopener\">\n                  <Trans>Go to account page</Trans> <Icon icon=\"external\" />\n                </a>\n              </p>\n            )}\n          </div>\n        )}\n        {uiState === 'loading' ? (\n          <>\n            <header>\n              <AccountBlock avatarSize=\"xxxl\" skeleton />\n            </header>\n            <main>\n              <div class=\"note\">\n                <p>███████ ████ ████</p>\n                <p>████ ████████ ██████ █████████ ████ ██</p>\n              </div>\n              <div class=\"account-metadata-box\">\n                <div class=\"profile-metadata\">\n                  <div class=\"profile-field\">\n                    <b class=\"more-insignificant\">███</b>\n                    <p>██████</p>\n                  </div>\n                  <div class=\"profile-field\">\n                    <b class=\"more-insignificant\">████</b>\n                    <p>███████████</p>\n                  </div>\n                </div>\n                <div class=\"stats\">\n                  <div>\n                    <span>██</span> <Trans>Followers</Trans>\n                  </div>\n                  <div>\n                    <span>██</span>{' '}\n                    <Trans id=\"following.stats\">Following</Trans>\n                  </div>\n                  <div>\n                    <span>██</span> <Trans>Posts</Trans>\n                  </div>\n                </div>\n              </div>\n              <div class=\"actions\">\n                <span />\n                <span class=\"buttons\">\n                  <button type=\"button\" class=\"plain\" disabled>\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                </span>\n              </div>\n            </main>\n          </>\n        ) : (\n          info && (\n            <>\n              {!!moved && (\n                <div class=\"account-moved\">\n                  <p>\n                    <Trans>\n                      <b>{displayName}</b> has indicated that their new account\n                      is now:\n                    </Trans>\n                  </p>\n                  <AccountBlock\n                    account={moved}\n                    instance={instance}\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      states.showAccount = moved;\n                    }}\n                  />\n                </div>\n              )}\n              {!!header && !/missing\\.png$/.test(header) && (\n                <img\n                  src={header}\n                  alt=\"\"\n                  class={`header-banner ${\n                    headerIsAvatar ? 'header-is-avatar' : ''\n                  }`}\n                  onError={(e) => {\n                    if (e.target.crossOrigin) {\n                      if (e.target.src !== headerStatic) {\n                        e.target.src = headerStatic;\n                      } else {\n                        e.target.removeAttribute('crossorigin');\n                        e.target.src = header;\n                      }\n                    } else if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.remove();\n                    }\n                  }}\n                  crossOrigin=\"anonymous\"\n                  onLoad={(e) => {\n                    e.target.classList.add('loaded');\n                    try {\n                      // Get color from four corners of image\n                      const canvas = window.OffscreenCanvas\n                        ? new OffscreenCanvas(1, 1)\n                        : document.createElement('canvas');\n                      const ctx = canvas.getContext('2d', {\n                        willReadFrequently: true,\n                      });\n                      canvas.width = e.target.width;\n                      canvas.height = e.target.height;\n                      ctx.imageSmoothingEnabled = false;\n                      ctx.drawImage(e.target, 0, 0);\n                      // const colors = [\n                      //   ctx.getImageData(0, 0, 1, 1).data,\n                      //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                      //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                      //   ctx.getImageData(\n                      //     e.target.width - 1,\n                      //     e.target.height - 1,\n                      //     1,\n                      //     1,\n                      //   ).data,\n                      // ];\n                      // Get 10x10 pixels from corners, get average color from each\n                      const pixelDimension = 10;\n                      const colors = [\n                        ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                          .data,\n                        ctx.getImageData(\n                          e.target.width - pixelDimension,\n                          0,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                        ctx.getImageData(\n                          0,\n                          e.target.height - pixelDimension,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                        ctx.getImageData(\n                          e.target.width - pixelDimension,\n                          e.target.height - pixelDimension,\n                          pixelDimension,\n                          pixelDimension,\n                        ).data,\n                      ].map((data) => {\n                        let r = 0;\n                        let g = 0;\n                        let b = 0;\n                        let a = 0;\n                        for (let i = 0; i < data.length; i += 4) {\n                          r += data[i];\n                          g += data[i + 1];\n                          b += data[i + 2];\n                          a += data[i + 3];\n                        }\n                        const dataLength = data.length / 4;\n                        return [\n                          r / dataLength,\n                          g / dataLength,\n                          b / dataLength,\n                          a / dataLength,\n                        ];\n                      });\n                      const rgbColors = colors.map((color) => {\n                        const [r, g, b, a] = lightenRGB(color);\n                        return `rgba(${r}, ${g}, ${b}, ${a})`;\n                      });\n                      setHeaderCornerColors(rgbColors);\n                      console.log({ colors, rgbColors });\n                    } catch (e) {\n                      // Silently fail\n                    }\n                  }}\n                />\n              )}\n              <header>\n                {standalone ? (\n                  <Menu2\n                    shift={\n                      window.matchMedia('(min-width: calc(40em))').matches\n                        ? 114\n                        : 64\n                    }\n                    menuButton={\n                      <div>\n                        <AccountBlock\n                          account={info}\n                          instance={instance}\n                          avatarSize=\"xxxl\"\n                          onClick={() => {}}\n                        />\n                      </div>\n                    }\n                  >\n                    <div class=\"szh-menu__header\">\n                      <AccountHandleInfo acct={acct} instance={instance} />\n                    </div>\n                    <MenuItem\n                      onClick={() => {\n                        const handleWithInstance = acct.includes('@')\n                          ? `@${acct}`\n                          : `@${acct}@${instance}`;\n                        try {\n                          navigator.clipboard.writeText(handleWithInstance);\n                          showToast(t`Handle copied`);\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Unable to copy handle`);\n                        }\n                      }}\n                    >\n                      <Icon icon=\"link\" />\n                      <span>\n                        <Trans>Copy handle</Trans>\n                      </span>\n                    </MenuItem>\n                    <MenuItem href={url} target=\"_blank\">\n                      <Icon icon=\"external\" />\n                      <span>\n                        <Trans>Go to original profile page</Trans>\n                      </span>\n                    </MenuItem>\n                    <MenuDivider />\n                    <MenuItem\n                      onClick={() => {\n                        states.showMediaModal = {\n                          mediaAttachments: [\n                            {\n                              type: 'image',\n                              url: avatarStatic,\n                            },\n                          ],\n                        };\n                      }}\n                    >\n                      <Icon icon=\"user\" />\n                      <span>\n                        <Trans>View profile image</Trans>\n                      </span>\n                    </MenuItem>\n                    {!!headerStatic && !headerIsAvatar && (\n                      <MenuItem\n                        onClick={() => {\n                          states.showMediaModal = {\n                            mediaAttachments: [\n                              {\n                                type: 'image',\n                                url: headerStatic,\n                              },\n                            ],\n                          };\n                        }}\n                      >\n                        <Icon icon=\"media\" />\n                        <span>\n                          <Trans>View profile header</Trans>\n                        </span>\n                      </MenuItem>\n                    )}\n                    {currentAuthenticated &&\n                      isSelf &&\n                      supports('@mastodon/profile-edit') && (\n                        <>\n                          <MenuDivider />\n                          <MenuItem\n                            onClick={() => {\n                              setShowEditProfile(true);\n                            }}\n                          >\n                            <Icon icon=\"pencil\" />\n                            <span>\n                              <Trans>Edit profile</Trans>\n                            </span>\n                          </MenuItem>\n                        </>\n                      )}\n                  </Menu2>\n                ) : (\n                  <AccountBlock\n                    account={info}\n                    instance={instance}\n                    avatarSize=\"xxxl\"\n                    internal\n                  />\n                )}\n              </header>\n              <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n              <main>\n                {!!memorial && (\n                  <span class=\"tag\">\n                    <Trans>In Memoriam</Trans>\n                  </span>\n                )}\n                {!!bot && (\n                  <span class=\"tag\">\n                    <Icon icon=\"bot\" /> <Trans>Automated</Trans>\n                  </span>\n                )}\n                {!!group && (\n                  <span class=\"tag\">\n                    <Icon icon=\"group\" /> <Trans>Group</Trans>\n                  </span>\n                )}\n                {/* {roles?.map((role) => (\n                  <span class=\"tag\">\n                    {role.name}\n                    {!!accountInstance && (\n                      <>\n                        {' '}\n                        <span class=\"more-insignificant\">\n                          {accountInstance}\n                        </span>\n                      </>\n                    )}\n                  </span>\n                ))} */}\n                <div\n                  class=\"note\"\n                  dir=\"auto\"\n                  onClick={handleContentLinks({\n                    instance: currentInstance,\n                  })}\n                  dangerouslySetInnerHTML={{\n                    __html: enhanceContent(note, { emojis }),\n                  }}\n                />\n                <div class=\"account-metadata-box\">\n                  {fields?.length > 0 && (\n                    <div class=\"profile-metadata\">\n                      {fields.map(({ name, value, verifiedAt }, i) => (\n                        <div\n                          class={`profile-field ${\n                            verifiedAt ? 'profile-verified' : ''\n                          }`}\n                          key={name + i}\n                          dir=\"auto\"\n                        >\n                          <b>\n                            <EmojiText text={name} emojis={emojis} />{' '}\n                            {!!verifiedAt && (\n                              <Icon\n                                icon=\"check-circle\"\n                                size=\"s\"\n                                alt={t`Verified`}\n                              />\n                            )}\n                          </b>\n                          <p\n                            dangerouslySetInnerHTML={{\n                              __html: enhanceContent(value, { emojis }),\n                            }}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  <div class=\"stats\">\n                    <LinkOrDiv\n                      tabIndex={0}\n                      to={accountLink}\n                      onClick={() => {\n                        // states.showAccount = false;\n                        setTimeout(() => {\n                          states.showGenericAccounts = {\n                            id: 'followers',\n                            heading: t`Followers`,\n                            fetchAccounts: fetchFollowers,\n                            instance,\n                            excludeRelationshipAttrs: isSelf\n                              ? ['followedBy']\n                              : [],\n                            blankCopy: hideCollections\n                              ? t`This user has chosen to not make this information available.`\n                              : undefined,\n                          };\n                        }, 0);\n                      }}\n                    >\n                      {!!familiarFollowers.length && (\n                        <span class=\"shazam-container-horizontal\">\n                          <span class=\"shazam-container-inner stats-avatars-bunch\">\n                            {familiarFollowers.map((follower) => (\n                              <Avatar\n                                url={follower.avatarStatic}\n                                size=\"s\"\n                                alt={`${follower.displayName} @${follower.acct}`}\n                                squircle={follower?.bot}\n                              />\n                            ))}\n                          </span>\n                        </span>\n                      )}\n                      <Plural\n                        value={followersCount}\n                        one={\n                          <Trans>\n                            <span title={followersCount}>\n                              {shortenNumber(followersCount)}\n                            </span>{' '}\n                            Follower\n                          </Trans>\n                        }\n                        other={\n                          <Trans>\n                            <span title={followersCount}>\n                              {shortenNumber(followersCount)}\n                            </span>{' '}\n                            Followers\n                          </Trans>\n                        }\n                      />\n                    </LinkOrDiv>\n                    <LinkOrDiv\n                      class=\"insignificant\"\n                      tabIndex={0}\n                      to={accountLink}\n                      onClick={() => {\n                        // states.showAccount = false;\n                        setTimeout(() => {\n                          states.showGenericAccounts = {\n                            heading: t({\n                              id: 'following.stats',\n                              message: 'Following',\n                            }),\n                            fetchAccounts: fetchFollowing,\n                            instance,\n                            excludeRelationshipAttrs: isSelf\n                              ? ['following']\n                              : [],\n                            blankCopy: hideCollections\n                              ? t`This user has chosen to not make this information available.`\n                              : undefined,\n                          };\n                        }, 0);\n                      }}\n                    >\n                      <Plural\n                        value={followingCount}\n                        other={\n                          <Trans>\n                            <span title={followingCount}>\n                              {shortenNumber(followingCount)}\n                            </span>{' '}\n                            Following\n                          </Trans>\n                        }\n                      />\n                      <br />\n                    </LinkOrDiv>\n                    <LinkOrDiv\n                      class=\"insignificant\"\n                      to={accountLink}\n                      // onClick={\n                      //   standalone\n                      //     ? undefined\n                      //     : () => {\n                      //         hideAllModals();\n                      //       }\n                      // }\n                    >\n                      <Plural\n                        value={statusesCount}\n                        one={\n                          <Trans>\n                            <span title={statusesCount}>\n                              {shortenNumber(statusesCount)}\n                            </span>{' '}\n                            Post\n                          </Trans>\n                        }\n                        other={\n                          <Trans>\n                            <span title={statusesCount}>\n                              {shortenNumber(statusesCount)}\n                            </span>{' '}\n                            Posts\n                          </Trans>\n                        }\n                      />\n                    </LinkOrDiv>\n                    {!!createdAt && (\n                      <div class=\"insignificant\">\n                        <Trans>\n                          Joined{' '}\n                          <time datetime={createdAt}>\n                            {niceDateTime(createdAt, {\n                              hideTime: true,\n                            })}\n                          </time>\n                        </Trans>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {!!postingStats && (\n                  <LinkOrDiv\n                    to={accountLink}\n                    class=\"account-metadata-box\"\n                    // onClick={() => {\n                    //   states.showAccount = false;\n                    // }}\n                  >\n                    <div class=\"shazam-container\">\n                      <div class=\"shazam-container-inner\">\n                        {hasPostingStats ? (\n                          <div\n                            class=\"posting-stats\"\n                            title={\n                              supportsNativeQuote()\n                                ? t`${(\n                                    postingStats.originals / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} original posts, ${(\n                                    postingStats.replies / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} replies, ${(\n                                    postingStats.quotes / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} quotes, ${(\n                                    postingStats.boosts / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} boosts`\n                                : t`${(\n                                    postingStats.originals / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} original posts, ${(\n                                    postingStats.replies / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} replies, ${(\n                                    postingStats.boosts / postingStats.total\n                                  ).toLocaleString(i18n.locale || undefined, {\n                                    style: 'percent',\n                                  })} boosts`\n                            }\n                          >\n                            <div>\n                              {postingStats.daysSinceLastPost < 365\n                                ? plural(postingStats.total, {\n                                    one: plural(\n                                      postingStats.daysSinceLastPost,\n                                      {\n                                        one: `Last 1 post in the past 1 day`,\n                                        other: `Last 1 post in the past ${postingStats.daysSinceLastPost} days`,\n                                      },\n                                    ),\n                                    other: plural(\n                                      postingStats.daysSinceLastPost,\n                                      {\n                                        one: `Last ${postingStats.total} posts in the past 1 day`,\n                                        other: `Last ${postingStats.total} posts in the past ${postingStats.daysSinceLastPost} days`,\n                                      },\n                                    ),\n                                  })\n                                : plural(postingStats.total, {\n                                    one: 'Last 1 post in the past year(s)',\n                                    other: `Last ${postingStats.total} posts in the past year(s)`,\n                                  })}\n                            </div>\n                            <div\n                              class=\"posting-stats-bar\"\n                              style={{\n                                // [originals | replies | boosts]\n                                '--originals-percentage': `${\n                                  (postingStats.originals /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                                '--replies-percentage': `${\n                                  ((postingStats.originals +\n                                    postingStats.replies) /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                                '--quotes-percentage': `${\n                                  ((postingStats.originals +\n                                    postingStats.replies +\n                                    postingStats.quotes) /\n                                    postingStats.total) *\n                                  100\n                                }%`,\n                              }}\n                            />\n                            <div class=\"posting-stats-legends\">\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                                <Trans>Original</Trans>\n                              </span>{' '}\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                                <Trans>Replies</Trans>\n                              </span>{' '}\n                              {supportsNativeQuote() && (\n                                <span class=\"ib\">\n                                  <span class=\"posting-stats-legend-item posting-stats-legend-item-quotes\" />{' '}\n                                  <Trans>Quotes</Trans>\n                                </span>\n                              )}\n                              <span class=\"ib\">\n                                <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                                <Trans>Boosts</Trans>\n                              </span>\n                            </div>\n                          </div>\n                        ) : (\n                          <div class=\"posting-stats\">\n                            <Trans>Post stats unavailable.</Trans>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </LinkOrDiv>\n                )}\n                {!moved && (\n                  <div class=\"account-metadata-box\">\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!!postingStats}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <button\n                          type=\"button\"\n                          class=\"posting-stats-button\"\n                          disabled={postingStatsUIState === 'loading'}\n                          onClick={() => {\n                            renderPostingStats();\n                          }}\n                        >\n                          <div\n                            class={`posting-stats-bar posting-stats-icon ${\n                              postingStatsUIState === 'loading' ? 'loading' : ''\n                            }`}\n                            style={\n                              supportsNativeQuote()\n                                ? {\n                                    '--originals-percentage': '25%',\n                                    '--replies-percentage': '50%',\n                                    '--quotes-percentage': '75%',\n                                  }\n                                : {\n                                    '--originals-percentage': '33%',\n                                    '--replies-percentage': '66%',\n                                  }\n                            }\n                          />\n                          <Trans>View post stats</Trans>{' '}\n                          {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </main>\n              <footer>\n                <RelatedActions\n                  info={info}\n                  instance={instance}\n                  standalone={standalone}\n                  authenticated={authenticated}\n                  onRelationshipChange={onRelationshipChange}\n                  onProfileUpdate={onProfileUpdate}\n                  setShowEditProfile={setShowEditProfile}\n                  showEndorsements={showEndorsements}\n                  renderEndorsements={renderEndorsements}\n                  setRenderEndorsements={setRenderEndorsements}\n                />\n              </footer>\n              <Endorsements\n                accountID={id}\n                info={info}\n                open={renderEndorsements}\n                onlyOpenIfHasEndorsements={\n                  renderEndorsements === 'onlyOpenIfHasEndorsements'\n                }\n              />\n            </>\n          )\n        )}\n      </div>\n      {!!showEditProfile && (\n        <Modal\n          onClose={() => {\n            setShowEditProfile(false);\n          }}\n        >\n          <EditProfileSheet\n            onClose={({ state, account } = {}) => {\n              setShowEditProfile(false);\n              if (state === 'success' && account) {\n                onProfileUpdate(account);\n              }\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nexport default AccountInfo;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountInfo from './account-info';\nimport Icon from './icon';\n\nfunction AccountSheet({ account, instance: propInstance, onClose }) {\n  const { t } = useLingui();\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const isString = typeof account === 'string';\n\n  useEffect(() => {\n    if (!isString) {\n      states.accounts[`${account.id}@${instance}`] = account;\n    }\n  }, [account]);\n\n  useLocationChange(onClose);\n\n  return (\n    <div\n      class=\"sheet\"\n      // onClick={(e) => {\n      //   const accountBlock = e.target.closest('.account-block');\n      //   if (accountBlock) {\n      //     onClose({\n      //       destination: 'account-statuses',\n      //     });\n      //   }\n      // }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <AccountInfo\n        instance={instance}\n        authenticated={authenticated}\n        account={account}\n        fetchAccount={async () => {\n          if (isString) {\n            try {\n              const info = await masto.v1.accounts.lookup({\n                acct: account,\n                skip_webfinger: false,\n              });\n              return info;\n            } catch (e) {\n              const result = await masto.v2.search.list({\n                q: account,\n                type: 'accounts',\n                limit: authenticated ? 1 : 11, // Magic number\n                resolve: authenticated,\n              });\n              if (result.accounts.length) {\n                const accountWithSameString = result.accounts.find(\n                  (a) => a.url === account || account.startsWith(a.url),\n                );\n                if (accountWithSameString) {\n                  return accountWithSameString;\n                }\n              }\n              if (/^https?:\\/\\/[^/]+\\/@[^/]+$/.test(account)) {\n                const accountURL = URL.parse(account);\n                if (accountURL) {\n                  const { hostname, pathname } = accountURL;\n                  const acct =\n                    pathname.replace(/^\\//, '').replace(/\\/$/, '') +\n                    '@' +\n                    hostname;\n                  const result = await masto.v2.search.list({\n                    q: acct,\n                    type: 'accounts',\n                    limit: 1,\n                    resolve: authenticated,\n                  });\n                  if (result.accounts.length) {\n                    return result.accounts[0];\n                  }\n                }\n              }\n            }\n          } else {\n            return account;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountSheet;\n","import './drafts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\n\nfunction Drafts({ onClose }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [drafts, setDrafts] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const keys = await db.drafts.keys();\n        if (keys.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = keys.filter((key) => key.startsWith(ns));\n          if (ownKeys.length) {\n            const drafts = await db.drafts.getMany(ownKeys);\n            drafts.sort(\n              (a, b) => Date.parse(b.updatedAt) - Date.parse(a.updatedAt),\n            );\n            setDrafts(drafts);\n          } else {\n            setDrafts([]);\n          }\n        } else {\n          setDrafts([]);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const hasDrafts = drafts?.length > 0;\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Unsent drafts</Trans>{' '}\n          <Loader abrupt hidden={uiState !== 'loading'} />\n        </h2>\n        {hasDrafts && (\n          <div class=\"insignificant\">\n            <Trans>\n              Looks like you have unsent drafts. Let's continue where you left\n              off.\n            </Trans>\n          </div>\n        )}\n      </header>\n      <main>\n        {hasDrafts ? (\n          <>\n            <ul class=\"drafts-list\">\n              {drafts.map((draft) => {\n                const { updatedAt, key, draftStatus, replyTo, quote } = draft;\n                const updatedAtDate = new Date(updatedAt);\n                return (\n                  <li key={updatedAt}>\n                    <div class=\"mini-draft-meta\">\n                      <b>\n                        <Icon icon={replyTo ? 'reply' : 'quill'} size=\"s\" />{' '}\n                        <time>\n                          {!!replyTo && (\n                            <>\n                              <span class=\"bidi-isolate\">\n                                @{replyTo.account.acct}\n                              </span>\n                              <br />\n                            </>\n                          )}\n                          {niceDateTime(updatedAtDate)}\n                        </time>\n                      </b>\n                      <MenuConfirm\n                        confirmLabel={\n                          <span>\n                            <Trans>Delete this draft?</Trans>\n                          </span>\n                        }\n                        menuItemClassName=\"danger\"\n                        align=\"end\"\n                        disabled={uiState === 'loading'}\n                        onClick={() => {\n                          (async () => {\n                            try {\n                              // const yes = confirm('Delete this draft?');\n                              // if (yes) {\n                              await db.drafts.del(key);\n                              reload();\n                              // }\n                            } catch (e) {\n                              alert(t`Error deleting draft! Please try again.`);\n                            }\n                          })();\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"small light\"\n                          disabled={uiState === 'loading'}\n                        >\n                          <Trans>Delete…</Trans>\n                        </button>\n                      </MenuConfirm>\n                    </div>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      class=\"draft-item\"\n                      onClick={async () => {\n                        // console.log({ draftStatus });\n                        let replyToStatus;\n                        let quoteStatus;\n                        if (replyTo?.id || quote?.id) {\n                          setUIState('loading');\n                          if (replyTo) {\n                            try {\n                              replyToStatus = await masto.v1.statuses\n                                .$select(replyTo.id)\n                                .fetch();\n                            } catch (e) {\n                              console.error(e);\n                              alert(t`Error fetching reply-to status!`);\n                              setUIState('default');\n                              return;\n                            }\n                          }\n                          if (quote) {\n                            try {\n                              quoteStatus = await masto.v1.statuses\n                                .$select(quote.id)\n                                .fetch();\n                            } catch (e) {\n                              console.error(e);\n                              alert(t`Error fetching quoted status!`);\n                              setUIState('default');\n                              // Don't return. Fail and still allow draft without quote\n                              // return;\n                            }\n                          }\n                          setUIState('default');\n                        }\n                        window.__COMPOSE__ = {\n                          draftStatus,\n                          replyToStatus,\n                          quoteStatus,\n                        };\n                        states.showCompose = true;\n                        states.showDrafts = false;\n                      }}\n                    >\n                      <MiniDraft draft={draft} />\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            {drafts.length > 1 && (\n              <p>\n                <MenuConfirm\n                  confirmLabel={\n                    <span>\n                      <Trans>Delete all drafts?</Trans>\n                    </span>\n                  }\n                  menuItemClassName=\"danger\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    (async () => {\n                      // const yes = confirm('Delete all drafts?');\n                      // if (yes) {\n                      setUIState('loading');\n                      try {\n                        await db.drafts.delMany(\n                          drafts.map((draft) => draft.key),\n                        );\n                        setUIState('default');\n                        reload();\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Error deleting drafts! Please try again.`);\n                        setUIState('error');\n                      }\n                      // }\n                    })();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"light danger\"\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Delete all…</Trans>\n                  </button>\n                </MenuConfirm>\n              </p>\n            )}\n          </>\n        ) : (\n          <p>\n            <Trans>No drafts found.</Trans>\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction MiniDraft({ draft }) {\n  const { t } = useLingui();\n  const { draftStatus, replyTo, quote } = draft;\n  const { status, spoilerText, poll, mediaAttachments } = draftStatus;\n  const hasPoll = poll?.options?.length > 0;\n  const hasMedia = mediaAttachments?.length > 0;\n  const hasQuote = !!quote?.id;\n  const hasPollOrMedia = hasPoll || hasMedia || hasQuote;\n  const firstImageMedia = useMemo(() => {\n    if (!hasMedia) return;\n    const image = mediaAttachments.find((media) => /image/.test(media.type));\n    if (!image) return;\n    const { file } = image;\n    const objectURL = URL.createObjectURL(file);\n    return objectURL;\n  }, [hasMedia, mediaAttachments]);\n  return (\n    <>\n      <div class=\"mini-draft\">\n        {hasPollOrMedia && (\n          <div\n            class={`mini-draft-aside ${firstImageMedia ? 'has-image' : ''}`}\n            style={\n              firstImageMedia\n                ? {\n                    '--bg-image': `url(${firstImageMedia})`,\n                  }\n                : {}\n            }\n          >\n            {hasPoll && <Icon icon=\"poll\" alt={t`Poll`} />}\n            {hasMedia && (\n              <span>\n                <Icon icon=\"attachment\" alt={t`Media`} />{' '}\n                <small>{mediaAttachments?.length}</small>\n              </span>\n            )}\n            {hasQuote && <Icon icon=\"quote\" alt={t`Quote`} />}\n          </div>\n        )}\n        <div class=\"mini-draft-main\">\n          {!!spoilerText && <div class=\"mini-draft-spoiler\">{spoilerText}</div>}\n          {!!status && <div class=\"mini-draft-status\">{status}</div>}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Drafts;\n","import './embed-modal.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport Icon from './icon';\n\nfunction EmbedModal({ html, url, width, height, onClose = () => {} }) {\n  const { t } = useLingui();\n  return (\n    <div class=\"embed-modal-container\">\n      <div class=\"top-controls\">\n        <button type=\"button\" class=\"light\" onClick={() => onClose()}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n        {url && (\n          <a href={url} target=\"_blank\" rel=\"noopener\" class=\"button plain\">\n            <span>\n              <Trans>Open in new window</Trans>\n            </span>{' '}\n            <Icon icon=\"external\" />\n          </a>\n        )}\n      </div>\n      <div\n        class=\"embed-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{\n          '--width': width + 'px',\n          '--height': height + 'px',\n          '--aspect-ratio': `${width}/${height}`,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EmbedModal;\n","import './generic-accounts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Link from './link';\nimport Loader from './loader';\nimport Status from './status';\n\nexport default function GenericAccounts({\n  instance,\n  excludeRelationshipAttrs = [],\n  postID,\n  onClose = () => {},\n  blankCopy,\n}) {\n  const { t } = useLingui();\n  const { masto, instance: currentInstance } = api();\n  const isCurrentInstance = instance ? instance === currentInstance : true;\n  const snapStates = useSnapshot(states);\n  ``;\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  useLocationChange(onClose);\n\n  if (!snapStates.showGenericAccounts) {\n    return null;\n  }\n\n  const {\n    id,\n    heading,\n    fetchAccounts,\n    accounts: staticAccounts,\n    showReactions,\n  } = snapStates.showGenericAccounts;\n\n  const [accounts, setAccounts] = useState(\n    staticAccounts?.length ? staticAccounts : [],\n  );\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    if (!isCurrentInstance) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (firstLoad) => {\n    if (!fetchAccounts) return;\n    if (firstLoad && !accounts?.length) setAccounts([]);\n    setUIState('loading');\n    (async () => {\n      try {\n        const { done, value } = await fetchAccounts(firstLoad);\n        if (Array.isArray(value)) {\n          if (firstLoad) {\n            const accounts = [];\n            for (let i = 0; i < value.length; i++) {\n              const account = value[i];\n              const theAccount = accounts.find(\n                (a, j) => a.id === account.id && i !== j,\n              );\n              if (!theAccount) {\n                accounts.push({\n                  _types: [],\n                  ...account,\n                });\n              } else {\n                theAccount._types.push(...account._types);\n              }\n            }\n            setAccounts(accounts);\n          } else {\n            // setAccounts((prev) => [...prev, ...value]);\n            // Merge accounts by id and _types\n            setAccounts((prev) => {\n              const newAccounts = prev;\n              for (const account of value) {\n                const theAccount = newAccounts.find((a) => a.id === account.id);\n                if (!theAccount) {\n                  newAccounts.push(account);\n                } else {\n                  theAccount._types.push(...account._types);\n                }\n              }\n              return newAccounts;\n            });\n          }\n          setShowMore(!done);\n\n          loadRelationships(value);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (accounts?.length > 0) {\n      // setAccounts(staticAccounts);\n      if (fetchAccounts) {\n        loadAccounts(true);\n        firstLoad.current = false;\n      } else {\n        loadRelationships(accounts);\n      }\n    } else {\n      loadAccounts(true);\n      firstLoad.current = false;\n    }\n  }, [fetchAccounts]);\n\n  useEffect(() => {\n    if (firstLoad.current) return;\n    // reloadGenericAccounts contains value like {id: 'mute', counter: 1}\n    // We only need to reload if the id matches\n    if (snapStates.reloadGenericAccounts?.id === id) {\n      loadAccounts(true);\n    }\n  }, [snapStates.reloadGenericAccounts.counter]);\n\n  const post = states.statuses[postID];\n\n  return (\n    <div id=\"generic-accounts-container\" class=\"sheet\" tabindex=\"-1\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>{heading || t`Accounts`}</h2>\n      </header>\n      <main>\n        {post && (\n          <Link\n            to={`/${instance || currentInstance}/s/${post.id}`}\n            class=\"post-preview\"\n          >\n            <Status status={post} size=\"s\" readOnly />\n          </Link>\n        )}\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"accounts-list\">\n              {accounts.map((account) => {\n                const relationship = relationshipsMap[account.id];\n                const key = `${account.id}-${account._types?.length || ''}`;\n                return (\n                  <li key={key}>\n                    {showReactions && account._types?.length > 0 && (\n                      <div class=\"reactions-block\">\n                        {account._types.map((type) => (\n                          <Icon\n                            icon={\n                              {\n                                reblog: 'rocket',\n                                favourite: 'heart',\n                              }[type]\n                            }\n                            class={`${type}-icon`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <div class=\"account-relationships\">\n                      <AccountBlock\n                        account={account}\n                        showStats\n                        relationship={relationship}\n                        excludeRelationshipAttrs={excludeRelationshipAttrs}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      loadAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => loadAccounts()}\n                  >\n                    <Trans>Show more…</Trans>\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">\n                  <Trans>The end.</Trans>\n                </p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Error loading accounts</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state insignificant\">\n            {blankCopy || t`Nothing to show`}\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeMatch from '../utils/locale-match';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Menu2 from './menu2';\nimport TranslationBlock from './translation-block';\n\nconst FORCE_TRANSLATE_LIMIT = 140;\n\nexport default function MediaAltModal({ alt, lang, onClose }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [forceTranslate, setForceTranslate] = useState(false);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const differentLanguage =\n    !!lang &&\n    lang !== targetLanguage &&\n    !localeMatch([lang], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => lang === l || localeMatch([lang], [l]),\n    );\n\n  useEffect(() => {\n    const isShortAlt = alt?.length > 0 && alt?.length <= FORCE_TRANSLATE_LIMIT;\n    if (differentLanguage && isShortAlt) {\n      setForceTranslate(true);\n    }\n  }, [differentLanguage, alt]);\n\n  return (\n    <div class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Media description</Trans>\n        </h2>\n        <div class=\"header-side\">\n          <Menu2\n            align=\"end\"\n            menuButton={\n              <button type=\"button\" class=\"plain4\">\n                <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={forceTranslate}\n              onClick={() => {\n                setForceTranslate(true);\n              }}\n            >\n              <Icon icon=\"translate\" />\n              <span>\n                <Trans>Translate</Trans>\n              </span>\n            </MenuItem>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  speak(alt, lang);\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>\n                  <Trans>Speak</Trans>\n                </span>\n              </MenuItem>\n            )}\n          </Menu2>\n        </div>\n      </header>\n      <main lang={lang} dir=\"auto\">\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n            textWrap: 'pretty',\n          }}\n        >\n          {alt}\n        </p>\n        {(differentLanguage || forceTranslate) && (\n          <TranslationBlock\n            forceTranslate={forceTranslate}\n            sourceLanguage={lang}\n            text={alt}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n","const { min, max } = Math;\n\nexport default (x, low = 0, high = 1) => {\n    return min(max(low, x), high);\n};\n","// ported from jQuery's $.type\nconst classToType = {};\nfor (let name of [\n    'Boolean',\n    'Number',\n    'String',\n    'Function',\n    'Array',\n    'Date',\n    'RegExp',\n    'Undefined',\n    'Null'\n]) {\n    classToType[`[object ${name}]`] = name.toLowerCase();\n}\nexport default function (obj) {\n    return classToType[Object.prototype.toString.call(obj)] || 'object';\n}\n","import type from './type.js';\n\nexport default (args, keyOrder = null) => {\n    // if called with more than 3 arguments, we return the arguments\n    if (args.length >= 3) return Array.prototype.slice.call(args);\n    // with less than 3 args we check if first arg is object\n    // and use the keyOrder string to extract and sort properties\n    if (type(args[0]) == 'object' && keyOrder) {\n        return keyOrder\n            .split('')\n            .filter((k) => args[0][k] !== undefined)\n            .map((k) => args[0][k]);\n    }\n    // otherwise we just return the first argument\n    // (which we suppose is an array of args)\n    return args[0].slice(0);\n};\n","const { PI, min, max } = Math;\n\nconst rnd2 = (a) => Math.round(a * 100) / 100;\nconst rnd3 = (a) => Math.round(a * 100) / 100;\n\nexport { default as clip_rgb } from './clip_rgb.js';\nexport { default as limit } from './limit.js';\nexport { default as type } from './type.js';\nexport { default as unpack } from './unpack.js';\nexport { default as last } from './last.js';\n\nconst TWOPI = PI * 2;\nconst PITHIRD = PI / 3;\nconst DEG2RAD = PI / 180;\nconst RAD2DEG = 180 / PI;\n\n/**\n * Reverse the first three elements of an array\n *\n * @param {any[]} arr\n * @returns {any[]}\n */\nfunction reverse3(arr) {\n    return [...arr.slice(0, 3).reverse(), ...arr.slice(3)];\n}\n\nexport { PI, TWOPI, PITHIRD, DEG2RAD, RAD2DEG, min, max, rnd2, rnd3, reverse3 };\n","// from https://www.w3.org/TR/css-color-4/multiply-matrices.js\nexport default function multiplyMatrices(A, B) {\n    let m = A.length;\n\n    if (!Array.isArray(A[0])) {\n        // A is vector, convert to [[a, b, c, ...]]\n        A = [A];\n    }\n\n    if (!Array.isArray(B[0])) {\n        // B is vector, convert to [[a], [b], [c], ...]]\n        B = B.map((x) => [x]);\n    }\n\n    let p = B[0].length;\n    let B_cols = B[0].map((_, i) => B.map((x) => x[i])); // transpose B\n    let product = A.map((row) =>\n        B_cols.map((col) => {\n            if (!Array.isArray(row)) {\n                return col.reduce((a, c) => a + c * row, 0);\n            }\n\n            return row.reduce((a, c, i) => a + c * (col[i] || 0), 0);\n        })\n    );\n\n    if (m === 1) {\n        product = product[0]; // Avoid [[a, b, c, ...]]\n    }\n\n    if (p === 1) {\n        return product.map((x) => x[0]); // Avoid [[a], [b], [c], ...]]\n    }\n\n    return product;\n}\n","const labConstants = {\n    // Corresponds roughly to RGB brighter/darker\n    Kn: 18,\n\n    // D65 standard referent\n    labWhitePoint: 'd65',\n    Xn: 0.95047,\n    Yn: 1,\n    Zn: 1.08883,\n\n    t0: 0.137931034, // 4 / 29\n    t1: 0.206896552, // 6 / 29\n    t2: 0.12841855, // 3 * t1 * t1\n    t3: 0.008856452, // t1 * t1 * t1,\n\n    kE: 216.0 / 24389.0,\n    kKE: 8.0,\n    kK: 24389.0 / 27.0,\n\n    RefWhiteRGB: {\n        // sRGB\n        X: 0.95047,\n        Y: 1,\n        Z: 1.08883\n    },\n\n    MtxRGB2XYZ: {\n        m00: 0.4124564390896922,\n        m01: 0.21267285140562253,\n        m02: 0.0193338955823293,\n        m10: 0.357576077643909,\n        m11: 0.715152155287818,\n        m12: 0.11919202588130297,\n        m20: 0.18043748326639894,\n        m21: 0.07217499330655958,\n        m22: 0.9503040785363679\n    },\n\n    MtxXYZ2RGB: {\n        m00: 3.2404541621141045,\n        m01: -0.9692660305051868,\n        m02: 0.055643430959114726,\n        m10: -1.5371385127977166,\n        m11: 1.8760108454466942,\n        m12: -0.2040259135167538,\n        m20: -0.498531409556016,\n        m21: 0.041556017530349834,\n        m22: 1.0572251882231791\n    },\n\n    // used in rgb2xyz\n    As: 0.9414285350000001,\n    Bs: 1.040417467,\n    Cs: 1.089532651,\n\n    MtxAdaptMa: {\n        m00: 0.8951,\n        m01: -0.7502,\n        m02: 0.0389,\n        m10: 0.2664,\n        m11: 1.7135,\n        m12: -0.0685,\n        m20: -0.1614,\n        m21: 0.0367,\n        m22: 1.0296\n    },\n\n    MtxAdaptMaI: {\n        m00: 0.9869929054667123,\n        m01: 0.43230526972339456,\n        m02: -0.008528664575177328,\n        m10: -0.14705425642099013,\n        m11: 0.5183602715367776,\n        m12: 0.04004282165408487,\n        m20: 0.15996265166373125,\n        m21: 0.0492912282128556,\n        m22: 0.9684866957875502\n    }\n};\n\nexport default labConstants;\n\n// taken from https://de.mathworks.com/help/images/ref/whitepoint.html\nconst ILLUMINANTS = new Map([\n    // ASTM E308-01\n    ['a', [1.0985, 0.35585]],\n    // Wyszecki & Stiles, p. 769\n    ['b', [1.0985, 0.35585]],\n    // C ASTM E308-01\n    ['c', [0.98074, 1.18232]],\n    // D50 (ASTM E308-01)\n    ['d50', [0.96422, 0.82521]],\n    // D55 (ASTM E308-01)\n    ['d55', [0.95682, 0.92149]],\n    // D65 (ASTM E308-01)\n    ['d65', [0.95047, 1.08883]],\n    // E (ASTM E308-01)\n    ['e', [1, 1, 1]],\n    // F2 (ASTM E308-01)\n    ['f2', [0.99186, 0.67393]],\n    // F7 (ASTM E308-01)\n    ['f7', [0.95041, 1.08747]],\n    // F11 (ASTM E308-01)\n    ['f11', [1.00962, 0.6435]],\n    ['icc', [0.96422, 0.82521]]\n]);\n\nexport function setLabWhitePoint(name) {\n    const ill = ILLUMINANTS.get(String(name).toLowerCase());\n    if (!ill) {\n        throw new Error('unknown Lab illuminant ' + name);\n    }\n    labConstants.labWhitePoint = name;\n    labConstants.Xn = ill[0];\n    labConstants.Zn = ill[1];\n}\n\nexport function getLabWhitePoint() {\n    return labConstants.labWhitePoint;\n}\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\n/*\n * L* [0..100]\n * a [-100..100]\n * b [-100..100]\n */\nconst lab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b] = args;\n    const [x, y, z] = lab2xyz(L, a, b);\n    const [r, g, b_] = xyz2rgb(x, y, z);\n    return [r, g, b_, args.length > 3 ? args[3] : 1];\n};\n\nconst lab2xyz = (L, a, b) => {\n    const { kE, kK, kKE, Xn, Yn, Zn } = LAB_CONSTANTS;\n\n    const fy = (L + 16.0) / 116.0;\n    const fx = 0.002 * a + fy;\n    const fz = fy - 0.005 * b;\n\n    const fx3 = fx * fx * fx;\n    const fz3 = fz * fz * fz;\n\n    const xr = fx3 > kE ? fx3 : (116.0 * fx - 16.0) / kK;\n    const yr = L > kKE ? Math.pow((L + 16.0) / 116.0, 3.0) : L / kK;\n    const zr = fz3 > kE ? fz3 : (116.0 * fz - 16.0) / kK;\n\n    const x = xr * Xn;\n    const y = yr * Yn;\n    const z = zr * Zn;\n\n    return [x, y, z];\n};\n\nconst compand = (linear) => {\n    /* sRGB */\n    const sign = Math.sign(linear);\n    linear = Math.abs(linear);\n    return (\n        (linear <= 0.0031308\n            ? linear * 12.92\n            : 1.055 * Math.pow(linear, 1.0 / 2.4) - 0.055) * sign\n    );\n};\n\nconst xyz2rgb = (x, y, z) => {\n    const { MtxAdaptMa, MtxAdaptMaI, MtxXYZ2RGB, RefWhiteRGB, Xn, Yn, Zn } =\n        LAB_CONSTANTS;\n\n    const As = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bs = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cs = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    const Ad =\n        RefWhiteRGB.X * MtxAdaptMa.m00 +\n        RefWhiteRGB.Y * MtxAdaptMa.m10 +\n        RefWhiteRGB.Z * MtxAdaptMa.m20;\n    const Bd =\n        RefWhiteRGB.X * MtxAdaptMa.m01 +\n        RefWhiteRGB.Y * MtxAdaptMa.m11 +\n        RefWhiteRGB.Z * MtxAdaptMa.m21;\n    const Cd =\n        RefWhiteRGB.X * MtxAdaptMa.m02 +\n        RefWhiteRGB.Y * MtxAdaptMa.m12 +\n        RefWhiteRGB.Z * MtxAdaptMa.m22;\n\n    const X1 =\n        (x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20) *\n        (Ad / As);\n    const Y1 =\n        (x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21) *\n        (Bd / Bs);\n    const Z1 =\n        (x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22) *\n        (Cd / Cs);\n\n    const X2 =\n        X1 * MtxAdaptMaI.m00 + Y1 * MtxAdaptMaI.m10 + Z1 * MtxAdaptMaI.m20;\n    const Y2 =\n        X1 * MtxAdaptMaI.m01 + Y1 * MtxAdaptMaI.m11 + Z1 * MtxAdaptMaI.m21;\n    const Z2 =\n        X1 * MtxAdaptMaI.m02 + Y1 * MtxAdaptMaI.m12 + Z1 * MtxAdaptMaI.m22;\n\n    const r = compand(\n        X2 * MtxXYZ2RGB.m00 + Y2 * MtxXYZ2RGB.m10 + Z2 * MtxXYZ2RGB.m20\n    );\n    const g = compand(\n        X2 * MtxXYZ2RGB.m01 + Y2 * MtxXYZ2RGB.m11 + Z2 * MtxXYZ2RGB.m21\n    );\n    const b = compand(\n        X2 * MtxXYZ2RGB.m02 + Y2 * MtxXYZ2RGB.m12 + Z2 * MtxXYZ2RGB.m22\n    );\n\n    return [r * 255, g * 255, b * 255];\n};\n\nexport default lab2rgb;\nexport { xyz2rgb };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { xyz2rgb } from '../lab/lab2rgb.js';\n\nconst oklab2rgb = (...args) => {\n    args = unpack(args, 'lab');\n    const [L, a, b, ...rest] = args;\n    const [X, Y, Z] = OKLab_to_XYZ([L, a, b]);\n    const [r, g, b_] = xyz2rgb(X, Y, Z);\n    return [r, g, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction OKLab_to_XYZ(OKLab) {\n    // Given OKLab, convert to XYZ relative to D65\n    var LMStoXYZ = [\n        [1.2268798758459243, -0.5578149944602171, 0.2813910456659647],\n        [-0.0405757452148008, 1.112286803280317, -0.0717110580655164],\n        [-0.0763729366746601, -0.4214933324022432, 1.5869240198367816]\n    ];\n    var OKLabtoLMS = [\n        [1.0, 0.3963377773761749, 0.2158037573099136],\n        [1.0, -0.1055613458156586, -0.0638541728258133],\n        [1.0, -0.0894841775298119, -1.2914855480194092]\n    ];\n\n    var LMSnl = multiplyMatrices(OKLabtoLMS, OKLab);\n    return multiplyMatrices(\n        LMStoXYZ,\n        LMSnl.map((c) => c ** 3)\n    );\n}\n\nexport default oklab2rgb;\n","import LAB_CONSTANTS from './lab-constants.js';\nimport { unpack } from '../../utils/index.js';\n\nconst rgb2lab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [x, y, z] = rgb2xyz(r, g, b);\n    const [L, a, b_] = xyz2lab(x, y, z);\n    return [L, a, b_, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nfunction xyz2lab(x, y, z) {\n    const { Xn, Yn, Zn, kE, kK } = LAB_CONSTANTS;\n    const xr = x / Xn;\n    const yr = y / Yn;\n    const zr = z / Zn;\n\n    const fx = xr > kE ? Math.pow(xr, 1.0 / 3.0) : (kK * xr + 16.0) / 116.0;\n    const fy = yr > kE ? Math.pow(yr, 1.0 / 3.0) : (kK * yr + 16.0) / 116.0;\n    const fz = zr > kE ? Math.pow(zr, 1.0 / 3.0) : (kK * zr + 16.0) / 116.0;\n\n    return [116.0 * fy - 16.0, 500.0 * (fx - fy), 200.0 * (fy - fz)];\n}\n\nfunction gammaAdjustSRGB(companded) {\n    const sign = Math.sign(companded);\n    companded = Math.abs(companded);\n    const linear =\n        companded <= 0.04045\n            ? companded / 12.92\n            : Math.pow((companded + 0.055) / 1.055, 2.4);\n    return linear * sign;\n}\n\nconst rgb2xyz = (r, g, b) => {\n    // normalize and gamma adjust\n    r = gammaAdjustSRGB(r / 255);\n    g = gammaAdjustSRGB(g / 255);\n    b = gammaAdjustSRGB(b / 255);\n\n    const { MtxRGB2XYZ, MtxAdaptMa, MtxAdaptMaI, Xn, Yn, Zn, As, Bs, Cs } =\n        LAB_CONSTANTS;\n\n    let x = r * MtxRGB2XYZ.m00 + g * MtxRGB2XYZ.m10 + b * MtxRGB2XYZ.m20;\n    let y = r * MtxRGB2XYZ.m01 + g * MtxRGB2XYZ.m11 + b * MtxRGB2XYZ.m21;\n    let z = r * MtxRGB2XYZ.m02 + g * MtxRGB2XYZ.m12 + b * MtxRGB2XYZ.m22;\n\n    const Ad = Xn * MtxAdaptMa.m00 + Yn * MtxAdaptMa.m10 + Zn * MtxAdaptMa.m20;\n    const Bd = Xn * MtxAdaptMa.m01 + Yn * MtxAdaptMa.m11 + Zn * MtxAdaptMa.m21;\n    const Cd = Xn * MtxAdaptMa.m02 + Yn * MtxAdaptMa.m12 + Zn * MtxAdaptMa.m22;\n\n    let X = x * MtxAdaptMa.m00 + y * MtxAdaptMa.m10 + z * MtxAdaptMa.m20;\n    let Y = x * MtxAdaptMa.m01 + y * MtxAdaptMa.m11 + z * MtxAdaptMa.m21;\n    let Z = x * MtxAdaptMa.m02 + y * MtxAdaptMa.m12 + z * MtxAdaptMa.m22;\n\n    X *= Ad / As;\n    Y *= Bd / Bs;\n    Z *= Cd / Cs;\n\n    x = X * MtxAdaptMaI.m00 + Y * MtxAdaptMaI.m10 + Z * MtxAdaptMaI.m20;\n    y = X * MtxAdaptMaI.m01 + Y * MtxAdaptMaI.m11 + Z * MtxAdaptMaI.m21;\n    z = X * MtxAdaptMaI.m02 + Y * MtxAdaptMaI.m12 + Z * MtxAdaptMaI.m22;\n\n    return [x, y, z];\n};\n\nexport default rgb2lab;\nexport { rgb2xyz };\n","import { unpack } from '../../utils/index.js';\nimport multiplyMatrices from '../../utils/multiply-matrices.js';\nimport { rgb2xyz } from '../lab/rgb2lab.js';\n\nconst rgb2oklab = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const xyz = rgb2xyz(r, g, b);\n    const oklab = XYZ_to_OKLab(xyz);\n    return [...oklab, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\n// from https://www.w3.org/TR/css-color-4/#color-conversion-code\nfunction XYZ_to_OKLab(XYZ) {\n    // Given XYZ relative to D65, convert to OKLab\n    const XYZtoLMS = [\n        [0.819022437996703, 0.3619062600528904, -0.1288737815209879],\n        [0.0329836539323885, 0.9292868615863434, 0.0361446663506424],\n        [0.0481771893596242, 0.2642395317527308, 0.6335478284694309]\n    ];\n    const LMStoOKLab = [\n        [0.210454268309314, 0.7936177747023054, -0.0040720430116193],\n        [1.9779985324311684, -2.4285922420485799, 0.450593709617411],\n        [0.0259040424655478, 0.7827717124575296, -0.8086757549230774]\n    ];\n\n    const LMS = multiplyMatrices(XYZtoLMS, XYZ);\n    // JavaScript Math.cbrt returns a sign-matched cube root\n    // beware if porting to other languages\n    // especially if tempted to use a general power function\n    return multiplyMatrices(\n        LMStoOKLab,\n        LMS.map((c) => Math.cbrt(c))\n    );\n    // L in range [0,1]. For use in CSS, multiply by 100 and add a percent\n}\n\nexport default rgb2oklab;\n","import { unpack, DEG2RAD } from '../../utils/index.js';\nconst { sin, cos } = Math;\n\nconst lch2lab = (...args) => {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n    */\n    let [l, c, h] = unpack(args, 'lch');\n    if (isNaN(h)) h = 0;\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n};\n\nexport default lch2lab;\n","import { unpack } from '../../utils/index.js';\nimport lch2lab from '../lch/lch2lab.js';\nimport oklab2rgb from '../oklab/oklab2rgb.js';\n\nconst oklch2rgb = (...args) => {\n    args = unpack(args, 'lch');\n    const [l, c, h, ...rest] = args;\n    const [L, a, b_] = lch2lab(l, c, h);\n    const [r, g, b] = oklab2rgb(L, a, b_);\n    return [r, g, b, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default oklch2rgb;\n","import { unpack, RAD2DEG } from '../../utils/index.js';\nconst { sqrt, atan2, round } = Math;\n\nconst lab2lch = (...args) => {\n    const [l, a, b] = unpack(args, 'lab');\n    const c = sqrt(a * a + b * b);\n    let h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) h = Number.NaN;\n    return [l, c, h];\n};\n\nexport default lab2lch;\n","import { unpack } from '../../utils/index.js';\nimport rgb2oklab from '../oklab/rgb2oklab.js';\nimport lab2lch from '../lch/lab2lch.js';\n\nconst rgb2oklch = (...args) => {\n    const [r, g, b, ...rest] = unpack(args, 'rgb');\n    const [l, a, b_] = rgb2oklab(r, g, b);\n    const [L, c, h] = lab2lch(l, a, b_);\n    return [L, c, h, ...(rest.length > 0 && rest[0] < 1 ? [rest[0]] : [])];\n};\n\nexport default rgb2oklch;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklch2rgb, rgb2oklch } from '../utils/color-utils';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.focus();\n    carouselRef.current.scrollTo({\n      left: scrollLeft * (isRTL() ? -1 : 1),\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = (e) => {\n      onClose(e, currentIndex, mediaAttachments, carouselRef);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, [currentIndex, mediaAttachments]);\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      onClose(e, currentIndex, mediaAttachments, carouselRef);\n    },\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal || e.metaKey || e.ctrlKey || e.altKey || e.shiftKey;\n      },\n      useKey: true,\n    },\n    [onClose, currentIndex, mediaAttachments],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(Math.abs(scrollLeft) / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaOkColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        return rgb2oklch(averageColor);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentColors = useMemo(() => {\n    return mediaOkColors?.map((okColor) => {\n      if (okColor) {\n        return {\n          light: oklch2rgb([0.95, 0.01, okColor[2]]),\n          dark: oklch2rgb([0.35, 0.01, okColor[2]]),\n          default: oklch2rgb([0.6, okColor[1], okColor[2]]),\n        };\n      }\n      return null;\n    });\n  });\n  const mediaAccentGradients = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    const colors = mediaAccentColors.map((color, i) => {\n      const start = i * range + gap;\n      const end = (i + 1) * range - gap;\n      if (color?.light && color?.dark) {\n        return {\n          light: `\n                rgb(${color.light?.join(',')}) ${start}%, \n                rgb(${color.light?.join(',')}) ${end}%\n              `,\n          dark: `\n                rgb(${color.dark?.join(',')}) ${start}%, \n                rgb(${color.dark?.join(',')}) ${end}%\n              `,\n        };\n      }\n\n      return {\n        light: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n        dark: `\n              transparent ${start}%, \n              transparent ${end}%\n            `,\n      };\n    });\n    const lightGradient = colors.map((color) => color.light).join(', ');\n    const darkGradient = colors.map((color) => color.dark).join(', ');\n    return {\n      light: lightGradient,\n      dark: darkGradient,\n    };\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    const currentColor = mediaAccentColors[currentIndex];\n    let $meta;\n    let metaColor;\n    if (currentColor) {\n      const theme = store.local.get('theme');\n      if (theme) {\n        const mediaColor = `rgb(${currentColor[theme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      } else {\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        const mediaColor = `rgb(${currentColor[colorScheme].join(',')})`;\n        console.log({ mediaColor });\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          metaColor = $meta.content;\n          $meta.content = mediaColor;\n        }\n      }\n    }\n    return () => {\n      // Reset meta color\n      if ($meta && metaColor) {\n        $meta.content = metaColor;\n      }\n    };\n  }, [currentIndex, mediaAccentColors]);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose(e, currentIndex, mediaAttachments, carouselRef);\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                '--accent-gradient-light': mediaAccentGradients?.light,\n                '--accent-gradient-dark': mediaAccentGradients?.dark,\n                //     backgroundImage: `linear-gradient(\n                // to ${isRTL() ? 'left' : 'right'}, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor.default.join(',')})`,\n                      '--accent-light-color': `rgb(${accentColor.light?.join(\n                        ',',\n                      )})`,\n                      '--accent-dark-color': `rgb(${accentColor.dark?.join(\n                        ',',\n                      )})`,\n                      '--accent-alpha-color': `rgba(${accentColor.default.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={(e) =>\n              onClose(e, currentIndex, mediaAttachments, carouselRef)\n            }\n          >\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const left =\n                    carouselRef.current.clientWidth * i * (isRTL() ? -1 : 1);\n                  carouselRef.current.focus();\n                  carouselRef.current.scrollTo({ left, behavior: 'smooth' });\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" alt=\"⸱\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title={t`Open original media in new window`}\n            >\n              <Icon icon=\"popout\" />\n              <span>\n                <Trans>Open original media</Trans>\n              </span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: t`Attempting to describe image. Please wait…`,\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Failed to describe image`);\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>\n                      <Trans>Describe image…</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          {!!statusID && (\n            <Link\n              to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n                window.matchMedia('(min-width: calc(40em + 350px))').matches\n                  ? `?media=${currentIndex + 1}`\n                  : ''\n              }`}\n              class=\"button carousel-button media-post-link\"\n              // onClick={() => {\n              //   // if small screen (not media query min-width 40em + 350px), run onClose\n              //   if (\n              //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n              //   ) {\n              //     onClose();\n              //   }\n              // }}\n            >\n              <span class=\"button-label\">\n                <Trans>View post</Trans>{' '}\n              </span>\n              &raquo;\n            </Link>\n          )}\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex - 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" alt={t`Previous`} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex + 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" alt={t`Next`} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './open-link-sheet.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport showToast from '../utils/show-toast';\n\nimport Icon from './icon';\n\nexport default function OpenLinkSheet({ url, linkText, onClose }) {\n  const { t } = useLingui();\n  if (!url) return null;\n\n  let displayUrl = url;\n  try {\n    const urlObj = URL.parse(url);\n    const protocol = urlObj.protocol;\n    const hostname = urlObj.hostname;\n    const rest = url.slice(urlObj.origin.length);\n    displayUrl = (\n      <>\n        {protocol}//<strong>{hostname}</strong>\n        {rest}\n      </>\n    );\n  } catch (e) {}\n\n  const handleCopy = () => {\n    try {\n      navigator.clipboard.writeText(url);\n      showToast(t`Link copied`);\n    } catch (e) {\n      console.error(e);\n      showToast(t`Unable to copy link`);\n    }\n  };\n\n  const handleShare = () => {\n    if (navigator.share && navigator.canShare({ url })) {\n      try {\n        navigator.share({ url });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n\n  return (\n    <div class=\"sheet sheet-modal\" id=\"open-link-sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Open link?</Trans>\n        </h2>\n      </header>\n      <main>\n        {!!linkText && (\n          <>\n            <p class=\"link-text\">\n              <Icon icon=\"cursor-hand\" size=\"xl\" /> {linkText}\n            </p>\n            <div class=\"arrow\">\n              <Icon icon=\"arrow-down\" />\n            </div>\n          </>\n        )}\n        <p class=\"full-url\">{displayUrl}</p>\n      </main>\n      <footer>\n        <button type=\"button\" class=\"light\" onClick={onClose}>\n          <Trans>Cancel</Trans>\n        </button>\n        <span class=\"spacer\" />\n        <button type=\"button\" class=\"plain6\" onClick={handleCopy}>\n          <Icon icon=\"copy\" alt={t`Copy`} />\n        </button>\n        {navigator.canShare && navigator.canShare({ url }) && (\n          <button type=\"button\" class=\"plain6\" onClick={handleShare}>\n            <Icon icon=\"share\" alt={t`Share…`} />\n          </button>\n        )}\n        <a\n          class=\"button\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          onClick={onClose}\n        >\n          <Trans>Open</Trans>\n        </a>\n      </footer>\n    </div>\n  );\n}\n","import './report-modal.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport localeMatch from '../utils/locale-match';\nimport showToast from '../utils/show-toast';\nimport { getCurrentInstance } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Status from './status';\n\n// NOTE: `dislike` hidden for now, it's actually not used for reporting\n// Mastodon shows another screen for unfollowing, muting or blocking instead of reporting\n\nconst CATEGORIES = [/*'dislike' ,*/ 'spam', 'legal', 'violation', 'other'];\n// `violation` will be set if there are `rule_ids[]`\n\nconst CATEGORIES_INFO = {\n  // dislike: {\n  //   label: 'Dislike',\n  //   description: 'Not something you want to see',\n  // },\n  spam: {\n    label: msg`Spam`,\n    description: msg`Malicious links, fake engagement, or repetitive replies`,\n  },\n  legal: {\n    label: msg`Illegal`,\n    description: msg`Violates the law of your or the server's country`,\n  },\n  violation: {\n    label: msg`Server rule violation`,\n    description: msg`Breaks specific server rules`,\n    stampLabel: msg`Violation`,\n  },\n  other: {\n    label: msg`Other`,\n    description: msg`Issue doesn't fit other categories`,\n    excludeStamp: true,\n  },\n};\n\nfunction findMatchingLanguage(rule, currentLang) {\n  if (!rule.translations || !currentLang) return null;\n  const availableLanguages = Object.keys(rule.translations);\n  if (!availableLanguages?.length) return null;\n\n  let matchedLang = localeMatch([currentLang], availableLanguages, null);\n  if (!matchedLang) {\n    // localeMatch fails if there are keys like zhCn, zhTw\n    // Convert them something like zh-CN first, try again\n    // Detect uppercase, then split by dash\n    const normalizedLanguages = availableLanguages.map((lang) => {\n      const parts = lang.split(/(?=[A-Z])/);\n      return parts\n        .map((part, i) => (i === 0 ? part : part.toLowerCase()))\n        .join('-');\n    });\n    matchedLang = localeMatch([currentLang], normalizedLanguages, null);\n  }\n\n  // If matchedLang has dash, convert back to original format\n  // E.g. zh-cn to zhCn\n  if (matchedLang && matchedLang.includes('-')) {\n    const [lang, region] = matchedLang.split('-');\n    matchedLang = lang + region.charAt(0).toUpperCase() + region.slice(1);\n  }\n\n  return matchedLang;\n}\n\nfunction translateRules(rules, currentLang) {\n  if (!rules?.length) return [];\n  if (!currentLang) return rules;\n  return rules.map((rule) => {\n    const matchedLang = findMatchingLanguage(rule, currentLang);\n    return {\n      ...rule,\n      _translatedText: rule.translations?.[matchedLang]?.text || null,\n    };\n  });\n}\n\nfunction ReportModal({ account, post, onClose }) {\n  const { _, t, i18n } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [username, domain] = account.acct.split('@');\n\n  const [translatedRules, currentDomain] = useMemo(() => {\n    const { rules, domain } = getCurrentInstance();\n    const rawRules = rules || [];\n    return [translateRules(rawRules, i18n.locale), domain];\n  }, [i18n.locale]);\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  const rulesRef = useRef(null);\n  const [hasRules, setHasRules] = useState(false);\n\n  return (\n    <div class=\"report-modal-container\">\n      <div class=\"top-controls\">\n        <h1>{post ? t`Report Post` : t`Report @${username}`}</h1>\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          disabled={uiState === 'loading'}\n          onClick={() => onClose()}\n        >\n          <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n        </button>\n      </div>\n      <main>\n        <div class=\"report-preview\">\n          {post ? (\n            <Status status={post} size=\"s\" previewMode />\n          ) : (\n            <AccountBlock\n              account={account}\n              avatarSize=\"xxl\"\n              useAvatarStatic\n              showStats\n              showActivity\n            />\n          )}\n        </div>\n        {!!selectedCategory &&\n          !CATEGORIES_INFO[selectedCategory].excludeStamp && (\n            <span\n              class=\"rubber-stamp\"\n              key={selectedCategory}\n              aria-hidden=\"true\"\n            >\n              {_(\n                CATEGORIES_INFO[selectedCategory].stampLabel ||\n                  _(CATEGORIES_INFO[selectedCategory].label),\n              )}\n              <small>\n                <Trans>Pending review</Trans>\n              </small>\n            </span>\n          )}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n\n            let { category, comment, forward } = entries;\n            if (!comment) comment = undefined;\n            if (forward === 'on') forward = true;\n            const ruleIds =\n              category === 'violation'\n                ? Object.entries(entries)\n                    .filter(([key]) => key.startsWith('rule_ids'))\n                    .map(([key, value]) => value)\n                : undefined;\n\n            const params = {\n              category,\n              comment,\n              forward,\n              ruleIds,\n            };\n            console.log('PARAMS', params);\n\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.reports.create({\n                  accountId: account.id,\n                  statusIds: post?.id ? [post.id] : undefined,\n                  category,\n                  comment,\n                  ruleIds,\n                  forward,\n                });\n                setUIState('success');\n                showToast(post ? t`Post reported` : t`Profile reported`);\n                onClose();\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                showToast(\n                  error?.message ||\n                    (post\n                      ? t`Unable to report post`\n                      : t`Unable to report profile`),\n                );\n              }\n            })();\n          }}\n        >\n          <p>\n            {post\n              ? t`What's the issue with this post?`\n              : t`What's the issue with this profile?`}\n          </p>\n          <section class=\"report-categories\">\n            {CATEGORIES.map((category) =>\n              category === 'violation' && !translatedRules?.length ? null : (\n                <Fragment key={category}>\n                  <label class=\"report-category\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category}\n                      required\n                      disabled={uiState === 'loading'}\n                      onChange={(e) => {\n                        setSelectedCategory(e.target.value);\n                        setShowRules(e.target.value === 'violation');\n                      }}\n                    />\n                    <span>\n                      {_(CATEGORIES_INFO[category].label)} &nbsp;\n                      <small class=\"ib insignificant\">\n                        {_(CATEGORIES_INFO[category].description)}\n                      </small>\n                    </span>\n                  </label>\n                  {category === 'violation' && !!translatedRules?.length && (\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!showRules}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <div class=\"report-rules\" ref={rulesRef}>\n                          {translatedRules.map((rule, i) => (\n                            <label class=\"report-rule\" key={rule.id}>\n                              <input\n                                type=\"checkbox\"\n                                name={`rule_ids[${i}]`}\n                                value={rule.id}\n                                required={showRules && !hasRules}\n                                disabled={uiState === 'loading'}\n                                onChange={(e) => {\n                                  const { checked } = e.target;\n                                  if (checked) {\n                                    setHasRules(true);\n                                  } else {\n                                    const checkedInputs =\n                                      rulesRef.current.querySelectorAll(\n                                        'input:checked',\n                                      );\n                                    if (!checkedInputs.length) {\n                                      setHasRules(false);\n                                    }\n                                  }\n                                }}\n                              />\n                              <span>{rule._translatedText || rule.text}</span>\n                            </label>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </section>\n          <section class=\"report-comment\">\n            <p>\n              <label for=\"report-comment\">\n                <Trans>Additional info</Trans>\n              </label>\n            </p>\n            <textarea\n              maxlength=\"1000\"\n              rows=\"1\"\n              name=\"comment\"\n              id=\"report-comment\"\n              disabled={uiState === 'loading'}\n              required={!post} // Required if not reporting a post\n            />\n          </section>\n          {!!domain && domain !== currentDomain && (\n            <section>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    switch\n                    name=\"forward\"\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <span>\n                    <Trans>\n                      Forward to <i>{domain}</i>\n                    </Trans>\n                  </span>\n                </label>\n              </p>\n            </section>\n          )}\n          <footer>\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              <Trans>Send Report</Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).mute(); // Infinite duration\n                  showToast(t`Muted ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to mute ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Mute profile</small>\n              </Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).block();\n                  showToast(t`Blocked ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to block ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Block profile</small>\n              </Trans>\n            </button>\n            <Loader hidden={uiState !== 'loading'} />\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ReportModal;\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags\n    .list({\n      limit: LIMIT,\n    })\n    .values();\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { msg, t } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport { getLists, getListTitle } from '../utils/lists';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: msg`Home / Following`,\n  notifications: msg`Notifications`,\n  list: msg`Lists`,\n  public: msg`Public (Local / Federated)`,\n  search: msg`Search`,\n  'account-statuses': msg`Account`,\n  bookmarks: msg`Bookmarks`,\n  favourites: msg`Likes`,\n  hashtag: msg`Hashtag`,\n  trending: msg`Trending`,\n  mentions: msg`Mentions`,\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: msg`List ID`,\n      name: 'id',\n      notRequired: true,\n    },\n  ],\n  public: [\n    {\n      text: msg`Local only`,\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: msg`Search term`,\n      name: 'query',\n      type: 'text',\n      placeholder: msg`Optional, unless for multi-column mode`,\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: msg`e.g. PixelArt (Max 5, space-separated)`,\n      pattern: '[^#]+',\n    },\n    {\n      text: msg`Media only`,\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n};\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) =>\n      index === 0\n        ? t`Home`\n        : t({ id: 'following.title', message: 'Following' }),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: msg`Mentions`,\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: msg`Notifications`,\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: ({ id }) => (id ? 'list' : 'lists'),\n    title: ({ id }) => (id ? getListTitle(id) : t`Lists`),\n    path: ({ id }) => (id ? `/l/${id}` : '/l'),\n    icon: 'list',\n    excludeViewMode: ({ id }) => (!id ? ['multi-column'] : []),\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? t`Local` : t`Federated`),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: msg`Trending`,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : t`Search`),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: msg`Bookmarks`,\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: msg`Likes`,\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> <Trans>Shortcuts</Trans>{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            <Trans>beta</Trans>\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>\n          <Trans>Specify a list of shortcuts that'll appear&nbsp;as:</Trans>\n        </p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: t`Floating button`,\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: t`Tab/Menu bar`,\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: t`Multi-column`,\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                } else {\n                  title = _(title);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                } else {\n                  subtitle = _(subtitle);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          <Trans>Not available in current view mode</Trans>\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt={t`Move up`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt={t`Move down`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt={t`Edit`} />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    <Trans>\n                      Add more than one shortcut/column to make this work.\n                    </Trans>\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`No columns yet. Tap on the Add column button.`\n                : t`No shortcuts yet. Tap on the Add shortcut button.`}\n            </p>\n            <p>\n              <Trans>\n                Not sure what to add?\n                <br />\n                Try adding{' '}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.shortcuts = [\n                      {\n                        type: 'following',\n                      },\n                      {\n                        type: 'notifications',\n                      },\n                    ];\n                  }}\n                >\n                  Home / Following and Notifications\n                </a>{' '}\n                first.\n              </Trans>\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? t`Max ${SHORTCUTS_LIMIT} columns`\n              : t`Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            <Trans>Import/export</Trans>\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`Add column…`\n                : t`Add shortcut…`}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FORM_NOTES = {\n  list: msg`Specific list is optional. For multi-column mode, list is required, else the column will not be shown.`,\n  search: msg`For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: msg`Multiple hashtags are supported. Space-separated.`,\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  const { _ } = useLingui();\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await getLists();\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit shortcut` : t`Add shortcut`}</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>\n                <Trans>Timeline</Trans>\n              </span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n                dir=\"auto\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{_(TYPE_TEXT[type])}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>\n                        <Trans>List</Trans>\n                      </span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                        dir=\"auto\"\n                      >\n                        <option value=\"\"></option>\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{_(text)}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={_(placeholder)}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                      dir=\"auto\"\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {_(FORM_NOTES[currentType])}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? t`Save` : t`Add`}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                <Trans>Remove</Trans>\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>\n            Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n          </Trans>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Import</Trans>\n            </span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder={t`Paste shortcuts here`}\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n              dir=\"auto\"\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = getCurrentAccountID();\n                  showToast(\n                    t`Downloading saved shortcuts from instance server…`,\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to download shortcuts`);\n                  }\n                }}\n                title={t`Download shortcuts from instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {_(TYPE_TEXT[shortcut.type])}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>\n                    <Trans>* Exists in current shortcuts</Trans>\n                  </small>\n                  <br />\n                  <small>\n                    ⚠️{' '}\n                    <Trans>\n                      List may not work if it's from a different account.\n                    </Trans>\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>\n                ⚠️ <Trans>Invalid settings format</Trans>\n              </small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel={t`Append to current shortcuts?`}\n                  menuFooter={\n                    <div class=\"footer\">\n                      <Trans>\n                        Only shortcuts that don’t exist in current shortcuts\n                        will be appended.\n                      </Trans>\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast(t`No new shortcuts to import`);\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? t`Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : t`Shortcuts imported`,\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    <Trans>Import & append…</Trans>\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? t`Override current shortcuts?`\n                  : t`Import shortcuts?`\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast(t`Shortcuts imported`);\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? t`or override…` : t`Import…`}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Export</Trans>\n            </span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast(t`Shortcuts copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcuts`);\n                }\n              }}\n              dir=\"auto\"\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast(t`Shortcut settings copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcut settings`);\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" />{' '}\n              <span>\n                <Trans>Copy</Trans>\n              </span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Sharing doesn't seem to work.`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" />{' '}\n                  <span>\n                    <Trans>Share</Trans>\n                  </span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = getCurrentAccountID();\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      const settingsJSON = JSON.stringify({\n                        v: '1', // version\n                        dt: Date.now(), // datetime stamp\n                        data: shortcutsStr, // shortcuts settings string\n                      });\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast(t`Saving shortcuts to instance server…`);\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast(t`Shortcuts saved`);\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to save shortcuts`);\n                  }\n                }}\n                title={t`Sync to instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                <Plural\n                  value={shortcutsStr.length}\n                  one=\"# character\"\n                  other=\"# characters\"\n                />\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>\n                  <Trans>Raw Shortcuts JSON</Trans>\n                </small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" />{' '}\n              <Trans>\n                Import/export settings from/to instance server (Very\n                experimental)\n              </Trans>\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect } from 'preact/hooks';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { subscribe, useSnapshot } from 'valtio';\n\nimport Accounts from '../pages/accounts';\nimport Settings from '../pages/settings';\nimport focusDeck from '../utils/focus-deck';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport AccountSheet from './account-sheet';\nimport ComposeSuspense, { preload } from './compose-suspense';\nimport Drafts from './drafts';\nimport EmbedModal from './embed-modal';\nimport GenericAccounts from './generic-accounts';\nimport MediaAltModal from './media-alt-modal';\nimport MediaModal from './media-modal';\nimport Modal from './modal';\nimport OpenLinkSheet from './open-link-sheet';\nimport ReportModal from './report-modal';\nimport ShortcutsSettings from './shortcuts-settings';\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // When closing modal, focus on deck\n    if (/^show/i.test(path) && !value) {\n      focusDeck();\n    }\n  }\n});\n\nexport default function Modals() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(preload, 1000);\n  }, []);\n\n  return (\n    <>\n      {!!snapStates.showCompose && (\n        <Modal\n          class={`solid ${snapStates.composerState.minimized ? 'min' : ''}`}\n          minimized={!!snapStates.composerState.minimized}\n        >\n          <ComposeSuspense\n            replyToStatus={\n              typeof snapStates.showCompose !== 'boolean'\n                ? snapStates.showCompose.replyToStatus\n                : window.__COMPOSE__?.replyToStatus || null\n            }\n            editStatus={\n              states.showCompose?.editStatus ||\n              window.__COMPOSE__?.editStatus ||\n              null\n            }\n            draftStatus={\n              states.showCompose?.draftStatus ||\n              window.__COMPOSE__?.draftStatus ||\n              null\n            }\n            quoteStatus={\n              states.showCompose?.quoteStatus ||\n              window.__COMPOSE__?.quoteStatus ||\n              null\n            }\n            onClose={(results) => {\n              const { newStatus, instance, type, scheduledAt } = results || {};\n              states.showCompose = false;\n              window.__COMPOSE__ = null;\n              if (newStatus) {\n                states.reloadStatusPage++;\n                if (scheduledAt) states.reloadScheduledPosts++;\n                showToast({\n                  text: {\n                    post: scheduledAt\n                      ? t`Post scheduled`\n                      : t`Post published. Check it out.`,\n                    reply: scheduledAt\n                      ? t`Reply scheduled`\n                      : t`Reply posted. Check it out.`,\n                    edit: t`Post updated. Check it out.`,\n                  }[type || 'post'],\n                  delay: 1000,\n                  duration: 10_000, // 10 seconds\n                  onClick: (toast) => {\n                    toast.hideToast();\n                    states.prevLocation = location;\n                    if (scheduledAt) {\n                      navigate('/sp');\n                    } else {\n                      navigate(\n                        instance\n                          ? `/${instance}/s/${newStatus.id}`\n                          : `/s/${newStatus.id}`,\n                      );\n                    }\n                  },\n                });\n              }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showSettings && (\n        <Modal\n          onClose={() => {\n            states.showSettings = false;\n          }}\n        >\n          <Settings\n            onClose={() => {\n              states.showSettings = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccounts && (\n        <Modal\n          onClose={() => {\n            states.showAccounts = false;\n          }}\n        >\n          <Accounts\n            onClose={() => {\n              states.showAccounts = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccount && (\n        <Modal\n          onClose={() => {\n            states.showAccount = false;\n          }}\n        >\n          <AccountSheet\n            account={snapStates.showAccount?.account || snapStates.showAccount}\n            instance={snapStates.showAccount?.instance}\n            onClose={({ destination } = {}) => {\n              states.showAccount = false;\n              // states.showGenericAccounts = false;\n              // if (destination) {\n              //   states.showAccounts = false;\n              // }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showOpenLink && (\n        <Modal\n          onClose={() => {\n            states.showOpenLink = false;\n          }}\n        >\n          <OpenLinkSheet\n            url={snapStates.showOpenLink.url}\n            linkText={snapStates.showOpenLink.linkText}\n            onClose={() => {\n              states.showOpenLink = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showDrafts && (\n        <Modal\n          onClose={() => {\n            states.showDrafts = false;\n          }}\n        >\n          <Drafts onClose={() => (states.showDrafts = false)} />\n        </Modal>\n      )}\n      {!!snapStates.showMediaModal && (\n        <Modal\n          onClick={(e) => {\n            if (\n              e.target === e.currentTarget ||\n              e.target.classList.contains('media')\n            ) {\n              states.showMediaModal = false;\n            }\n          }}\n        >\n          <MediaModal\n            mediaAttachments={snapStates.showMediaModal.mediaAttachments}\n            instance={snapStates.showMediaModal.instance}\n            index={snapStates.showMediaModal.mediaIndex}\n            statusID={snapStates.showMediaModal.statusID}\n            onClose={() => {\n              states.showMediaModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showShortcutsSettings && (\n        <Modal\n          onClose={() => {\n            states.showShortcutsSettings = false;\n          }}\n        >\n          <ShortcutsSettings\n            onClose={() => (states.showShortcutsSettings = false)}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showGenericAccounts && (\n        <Modal\n          onClose={() => {\n            states.showGenericAccounts = false;\n          }}\n        >\n          <GenericAccounts\n            instance={snapStates.showGenericAccounts.instance}\n            excludeRelationshipAttrs={\n              snapStates.showGenericAccounts.excludeRelationshipAttrs\n            }\n            postID={snapStates.showGenericAccounts.postID}\n            onClose={() => (states.showGenericAccounts = false)}\n            blankCopy={snapStates.showGenericAccounts.blankCopy}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showMediaAlt && (\n        <Modal\n          onClose={(e) => {\n            states.showMediaAlt = false;\n          }}\n        >\n          <MediaAltModal\n            alt={snapStates.showMediaAlt.alt || snapStates.showMediaAlt}\n            lang={snapStates.showMediaAlt?.lang}\n            onClose={() => {\n              states.showMediaAlt = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showEmbedModal && (\n        <Modal\n          class=\"solid\"\n          onClose={() => {\n            states.showEmbedModal = false;\n          }}\n        >\n          <EmbedModal\n            html={snapStates.showEmbedModal.html}\n            url={snapStates.showEmbedModal.url}\n            width={snapStates.showEmbedModal.width}\n            height={snapStates.showEmbedModal.height}\n            onClose={() => {\n              states.showEmbedModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showReportModal && (\n        <Modal\n          onClose={() => {\n            states.showReportModal = false;\n          }}\n        >\n          <ReportModal\n            account={snapStates.showReportModal.account}\n            post={snapStates.showReportModal.post}\n            onClose={() => {\n              states.showReportModal = false;\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        <Trans>Accept</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        <Trans>Reject</Trans>\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon\n              icon=\"check-circle\"\n              alt={t`Accepted`}\n              class=\"follow-accepted\"\n            />\n          ) : (\n            <Icon icon=\"x-circle\" alt={t`Rejected`} class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { msg, t } from '@lingui/core/macro';\nimport { Plural, Select, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport { api } from '../utils/api';\nimport { isFiltered } from '../utils/filters';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { statusKey } from '../utils/states';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport CustomEmoji from './custom-emoji';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n  severed_relationships: 'heart-break',\n  moderation_warning: 'alert',\n  emoji_reaction: 'emoji2',\n  'pleroma:emoji_reaction': 'emoji2',\n  annual_report: 'celebrate',\n  quote: 'quote',\n  quoted_update: 'pencil',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\nsevered_relationships = Severed relationships\nmoderation_warning = Moderation warning\nquote = Someone quoted one of your statuses\nquoted_update = A status you have quoted has been edited\n*/\n\nfunction emojiText({ account, emoji, emoji_url }) {\n  let url;\n  let staticUrl;\n  if (typeof emoji_url === 'string') {\n    url = emoji_url;\n  } else {\n    url = emoji_url?.url;\n    staticUrl = emoji_url?.staticUrl;\n  }\n  const emojiObject = url ? (\n    <CustomEmoji url={url} staticUrl={staticUrl} alt={emoji} />\n  ) : (\n    emoji\n  );\n  return (\n    <Trans>\n      {account} reacted to your post with {emojiObject}\n    </Trans>\n  );\n}\n\nconst contentText = {\n  status: ({ account }) => <Trans>{account} published a post.</Trans>,\n  reblog: ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted your reply.</Trans>}\n              other={<Trans>{account} boosted your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  follow: ({ account, count, components: { Subject } }) => (\n    <Plural\n      value={count}\n      _1={<Trans>{account} followed you.</Trans>}\n      other={\n        <Trans>\n          <Subject clickable={count > 1}>\n            <span title={count}>{shortenNumber(count)}</span> people\n          </Subject>{' '}\n          followed you.\n        </Trans>\n      }\n    />\n  ),\n  follow_request: ({ account }) => (\n    <Trans>{account} requested to follow you.</Trans>\n  ),\n  favourite: ({\n    account,\n    count,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} liked your reply.</Trans>}\n              other={<Trans>{account} liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  poll: () => t`A poll you have voted in or created has ended.`,\n  'poll-self': () => t`A poll you have created has ended.`,\n  'poll-voted': () => t`A poll you have voted in has ended.`,\n  update: ({ account }) =>\n    account ? (\n      <Trans>{account} edited a post.</Trans>\n    ) : (\n      t`A post you interacted with has been edited.`\n    ),\n  'favourite+reblog': ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted & liked your reply.</Trans>}\n              other={<Trans>{account} boosted & liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted & liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  quoted_update: ({ account }) => (\n    <Trans>{account} edited a post you have quoted.</Trans>\n  ),\n  'admin.sign_up': ({ account }) => <Trans>{account} signed up.</Trans>,\n  'admin.report': ({ account, targetAccount }) => (\n    <Trans>\n      {account} reported {targetAccount}\n    </Trans>\n  ),\n  severed_relationships: ({ name }) => (\n    <Trans>\n      Lost connections with <i>{name}</i>.\n    </Trans>\n  ),\n  moderation_warning: () => (\n    <b>\n      <Trans>Moderation warning</Trans>\n    </b>\n  ),\n  emoji_reaction: emojiText,\n  'pleroma:emoji_reaction': emojiText,\n  annual_report: ({ year }) => <Trans>Your {year} #Wrapstodon is here!</Trans>,\n};\n\n// account_suspension, domain_block, user_domain_block\nconst SEVERED_RELATIONSHIPS_TEXT = {\n  account_suspension: ({ from, targetName }) => (\n    <Trans>\n      An admin from <i>{from}</i> has suspended <i>{targetName}</i>, which means\n      you can no longer receive updates from them or interact with them.\n    </Trans>\n  ),\n  domain_block: ({ from, targetName, followersCount, followingCount }) => (\n    <Trans>\n      An admin from <i>{from}</i> has blocked <i>{targetName}</i>. Affected\n      followers: {followersCount}, followings: {followingCount}.\n    </Trans>\n  ),\n  user_domain_block: ({ targetName, followersCount, followingCount }) => (\n    <Trans>\n      You have blocked <i>{targetName}</i>. Removed followers: {followersCount},\n      followings: {followingCount}.\n    </Trans>\n  ),\n};\n\nconst MODERATION_WARNING_TEXT = {\n  none: msg`Your account has received a moderation warning.`,\n  disable: msg`Your account has been disabled.`,\n  mark_statuses_as_sensitive: msg`Some of your posts have been marked as sensitive.`,\n  delete_statuses: msg`Some of your posts have been deleted.`,\n  sensitive: msg`Your posts will be marked as sensitive from now on.`,\n  silence: msg`Your account has been limited.`,\n  suspend: msg`Your account has been suspended.`,\n};\n\nconst AVATARS_LIMIT = 30;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const {\n    id,\n    status,\n    account,\n    report,\n    event,\n    moderation_warning,\n    annualReport,\n    // Client-side grouped notification\n    _ids,\n    _accounts,\n    _statuses,\n    _groupKeys,\n    // Server-side grouped notification\n    sampleAccounts,\n    notificationsCount,\n    groupKey,\n    _notificationsCount,\n    _sampleAccountsCount,\n  } = notification;\n  let { type } = notification;\n\n  if ((type === 'mention' || type === 'quote') && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = getCurrentAccountID();\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    if (_accounts) {\n      for (const account of _accounts) {\n        if (account._types?.includes('favourite')) {\n          favsCount++;\n        }\n        if (account._types?.includes('reblog')) {\n          reblogsCount++;\n        }\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = t`[Unknown notification type: ${type}]`;\n  }\n\n  const Subject = ({ clickable, ...props }) =>\n    clickable ? (\n      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts} {...props} />\n    ) : (\n      <b {...props} />\n    );\n\n  const diffCount =\n    notificationsCount > 0 && notificationsCount > sampleAccounts?.length;\n  const expandAccounts = diffCount ? 'remote' : 'local';\n\n  if (typeof text === 'function') {\n    const count =\n      (type === 'favourite' || type === 'reblog') && notificationsCount\n        ? diffCount\n          ? notificationsCount\n          : sampleAccounts?.length\n        : _accounts?.length || sampleAccounts?.length || (account ? 1 : 0);\n    const postsCount = _statuses?.length || (status ? 1 : 0);\n    if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text({\n          account: <NameText account={account} showAvatar />,\n          targetAccount: <NameText account={targetAccount} showAvatar />,\n        });\n      }\n    } else if (type === 'severed_relationships') {\n      const targetName = event?.targetName;\n      if (targetName) {\n        text = text({ name: targetName });\n      }\n    } else if (\n      (type === 'emoji_reaction' || type === 'pleroma:emoji_reaction') &&\n      notification.emoji\n    ) {\n      const emojiURL =\n        notification.emoji_url || // This is string\n        status?.emojis?.find?.(\n          (emoji) =>\n            emoji?.shortcode ===\n            notification.emoji.replace(/^:/, '').replace(/:$/, ''),\n        ); // Emoji object instead of string\n      text = text({\n        account: <NameText account={account} showAvatar />,\n        emoji: notification.emoji,\n        emojiURL,\n      });\n    } else if (type === 'annual_report') {\n      text = text({\n        ...notification.annualReport,\n      });\n    } else {\n      text = text({\n        account: account ? (\n          <NameText account={account} showAvatar />\n        ) : (\n          sampleAccounts?.[0] && (\n            <NameText account={sampleAccounts[0]} showAvatar />\n          )\n        ),\n        count,\n        postsCount,\n        postType: isReplyToOthers ? 'reply' : 'post',\n        components: { Subject },\n      });\n    }\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': t`Boosted/Liked by…`,\n      favourite: t`Liked by…`,\n      reblog: t`Boosted by…`,\n      follow: t`Followed by…`,\n    }[type] || t`Accounts`;\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n      postID: statusKey(actualStatusID, instance),\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  // If there's a status and filter action is 'hide', then the notification is hidden\n  if (!!status?.filtered) {\n    const isOwnPost = status?.account?.id === currentAccount;\n    const filterInfo = isFiltered(status.filtered, 'notifications');\n    if (!isSelf && !isOwnPost && filterInfo?.action === 'hide') {\n      return null;\n    }\n  }\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={_ids || id}\n      data-group-key={_groupKeys?.join(' ') || groupKey}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {/* {(type === 'favourite+reblog' ||\n          type === 'favourite' ||\n          type === 'reblog') && (\n          <>\n            💥 {type} {expandAccounts}{' '}\n            <mark>\n              N{_notificationsCount?.join(',')} + A\n              {_sampleAccountsCount?.join(',')}\n            </mark>{' '}\n            ‒{' '}\n            <mark>\n              N{notificationsCount} + A{sampleAccounts?.length}\n            </mark>\n          </>\n        )} */}\n        {type !== 'mention' && type !== 'quote' && (\n          <>\n            <p>{text}</p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n            {type === 'severed_relationships' && (\n              <div>\n                {SEVERED_RELATIONSHIPS_TEXT[event.type]({\n                  from: instance,\n                  ...event,\n                })}\n                <br />\n                <a\n                  href={`https://${instance}/severed_relationships`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n                .\n              </div>\n            )}\n            {type === 'moderation_warning' && !!moderation_warning && (\n              <div>\n                {_(MODERATION_WARNING_TEXT[moderation_warning.action]())}\n                <br />\n                <a\n                  href={`/disputes/strikes/${moderation_warning.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n              </div>\n            )}\n            {type === 'annual_report' && (\n              <div>\n                <Link to={`/annual_report/${annualReport?.year}`}>\n                  <Trans>View #Wrapstodon</Trans>\n                </Link>\n              </div>\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                          ? 'xl'\n                          : 'l'\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {(type === 'favourite+reblog' ||\n              type === 'favourite' ||\n              type === 'reblog') &&\n            expandAccounts === 'remote' ? (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                data-group-keys={_groupKeys?.join(' ')}\n                onClick={() => {\n                  states.showGenericAccounts = {\n                    heading: genericAccountsHeading,\n                    accounts: _accounts,\n                    fetchAccounts: async () => {\n                      const keyAccounts = await Promise.allSettled(\n                        _groupKeys.map(async (gKey) => {\n                          const iterator = masto.v2.notifications\n                            .$select(gKey)\n                            .accounts.list()\n                            .values();\n                          return [gKey, (await iterator.next()).value];\n                        }),\n                      );\n                      const accounts = [];\n                      for (const keyAccount of keyAccounts) {\n                        const [key, _accounts] = keyAccount.value;\n                        const type = /^favourite/.test(key)\n                          ? 'favourite'\n                          : /^reblog/.test(key)\n                            ? 'reblog'\n                            : null;\n                        if (!type) continue;\n                        for (const account of _accounts) {\n                          const theAccount = accounts.find(\n                            (a) => a.id === account.id,\n                          );\n                          if (theAccount) {\n                            theAccount._types.push(type);\n                          } else {\n                            account._types = [type];\n                            accounts.push(account);\n                          }\n                        }\n                      }\n                      return {\n                        done: true,\n                        value: accounts,\n                      };\n                    },\n                    showReactions: type === 'favourite+reblog',\n                    postID: statusKey(actualStatusID, instance),\n                  };\n                }}\n              >\n                +\n                {(type === 'favourite' || type === 'reblog') &&\n                  notificationsCount - _accounts.length}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                class=\"small plain\"\n                onClick={handleOpenGenericAccounts}\n              >\n                {_accounts.length > AVATARS_LIMIT &&\n                  `+${_accounts.length - AVATARS_LIMIT}`}\n                <Icon icon=\"chevron-down\" />\n              </button>\n            )}\n          </p>\n        )}\n        {!_accounts?.length && sampleAccounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {sampleAccounts.map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size=\"xxl\"\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {/* {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )} */}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {notificationsCount > sampleAccounts.length && (\n              <Link\n                to={\n                  instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                }\n                class=\"button small plain centered\"\n              >\n                +{notificationsCount - sampleAccounts.length}\n                <Icon icon=\"chevron-right\" />\n              </Link>\n            )}\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                    allowFilters\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n                allowFilters\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n                allowFilters\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more={t`Read more →`} ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  const { t } = useLingui();\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <b>\n              <Trans>Notification</Trans>\n            </b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>\n                <Trans>This notification is from your other account.</Trans>\n              </p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>\n                  <Trans>View all notifications</Trans>\n                </span>{' '}\n                <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import store from './store';\n\nexport const getSearchHistory = ({ limit } = {}) => {\n  const history = store.account.get('searchHistory') || [];\n  return limit ? history.slice(0, limit) : history;\n};\n\nconst MAX_HISTORY_LENGTH = 10;\nexport const addToSearchHistory = (query, queryType = null) => {\n  if (!query?.trim?.()) return;\n\n  const history = getSearchHistory();\n  const existingIndex = history.findIndex(\n    (item) => item.query === query && item.queryType === queryType,\n  );\n\n  // LRU\n  // Remove existing entry if found\n  if (existingIndex !== -1) {\n    history.splice(existingIndex, 1);\n  }\n  // Add to beginning (most recent)\n  history.unshift({\n    query: query.trim(),\n    queryType,\n    timestamp: Date.now(),\n  });\n  const limitedHistory = history.slice(0, MAX_HISTORY_LENGTH);\n\n  store.account.set('searchHistory', limitedHistory);\n};\n\nexport const removeFromSearchHistory = (query, queryType = null) => {\n  const history = getSearchHistory();\n  const filteredHistory = history.filter(\n    (item) => !(item.query === query && item.queryType === queryType),\n  );\n  store.account.set('searchHistory', filteredHistory);\n};\n\nexport const clearAllSearchHistory = () => {\n  store.account.set('searchHistory', []);\n};\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\nimport { addToSearchHistory, getSearchHistory } from '../utils/search-history';\n\nimport Icon from './icon';\nimport Link from './link';\n\n// Helper function to generate search item data (label and URL)\nexport const generateSearchItemData = (query, queryType, instance) => {\n  let label, to, icon;\n\n  if (queryType === 'statuses') {\n    label = (\n      <Trans>\n        Posts with <q>{query}</q>\n      </Trans>\n    );\n    to = `/search?q=${encodeURIComponent(query)}&type=statuses`;\n    icon = 'document';\n  } else if (queryType === 'accounts') {\n    label = (\n      <Trans>\n        Accounts with <q>{query}</q>\n      </Trans>\n    );\n    to = `/search?q=${encodeURIComponent(query)}&type=accounts`;\n    icon = 'group';\n  } else if (queryType === 'hashtags') {\n    label = (\n      <Trans>\n        Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n      </Trans>\n    );\n    to = `/${instance}/t/${query.replace(/^#/, '')}`;\n    icon = 'hashtag';\n  } else {\n    // Default/general search\n    label = (\n      <Trans>\n        {query}{' '}\n        <small class=\"insignificant\">‒ accounts, hashtags &amp; posts</small>\n      </Trans>\n    );\n    to = `/search?q=${encodeURIComponent(query)}`;\n    icon = 'search';\n  }\n\n  return { label, to, icon };\n};\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { t } = useLingui();\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  const searchHistory = useMemo(\n    () => getSearchHistory({ limit: 5 }),\n    [props?.hidden],\n  );\n\n  const searchSuggestionsData = useMemo(() => {\n    if (!query) return [];\n\n    const matchingHistory = searchHistory\n      .filter((historyItem) => {\n        // Filter out exact matches with current query\n        if (historyItem.query === query) return false;\n        // Check if history item contains the current query (case insensitive)\n        return historyItem.query.toLowerCase().includes(query.toLowerCase());\n      })\n      .slice(0, 2); // Max 2 recent searches\n\n    const recentSearchItems = matchingHistory.map((historyItem) => ({\n      ...generateSearchItemData(\n        historyItem.query,\n        historyItem.queryType,\n        instance,\n      ),\n      queryType: historyItem.queryType,\n      isRecentSearch: true,\n      historyItem,\n    }));\n\n    const allItems = [\n      // General search\n      {\n        ...generateSearchItemData(query, null, instance),\n        top: !type && !/\\s/.test(query),\n        hidden: !!type,\n      },\n      // Recent searches\n      ...recentSearchItems,\n      // Posts search\n      {\n        ...generateSearchItemData(query, 'statuses', instance),\n        hidden: /^https?:/.test(query),\n        top: /\\s/.test(query),\n        queryType: 'statuses',\n      },\n      // Hashtag search\n      {\n        ...generateSearchItemData(query, 'hashtags', instance),\n        hidden: /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n        top: /^#/.test(query),\n        type: 'link',\n        queryType: 'hashtags',\n      },\n      // URL lookup (unique case)\n      {\n        label: (\n          <Trans>\n            Look up <mark>{query}</mark>\n          </Trans>\n        ),\n        to: `/${query}`,\n        hidden: !/^https?:/.test(query),\n        top: /^https?:/.test(query),\n        type: 'link',\n        icon: 'arrow-right',\n      },\n      // Accounts search\n      {\n        ...generateSearchItemData(query, 'accounts', instance),\n        queryType: 'accounts',\n      },\n    ];\n\n    return allItems\n      .sort((a, b) => {\n        if (type) {\n          if (a.queryType === type) return -1;\n          if (b.queryType === type) return 1;\n        }\n        if (a.top && !b.top) return -1;\n        if (!a.top && b.top) return 1;\n        return 0;\n      })\n      .filter(({ hidden }) => !hidden);\n  }, [query, type, instance]);\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        addToSearchHistory(query, type);\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder={t`Search`}\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          // Focus first item\n          const firstItem = formRef.current?.querySelector(\n            '.search-popover-item',\n          );\n          if (firstItem) {\n            firstItem.classList.add('focus');\n          }\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const items = document.querySelectorAll(\n                    '.search-popover-item',\n                  );\n                  const lastItem = items[items.length - 1];\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen}>\n        {/* Search History - show when no query */}\n        {!query && searchHistory.length > 0 && (\n          <div class=\"search-popover-recent-searches\">\n            <div class=\"search-popover-header\">\n              <Icon icon=\"history\" size=\"s\" />\n              <Trans>Recent searches</Trans>\n            </div>\n            {searchHistory.map((historyItem, i) => {\n              const { label, to, icon } = generateSearchItemData(\n                historyItem.query,\n                historyItem.queryType,\n                instance,\n              );\n\n              return (\n                <Link\n                  key={`${historyItem.query}-${historyItem.queryType}-${historyItem.timestamp}`}\n                  to={to}\n                  class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                  onClick={(e) => {\n                    addToSearchHistory(\n                      historyItem.query,\n                      historyItem.queryType,\n                    );\n                    props?.onSubmit?.(e);\n                  }}\n                >\n                  <Icon icon={icon} class=\"more-insignificant\" />\n                  <span>{label}</span>\n                </Link>\n              );\n            })}\n            <Link\n              to=\"/search\"\n              class=\"search-popover-item search-history-see-all\"\n            >\n              <Icon icon=\"more2\" class=\"more-insignificant\" />\n              <span>\n                <Trans>See all</Trans>\n              </span>\n            </Link>\n          </div>\n        )}\n\n        {/* Search Suggestions - show when there's a query */}\n        {searchSuggestionsData.map(\n          ({ label, to, icon, queryType, isRecentSearch, historyItem }, i) => (\n            <Link\n              key={\n                isRecentSearch\n                  ? `recent-${historyItem.query}-${historyItem.queryType}-${historyItem.timestamp}`\n                  : `suggestion-${queryType || 'general'}-${i}`\n              }\n              to={to}\n              class={`search-popover-item ${isRecentSearch ? 'search-popover-item-recent' : ''} ${i === 0 ? 'focus' : ''}`}\n              onClick={(e) => {\n                if (!isRecentSearch) {\n                  addToSearchHistory(query, queryType);\n                }\n                props?.onSubmit?.(e);\n              }}\n            >\n              <Icon icon={icon} class=\"more-insignificant\" />\n              <span>{label}</span>\n            </Link>\n          ),\n        )}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return (\n          isSearchPage ||\n          hasModal ||\n          e.metaKey ||\n          e.ctrlKey ||\n          e.altKey ||\n          e.shiftKey\n        );\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const hidden = !showSearch;\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={hidden}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        hidden={hidden}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","import './shortcuts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport ListExclusiveBadge from './list-exclusive-badge';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction Shortcuts() {\n  const { t, _ } = useLingui();\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  const isMultiColumnMode =\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode);\n\n  const menuRef = useRef();\n  const tabBarRef = useRef();\n\n  const hasLists = useRef(false);\n  const formattedShortcuts = shortcuts\n    .map((pin, i) => {\n      const { type, ...data } = pin;\n      if (!SHORTCUTS_META[type]) return null;\n      let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n      if (typeof id === 'function') {\n        id = id(data, i);\n      }\n      if (typeof path === 'function') {\n        path = path(\n          {\n            ...data,\n            instance: data.instance || instance,\n          },\n          i,\n        );\n      }\n      if (typeof title === 'function') {\n        title = title(data, i);\n      } else if (title?.id) {\n        // Check if it's MessageDescriptor\n        title = _(title);\n      }\n      if (typeof subtitle === 'function') {\n        subtitle = subtitle(data, i);\n      } else if (subtitle?.id) {\n        // Check if it's MessageDescriptor\n        subtitle = _(subtitle);\n      }\n      if (typeof icon === 'function') {\n        icon = icon(data, i);\n      }\n\n      if (id === 'lists') {\n        hasLists.current = true;\n      }\n\n      return {\n        id,\n        path,\n        title,\n        subtitle,\n        icon,\n      };\n    })\n    .filter(Boolean);\n\n  // Auto-scroll to active tab on first render\n  useEffect(() => {\n    if (\n      snapStates.settings.shortcutsViewMode === 'tab-menu-bar' &&\n      tabBarRef.current\n    ) {\n      const timeoutId = setTimeout(() => {\n        const activeTab = tabBarRef.current?.querySelector('.is-active');\n        if (activeTab) {\n          activeTab.scrollIntoView({\n            behavior: 'smooth',\n            block: 'nearest',\n            inline: 'center',\n          });\n        }\n      }, 100);\n\n      return () => clearTimeout(timeoutId);\n    }\n  }, []);\n\n  const navigate = useNavigate();\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e) => {\n      const index = parseInt(e.key, 10) - 1;\n      if (index < formattedShortcuts.length) {\n        const { path } = formattedShortcuts[index];\n        if (path) {\n          navigate(path);\n          menuRef.current?.closeMenu?.();\n        }\n      }\n    },\n    {\n      enabled: !isMultiColumnMode,\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const [lists, setLists] = useState([]);\n\n  if (isMultiColumnMode) {\n    return null;\n  }\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          ref={tabBarRef}\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          onMenuChange={(e) => {\n            if (e.open && hasLists.current) {\n              getLists().then(setLists);\n            }\n          }}\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt={t`Shortcuts`} />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            if (id === 'lists') {\n              return (\n                <SubMenu2\n                  menuClassName=\"glass-menu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon={icon} size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <AsyncText>{title}</AsyncText>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuDivider />\n                  {lists?.map((list) => (\n                    <MenuLink key={list.id} to={`/l/${list.id}`}>\n                      <span>\n                        {list.title}\n                        {list.exclusive && (\n                          <>\n                            {' '}\n                            <ListExclusiveBadge />\n                          </>\n                        )}\n                      </span>\n                    </MenuLink>\n                  ))}\n                </SubMenu2>\n              );\n            }\n\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\nimport supports from './supports';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  const inReplyToIds = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    // PREPARE FOR REPLY HINTS\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        inReplyToIds.push({\n          sKey,\n          inReplyToId: item.inReplyToId,\n        });\n        // queueMicrotask(async () => {\n        //   try {\n        //     const { masto } = api({ instance });\n        //     // const replyToStatus = await masto.v1.statuses\n        //     //   .$select(item.inReplyToId)\n        //     //   .fetch();\n        //     const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n        //     saveStatus(replyToStatus, instance, {\n        //       skipThreading: true,\n        //       skipUnfurling: true,\n        //     });\n        //     states.statusReply[sKey] = {\n        //       id: replyToStatus.id,\n        //       instance,\n        //     };\n        //   } catch (e) {\n        //     // Silently fail\n        //     console.error(e);\n        //   }\n        // });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  // FETCH AND SHOW REPLY HINTS\n  if (inReplyToIds?.length) {\n    queueMicrotask(() => {\n      const { masto } = api({ instance });\n      console.log('REPLYHINT', inReplyToIds);\n\n      // Fallback if batch fetch fails or returns nothing or not supported\n      async function fallbackFetch() {\n        for (let i = 0; i < inReplyToIds.length; i++) {\n          const { sKey, inReplyToId } = inReplyToIds[i];\n          try {\n            const replyToStatus = await fetchStatus(inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n            // Pause 1s\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        }\n      }\n\n      if (supports('@mastodon/fetch-multiple-statuses')) {\n        // This is batch fetching yooo, woot\n        // Limit 20, returns 422 if exceeded https://github.com/mastodon/mastodon/pull/27871\n        const ids = inReplyToIds.map(({ inReplyToId }) => inReplyToId);\n        (async () => {\n          try {\n            const replyToStatuses = await masto.v1.statuses.list({ id: ids });\n            if (replyToStatuses?.length) {\n              for (const replyToStatus of replyToStatuses) {\n                saveStatus(replyToStatus, instance, {\n                  skipThreading: true,\n                });\n                const sKey = inReplyToIds.find(\n                  ({ inReplyToId }) => inReplyToId === replyToStatus.id,\n                )?.sKey;\n                if (sKey) {\n                  states.statusReply[sKey] = {\n                    id: replyToStatus.id,\n                    instance,\n                  };\n                }\n              }\n            } else {\n              fallbackFetch();\n            }\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n            fallbackFetch();\n          }\n        })();\n      } else {\n        fallbackFetch();\n      }\n    });\n  }\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  return {\n    resetScrollDirection: () => {\n      scrollDirection.current = null;\n    },\n  };\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { getPreferences } from '../utils/api';\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  const { t } = useLingui();\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const prefs = getPreferences();\n  const readingExpandMedia =\n    prefs['reading:expand:media']?.toLowerCase() || 'default';\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? t`Sensitive media` : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? filterTitleStr\n              ? t`Filtered: ${filterTitleStr}`\n              : t`Filtered`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getAccounts, getCurrentAccountID } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport ListExclusiveBadge from './list-exclusive-badge';\nimport MenuLink from './menu-link';\nimport SubMenu2 from './submenu2';\n\nfunction NavMenu(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, moreThanOneAccount] = useMemo(() => {\n    const accounts = getAccounts();\n    const acc =\n      accounts.find((account) => account.info.id === getCurrentAccountID()) ||\n      accounts[0];\n    return [acc, accounts.length > 1];\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes\n        .list({\n          limit: 80,\n        })\n        .values();\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks\n        .list({\n          limit: 80,\n        })\n        .values();\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${menuState === 'open' ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} alt={t`Menu`} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm(t`Reload page now to update?`);\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>\n                  <Trans>New update available…</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" />{' '}\n            <span>\n              <Trans>Home</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" />{' '}\n                  <span>\n                    <Trans id=\"following.title\">Following</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>\n                  <Trans>Catch-up</Trans>\n                </span>\n              </MenuLink>\n              {supports('@mastodon/mentions') && (\n                <MenuLink to=\"/mentions\">\n                  <Icon icon=\"at\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Mentions</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Notifications</Trans>\n                </span>\n                {snapStates.notificationsShowNew && (\n                  <sup title={t`New`} style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Profile</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <ListMenu menuState={menuState} />\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Bookmarks</Trans>\n                </span>\n              </MenuLink>\n              <SubMenu2\n                menuClassName=\"nav-submenu\"\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">\n                      <Trans>More…</Trans>\n                    </span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Likes</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/fh\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Followed Hashtags</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/sp\">\n                  <Icon icon=\"schedule\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Scheduled Posts</Trans>\n                  </span>\n                </MenuLink>\n                <MenuDivider />\n                {supports('@mastodon/filters') && (\n                  <MenuLink to=\"/ft\">\n                    <Icon icon=\"filters\" size=\"l\" />{' '}\n                    <span>\n                      <Trans>Filters</Trans>\n                    </span>\n                  </MenuLink>\n                )}\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: t`Muted users`,\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Muted users…</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: t`Blocked users`,\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Blocked users…</Trans>\n                  </span>\n                </MenuItem>{' '}\n              </SubMenu2>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Accounts…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Log in</Trans>\n                </span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" />{' '}\n            <span>\n              <Trans>Search</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" />{' '}\n            <span>\n              <Trans>Trending</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" />{' '}\n            <span>\n              <Trans>Local</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" />{' '}\n            <span>\n              <Trans>Federated</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Keyboard shortcuts</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Shortcuts / Columns…</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nfunction ListMenu({ menuState }) {\n  const supportsLists = supports('@mastodon/lists');\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!supportsLists) return;\n    if (menuState === 'open') {\n      getLists().then(setLists);\n    }\n  }, [menuState, supportsLists]);\n\n  return lists.length > 0 ? (\n    <SubMenu2\n      menuClassName=\"nav-submenu\"\n      overflow=\"auto\"\n      gap={-8}\n      label={\n        <>\n          <Icon icon=\"list\" size=\"l\" />\n          <span class=\"menu-grow\">\n            <Trans>Lists</Trans>\n          </span>\n          <Icon icon=\"chevron-right\" />\n        </>\n      }\n    >\n      <MenuLink to=\"/l\">\n        <span>\n          <Trans>All Lists</Trans>\n        </span>\n      </MenuLink>\n      {lists?.length > 0 && (\n        <>\n          <MenuDivider />\n          {lists.map((list) => (\n            <MenuLink key={list.id} to={`/l/${list.id}`}>\n              <span>\n                {list.title}\n                {list.exclusive && (\n                  <>\n                    {' '}\n                    <ListExclusiveBadge />\n                  </>\n                )}\n              </span>\n            </MenuLink>\n          ))}\n        </>\n      )}\n    </SubMenu2>\n  ) : (\n    supportsLists && (\n      <MenuLink to=\"/l\">\n        <Icon icon=\"list\" size=\"l\" />\n        <span>\n          <Trans>Lists</Trans>\n        </span>\n      </MenuLink>\n    )\n  );\n}\n\nexport default memo(NavMenu);\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\nimport ThreadBadge from './thread-badge';\n\nconst scrollIntoViewOptions = {\n  block: 'start',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n  clearWhenRefresh,\n}) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('start');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n  __BENCHMARK.start(`timeline-${id}-load`);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const allowGrouping = view !== 'media';\n  const loadItemsTS = useRef(0); // Ensures only one loadItems at a time\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      // if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          const ts = (loadItemsTS.current = Date.now());\n          let { done, value } = await fetchItems(firstLoad);\n          if (ts !== loadItemsTS.current) return;\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n          __BENCHMARK.end(`timeline-${id}-load`);\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          if (firstLoad && !items.length && errorText) {\n            showToast(errorText);\n          }\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1_000,\n    {\n      leading: true,\n      // trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys(\n    'j, shift+j',\n    (e, handler) => {\n      // Fix bug: shift+j is fired even when j is pressed due to useKey: true\n      if (e.shiftKey !== handler.shift) return;\n\n      // focus on next status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      ).filter((item) => !!item.offsetHeight);\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (handler.shift) {\n          // get next status that's not .timeline-item-alt\n          nextItem = allItems.find(\n            (item, index) =>\n              index > activeItemIndex &&\n              !item.classList.contains('timeline-item-alt'),\n          );\n        }\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k, shift+k',\n    (e, handler) => {\n      // Fix bug: shift+k is fired even when k is pressed due to useKey: true\n      if (e.shiftKey !== handler.shift) return;\n\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      ).filter((item) => !!item.offsetHeight);\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (handler.shift) {\n          // get prev status that's not .timeline-item-alt\n          prevItem = allItems.findLast(\n            (item, index) =>\n              index < activeItemIndex &&\n              !item.classList.contains('timeline-item-alt'),\n          );\n        }\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey,\n    },\n  );\n\n  const oRef = useHotkeys(\n    ['enter', 'o'],\n    () => {\n      // open active status\n      const activeItem = document.activeElement;\n      if (activeItem?.matches(itemsSelector)) {\n        activeItem.click();\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    if (showNewPostsIndicator) loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems, showNewPostsIndicator]);\n  const dotRef = useHotkeys('.', handleLoadNewPosts, {\n    useKey: true,\n    ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n  });\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const { resetScrollDirection } = useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (firstLoad.current) {\n      firstLoad.current = false;\n      return;\n    }\n    if (clearWhenRefresh && items?.length) {\n      loadItems.cancel?.();\n      setItems([]);\n    }\n    loadItems(true);\n  }, [clearWhenRefresh, refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class={`deck-container ${\n          mediaFirst ? 'deck-container-media-first' : ''\n        }`}\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef.current = node;\n          kRef.current = node;\n          oRef.current = node;\n          dotRef.current = node;\n        }}\n        tabIndex=\"-1\"\n        onClick={(e) => {\n          // If click on timeline item, unhide header\n          if (\n            headerRef.current &&\n            e.target.closest('.timeline-item, .timeline-item-alt')\n          ) {\n            setTimeout(() => {\n              headerRef.current.hidden = false;\n              resetScrollDirection();\n            }, 250);\n          }\n        }}\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> <Trans>New posts</Trans>\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                    mediaFirst={mediaFirst}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      <Trans>Show more…</Trans>\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">\n                    <Trans>The end.</Trans>\n                  </p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton mediaFirst={mediaFirst} />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' &&\n            uiState !== 'start' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n    mediaFirst,\n  }) => {\n    const { t } = useLingui();\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n\n    if (items) {\n      let fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = plural(fItems.length, {\n          one: '# Boost',\n          other: '# Boosts',\n        });\n      } else if (type === 'pinned') {\n        title = t`Pinned posts`;\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        const filteredItemsIDs = new Set();\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered && aFiltered?.action !== 'blur') {\n            filteredItemsIDs.add(a.id);\n          }\n          if (bFiltered && bFiltered?.action !== 'blur') {\n            filteredItemsIDs.add(b.id);\n          }\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n\n        if (filteredItemsIDs.size >= 2) {\n          const GROUP_SIZE = 5;\n          // If 2 or more, group filtered items into one, limit to GROUP_SIZE in a group\n          const unfiltered = [];\n          const filtered = [];\n          fItems.forEach((item) => {\n            if (filteredItemsIDs.has(item.id)) {\n              filtered.push(item);\n            } else {\n              unfiltered.push(item);\n            }\n          });\n          const filteredItems = [];\n          for (let i = 0; i < filtered.length; i += GROUP_SIZE) {\n            filteredItems.push({\n              _grouped: true,\n              posts: filtered.slice(i, i + GROUP_SIZE),\n            });\n          }\n          fItems = unfiltered.concat(filteredItems);\n        }\n\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned, _grouped } = item;\n                if (_grouped) {\n                  return (\n                    <li key={statusID} class=\"timeline-item-carousel-group\">\n                      {item.posts.map((item) => {\n                        const { id: statusID, reblog, _pinned } = item;\n                        const actualStatusID = reblog?.id || statusID;\n                        const url = instance\n                          ? `/${instance}/s/${actualStatusID}`\n                          : `/s/${actualStatusID}`;\n                        if (_pinned) useItemID = false;\n                        return (\n                          <Link\n                            class=\"status-carousel-link timeline-item-alt\"\n                            to={url}\n                          >\n                            {useItemID ? (\n                              <Status\n                                statusID={statusID}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            ) : (\n                              <Status\n                                status={item}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            )}\n                          </Link>\n                        );\n                      })}\n                    </li>\n                  );\n                }\n\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact\n                  status={item}\n                  instance={instance}\n                  filterContext={filterContext}\n                />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const { t } = useLingui();\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? 1 : -1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" alt={t`Previous`} />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? -1 : 1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" alt={t`Next`} />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance, filterContext }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  const filterInfo = isFiltered(status.filtered, filterContext);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      <div class=\"status-thread-badge-container\">\n        <ThreadBadge index={snapStates.statusThreadNumber[sKey]} />\n      </div>\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {!!filterInfo && filterInfo?.action !== 'blur' ? (\n          <b\n            class=\"status-filtered-badge badge-meta horizontal\"\n            title={filterInfo?.titlesStr || ''}\n          >\n            {filterInfo?.titlesStr ? (\n              <Trans>\n                <span>Filtered</span>: <span>{filterInfo.titlesStr}</span>\n              </Trans>\n            ) : (\n              <span>\n                <Trans>Filtered</Trans>\n              </span>\n            )}\n          </b>\n        ) : (\n          <>\n            {statusPeekText}\n            {status.sensitive && status.spoilerText && (\n              <>\n                {' '}\n                <span class=\"spoiler-badge\">\n                  <Icon icon=\"eye-close\" size=\"s\" alt={t`Content warning`} />\n                </span>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport mem from '../utils/mem';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport {\n  getCurrentAccountID,\n  isMediaFirstInstance,\n} from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = mem(() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n});\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.list({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const { i18n, t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.list({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    let results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .values()\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media || undefined,\n          tagged,\n        })\n        .values();\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      if (!supports('@mastodon/pinned-posts')) {\n        // Check if value is same as pinned post (results)\n        // If the index for every post is the same, means API might not support pinned posts\n        // TODO: This is a really weird check, fix this at some point\n        if (results.length) {\n          let pinnedStatusesIds = [];\n          if (results[0]?.type === 'pinned') {\n            pinnedStatusesIds = results[0].id;\n          } else {\n            pinnedStatusesIds = results\n              .filter((status) => status._pinned)\n              .map((status) => status.id);\n          }\n          const containsAllPinned = pinnedStatusesIds.every((postId) =>\n            value.some((status) => status.id === postId),\n          );\n          if (containsAllPinned) {\n            // Remove pinned posts\n            results = [];\n          }\n        }\n      }\n\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  let title = t`Account posts`;\n  if (account?.acct) {\n    const acctDisplay = (/@/.test(account.acct) ? '' : '@') + account.acct;\n    const accountDisplay = account?.displayName\n      ? `${account.displayName} (${acctDisplay})`\n      : `${acctDisplay}`;\n    if (!excludeReplies) {\n      title = t`${accountDisplay} (+ Replies)`;\n    } else if (excludeBoosts) {\n      title = t`${accountDisplay} (- Boosts)`;\n    } else if (tagged) {\n      title = t`${accountDisplay} (#${tagged})`;\n    } else if (media) {\n      title = t`${accountDisplay} (Media)`;\n    } else if (month) {\n      const monthYear = new Date(month).toLocaleString(i18n.locale, {\n        month: 'long',\n        year: 'numeric',\n      });\n      title = t`${accountDisplay} (${monthYear})`;\n    } else {\n      title = accountDisplay;\n    }\n  }\n  useTitle(title, '/:instance?/a/:id');\n\n  const fetchAccount = useCallback(() => {\n    return memFetchAccount(id, masto);\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      // No need, because the whole filter bar is hidden\n      // TODO: Revisit this\n      if (!mediaFirst) {\n        try {\n          const featuredTags = await masto.v1.accounts\n            .$select(id)\n            .featuredTags.list();\n          console.log({ featuredTags });\n          setFeaturedTags(featuredTags);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })();\n  }, [id, mediaFirst]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const isSelf = useMemo(\n    () => account?.id === getCurrentAccountID(),\n    [account?.id],\n  );\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n          showEndorsements\n        />\n        {!mediaFirst && (\n          <div\n            class=\"filter-bar\"\n            ref={filterBarRef}\n            style={{\n              position: 'relative',\n            }}\n          >\n            {filtered ? (\n              <Link\n                to={`/${instance}/a/${id}`}\n                class=\"insignificant filter-clear\"\n                title={t`Clear filters`}\n                key=\"clear-filters\"\n              >\n                <Icon icon=\"x\" size=\"l\" alt={t`Clear`} />\n              </Link>\n            ) : (\n              <Icon\n                icon=\"filter\"\n                class=\"insignificant\"\n                size=\"l\"\n                alt={t`Filters`}\n              />\n            )}\n            <Link\n              to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n              onClick={() => {\n                if (excludeReplies) {\n                  showToast(t`Showing post with replies`);\n                }\n              }}\n              class={excludeReplies ? '' : 'is-active'}\n            >\n              <Trans>+ Replies</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n              onClick={() => {\n                if (!excludeBoosts) {\n                  showToast(t`Showing posts without boosts`);\n                }\n              }}\n              class={!excludeBoosts ? '' : 'is-active'}\n            >\n              <Trans>- Boosts</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n              onClick={() => {\n                if (!media) {\n                  showToast(t`Showing posts with media`);\n                }\n              }}\n              class={media ? 'is-active' : ''}\n            >\n              <Trans>Media</Trans>\n            </Link>\n            {featuredTags.map((tag) => (\n              <Link\n                key={tag.id}\n                to={`/${instance}/a/${id}${\n                  tagged === tag.name\n                    ? ''\n                    : `?tagged=${encodeURIComponent(tag.name)}`\n                }`}\n                onClick={() => {\n                  if (tagged !== tag.name) {\n                    showToast(t`Showing posts tagged with #${tag.name}`);\n                  }\n                }}\n                class={tagged === tag.name ? 'is-active' : ''}\n              >\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {tag.name}\n                </span>\n                {\n                  // The count differs based on instance 😅\n                }\n                {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n              </Link>\n            ))}\n            {searchEnabled &&\n              (supportsInputMonth() ? (\n                <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                  <Icon icon=\"month\" size=\"l\" />\n                  <input\n                    type=\"month\"\n                    disabled={!account?.acct}\n                    value={month || ''}\n                    min={MIN_YEAR_MONTH}\n                    max={new Date().toISOString().slice(0, 7)}\n                    onInput={(e) => {\n                      const { value, validity } = e.currentTarget;\n                      if (!validity.valid) return;\n                      setSearchParams(\n                        value\n                          ? {\n                              month: value,\n                            }\n                          : {},\n                      );\n                      const [year, month] = value.split('-');\n                      const monthIndex = parseInt(month, 10) - 1;\n                      const date = new Date(year, monthIndex);\n                      showToast(\n                        t`Showing posts in ${date.toLocaleString(i18n.locale, {\n                          month: 'long',\n                          year: 'numeric',\n                        })}`,\n                      );\n                    }}\n                  />\n                </label>\n              ) : (\n                // Fallback to <select> for month and <input type=\"number\"> for year\n                <MonthPicker\n                  class={`filter-field ${month ? 'is-active' : ''}`}\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = URL.parse(account.url)?.hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={`${account?.acct ? '@' + account.acct : t`Posts`}`}\n        titleComponent={\n          <h1\n            class=\"header-double-lines header-account\"\n            // onClick={() => {\n            //   states.showAccount = {\n            //     account,\n            //     instance,\n            //   };\n            // }}\n          >\n            <b>\n              <EmojiText text={displayName} emojis={emojis} />\n            </b>\n            <div>\n              <span class=\"bidi-isolate\">@{acct}</span>\n            </div>\n          </h1>\n        }\n        id=\"account-statuses\"\n        instance={instance}\n        emptyText={t`Nothing to see here yet.`}\n        errorText={t`Unable to load posts`}\n        fetchItems={fetchAccountStatuses}\n        useItemID\n        view={media || mediaFirst ? 'media' : undefined}\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        timelineStart={TimelineStart}\n        refresh={[\n          excludeReplies,\n          excludeBoosts,\n          tagged,\n          media,\n          month + account?.acct,\n        ].toString()}\n        headerEnd={\n          <Menu2\n            portal\n            // setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={!allowSwitch}\n              onClick={() => {\n                (async () => {\n                  try {\n                    const { masto } = api({\n                      instance: accountInstance,\n                    });\n                    const acc = await masto.v1.accounts.lookup({\n                      acct: account.acct,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${accountInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert(t`Unable to fetch account info`);\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Switch to account's instance{' '}\n                  {accountInstance ? (\n                    <>\n                      {' '}\n                      (<b>{punycode.toUnicode(accountInstance)}</b>)\n                    </>\n                  ) : null}\n                </Trans>\n              </small>\n            </MenuItem>\n            {!sameCurrentInstance && (\n              <MenuItem\n                onClick={() => {\n                  (async () => {\n                    try {\n                      const acc = await currentMasto.v1.accounts.lookup({\n                        acct: account.acct + '@' + instance,\n                      });\n                      const { id } = acc;\n                      location.hash = `/${currentInstance}/a/${id}`;\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Unable to fetch account info`);\n                    }\n                  })();\n                }}\n              >\n                <Icon icon=\"transfer\" />{' '}\n                <small class=\"menu-double-lines\">\n                  <Trans>\n                    Switch to my instance (<b>{currentInstance}</b>)\n                  </Trans>\n                </small>\n              </MenuItem>\n            )}\n          </Menu2>\n        }\n      />\n      {acct && !isSelf && (\n        <data\n          class=\"compose-data\"\n          value={JSON.stringify({\n            draftStatus: {\n              status: `@${acct} `,\n            },\n          })}\n        />\n      )}\n    </>\n  );\n}\n\nfunction MonthPicker(props) {\n  const { i18n } = useLingui();\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">\n          <Trans>Month</Trans>\n        </option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1)\n                .toString()\n                .padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString(i18n.locale, {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nfunction fetchAccount(id, masto) {\n  return masto.v1.accounts.$select(id).fetch();\n}\nconst memFetchAccount = pmem(fetchAccount, {\n  maxAge: 30 * 60 * 1000, // 30 minutes\n});\n\nexport default AccountStatuses;\n","import './annual-report.css';\n\nimport { Trans } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NameText from '../components/name-text';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nexport default function AnnualReport() {\n  const params = useParams();\n  const { year } = params;\n  useTitle(year ? `Annual Report: ${year}` : 'Annual Report');\n  const { masto, instance } = api();\n  const [results, setResults] = useState(null);\n  const [uiState, setUIState] = useState('default');\n\n  useEffect(() => {\n    if (year) {\n      (async () => {\n        setUIState('loading');\n        const results = await masto.v1.annualReports.$select(year).fetch();\n        console.log('REPORT', results);\n        setResults(results);\n        setUIState('default');\n      })();\n    }\n  }, [year]);\n\n  const { accounts, annualReports, statuses } = results || {};\n  const report = annualReports?.find((report) => report.year == year)?.data;\n\n  const datePlaceholder = new Date();\n\n  return (\n    <div id=\"annual-report-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"report\">\n        <h1>{year} #Wrapstodon</h1>\n        {uiState === 'loading' && (\n          <p>\n            <Loader abrupt /> <Trans>Loading…</Trans>\n          </p>\n        )}\n        {!!report && (\n          <dl>\n            {Object.entries(report).map(([key, value]) => (\n              <>\n                <dt>{key}</dt>\n                <dd class={`report-${key}`}>\n                  {Array.isArray(value) ? (\n                    <table>\n                      <thead>\n                        <tr>\n                          {Object.entries(value[0]).map(([key, value]) => (\n                            <th\n                              class={\n                                key !== 'month' && typeof value === 'number'\n                                  ? 'number'\n                                  : ''\n                              }\n                            >\n                              {key}\n                            </th>\n                          ))}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {value.map((item) => (\n                          <tr>\n                            {Object.entries(item).map(([k, value]) => (\n                              <td\n                                class={\n                                  k !== 'month' && typeof value === 'number'\n                                    ? 'number'\n                                    : ''\n                                }\n                              >\n                                {value &&\n                                /(accountId)/i.test(k) &&\n                                /^(mostRebloggedAccounts|commonlyInteractedWithAccounts)$/i.test(\n                                  key,\n                                ) ? (\n                                  <NameText\n                                    account={accounts?.find(\n                                      (a) => a.id === value,\n                                    )}\n                                    showAvatar\n                                  />\n                                ) : k === 'month' ? (\n                                  datePlaceholder.setMonth(value - 1) &&\n                                  datePlaceholder.toLocaleString(undefined, {\n                                    month: 'long',\n                                  })\n                                ) : typeof value === 'number' ? (\n                                  value.toLocaleString()\n                                ) : (\n                                  value\n                                )}\n                              </td>\n                            ))}\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  ) : typeof value === 'object' ? (\n                    /^(topStatuses)$/i.test(key) ? (\n                      <dl>\n                        {Object.entries(value).map(([k, value]) => (\n                          <>\n                            <dt>{k}</dt>\n                            <dd>\n                              {value && (\n                                <Link to={`/${instance}/s/${value}`}>\n                                  <Status\n                                    status={statuses?.find(\n                                      (s) => s.id === value,\n                                    )}\n                                    size=\"s\"\n                                    readOnly\n                                  />\n                                </Link>\n                              )}\n                            </dd>\n                          </>\n                        ))}\n                      </dl>\n                    ) : (\n                      <table>\n                        <tbody>\n                          {Object.entries(value).map(([k, value]) => (\n                            <tr>\n                              <th>{k}</th>\n                              <td\n                                class={\n                                  typeof value === 'number' ? 'number' : ''\n                                }\n                              >\n                                {value}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    )\n                  ) : typeof value === 'string' ? (\n                    value\n                  ) : (\n                    // Last resort\n                    JSON.stringify(value, null, 2)\n                  )}\n                </dd>\n              </>\n            ))}\n          </dl>\n        )}\n      </div>\n      <hr />\n      <p style={{ textAlign: 'center' }}>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import { useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  const { t } = useLingui();\n  useTitle(t`Bookmarks`, '/b');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks\n        .list({ limit: LIMIT })\n        .values();\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Bookmarks`}\n      id=\"bookmarks\"\n      emptyText={t`No bookmarks yet. Go bookmark something!`}\n      errorText={t`Unable to load bookmarks.`}\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","export default \"__VITE_ASSET__BL_1JinT__\"","import '../components/links-bar.css';\nimport './catchup.css';\n\nimport autoAnimate from '@formkit/auto-animate';\nimport { msg, select } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSearchParams } from 'react-router-dom';\nimport { uid } from 'uid/single';\n\nimport catchupUrl from '../assets/features/catch-up.png';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api, getPreferences } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport { isFiltered } from '../utils/filters';\nimport getDomain from '../utils/get-domain';\nimport htmlContentLength from '../utils/html-content-length';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { supportsNativeQuote } from '../utils/quote-utils';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccountID, getCurrentAccountNS } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport { assignFollowedTags } from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = 'home';\n\nconst RANGES = [\n  { label: msg`last 1 hour`, value: 1 },\n  { label: msg`last 2 hours`, value: 2 },\n  { label: msg`last 3 hours`, value: 3 },\n  { label: msg`last 4 hours`, value: 4 },\n  { label: msg`last 5 hours`, value: 5 },\n  { label: msg`last 6 hours`, value: 6 },\n  { label: msg`last 7 hours`, value: 7 },\n  { label: msg`last 8 hours`, value: 8 },\n  { label: msg`last 9 hours`, value: 9 },\n  { label: msg`last 10 hours`, value: 10 },\n  { label: msg`last 11 hours`, value: 11 },\n  { label: msg`last 12 hours`, value: 12 },\n  { label: msg`beyond 12 hours`, value: 13 },\n];\n\nconst FILTER_KEYS = {\n  original: msg`Original`,\n  replies: msg`Replies`,\n  boosts: msg`Boosts`,\n  quotes: msg`Quotes`,\n  followedTags: msg`Followed tags`,\n  groups: msg`Groups`,\n  filtered: msg`Filtered`,\n};\nconst FILTER_SORTS = [\n  'createdAt',\n  'repliesCount',\n  'favouritesCount',\n  'reblogsCount',\n  // TODO: Add this later when there's enough usage\n  // Sorting by quotes count seems not useful… yet?\n  // And we're combining it with boosts count, so that's even weirder…\n  // 'quotesCount',\n  'density',\n];\nconst FILTER_GROUPS = [null, 'account'];\n\nconst DTF = mem(\n  (locale) =>\n    new Intl.DateTimeFormat(locale || undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n);\n\nfunction hasQuote(quote) {\n  return quote?.id || quote?.quotedStatus?.id;\n}\n\nfunction Catchup() {\n  const { i18n, _, t } = useLingui();\n  const dtf = DTF(i18n.locale);\n\n  useTitle(`Catch-up`, '/catchup');\n  const { masto, instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [uiState, setUIState] = useState('start');\n  const [showTopLinks, setShowTopLinks] = useState(false);\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = (accountID) => accountID === currentAccount;\n\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome({ maxCreatedAt }) {\n    console.debug('fetchHome', maxCreatedAt);\n    const allResults = [];\n    const homeIterable = masto.v1.timelines.home.list({ limit: 40 });\n    const homeIterator = homeIterable.values();\n    mainloop: while (true) {\n      try {\n        if (supportsPixelfed && homeIterable.params) {\n          if (typeof homeIterable.params === 'string') {\n            homeIterable.params += '&include_reblogs=true';\n          } else {\n            homeIterable.params.include_reblogs = true;\n          }\n        }\n        const results = await homeIterator.next();\n        const { value } = results;\n        if (value?.length) {\n          // This ignores maxCreatedAt filter, but it's ok for now\n          await assignFollowedTags(value, instance);\n          let addedResults = false;\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const createdAtTime = Date.parse(item.createdAt);\n            if (!maxCreatedAt || createdAtTime >= maxCreatedAt) {\n              // Filtered\n              const selfPost = isSelf(\n                item.reblog?.account?.id || item.account.id,\n              );\n              const filterInfo =\n                !selfPost &&\n                isFiltered(\n                  item.reblog?.filtered || item.filtered,\n                  FILTER_CONTEXT,\n                );\n              if (filterInfo?.action === 'hide') continue;\n              item._filtered = filterInfo;\n\n              // Followed tags\n              const sKey = statusKey(item.id, instance);\n              item._followedTags = states.statusFollowedTags[sKey]\n                ? [...states.statusFollowedTags[sKey]]\n                : [];\n\n              allResults.push(item);\n              addedResults = true;\n            } else {\n              // Don't immediately stop, still add the other items that might still be within range\n              // break mainloop;\n            }\n            // Only stop when ALL items are outside of range\n            if (!addedResults) {\n              break mainloop;\n            }\n          }\n        } else {\n          break mainloop;\n        }\n        // Pause 1s\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.error(e);\n        break mainloop;\n      }\n    }\n\n    // Post-process all results\n    // 1. Threadify - tag 1st-post in a thread\n    allResults.forEach((status) => {\n      if (status?.inReplyToId) {\n        const replyToStatus = allResults.find(\n          (s) => s.id === status.inReplyToId,\n        );\n        if (replyToStatus && !replyToStatus.inReplyToId) {\n          replyToStatus._thread = true;\n        }\n      }\n    });\n\n    return allResults;\n  }\n\n  const [posts, setPosts] = useState([]);\n  const catchupRangeRef = useRef();\n  const catchupLastRef = useRef();\n  const NS = useMemo(() => getCurrentAccountNS(), []);\n  const handleCatchupClick = useCallback(async ({ duration } = {}) => {\n    const now = Date.now();\n    const maxCreatedAt = duration ? now - duration : null;\n    setUIState('loading');\n    const results = await fetchHome({ maxCreatedAt });\n    // Namespaced by account ID\n    // Possible conflict if ID matches between different accounts from different instances\n    const catchupID = `${NS}-${uid()}`;\n    try {\n      await db.catchup.set(catchupID, {\n        id: catchupID,\n        posts: results,\n        count: results.length,\n        startAt: maxCreatedAt,\n        endAt: now,\n      });\n      setSearchParams({ id: catchupID });\n    } catch (e) {\n      console.error(e, results);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        const catchup = await db.catchup.get(id);\n        if (catchup) {\n          catchup.posts.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\n          setPosts(catchup.posts);\n          setUIState('results');\n        }\n      })();\n    } else if (uiState === 'results') {\n      setPosts([]);\n      setUIState('start');\n    }\n  }, [id]);\n\n  const [reloadCatchupsCount, reloadCatchups] = useReducer((c) => c + 1, 0);\n  const [lastCatchupEndAt, setLastCatchupEndAt] = useState(null);\n  const [prevCatchups, setPrevCatchups] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const catchups = await db.catchup.keys();\n        if (catchups.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = catchups.filter((key) => key.startsWith(`${ns}-`));\n          if (ownKeys.length) {\n            let ownCatchups = await db.catchup.getMany(ownKeys);\n            ownCatchups.sort((a, b) => b.endAt - a.endAt);\n\n            // Split to 1st 3 last catchups, and the rest\n            let lastCatchups = ownCatchups.slice(0, 3);\n            let restCatchups = ownCatchups.slice(3);\n\n            const trimmedCatchups = lastCatchups.map((c) => {\n              const { id, count, startAt, endAt } = c;\n              return {\n                id,\n                count,\n                startAt,\n                endAt,\n              };\n            });\n            setPrevCatchups(trimmedCatchups);\n            setLastCatchupEndAt(lastCatchups[0].endAt);\n\n            // GC time\n            ownCatchups = null;\n            lastCatchups = null;\n\n            queueMicrotask(() => {\n              if (restCatchups.length) {\n                // delete them\n                db.catchup\n                  .delMany(restCatchups.map((c) => c.id))\n                  .then(() => {\n                    // GC time\n                    restCatchups = null;\n                  })\n                  .catch((e) => {\n                    console.error(e);\n                  });\n              }\n            });\n\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      setPrevCatchups([]);\n    })();\n  }, [reloadCatchupsCount]);\n  useEffect(() => {\n    if (uiState === 'start') {\n      reloadCatchups();\n    }\n  }, [uiState === 'start']);\n\n  const [filterCounts, links] = useMemo(() => {\n    let filtered = 0,\n      groups = 0,\n      boosts = 0,\n      quotes = 0,\n      replies = 0,\n      followedTags = 0,\n      original = 0;\n    const links = {};\n    for (const post of posts) {\n      if (post._filtered && post._filtered?.action !== 'blur') {\n        filtered++;\n        post.__FILTER = 'filtered';\n      } else if (post.group) {\n        groups++;\n        post.__FILTER = 'groups';\n      } else if (post.reblog) {\n        boosts++;\n        post.__FILTER = 'boosts';\n      } else if (supportsNativeQuote() && hasQuote(post.quote)) {\n        quotes++;\n        post.__FILTER = 'quotes';\n      } else if (post._followedTags?.length) {\n        followedTags++;\n        post.__FILTER = 'followedTags';\n      } else if (\n        post.inReplyToId &&\n        post.inReplyToAccountId !== post.account?.id\n      ) {\n        replies++;\n        post.__FILTER = 'replies';\n      } else {\n        original++;\n        post.__FILTER = 'original';\n      }\n\n      const thePost = post.reblog || post;\n      if (\n        post.__FILTER !== 'filtered' &&\n        thePost.card?.url &&\n        thePost.card?.image &&\n        thePost.card?.type === 'link'\n      ) {\n        const { card, favouritesCount, reblogsCount } = thePost;\n        let { url } = card;\n        url = url.replace(/\\/$/, '');\n        if (!links[url]) {\n          links[url] = {\n            postID: thePost.id,\n            card,\n            shared: 1,\n            sharers: [post.account],\n            likes: favouritesCount,\n            boosts: reblogsCount,\n          };\n        } else {\n          if (links[url].sharers.find((a) => a.id === post.account.id)) {\n            continue;\n          }\n          links[url].shared++;\n          links[url].sharers.push(post.account);\n          if (links[url].postID !== thePost.id) {\n            links[url].likes += favouritesCount;\n            links[url].boosts += reblogsCount;\n          }\n        }\n      }\n    }\n\n    let topLinks = [];\n    for (const link in links) {\n      topLinks.push({\n        url: link,\n        ...links[link],\n      });\n    }\n    topLinks.sort((a, b) => {\n      if (a.shared > b.shared) return -1;\n      if (a.shared < b.shared) return 1;\n      if (a.boosts > b.boosts) return -1;\n      if (a.boosts < b.boosts) return 1;\n      if (a.likes > b.likes) return -1;\n      if (a.likes < b.likes) return 1;\n      if (a.quotes > b.quotes) return -1;\n      if (a.quotes < b.quotes) return 1;\n      return 0;\n    });\n\n    // Slice links to shared > 1 but min 10 links\n    if (topLinks.length > 10) {\n      linksLoop: for (let i = 10; i < topLinks.length; i++) {\n        const { shared } = topLinks[i];\n        if (shared <= 1) {\n          topLinks = topLinks.slice(0, i);\n          break linksLoop;\n        }\n      }\n    }\n\n    return [\n      {\n        filtered,\n        groups,\n        boosts,\n        quotes,\n        replies,\n        followedTags,\n        original,\n      },\n      topLinks,\n    ];\n  }, [posts]);\n\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState('all');\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const [range, setRange] = useState(1);\n\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [groupBy, setGroupBy] = useState(null);\n\n  const [filteredPosts, authors, authorCounts] = useMemo(() => {\n    const authorsHash = {};\n    const authorCountsMap = new Map();\n\n    let filteredPosts = posts.filter((post) => {\n      const postFilterMatches =\n        selectedFilterCategory === 'all' ||\n        post.__FILTER === selectedFilterCategory;\n\n      if (postFilterMatches) {\n        authorsHash[post.account.id] = post.account;\n        authorCountsMap.set(\n          post.account.id,\n          (authorCountsMap.get(post.account.id) || 0) + 1,\n        );\n      }\n\n      return postFilterMatches;\n    });\n\n    // Deduplicate boosts\n    const boostedPosts = {};\n    filteredPosts.forEach((post) => {\n      if (post.reblog) {\n        if (boostedPosts[post.reblog.id]) {\n          if (boostedPosts[post.reblog.id].__BOOSTERS) {\n            boostedPosts[post.reblog.id].__BOOSTERS.add(post.account);\n          } else {\n            boostedPosts[post.reblog.id].__BOOSTERS = new Set([post.account]);\n          }\n          post.__HIDDEN = true;\n        } else {\n          boostedPosts[post.reblog.id] = post;\n        }\n      }\n    });\n\n    if (selectedAuthor && authorCountsMap.has(selectedAuthor)) {\n      filteredPosts = filteredPosts.filter(\n        (post) =>\n          post.account.id === selectedAuthor ||\n          [...(post.__BOOSTERS || [])].find((a) => a.id === selectedAuthor),\n      );\n    }\n\n    return [filteredPosts, authorsHash, Object.fromEntries(authorCountsMap)];\n  }, [selectedFilterCategory, selectedAuthor, posts]);\n\n  const filteredPostsMap = useMemo(() => {\n    const map = {};\n    filteredPosts.forEach((post) => {\n      map[post.id] = post;\n    });\n    return map;\n  }, [filteredPosts]);\n\n  const authorCountsList = useMemo(\n    () =>\n      Object.keys(authorCounts).sort(\n        (a, b) => authorCounts[b] - authorCounts[a],\n      ),\n    [authorCounts],\n  );\n\n  const sortedFilteredPosts = useMemo(() => {\n    const authorIndices = {};\n    authorCountsList.forEach((authorID, index) => {\n      authorIndices[authorID] = index;\n    });\n    return filteredPosts\n      .filter((post) => !post.__HIDDEN)\n      .sort((a, b) => {\n        if (groupBy === 'account') {\n          const aAccountID = a.account.id;\n          const bAccountID = b.account.id;\n          const aIndex = authorIndices[aAccountID];\n          const bIndex = authorIndices[bAccountID];\n          const order = aIndex - bIndex;\n          if (order !== 0) {\n            return order;\n          }\n        }\n        if (sortBy !== 'createdAt') {\n          a = a.reblog || a;\n          b = b.reblog || b;\n          if (sortBy !== 'density' && a[sortBy] === b[sortBy]) {\n            return a.createdAt > b.createdAt ? 1 : -1;\n          }\n        }\n        if (sortBy === 'density') {\n          const aDensity = postDensity(a);\n          const bDensity = postDensity(b);\n          if (sortOrder === 'asc') {\n            return aDensity > bDensity ? 1 : -1;\n          } else {\n            return bDensity > aDensity ? 1 : -1;\n          }\n        }\n        if (sortOrder === 'asc') {\n          return a[sortBy] > b[sortBy] ? 1 : -1;\n        } else {\n          return b[sortBy] > a[sortBy] ? 1 : -1;\n        }\n      });\n  }, [filteredPosts, sortBy, sortOrder, groupBy, authorCountsList]);\n\n  const prevGroup = useRef(null);\n\n  const authorsListParent = useRef(null);\n  const autoAnimated = useRef(false);\n  useEffect(() => {\n    if (posts.length > 100 || autoAnimated.current) return;\n    if (authorsListParent.current) {\n      autoAnimate(authorsListParent.current, {\n        duration: 200,\n      });\n      autoAnimated.current = true;\n    }\n  }, [posts, authorsListParent]);\n\n  const postsBarType = posts.length > 160 ? '3d' : '2d';\n\n  const postsBar = useMemo(() => {\n    if (postsBarType !== '2d') return null;\n    return posts.map((post) => {\n      // If part of filteredPosts\n      const isFiltered = filteredPostsMap[post.id];\n      return (\n        <span\n          key={post.id}\n          class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n        />\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const postsBins = useMemo(() => {\n    if (postsBarType !== '3d') return null;\n    if (!posts?.length) return null;\n    const bins = binByTime(posts, 'createdAt', 320);\n    return bins.map((posts, i) => {\n      return (\n        <div class=\"posts-bin\" key={i}>\n          {posts.map((post) => {\n            const isFiltered = filteredPostsMap[post.id];\n            return (\n              <span\n                key={post.id}\n                class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const scrollableRef = useRef(null);\n\n  // if range value exceeded lastCatchupEndAt, show error\n  const lastCatchupRange = useMemo(() => {\n    // return hour, not ms\n    if (!lastCatchupEndAt) return null;\n    return (Date.now() - lastCatchupEndAt) / 1000 / 60 / 60;\n  }, [lastCatchupEndAt, range]);\n\n  useEffect(() => {\n    if (uiState !== 'results') return;\n    const authorUsername =\n      selectedAuthor && authors[selectedAuthor]\n        ? authors[selectedAuthor].username\n        : '';\n    const sortOrderIndex = sortOrder === 'asc' ? 0 : 1;\n    const groupByText = {\n      account: 'authors',\n    };\n    let toast = showToast({\n      duration: 5_000, // 5 seconds\n      // Note: I'm sorry, translators\n      text: t`Showing ${select(selectedFilterCategory, {\n        all: 'all posts',\n        original: 'original posts',\n        replies: 'replies',\n        boosts: 'boosts',\n        quotes: 'quotes',\n        followedTags: 'followed tags',\n        groups: 'groups',\n        filtered: 'filtered posts',\n      })}, ${select(sortBy, {\n        createdAt: select(sortOrder, {\n          asc: 'oldest',\n          desc: 'latest',\n        }),\n        reblogsCount: select(sortOrder, {\n          asc: 'fewest boosts',\n          desc: 'most boosts',\n        }),\n        favouritesCount: select(sortOrder, {\n          asc: 'fewest likes',\n          desc: 'most likes',\n        }),\n        repliesCount: select(sortOrder, {\n          asc: 'fewest replies',\n          desc: 'most replies',\n        }),\n        density: select(sortOrder, { asc: 'least dense', desc: 'most dense' }),\n      })} first${select(groupBy, {\n        account: ', grouped by authors',\n        other: '',\n      })}`,\n    });\n    return () => {\n      toast?.hideToast?.();\n    };\n  }, [\n    uiState,\n    selectedFilterCategory,\n    selectedAuthor,\n    sortBy,\n    sortOrder,\n    groupBy,\n    authors,\n  ]);\n\n  useEffect(() => {\n    if (selectedAuthor) {\n      if (authors[selectedAuthor]) {\n        // Check if author is visible and within the scrollable area viewport\n        const authorElement = authorsListParent.current.querySelector(\n          `[data-author=\"${selectedAuthor}\"]`,\n        );\n        const scrollableRect =\n          authorsListParent.current?.getBoundingClientRect();\n        const authorRect = authorElement?.getBoundingClientRect();\n        console.log({\n          sLeft: scrollableRect.left,\n          sRight: scrollableRect.right,\n          aLeft: authorRect.left,\n          aRight: authorRect.right,\n        });\n        if (\n          authorRect.left < scrollableRect.left ||\n          authorRect.right > scrollableRect.right\n        ) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        } else if (authorRect.top < 0) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  }, [selectedAuthor, authors]);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const itemsSelector = '.catchup-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        const nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const hlRef = useHotkeys(\n    'h, l',\n    (_, handler) => {\n      // Go next/prev selectedAuthor in authorCountsList list\n      const key = handler.keys[0];\n      if (selectedAuthor) {\n        const index = authorCountsList.indexOf(selectedAuthor);\n        if (key === 'h') {\n          if (index > 0 && index < authorCountsList.length) {\n            setSelectedAuthor(authorCountsList[index - 1]);\n            scrollableRef.current?.focus();\n          }\n        } else if (key === 'l') {\n          if (index < authorCountsList.length - 1 && index >= 0) {\n            setSelectedAuthor(authorCountsList[index + 1]);\n            scrollableRef.current?.focus();\n          }\n        }\n      } else if (key === 'l') {\n        setSelectedAuthor(authorCountsList[0]);\n        scrollableRef.current?.focus();\n      }\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setSelectedAuthor(null);\n      scrollableRef.current?.focus();\n    },\n    {\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n      enableOnFormTags: ['input'],\n      useKey: true,\n    },\n  );\n\n  const dotRef = useHotkeys(\n    '.',\n    () => {\n      scrollableRef.current?.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const handleArrowKeys = useCallback((e) => {\n    const activeElement = document.activeElement;\n    const isRadio =\n      activeElement?.tagName === 'INPUT' && activeElement.type === 'radio';\n    const isArrowKeys =\n      e.key === 'ArrowDown' ||\n      e.key === 'ArrowUp' ||\n      e.key === 'ArrowLeft' ||\n      e.key === 'ArrowRight';\n    if (isArrowKeys && isRadio) {\n      // Note: page scroll won't trigger on first arrow key press due to this. Subsequent presses will.\n      activeElement.blur();\n      return;\n    }\n  }, []);\n\n  return (\n    <div\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        hlRef.current = node;\n        escRef.current = node;\n        dotRef.current = node;\n      }}\n      id=\"catchup-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n    >\n      <div class=\"timeline-deck deck wide\">\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n          }}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              {uiState === 'results' && (\n                <Link to=\"/catchup\" class=\"button plain\">\n                  <Icon icon=\"history2\" size=\"l\" alt={t`Catch-up`} />\n                </Link>\n              )}\n              {uiState === 'start' && (\n                <Link to=\"/\" class=\"button plain\">\n                  <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                </Link>\n              )}\n            </div>\n            <h1>\n              {uiState !== 'start' && (\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              {uiState !== 'start' && uiState !== 'loading' && (\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    setShowHelp(true);\n                  }}\n                >\n                  <Trans>Help</Trans>\n                </button>\n              )}\n            </div>\n          </div>\n        </header>\n        <main onKeyDown={handleArrowKeys}>\n          {uiState === 'start' && (\n            <div class=\"catchup-start\">\n              <h1>\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              </h1>\n              <details>\n                <summary>\n                  <Trans>What is this?</Trans>\n                </summary>\n                <p>\n                  <Trans>\n                    Catch-up is a separate timeline for your followings,\n                    offering a high-level view at a glance, with a simple,\n                    email-inspired interface to effortlessly sort and filter\n                    through posts.\n                  </Trans>\n                </p>\n                <img\n                  src={catchupUrl}\n                  width=\"1200\"\n                  height=\"900\"\n                  alt={t`Preview of Catch-up UI`}\n                />\n                <p>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.target.closest('details').open = false;\n                    }}\n                  >\n                    <Trans>Let's catch up</Trans>\n                  </button>\n                </p>\n              </details>\n              <p>\n                <Trans>Let's catch up on the posts from your followings.</Trans>\n              </p>\n              <p>\n                <b>\n                  <Trans>Show me all posts from…</Trans>\n                </b>\n              </p>\n              <div class=\"catchup-form\">\n                <input\n                  ref={catchupRangeRef}\n                  type=\"range\"\n                  value={range}\n                  min={RANGES[0].value}\n                  max={RANGES[RANGES.length - 1].value}\n                  step=\"1\"\n                  list=\"catchup-ranges\"\n                  onChange={(e) => setRange(+e.target.value)}\n                />{' '}\n                <span\n                  style={{\n                    width: '8em',\n                  }}\n                >\n                  {_(RANGES[range - 1].label)}\n                  <br />\n                  <small class=\"insignificant\">\n                    {range == RANGES[RANGES.length - 1].value\n                      ? t`until the max`\n                      : niceDateTime(\n                          new Date(Date.now() - range * 60 * 60 * 1000),\n                        )}\n                  </small>\n                </span>\n                <datalist id=\"catchup-ranges\">\n                  {RANGES.map(({ label, value }) => (\n                    <option value={value} label={_(label)} />\n                  ))}\n                </datalist>{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (range < RANGES[RANGES.length - 1].value) {\n                      let duration;\n                      if (\n                        range === RANGES[RANGES.length - 1].value &&\n                        catchupLastRef.current?.checked\n                      ) {\n                        duration = Date.now() - lastCatchupEndAt;\n                      } else {\n                        duration = range * 60 * 60 * 1000;\n                      }\n                      handleCatchupClick({ duration });\n                    } else {\n                      handleCatchupClick();\n                    }\n                  }}\n                >\n                  <Trans>Catch up</Trans>\n                </button>\n              </div>\n              {lastCatchupRange && range > lastCatchupRange ? (\n                <p class=\"catchup-info\">\n                  <Icon icon=\"info\" />{' '}\n                  <Trans>Overlaps with your last catch-up</Trans>\n                </p>\n              ) : range === RANGES[RANGES.length - 1].value &&\n                lastCatchupEndAt ? (\n                <p class=\"catchup-info\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      switch\n                      checked\n                      ref={catchupLastRef}\n                    />{' '}\n                    <Trans>\n                      Until the last catch-up (\n                      {dtf.format(new Date(lastCatchupEndAt))})\n                    </Trans>\n                  </label>\n                </p>\n              ) : null}\n              <p class=\"insignificant\">\n                <small>\n                  <Trans>\n                    Note: your instance might only show a maximum of 800 posts\n                    in the Home timeline regardless of the time range. Could be\n                    less or more.\n                  </Trans>\n                </small>\n              </p>\n              {!!prevCatchups?.length && (\n                <div class=\"catchup-prev\">\n                  <p>\n                    <Trans>Previously…</Trans>\n                  </p>\n                  <ul>\n                    {prevCatchups.map((pc) => (\n                      <li key={pc.id}>\n                        <Link to={`/catchup?id=${pc.id}`}>\n                          <Icon icon=\"history2\" />{' '}\n                          <span>\n                            {pc.startAt\n                              ? dtf.formatRange(\n                                  new Date(pc.startAt),\n                                  new Date(pc.endAt),\n                                )\n                              : `… – ${dtf.format(new Date(pc.endAt))}`}\n                          </span>\n                        </Link>{' '}\n                        <span>\n                          <small class=\"ib insignificant\">\n                            <Plural\n                              value={pc.count}\n                              one=\"# post\"\n                              other=\"# posts\"\n                            />\n                          </small>{' '}\n                          <button\n                            type=\"button\"\n                            class=\"light danger small\"\n                            onClick={async () => {\n                              const yes = confirm(t`Remove this catch-up?`);\n                              if (yes) {\n                                let st = showToast(\n                                  t`Removing Catch-up ${pc.id}`,\n                                );\n                                await db.catchup.del(pc.id);\n                                st?.hideToast?.();\n                                showToast(t`Catch-up ${pc.id} removed`);\n                                reloadCatchups();\n                              }\n                            }}\n                          >\n                            <Icon icon=\"x\" alt={t`Remove`} />\n                          </button>\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                  {prevCatchups.length >= 3 && (\n                    <p>\n                      <small>\n                        <Trans>\n                          Note: Only max 3 will be stored. The rest will be\n                          automatically removed.\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {uiState === 'loading' && (\n            <div class=\"ui-state catchup-start\">\n              <Loader abrupt />\n              <p class=\"insignificant\">\n                <Trans>Fetching posts…</Trans>\n              </p>\n              <p class=\"insignificant\">\n                <Trans>This might take a while.</Trans>\n              </p>\n            </div>\n          )}\n          {uiState === 'results' && (\n            <>\n              <div class=\"catchup-header\">\n                {posts.length > 0 && (\n                  <p>\n                    <b class=\"ib\">\n                      {dtf.formatRange(\n                        new Date(posts[0].createdAt),\n                        new Date(posts[posts.length - 1].createdAt),\n                      )}\n                    </b>\n                  </p>\n                )}\n                <aside>\n                  <button\n                    hidden={\n                      selectedFilterCategory === 'all' &&\n                      !selectedAuthor &&\n                      sortBy === 'createdAt' &&\n                      sortOrder === 'asc'\n                    }\n                    type=\"button\"\n                    class=\"plain4 small\"\n                    onClick={() => {\n                      setSelectedFilterCategory('all');\n                      setSelectedAuthor(null);\n                      setSortBy('createdAt');\n                      setGroupBy(null);\n                      setSortOrder('asc');\n                    }}\n                  >\n                    <Trans>Reset filters</Trans>\n                  </button>\n                  {links?.length > 0 && (\n                    <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => setShowTopLinks(!showTopLinks)}\n                    >\n                      <Trans>Top links</Trans>{' '}\n                      <Icon\n                        icon=\"chevron-down\"\n                        style={{\n                          transform: showTopLinks\n                            ? 'rotate(180deg)'\n                            : 'rotate(0deg)',\n                        }}\n                      />\n                    </button>\n                  )}\n                </aside>\n              </div>\n              <div class=\"shazam-container no-animation\" hidden={!showTopLinks}>\n                <div class=\"shazam-container-inner\">\n                  <div class=\"catchup-top-links links-bar\">\n                    {links.map((link) => {\n                      const { card, shared, sharers, likes, boosts } = link;\n                      const {\n                        blurhash,\n                        title,\n                        description,\n                        url,\n                        image,\n                        imageDescription,\n                        language,\n                        width,\n                        height,\n                        publishedAt,\n                      } = card;\n                      const domain = getDomain(url);\n                      let accentColor;\n                      if (blurhash) {\n                        const averageColor = getBlurHashAverageColor(blurhash);\n                        const labAverageColor = rgb2oklab(averageColor);\n                        accentColor = oklab2rgb([\n                          0.6,\n                          labAverageColor[1],\n                          labAverageColor[2],\n                        ]);\n                      }\n\n                      return (\n                        <a\n                          key={url}\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener\"\n                          class=\"link-block\"\n                          style={\n                            accentColor\n                              ? {\n                                  '--accent-color': `rgb(${accentColor.join(\n                                    ',',\n                                  )})`,\n                                  '--accent-alpha-color': `rgba(${accentColor.join(\n                                    ',',\n                                  )}, 0.4)`,\n                                }\n                              : {}\n                          }\n                        >\n                          <article>\n                            <figure>\n                              <img\n                                src={image}\n                                alt={imageDescription}\n                                width={width}\n                                height={height}\n                                loading=\"lazy\"\n                              />\n                            </figure>\n                            <div class=\"article-body\">\n                              <header>\n                                <div class=\"article-meta\">\n                                  <span class=\"domain\">{domain}</span>{' '}\n                                  {!!publishedAt && <>&middot; </>}\n                                  {!!publishedAt && (\n                                    <>\n                                      <RelativeTime\n                                        datetime={publishedAt}\n                                        format=\"micro\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {!!title && (\n                                  <h1\n                                    class=\"title\"\n                                    lang={language}\n                                    dir=\"auto\"\n                                    title={title}\n                                  >\n                                    {title}\n                                  </h1>\n                                )}\n                              </header>\n                              {!!description && (\n                                <p\n                                  class=\"description\"\n                                  lang={language}\n                                  dir=\"auto\"\n                                  title={description}\n                                >\n                                  {description}\n                                </p>\n                              )}\n                              <hr />\n                              <p\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                }}\n                              >\n                                <Trans>\n                                  Shared by{' '}\n                                  {sharers.map((s) => {\n                                    const { avatarStatic, displayName } = s;\n                                    return (\n                                      <button\n                                        type=\"button\"\n                                        class=\"plain\"\n                                        style={{\n                                          padding: 0,\n                                        }}\n                                        onClick={(e) => {\n                                          e.preventDefault();\n                                          e.stopPropagation();\n                                          // Reset and filter to author\n                                          const { id } = s;\n                                          setSelectedAuthor(id);\n                                          setSelectedFilterCategory('all');\n                                        }}\n                                      >\n                                        <Avatar\n                                          url={avatarStatic}\n                                          size=\"s\"\n                                          alt={displayName}\n                                        />\n                                      </button>\n                                    );\n                                  })}\n                                </Trans>\n                              </p>\n                            </div>\n                          </article>\n                        </a>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              {posts.length >= 5 &&\n                (postsBarType === '3d' ? (\n                  <div class=\"catchup-posts-viz-time-bar\">{postsBins}</div>\n                ) : (\n                  <div class=\"catchup-posts-viz-bar\">{postsBar}</div>\n                ))}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <label class=\"filter-cat\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter-cat\"\n                      checked={selectedFilterCategory.toLowerCase() === 'all'}\n                      onChange={() => {\n                        setSelectedFilterCategory('all');\n                      }}\n                    />\n                    <Trans>All</Trans> <span class=\"count\">{posts.length}</span>\n                  </label>\n                  {Object.entries(FILTER_KEYS).map(\n                    ([key, label]) =>\n                      !!filterCounts[key] && (\n                        <label\n                          class=\"filter-cat\"\n                          key={_(label)}\n                          title={\n                            ((filterCounts[key] / posts.length) * 100).toFixed(\n                              2,\n                            ) + '%'\n                          }\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"filter-cat\"\n                            checked={\n                              selectedFilterCategory.toLowerCase() ===\n                              key.toLowerCase()\n                            }\n                            onChange={() => {\n                              setSelectedFilterCategory(key);\n                              if (key === 'boosts') {\n                                setSortBy('reblogsCount');\n                                setSortOrder('desc');\n                                setGroupBy(null);\n                              }\n                              // setSelectedAuthor(null);\n                            }}\n                          />\n                          {_(label)}{' '}\n                          <span class=\"count\">{filterCounts[key]}</span>\n                        </label>\n                      ),\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && !!authorCounts && (\n                <div\n                  class=\"catchup-filters authors-filters\"\n                  ref={authorsListParent}\n                >\n                  {authorCountsList.map((author) => (\n                    <label\n                      class=\"filter-author\"\n                      data-author={author}\n                      key={`${author}-${authorCounts[author]}`}\n                      // Preact messed up the order sometimes, need additional key besides just `author`\n                      // https://github.com/preactjs/preact/issues/2849\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"filter-author\"\n                        checked={selectedAuthor === author}\n                        onChange={() => {\n                          setSelectedAuthor(author);\n                          // setGroupBy(null);\n                        }}\n                        onClick={() => {\n                          if (selectedAuthor === author) {\n                            setSelectedAuthor(null);\n                          }\n                        }}\n                      />\n                      <Avatar\n                        url={\n                          authors[author].avatarStatic || authors[author].avatar\n                        }\n                        size=\"xxl\"\n                        alt={`${authors[author].displayName} (@${authors[author].acct})`}\n                      />{' '}\n                      <span class=\"count\">{authorCounts[author]}</span>\n                      <span class=\"username\">{authors[author].username}</span>\n                    </label>\n                  ))}\n                  {authorCountsList.length > 5 && (\n                    <small\n                      key=\"authors-count\"\n                      style={{\n                        whiteSpace: 'nowrap',\n                        paddingInline: '1em',\n                        opacity: 0.33,\n                      }}\n                    >\n                      <Plural\n                        value={authorCountsList.length}\n                        one=\"# author\"\n                        other=\"# authors\"\n                      />\n                    </small>\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <span class=\"filter-label\">\n                    <Trans>Sort</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_SORTS.map((key) => (\n                      <label\n                        class=\"filter-sort\"\n                        key={key}\n                        onClick={(e) => {\n                          if (sortBy === key) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-cat\"\n                          checked={sortBy === key}\n                          onChange={() => {\n                            setSortBy(key);\n                            const order =\n                              /(replies|favourites|reblogs|quotes)/.test(key)\n                                ? 'desc'\n                                : 'asc';\n                            setSortOrder(order);\n                          }}\n                        />\n                        {\n                          {\n                            createdAt: t`Date`,\n                            repliesCount: t`Replies`,\n                            favouritesCount: t`Likes`,\n                            reblogsCount: t`Boosts`,\n                            quotesCount: t`Quotes`,\n                            density: t`Density`,\n                          }[key]\n                        }\n                        {sortBy === key && (sortOrder === 'asc' ? ' ↑' : ' ↓')}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {/* <fieldset class=\"radio-field-group\">\n                    {['asc', 'desc'].map((key) => (\n                      <label class=\"filter-sort\" key={key}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-dir\"\n                          checked={sortOrder === key}\n                          onChange={() => {\n                            setSortOrder(key);\n                          }}\n                        />\n                        {key === 'asc' ? '↑' : '↓'}\n                      </label>\n                    ))}\n                  </fieldset> */}\n                  <span class=\"filter-label\">\n                    <Trans id=\"group.filter\">Group</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_GROUPS.map((key) => (\n                      <label class=\"filter-group\" key={key || 'none'}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-group\"\n                          checked={groupBy === key}\n                          onChange={() => {\n                            setGroupBy(key);\n                          }}\n                          disabled={key === 'account' && selectedAuthor}\n                        />\n                        {{\n                          account: t`Authors`,\n                        }[key] || t`None`}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {\n                    selectedAuthor && authorCountsList.length > 1 ? (\n                      <button\n                        type=\"button\"\n                        class=\"plain6 small\"\n                        onClick={() => {\n                          setSelectedAuthor(null);\n                        }}\n                        style={{\n                          whiteSpace: 'nowrap',\n                        }}\n                      >\n                        <Trans>Show all authors</Trans>\n                      </button>\n                    ) : null\n                    // <button\n                    //   type=\"button\"\n                    //   class=\"plain4 small\"\n                    //   onClick={() => {}}\n                    // >\n                    //   Group by authors\n                    // </button>\n                  }\n                </div>\n              )}\n              <ul\n                class={`catchup-list catchup-filter-${\n                  selectedFilterCategory || ''\n                } ${sortBy ? `catchup-sort-${sortBy}` : ''} ${\n                  selectedAuthor && authors[selectedAuthor]\n                    ? `catchup-selected-author`\n                    : ''\n                } ${groupBy ? `catchup-group-${groupBy}` : ''}`}\n              >\n                {sortedFilteredPosts.map((post, i) => {\n                  const id = post.reblog?.id || post.id;\n                  let showSeparator = false;\n                  if (groupBy === 'account') {\n                    if (\n                      prevGroup.current &&\n                      post.account.id !== prevGroup.current &&\n                      i > 0\n                    ) {\n                      showSeparator = true;\n                    }\n                    prevGroup.current = post.account.id;\n                  }\n                  return (\n                    <Fragment key={`${post.id}-${showSeparator}`}>\n                      {showSeparator && <li class=\"separator\" />}\n                      <IntersectionPostLineItem\n                        to={`/${instance}/s/${id}`}\n                        post={post}\n                        root={scrollableRef.current}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </ul>\n              <footer>\n                {filteredPosts.length > 5 && (\n                  <p>\n                    {selectedFilterCategory === 'boosts'\n                      ? t`You don't have to read everything.`\n                      : t`That's all.`}{' '}\n                    <button\n                      type=\"button\"\n                      class=\"textual\"\n                      onClick={() => {\n                        scrollableRef.current.scrollTop = 0;\n                      }}\n                    >\n                      <Trans>Back to top</Trans>\n                    </button>\n                    .\n                  </p>\n                )}\n              </footer>\n            </>\n          )}\n        </main>\n      </div>\n      {showHelp && (\n        <Modal onClose={() => setShowHelp(false)}>\n          <div class=\"sheet\" id=\"catchup-help-sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowHelp(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Help</Trans>\n              </h2>\n            </header>\n            <main>\n              <dl>\n                <dt>\n                  <Trans>Top links</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Links shared by followings, sorted by shared counts, boosts\n                    and likes.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Sort: Density</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are sorted by information density or depth. Shorter\n                    posts are \"lighter\" while longer posts are \"heavier\". Posts\n                    with photos are \"heavier\" than posts without photos.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Group: Authors</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are grouped by authors, sorted by posts count per\n                    author.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Keyboard shortcuts</Trans>\n                </dt>\n                {/* <dd>\n                  <kbd>j</kbd>: <Trans>Next post</Trans>\n                </dd>\n                <dd>\n                  <kbd>k</kbd>: <Trans>Previous post</Trans>\n                </dd>\n                <dd>\n                  <kbd>l</kbd>: <Trans>Next author</Trans>\n                </dd>\n                <dd>\n                  <kbd>h</kbd>: <Trans>Previous author</Trans>\n                </dd>\n                <dd>\n                  <kbd>Enter</kbd>: <Trans>Open post details</Trans>\n                </dd>\n                <dd>\n                  <kbd>.</kbd>: <Trans>Scroll to top</Trans>\n                </dd> */}\n                <dd>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Trans>Next post</Trans>\n                        </td>\n                        <td>\n                          <kbd>j</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous post</Trans>\n                        </td>\n                        <td>\n                          <kbd>k</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Next author</Trans>\n                        </td>\n                        <td>\n                          <kbd>l</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous author</Trans>\n                        </td>\n                        <td>\n                          <kbd>h</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Open post details</Trans>\n                        </td>\n                        <td>\n                          <kbd>Enter</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Scroll to top</Trans>\n                        </td>\n                        <td>\n                          <kbd>.</kbd>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </dd>\n              </dl>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst PostLine = memo(\n  function ({ post }) {\n    const {\n      id,\n      account,\n      group,\n      reblog,\n      quote,\n      inReplyToId,\n      inReplyToAccountId,\n      _followedTags: isFollowedTags,\n      _filtered: filterInfo,\n      visibility,\n      __BOOSTERS,\n    } = post;\n    const isReplyTo = inReplyToId && inReplyToAccountId !== account.id;\n    const isFiltered = !!filterInfo && filterInfo?.action !== 'blur';\n\n    const debugHover = (e) => {\n      if (e.shiftKey) {\n        console.log({\n          ...post,\n        });\n      }\n    };\n\n    return (\n      <article\n        class={`post-line ${\n          group\n            ? 'group'\n            : reblog\n              ? 'reblog'\n              : supportsNativeQuote() && hasQuote(quote)\n                ? 'quote'\n                : isFollowedTags?.length\n                  ? 'followed-tags'\n                  : ''\n        } ${isReplyTo ? 'reply-to' : ''} ${\n          isFiltered ? 'filtered' : ''\n        } visibility-${visibility}`}\n        onMouseEnter={debugHover}\n      >\n        <span class=\"post-author\">\n          {reblog ? (\n            <span class=\"post-reblog-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />\n              {__BOOSTERS?.size > 0\n                ? [...__BOOSTERS].map((b) => (\n                    <Avatar url={b.avatarStatic || b.avatar} squircle={b.bot} />\n                  ))\n                : ''}{' '}\n              <Icon icon=\"rocket\" />{' '}\n              {/* <Avatar\n              url={reblog.account.avatarStatic || reblog.account.avatar}\n              squircle={reblog.account.bot}\n            /> */}\n              <NameText account={reblog.account} showAvatar />\n            </span>\n          ) : hasQuote(quote) ? (\n            <span class=\"post-quote-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />{' '}\n              <Icon icon=\"quote\" />{' '}\n              <NameText\n                account={quote.quotedStatus?.account || quote.account}\n                showAvatar\n              />\n            </span>\n          ) : (\n            <NameText account={account} showAvatar />\n          )}\n        </span>\n        <PostPeek post={reblog || post} filterInfo={filterInfo} />\n        <span class=\"post-meta\">\n          <PostStats post={reblog || post} />{' '}\n          <RelativeTime\n            datetime={new Date(reblog?.createdAt || post.createdAt)}\n            format=\"micro\"\n          />\n        </span>\n      </article>\n    );\n  },\n  (oldProps, newProps) => {\n    return oldProps?.post?.id === newProps?.post?.id;\n  },\n);\n\nconst IntersectionPostLineItem = ({ root, to, ...props }) => {\n  const ref = useRef();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          queueMicrotask(() => setShow(true));\n          observer.unobserve(ref.current);\n        }\n      },\n      {\n        root,\n        rootMargin: `${Math.max(320, screen.height * 0.75)}px`,\n      },\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n\n  return show ? (\n    <li>\n      <Link to={to}>\n        <PostLine {...props} />\n      </Link>\n    </li>\n  ) : (\n    <li ref={ref} style={{ height: '4em' }} />\n  );\n};\n\n// A media speak a thousand words\nconst MEDIA_DENSITY = 8;\nconst CARD_DENSITY = 8;\nfunction postDensity(post) {\n  const { spoilerText, content, poll, mediaAttachments, card } = post;\n  const pollContent = poll?.options?.length\n    ? poll.options.reduce((acc, cur) => acc + cur.title, '')\n    : '';\n  const density =\n    (spoilerText.length + htmlContentLength(content) + pollContent.length) /\n      140 +\n    (mediaAttachments?.length\n      ? MEDIA_DENSITY * mediaAttachments.length\n      : card?.image\n        ? CARD_DENSITY\n        : 0);\n  return density;\n}\n\nconst MEDIA_SIZE = 48;\n\nfunction PostPeek({ post, filterInfo }) {\n  const { t } = useLingui();\n  let {\n    spoilerText,\n    sensitive,\n    content,\n    emojis,\n    poll,\n    mediaAttachments,\n    card,\n    inReplyToId,\n    inReplyToAccountId,\n    account,\n    _thread,\n    quote,\n  } = post;\n  const isThread =\n    (inReplyToId && inReplyToAccountId === account.id) || !!_thread;\n  let theQuote =\n    supportsNativeQuote() && hasQuote(quote)\n      ? quote.quotedStatus || quote\n      : null;\n  if (theQuote?.spoilerText || theQuote?.sensitive) theQuote = null;\n  if (theQuote?.emojis) emojis.push(...theQuote.emojis);\n  if (!mediaAttachments?.length && theQuote?.mediaAttachments?.length) {\n    mediaAttachments = theQuote.mediaAttachments;\n  }\n\n  const prefs = getPreferences();\n  const readingExpandSpoilers = !!prefs['reading:expand:spoilers'];\n  // const readingExpandSpoilers = true;\n  const showMedia =\n    readingExpandSpoilers ||\n    (!spoilerText && !sensitive && filterInfo?.action !== 'blur');\n  const postText = content ? statusPeek(post) : '';\n\n  const showPostContent = !spoilerText || readingExpandSpoilers;\n\n  return (\n    <div class=\"post-peek\" title={!spoilerText ? postText : ''}>\n      <span class=\"post-peek-content\">\n        {isThread && !showPostContent && (\n          <>\n            <span class=\"post-peek-tag post-peek-thread\">Thread</span>{' '}\n          </>\n        )}\n        {!!filterInfo && filterInfo?.action !== 'blur' ? (\n          <span class=\"post-peek-filtered\">\n            {/* Filtered{filterInfo?.titlesStr ? `: ${filterInfo.titlesStr}` : ''} */}\n            {filterInfo?.titlesStr\n              ? t`Filtered: ${filterInfo.titlesStr}`\n              : t`Filtered`}\n          </span>\n        ) : (\n          <>\n            {!!spoilerText && (\n              <span class=\"post-peek-spoiler\">\n                <Icon\n                  icon={`${readingExpandSpoilers ? 'eye-open' : 'eye-close'}`}\n                />{' '}\n                {spoilerText}\n              </span>\n            )}\n            {showPostContent && (\n              <div class=\"post-peek-html\">\n                {isThread && (\n                  <>\n                    <span class=\"post-peek-tag post-peek-thread\">\n                      <Trans>Thread</Trans>\n                    </span>{' '}\n                  </>\n                )}\n                {!!content && (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html:\n                        emojifyText(content, emojis) +\n                        (!!theQuote?.content\n                          ? `<blockquote class=\"post-peek-quote\">${theQuote.content}</blockquote>`\n                          : ''),\n                    }}\n                  />\n                )}\n                {!!poll?.options?.length &&\n                  poll.options.map((o) => (\n                    <div>\n                      {poll.multiple ? '▪️' : '•'} {o.title}\n                    </div>\n                  ))}\n                {!content &&\n                  mediaAttachments?.length === 1 &&\n                  mediaAttachments[0].description && (\n                    <>\n                      <span class=\"post-peek-tag post-peek-alt\">ALT</span>{' '}\n                      <div>{mediaAttachments[0].description}</div>\n                    </>\n                  )}\n              </div>\n            )}\n          </>\n        )}\n      </span>\n      {(!filterInfo || filterInfo?.action === 'blur') && (\n        <span class=\"post-peek-post-content\">\n          {!!poll && (\n            <span class=\"post-peek-tag post-peek-poll\">\n              <Icon icon=\"poll\" size=\"s\" />\n              <Trans>Poll</Trans>\n            </span>\n          )}\n          {!!mediaAttachments?.length\n            ? mediaAttachments.map((m) => {\n                const mediaURL = m.previewUrl || m.url;\n                const remoteMediaURL = m.previewRemoteUrl || m.remoteUrl;\n                const width = m.meta?.original\n                  ? m.meta.original.width\n                  : m.meta?.small?.width || m.meta?.original?.width;\n                const height = m.meta?.original\n                  ? m.meta.original.height\n                  : m.meta?.small?.height || m.meta?.original?.height;\n                return (\n                  <span key={m.id} class=\"post-peek-media\">\n                    {{\n                      image:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                            style={{\n                              '--anim-duration': `${Math.min(\n                                Math.max(Math.max(width, height) / 100, 5),\n                                120,\n                              )}s`,\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🖼</span>\n                        ),\n                      gifv:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🎞️</span>\n                        ),\n                      video:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">📹</span>\n                        ),\n                      audio: <span class=\"post-peek-faux-media\">🎵</span>,\n                    }[m.type] || null}\n                  </span>\n                );\n              })\n            : !!card &&\n              card.image &&\n              showMedia && (\n                <span\n                  class={`post-peek-media post-peek-card card-${\n                    card.type || ''\n                  }`}\n                >\n                  {card.image ? (\n                    <img\n                      src={card.image}\n                      width={MEDIA_SIZE}\n                      height={MEDIA_SIZE}\n                      alt={\n                        card.title || card.description || card.imageDescription\n                      }\n                      loading=\"lazy\"\n                      style={{\n                        '--anim-duration':\n                          card.width &&\n                          card.height &&\n                          `${Math.min(\n                            Math.max(\n                              Math.max(card.width, card.height) / 100,\n                              5,\n                            ),\n                            120,\n                          )}s`,\n                      }}\n                    />\n                  ) : (\n                    <span class=\"post-peek-faux-media\">🔗</span>\n                  )}\n                </span>\n              )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction PostStats({ post }) {\n  const { t } = useLingui();\n  const { reblogsCount, repliesCount, favouritesCount, quotesCount } = post;\n  return (\n    <span class=\"post-stats\">\n      {repliesCount > 0 && (\n        <span class=\"post-stat-replies\">\n          <Icon icon=\"comment2\" size=\"s\" alt={t`Replies`} />{' '}\n          {shortenNumber(repliesCount)}\n        </span>\n      )}\n      {favouritesCount > 0 && (\n        <span class=\"post-stat-likes\">\n          <Icon icon=\"heart\" size=\"s\" alt={t`Likes`} />{' '}\n          {shortenNumber(favouritesCount)}\n        </span>\n      )}\n      {reblogsCount > 0 || quotesCount > 0 ? (\n        <span class=\"post-stat-boosts\">\n          <Icon icon=\"rocket\" size=\"s\" alt={t`Boosts`} />{' '}\n          {reblogsCount > 0 || quotesCount > 0\n            ? `${reblogsCount > 0 ? shortenNumber(reblogsCount) : ''}${\n                reblogsCount > 0 && quotesCount > 0 ? '+' : ''\n              }${quotesCount > 0 ? shortenNumber(quotesCount) : ''}`\n            : shortenNumber(reblogsCount)}\n        </span>\n      ) : null}\n    </span>\n  );\n}\n\nfunction binByTime(data, key, numBins) {\n  // Extract dates from data objects\n  const dates = data.map((item) => new Date(item[key]));\n\n  // Find minimum and maximum dates directly (avoiding Math.min/max)\n  const minDate = dates.reduce(\n    (acc, date) => (date < acc ? date : acc),\n    dates[0],\n  );\n  const maxDate = dates.reduce(\n    (acc, date) => (date > acc ? date : acc),\n    dates[0],\n  );\n\n  // Calculate the time span in milliseconds\n  const range = Math.min(maxDate.getTime(), Date.now()) - minDate.getTime();\n\n  // Create empty bins and loop through data\n  const bins = Array.from({ length: numBins }, () => []);\n  data.forEach((item) => {\n    const dateTime = Date.parse(item[key]);\n    if (dateTime > Date.now()) {\n      // Future dates go into the last bin\n      bins[bins.length - 1].push(item);\n    } else {\n      const normalized = (dateTime - minDate.getTime()) / range;\n      const binIndex = Math.floor(normalized * (numBins - 1));\n      bins[binIndex].push(item);\n    }\n  });\n\n  return bins;\n}\n\nexport default Catchup;\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  const { t } = useLingui();\n  useTitle(t`Likes`, '/favourites');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites\n        .list({ limit: LIMIT })\n        .values();\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Likes`}\n      id=\"favourites\"\n      emptyText={t`No likes yet. Go like something!`}\n      errorText={t`Unable to load likes.`}\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import './filters.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getAPIVersions } from '../utils/store-utils';\nimport useInterval from '../utils/useInterval';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = ['home', 'public', 'notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_UNIMPLEMENTED = ['thread', 'account'];\nconst FILTER_CONTEXT_LABELS = {\n  home: msg`Home and lists`,\n  notifications: msg`Notifications`,\n  public: msg`Public timelines`,\n  thread: msg`Conversations`,\n  account: msg`Profiles`,\n};\n\nconst EXPIRY_DURATIONS = [\n  0, // forever\n  30 * 60, // 30 minutes\n  60 * 60, // 1 hour\n  6 * 60 * 60, // 6 hours\n  12 * 60 * 60, // 12 hours\n  60 * 60 * 24, // 24 hours\n  60 * 60 * 24 * 7, // 7 days\n  60 * 60 * 24 * 30, // 30 days\n];\n\nconst EXPIRY_DURATIONS_LABELS = {\n  0: msg`Never`,\n  1800: i18nDuration(30, 'minute'),\n  3600: i18nDuration(1, 'hour'),\n  21600: i18nDuration(6, 'hour'),\n  43200: i18nDuration(12, 'hour'),\n  86_400: i18nDuration(24, 'hour'),\n  604_800: i18nDuration(7, 'day'),\n  2_592_000: i18nDuration(30, 'day'),\n};\n\nfunction Filters() {\n  const { t } = useLingui();\n  const { masto } = api();\n  useTitle(t`Filters`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n  const [showFiltersAddEditModal, setShowFiltersAddEditModal] = useState(false);\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const filters = await masto.v2.filters.list();\n        filters.sort((a, b) => a.title.localeCompare(b.title));\n        filters.forEach((filter) => {\n          if (filter.keywords?.length) {\n            filter.keywords.sort((a, b) => a.id - b.id);\n          }\n        });\n        console.log(filters);\n        setFilters(filters);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"filters-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Filters</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  setShowFiltersAddEditModal(true);\n                }}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New filter`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {filters.length > 0 ? (\n            <>\n              <ul class=\"filters-list\">\n                {filters.map((filter) => {\n                  const { id, title, expiresAt, keywords } = filter;\n                  return (\n                    <li key={id}>\n                      <div>\n                        <h2>{title}</h2>\n                        {keywords?.length > 0 && (\n                          <div>\n                            {keywords.map((k) => (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {k.wholeWord ? `“${k.keyword}”` : k.keyword}\n                                </span>{' '}\n                              </>\n                            ))}\n                          </div>\n                        )}\n                        <small class=\"insignificant\">\n                          <ExpiryStatus expiresAt={expiresAt} />\n                        </small>\n                      </div>\n                      <button\n                        type=\"button\"\n                        class=\"plain\"\n                        onClick={() => {\n                          setShowFiltersAddEditModal({\n                            filter,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" size=\"l\" alt=\"Edit filter\" />\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n              {filters.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={filters.length}\n                      one=\"# filter\"\n                      other=\"# filters\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load filters.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No filters yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {!!showFiltersAddEditModal && (\n        <Modal\n          title={t`Add filter`}\n          onClose={() => {\n            setShowFiltersAddEditModal(false);\n          }}\n        >\n          <FiltersAddEdit\n            filter={showFiltersAddEditModal?.filter}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowFiltersAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nlet _id = 1;\nconst incID = () => _id++;\nfunction FiltersAddEdit({ filter, onClose }) {\n  const { _, t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!filter;\n  const { context, expiresAt, id, keywords, title, filterAction } =\n    filter || {};\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const [editKeywords, setEditKeywords] = useState(keywords || []);\n  const keywordsRef = useRef();\n\n  // Hacky way of handling removed keywords for both existing and new ones\n  const [removedKeywordIDs, setRemovedKeywordIDs] = useState([]);\n  const [removedKeyword_IDs, setRemovedKeyword_IDs] = useState([]);\n\n  const filteredEditKeywords = editKeywords.filter(\n    (k) =>\n      !removedKeywordIDs.includes(k.id) && !removedKeyword_IDs.includes(k._id),\n  );\n\n  return (\n    <div class=\"sheet\" id=\"filters-add-edit-modal\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit filter` : t`New filter`}</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const keywordIDs = formData.getAll('keyword_attributes[][id]');\n            const keywordKeywords = formData.getAll(\n              'keyword_attributes[][keyword]',\n            );\n            // const keywordWholeWords = formData.getAll(\n            //   'keyword_attributes[][whole_word]',\n            // );\n            // Not using getAll because it skips the empty checkboxes\n            const keywordWholeWords = [\n              ...keywordsRef.current.querySelectorAll(\n                'input[name=\"keyword_attributes[][whole_word]\"]',\n              ),\n            ].map((i) => i.checked);\n            const keywordsAttributes = keywordKeywords.map((k, i) => ({\n              id: keywordIDs[i] || undefined,\n              keyword: k,\n              wholeWord: keywordWholeWords[i],\n            }));\n            // if (editMode && keywords?.length) {\n            //   // Find which one got deleted and add to keywordsAttributes\n            //   keywords.forEach((k) => {\n            //     if (!keywordsAttributes.find((ka) => ka.id === k.id)) {\n            //       keywordsAttributes.push({\n            //         ...k,\n            //         _destroy: true,\n            //       });\n            //     }\n            //   });\n            // }\n            if (editMode && removedKeywordIDs?.length) {\n              removedKeywordIDs.forEach((id) => {\n                keywordsAttributes.push({\n                  id,\n                  _destroy: true,\n                });\n              });\n            }\n            const context = formData.getAll('context');\n            let expiresIn = formData.get('expires_in');\n            const filterAction = formData.get('filter_action');\n            console.log({\n              title,\n              keywordIDs,\n              keywords: keywordKeywords,\n              wholeWords: keywordWholeWords,\n              keywordsAttributes,\n              context,\n              expiresIn,\n              filterAction,\n            });\n\n            // Required fields\n            if (!title || !context?.length) {\n              return;\n            }\n\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let filterResult;\n\n                if (editMode) {\n                  if (expiresIn === '' || expiresIn === null) {\n                    // No value\n                    // Preserve existing expiry if not specified\n                    // Seconds from now to expiresAtDate\n                    // Other clients don't do this\n                    if (hasExpiry) {\n                      expiresIn = Math.floor(\n                        (expiresAtDate - Date.now()) / 1000,\n                      );\n                    } else {\n                      expiresIn = null;\n                    }\n                  } else if (expiresIn === '0' || expiresIn === 0) {\n                    // 0 = Never\n                    expiresIn = null;\n                  } else {\n                    expiresIn = +expiresIn;\n                  }\n                  filterResult = await masto.v2.filters.$select(id).update({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                } else {\n                  expiresIn = +expiresIn || null;\n                  filterResult = await masto.v2.filters.create({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                }\n                console.log({ filterResult });\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  filter: filterResult,\n                });\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit filter`\n                    : t`Unable to create filter`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"filter-form-row\">\n            <label>\n              <b>\n                <Trans>Title</Trans>\n              </b>\n              <input\n                type=\"text\"\n                name=\"title\"\n                defaultValue={title}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n                required\n              />\n            </label>\n          </div>\n          <div class=\"filter-form-keywords\" ref={keywordsRef}>\n            {filteredEditKeywords.length ? (\n              <ul class=\"filter-keywords\">\n                {filteredEditKeywords.map((k) => {\n                  const { id, keyword, wholeWord, _id } = k;\n                  return (\n                    <li key={`${id}-${_id}`}>\n                      <input\n                        type=\"hidden\"\n                        name=\"keyword_attributes[][id]\"\n                        value={id}\n                      />\n                      <input\n                        name=\"keyword_attributes[][keyword]\"\n                        type=\"text\"\n                        defaultValue={keyword}\n                        disabled={uiState === 'loading'}\n                        required\n                        dir=\"auto\"\n                      />\n                      <div class=\"filter-keyword-actions\">\n                        <label>\n                          <input\n                            name=\"keyword_attributes[][whole_word]\"\n                            type=\"checkbox\"\n                            value={id} // Hacky way to map checkbox boolean to the keyword id\n                            defaultChecked={wholeWord}\n                            disabled={uiState === 'loading'}\n                          />{' '}\n                          <Trans>Whole word</Trans>\n                        </label>\n                        <button\n                          type=\"button\"\n                          class=\"light danger small\"\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            if (id) {\n                              removedKeywordIDs.push(id);\n                              setRemovedKeywordIDs([...removedKeywordIDs]);\n                            } else if (_id) {\n                              removedKeyword_IDs.push(_id);\n                              setRemovedKeyword_IDs([...removedKeyword_IDs]);\n                            }\n                          }}\n                        >\n                          <Icon icon=\"x\" alt={t`Remove`} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <div class=\"filter-keywords\">\n                <div class=\"insignificant\">\n                  <Trans>No keywords. Add one.</Trans>\n                </div>\n              </div>\n            )}\n            <footer class=\"filter-keywords-footer\">\n              <button\n                type=\"button\"\n                class=\"light\"\n                onClick={() => {\n                  setEditKeywords([\n                    ...editKeywords,\n                    {\n                      _id: incID(),\n                      keyword: '',\n                      wholeWord: true,\n                    },\n                  ]);\n                  setTimeout(() => {\n                    // Focus last input\n                    const fields =\n                      keywordsRef.current.querySelectorAll(\n                        'input[type=\"text\"]',\n                      );\n                    fields[fields.length - 1]?.focus?.();\n                  }, 10);\n                }}\n              >\n                <Trans>Add keyword</Trans>\n              </button>{' '}\n              {filteredEditKeywords?.length > 1 && (\n                <small class=\"insignificant\">\n                  <Plural\n                    value={filteredEditKeywords.length}\n                    one=\"# keyword\"\n                    other=\"# keywords\"\n                  />\n                </small>\n              )}\n            </footer>\n          </div>\n          <div class=\"filter-form-cols\">\n            <div class=\"filter-form-col\">\n              <div>\n                <b>\n                  <Trans>Filter from…</Trans>\n                </b>\n              </div>\n              {FILTER_CONTEXT.map((ctx) => (\n                <div>\n                  <label\n                    class={\n                      FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx)\n                        ? 'insignificant'\n                        : ''\n                    }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name=\"context\"\n                      value={ctx}\n                      defaultChecked={!!context ? context.includes(ctx) : true}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    {_(FILTER_CONTEXT_LABELS[ctx])}\n                    {FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx) ? '*' : ''}\n                  </label>{' '}\n                </div>\n              ))}\n              <p>\n                <small class=\"insignificant\">\n                  <Trans>* Not implemented yet</Trans>\n                </small>\n              </p>\n            </div>\n            <div class=\"filter-form-col\">\n              {editMode && (\n                <Trans>\n                  Status:{' '}\n                  <b>\n                    <ExpiryStatus expiresAt={expiresAt} showNeverExpires />\n                  </b>\n                </Trans>\n              )}\n              <div>\n                <label for=\"filters-expires_in\">\n                  {editMode ? t`Change expiry` : t`Expiry`}\n                </label>\n                <select\n                  id=\"filters-expires_in\"\n                  name=\"expires_in\"\n                  disabled={uiState === 'loading'}\n                  defaultValue={editMode ? undefined : 0}\n                >\n                  {editMode && <option></option>}\n                  {EXPIRY_DURATIONS.map((v) => (\n                    <option value={v}>\n                      {typeof EXPIRY_DURATIONS_LABELS[v] === 'function'\n                        ? EXPIRY_DURATIONS_LABELS[v]()\n                        : _(EXPIRY_DURATIONS_LABELS[v])}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <p>\n                <Trans>Filtered post will be…</Trans>\n                <br />\n                {getAPIVersions()?.mastodon >= 5 && (\n                  <label class=\"ib\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter_action\"\n                      value=\"blur\"\n                      defaultChecked={filterAction === 'blur'}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    <Trans>obscured (media only)</Trans>\n                  </label>\n                )}{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"warn\"\n                    defaultChecked={\n                      (filterAction !== 'hide' && filterAction !== 'blur') ||\n                      !editMode\n                    }\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>minimized</Trans>\n                </label>{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"hide\"\n                    defaultChecked={filterAction === 'hide'}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>hidden</Trans>\n                </label>\n              </p>\n            </div>\n          </div>\n          <footer class=\"filter-form-footer\">\n            <span>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                {editMode ? t`Save` : t`Create`}\n              </button>{' '}\n              <Loader abrupt hidden={uiState !== 'loading'} />\n            </span>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this filter?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await masto.v2.filters.$select(id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'success',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete filter.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  onClick={() => {}}\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ExpiryStatus({ expiresAt, showNeverExpires }) {\n  const { t } = useLingui();\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const expired = hasExpiry && Date.parse(expiresAt) <= Date.now();\n\n  // If less than a minute left, re-render interval every second, else every minute\n  const [_, rerender] = useReducer((c) => c + 1, 0);\n  useInterval(rerender, expired || 30_000);\n\n  return expired ? (\n    t`Expired`\n  ) : hasExpiry ? (\n    <Trans>\n      Expiring <RelativeTime datetime={expiresAtDate} />\n    </Trans>\n  ) : (\n    showNeverExpires && t`Never expires`\n  );\n}\n\nexport default Filters;\n","import { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  useTitle(t`Followed Hashtags`, `/fh`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Followed Hashtags</Trans>\n            </h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" alt=\"#\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={followedHashtags.length}\n                      one=\"# hashtag\"\n                      other=\"# hashtags\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load followed hashtags.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No hashtags followed yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { useLingui } from '@lingui/react/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { getStatus, saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  const { t } = useLingui();\n  useTitle(\n    title ||\n      t({\n        id: 'following.title',\n        message: 'Following',\n      }),\n    path || '/following',\n  );\n  const { masto, streaming, instance, client } = api();\n  const [streamingClient, setStreamingClient] = useState(streaming);\n\n  const snapStates = useSnapshot(states);\n  const homeIterable = useRef();\n  const homeIterator = useRef();\n  const latestItem = useRef();\n\n  // Streaming only happens after instance is initialized\n  useEffect(() => {\n    if (!streaming && client?.onStreamingReady) {\n      client.onStreamingReady((streamingClient) => {\n        setStreamingClient(streamingClient);\n      });\n    }\n  }, [client]);\n  __BENCHMARK.end('time-to-following');\n\n  console.debug('RENDER Following', title, id);\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      __BENCHMARK.start('fetch-home-first');\n      homeIterable.current = masto.v1.timelines.home.list({ limit: LIMIT });\n      homeIterator.current = homeIterable.current.values();\n    }\n    if (supportsPixelfed && homeIterable.current?.params) {\n      if (typeof homeIterable.current.params === 'string') {\n        homeIterable.current.params += '&include_reblogs=true';\n      } else {\n        homeIterable.current.params.include_reblogs = true;\n      }\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      setTimeout(() => {\n        assignFollowedTags(value, instance);\n      }, 100);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        return Date.parse(b.createdAt) - Date.parse(a.createdAt);\n      });\n    }\n    __BENCHMARK.end('fetch-home-first');\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const opts = {\n        limit: 5,\n        since_id: latestItem.current,\n      };\n      if (supports('@pixelfed/home-include-reblogs')) {\n        opts.include_reblogs = true;\n      }\n      const results = await masto.v1.timelines.home.list(opts).values().next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streamingClient) {\n        sub = streamingClient.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streamingClient]);\n\n  return (\n    <Timeline\n      title={title || t({ id: 'following.title', message: 'Following' })}\n      id={id || 'following'}\n      emptyText={t`Nothing to see here.`}\n      errorText={t`Unable to load posts.`}\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import { plural } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  const { t } = useLingui();\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const title = instance\n    ? media\n      ? t`${hashtagTitle} (Media only) on ${instance}`\n      : t`${hashtagTitle} on ${instance}`\n    : media\n      ? t`${hashtagTitle} (Media only)`\n      : t`${hashtagTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   }).values();\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media ? true : undefined,\n      })\n      .values()\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media || mediaFirst, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .values()\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  const [featuredUIState, setFeaturedUIState] = useState('default');\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const [isFeaturedTag, setIsFeaturedTag] = useState(false);\n  useEffect(() => {\n    if (!authenticated) return;\n    (async () => {\n      try {\n        const featuredTags = await masto.v1.featuredTags.list();\n        setFeaturedTags(featuredTags);\n        setIsFeaturedTag(\n          featuredTags.some(\n            (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n          ),\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <Timeline\n        key={instance + hashtagTitle}\n        title={title}\n        titleComponent={\n          !!instance && (\n            <h1 class=\"header-double-lines\">\n              <b dir=\"auto\">{hashtagTitle}</b>\n              <div>{instance}</div>\n            </h1>\n          )\n        }\n        id=\"hashtag\"\n        instance={instance}\n        emptyText={t`No one has posted anything with this tag yet.`}\n        errorText={t`Unable to load posts with this tag`}\n        fetchItems={fetchHashtags}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        view={media || mediaFirst ? 'media' : undefined}\n        refresh={media}\n        // allowFilters\n        filterContext=\"public\"\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            // viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            {!!info && hashtags.length === 1 && (\n              <>\n                <MenuConfirm\n                  subMenu\n                  confirm={info.following}\n                  confirmLabel={t`Unfollow #${hashtag}?`}\n                  disabled={followUIState === 'loading' || !authenticated}\n                  onClick={() => {\n                    setFollowUIState('loading');\n                    if (info.following) {\n                      // const yes = confirm(`Unfollow #${hashtag}?`);\n                      // if (!yes) {\n                      //   setFollowUIState('default');\n                      //   return;\n                      // }\n                      masto.v1.tags\n                        .$select(hashtag)\n                        .unfollow()\n                        .then(() => {\n                          setInfo({ ...info, following: false });\n                          showToast(t`Unfollowed #${hashtag}`);\n                        })\n                        .catch((e) => {\n                          alert(e);\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFollowUIState('default');\n                        });\n                    } else {\n                      masto.v1.tags\n                        .$select(hashtag)\n                        .follow()\n                        .then(() => {\n                          setInfo({ ...info, following: true });\n                          showToast(t`Followed #${hashtag}`);\n                        })\n                        .catch((e) => {\n                          alert(e);\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFollowUIState('default');\n                        });\n                    }\n                  }}\n                >\n                  {info.following ? (\n                    <>\n                      <Icon icon=\"check-circle\" />{' '}\n                      <span>\n                        <Trans>Following…</Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"plus\" />{' '}\n                      <span>\n                        <Trans>Follow</Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  type=\"checkbox\"\n                  checked={isFeaturedTag}\n                  disabled={featuredUIState === 'loading' || !authenticated}\n                  onClick={() => {\n                    setFeaturedUIState('loading');\n                    if (isFeaturedTag) {\n                      const featuredTagID = featuredTags.find(\n                        (tag) =>\n                          tag.name.toLowerCase() === hashtag.toLowerCase(),\n                      ).id;\n                      if (featuredTagID) {\n                        masto.v1.featuredTags\n                          .$select(featuredTagID)\n                          .remove()\n                          .then(() => {\n                            setIsFeaturedTag(false);\n                            showToast(t`Unfeatured on profile`);\n                            setFeaturedTags(\n                              featuredTags.filter(\n                                (tag) => tag.id !== featuredTagID,\n                              ),\n                            );\n                          })\n                          .catch((e) => {\n                            console.error(e);\n                          })\n                          .finally(() => {\n                            setFeaturedUIState('default');\n                          });\n                      } else {\n                        showToast(t`Unable to unfeature on profile`);\n                      }\n                    } else {\n                      masto.v1.featuredTags\n                        .create({\n                          name: hashtag,\n                        })\n                        .then((value) => {\n                          setIsFeaturedTag(true);\n                          showToast(t`Featured on profile`);\n                          setFeaturedTags(featuredTags.concat(value));\n                        })\n                        .catch((e) => {\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFeaturedUIState('default');\n                        });\n                    }\n                  }}\n                >\n                  {isFeaturedTag ? (\n                    <>\n                      <Icon icon=\"check-circle\" />\n                      <span>\n                        <Trans>Featured on profile</Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"check-circle\" />\n                      <span>\n                        <Trans>Feature on profile</Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuItem>\n                <MenuDivider />\n              </>\n            )}\n            {!mediaFirst && (\n              <>\n                <MenuHeader className=\"plain\">\n                  <Trans>Filters</Trans>\n                </MenuHeader>\n                <MenuItem\n                  type=\"checkbox\"\n                  checked={!!media}\n                  onClick={() => {\n                    if (media) {\n                      searchParams.delete('media');\n                    } else {\n                      searchParams.set('media', '1');\n                    }\n                    setSearchParams(searchParams);\n                  }}\n                >\n                  <Icon icon=\"check-circle\" alt=\"☑️\" />{' '}\n                  <span class=\"menu-grow\">\n                    <Trans>Media only</Trans>\n                  </span>\n                </MenuItem>\n                <MenuDivider />\n              </>\n            )}\n            <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n              {({ ref }) => (\n                <form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    const newHashtag = e.target[0].value?.trim?.();\n                    // Use includes but need to be case insensitive\n                    if (\n                      newHashtag &&\n                      !hashtags.some(\n                        (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                      )\n                    ) {\n                      hashtags.push(newHashtag);\n                      hashtags.sort();\n                      // navigate(\n                      //   instance\n                      //     ? `/${instance}/t/${hashtags.join('+')}`\n                      //     : `/t/${hashtags.join('+')}`,\n                      // );\n                      location.hash = instance\n                        ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                        : `/t/${hashtags.join('+')}${linkParams}`;\n                    }\n                  }}\n                >\n                  <Icon icon=\"hashtag\" />\n                  <input\n                    ref={ref}\n                    type=\"text\"\n                    placeholder={\n                      reachLimit\n                        ? plural(TOTAL_TAGS_LIMIT, {\n                            other: 'Max # tags',\n                          })\n                        : t`Add hashtag`\n                    }\n                    required\n                    autocorrect=\"off\"\n                    autocapitalize=\"off\"\n                    spellCheck={false}\n                    // no spaces, no hashtags\n                    pattern=\"[^#][^\\s#]+[^#]\"\n                    disabled={reachLimit}\n                    dir=\"auto\"\n                  />\n                </form>\n              )}\n            </FocusableItem>\n            <MenuGroup takeOverflow>\n              {hashtags.map((tag, i) => (\n                <MenuItem\n                  key={tag}\n                  disabled={hashtags.length === 1}\n                  onClick={(e) => {\n                    hashtags.splice(i, 1);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }}\n                >\n                  <Icon icon=\"x\" alt={t`Remove hashtag`} class=\"danger-icon\" />\n                  <span class=\"bidi-isolate\">\n                    <span class=\"more-insignificant\">#</span>\n                    {tag}\n                  </span>\n                </MenuItem>\n              ))}\n            </MenuGroup>\n            <MenuDivider />\n            <MenuItem\n              disabled={!currentAuthenticated}\n              onClick={() => {\n                if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                  alert(\n                    plural(SHORTCUTS_LIMIT, {\n                      one: 'Max # shortcut reached. Unable to add shortcut.',\n                      other: 'Max # shortcuts reached. Unable to add shortcut.',\n                    }),\n                  );\n                  return;\n                }\n                const shortcut = {\n                  type: 'hashtag',\n                  hashtag: hashtags.join(' '),\n                  instance,\n                  media: media ? 'on' : undefined,\n                };\n                // Check if already exists\n                const exists = states.shortcuts.some(\n                  (s) =>\n                    s.type === shortcut.type &&\n                    s.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') ===\n                      shortcut.hashtag\n                        .split(/[\\s+]+/)\n                        .sort()\n                        .join(' ') &&\n                    (s.instance ? s.instance === shortcut.instance : true) &&\n                    (s.media ? !!s.media === !!shortcut.media : true),\n                );\n                if (exists) {\n                  alert(t`This shortcut already exists`);\n                } else {\n                  states.shortcuts.push(shortcut);\n                  showToast(t`Hashtag shortcut added`);\n                }\n              }}\n            >\n              <Icon icon=\"shortcut\" />{' '}\n              <span>\n                <Trans>Add to Shortcuts</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                let newInstance = prompt(\n                  t`Enter a new instance e.g. \"mastodon.social\"`,\n                );\n                if (!/\\./.test(newInstance)) {\n                  if (newInstance) alert(t`Invalid instance`);\n                  return;\n                }\n                if (newInstance) {\n                  newInstance = newInstance.toLowerCase().trim();\n                  // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                  location.hash = `/${newInstance}/t/${hashtags.join(\n                    '+',\n                  )}${linkParams}`;\n                }\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <span>\n                <Trans>Go to another instance…</Trans>\n              </span>\n            </MenuItem>\n            {currentInstance !== instance && (\n              <MenuItem\n                onClick={() => {\n                  location.hash = `/${currentInstance}/t/${hashtags.join(\n                    '+',\n                  )}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"bus\" />{' '}\n                <small class=\"menu-double-lines\">\n                  <Trans>\n                    Go to my instance (<b>{currentInstance}</b>)\n                  </Trans>\n                </small>\n              </MenuItem>\n            )}\n          </Menu2>\n        }\n      />\n      {!columnMode && !!hashtags?.length && (\n        <data\n          class=\"compose-data\"\n          value={JSON.stringify({\n            draftStatus: {\n              status: `${hashtags.length > 1 ? '\\n\\n' : ' '}${hashtagTitle}`,\n            },\n          })}\n        />\n      )}\n    </>\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport ListAddEdit from '../components/list-add-edit';\nimport ListExclusiveBadge from '../components/list-exclusive-badge';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport { getList, getLists } from '../utils/lists';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list\n        .$select(id)\n        .list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'home');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [lists, setLists] = useState([]);\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await getList(id);\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText={t`Nothing yet.`}\n        errorText={t`Unable to load posts.`}\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          // <Link to=\"/l\" class=\"button plain\">\n          //   <Icon icon=\"list\" size=\"l\" />\n          // </Link>\n          <Menu2\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"list\" size=\"l\" alt={t`Lists`} />\n                <Icon icon=\"chevron-down\" size=\"s\" />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (e.open) {\n                getLists().then(setLists);\n              }\n            }}\n          >\n            <MenuLink to=\"/l\">\n              <span>\n                <Trans>All Lists</Trans>\n              </span>\n            </MenuLink>\n            {lists?.length > 0 && (\n              <>\n                <MenuDivider />\n                {lists.map((list) => (\n                  <MenuLink key={list.id} to={`/l/${list.id}`}>\n                    <span>\n                      {list.title}\n                      {list.exclusive && (\n                        <>\n                          {' '}\n                          <ListExclusiveBadge />\n                        </>\n                      )}\n                    </span>\n                  </MenuLink>\n                ))}\n              </>\n            )}\n          </Menu2>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            {list?.exclusive && (\n              <>\n                <MenuHeader className=\"plain\">\n                  <ListExclusiveBadge />{' '}\n                  <Trans>\n                    Posts on this list are hidden from Home/Following\n                  </Trans>\n                </MenuHeader>\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>\n                <Trans>Edit</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>\n                <Trans>Manage members</Trans>\n              </span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\n\nfunction ListManageMembers({ listID, onClose }) {\n  const { t } = useLingui();\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            })\n            .values();\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Manage members</Trans>\n        </h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                <Trans>Show more…</Trans>\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={\n        <span>\n          <Trans>\n            Remove <span class=\"bidi-isolate\">@{account.username}</span> from\n            list?\n          </Trans>\n        </span>\n      }\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? t`Add` : t`Remove…`}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  quote: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\n\nconst GROUP_TYPES = ['favourite', 'reblog', 'follow'];\nconst groupable = (type) => GROUP_TYPES.includes(type);\n\nexport function fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nexport function massageNotifications2(notifications) {\n  if (notifications?.notificationGroups) {\n    const {\n      accounts = [],\n      notificationGroups = [],\n      statuses = [],\n    } = notifications;\n    return notificationGroups.map((group) => {\n      const { sampleAccountIds, statusId } = group;\n      const sampleAccounts =\n        sampleAccountIds?.map((id) => accounts.find((a) => a.id === id)) || [];\n      const status = statuses?.find((s) => s.id === statusId) || null;\n      return {\n        ...group,\n        sampleAccounts,\n        status,\n      };\n    });\n  }\n  return notifications;\n}\n\nexport function groupNotifications2(groupNotifications) {\n  // Make grouped notifications to look like faux grouped notifications\n  const newGroupNotifications = groupNotifications.map((gn) => {\n    const {\n      latestPageNotificationAt,\n      mostRecentNotificationId,\n      sampleAccounts,\n      notificationsCount,\n    } = gn;\n\n    return {\n      id: '' + mostRecentNotificationId,\n      createdAt: latestPageNotificationAt,\n      account: sampleAccounts[0],\n      ...gn,\n    };\n  });\n\n  // Merge favourited and reblogged of same status into a single notification\n  // - new type: \"favourite+reblog\"\n  // - sum numbers for `notificationsCount` and `sampleAccounts`\n  const notificationsMap = {};\n  const newGroupNotifications1 = [];\n  for (let i = 0; i < newGroupNotifications.length; i++) {\n    const gn = newGroupNotifications[i];\n    const {\n      type,\n      status,\n      createdAt,\n      notificationsCount,\n      sampleAccounts,\n      groupKey,\n    } = gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    // const sameCount = notificationsCount > 0 && notificationsCount === sampleAccounts?.length;\n    // if (sameCount && (type === 'favourite' || type === 'reblog')) {\n    const sampleCountDiffNotificationsCount =\n      notificationsCount > 0 &&\n      sampleAccounts?.length > 0 &&\n      notificationsCount > sampleAccounts?.length;\n    if (\n      !sampleCountDiffNotificationsCount &&\n      (type === 'favourite' || type === 'reblog')\n    ) {\n      virtualType = 'favourite+reblog';\n    }\n    // const key = `${status?.id}-${virtualType}-${date}-${sameCount ? 1 : 0}`;\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      newGroupNotifications1.push(gn);\n    } else if (mappedNotification) {\n      // Merge sampleAccounts + merge _types\n      sampleAccounts.forEach((a) => {\n        const mappedAccount = mappedNotification.sampleAccounts.find(\n          (ma) => ma.id === a.id,\n        );\n        if (!mappedAccount) {\n          mappedNotification.sampleAccounts.push({\n            ...a,\n            _types: [type],\n          });\n        } else {\n          mappedAccount._types.push(type);\n          mappedAccount._types.sort().reverse();\n        }\n      });\n      // mappedNotification.notificationsCount =\n      //   mappedNotification.sampleAccounts.length;\n      mappedNotification.notificationsCount = Math.min(\n        mappedNotification.notificationsCount,\n        notificationsCount,\n      );\n      mappedNotification._notificationsCount.push(notificationsCount);\n      mappedNotification._sampleAccountsCount.push(sampleAccounts?.length);\n      mappedNotification._accounts = mappedNotification.sampleAccounts;\n      mappedNotification._groupKeys.push(groupKey);\n    } else {\n      const accounts = sampleAccounts.map((a) => ({\n        ...a,\n        _types: [type],\n      }));\n      notificationsMap[key] = {\n        ...gn,\n        sampleAccounts: accounts,\n        type: virtualType,\n        _accounts: accounts,\n        _groupKeys: groupKey ? [groupKey] : [],\n        _notificationsCount: [notificationsCount],\n        _sampleAccountsCount: [sampleAccounts?.length],\n      };\n      newGroupNotifications1.push(notificationsMap[key]);\n    }\n  }\n\n  // 2nd pass.\n  // - Group 1 account favourte/reblog multiple posts\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const newGroupNotifications2 = [];\n  for (let i = 0; i < newGroupNotifications1.length; i++) {\n    const gn = newGroupNotifications1[i];\n    const { type, account, _accounts, sampleAccounts, createdAt, groupKey } =\n      gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    const hasOneAccount =\n      sampleAccounts?.length === 1 || _accounts?.length === 1;\n    if (\n      (type === 'favourite' ||\n        type === 'reblog' ||\n        type === 'favourite+reblog') &&\n      hasOneAccount\n    ) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(gn.status);\n        mappedNotification._ids += `-${gn.id}`;\n        mappedNotification._groupKeys.push(groupKey);\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...gn,\n          type,\n          _ids: gn.id,\n          _statuses: [gn.status],\n          _groupKeys: groupKey ? [groupKey] : [],\n        });\n        newGroupNotifications2.push(n);\n      }\n    } else {\n      newGroupNotifications2.push(gn);\n    }\n  }\n\n  console.log('newGroupNotifications2', newGroupNotifications2);\n\n  return newGroupNotifications2;\n}\n\nexport default function groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (!groupable(type)) {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification._ids += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification._ids += `-${id}`;\n      }\n    } else {\n      if (account) account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _ids: id,\n        _accounts: account ? [account] : [],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification._ids += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _ids: id,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { fixNotifications } from '../utils/group-notifications';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(type === 'private' ? t`Private mentions` : t`Mentions`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications\n        .list({\n          limit: LIMIT,\n          types: ['mention'],\n        })\n        .values();\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = fixNotifications(value);\n\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations\n        .list({\n          limit: LIMIT,\n        })\n        .values();\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .values()\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        const valueContainsLatestItem =\n          value[0]?.id === latestConversationItem.current; // since_id might not be supported\n        if (value?.length && !valueContainsLatestItem) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .values()\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          <Trans>All</Trans>\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          <Trans>Private</Trans>\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title={t`Mentions`}\n      id=\"mentions\"\n      emptyText={t`No one mentioned you :(`}\n      errorText={t`Unable to load mentions.`}\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n      filterContext=\"notifications\"\n    />\n  );\n}\n\nexport default Mentions;\n","import './notifications.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport FilterContext from '../utils/filter-context';\nimport groupNotifications, {\n  groupNotifications2,\n  massageNotifications2,\n} from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport store from '../utils/store';\nimport { getAPIVersions, getCurrentInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst NOTIFICATIONS_LIMIT = 80;\nconst NOTIFICATIONS_GROUPED_LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nconst memSupportsGroupedNotifications = mem(\n  () => getAPIVersions()?.mastodon >= 2,\n  {\n    maxAge: 1000 * 60 * 5, // 5 minutes\n  },\n);\n\nfunction mastoFetchNotificationsIterable(opts = {}) {\n  const { masto } = api();\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    // https://github.com/mastodon/mastodon/pull/29889\n    return masto.v2.notifications.list({\n      limit: NOTIFICATIONS_GROUPED_LIMIT,\n      ...opts,\n    });\n  } else {\n    return masto.v1.notifications.list({\n      limit: NOTIFICATIONS_LIMIT,\n      ...opts,\n    });\n  }\n}\nexport function mastoFetchNotifications(opts = {}) {\n  return mastoFetchNotificationsIterable(opts).values();\n}\n\nexport function getGroupedNotifications(notifications) {\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    return groupNotifications2(notifications);\n  } else {\n    return groupNotifications(notifications);\n  }\n}\n\nconst NOTIFICATIONS_POLICIES = [\n  'forNotFollowing',\n  'forNotFollowers',\n  'forNewAccounts',\n  'forPrivateMentions',\n  'forLimitedAccounts',\n];\nconst NOTIFICATIONS_POLICIES_TEXT = {\n  forNotFollowing: msg`You don't follow`,\n  forNotFollowers: msg`Who don't follow you`,\n  forNewAccounts: msg`With a new account`,\n  forPrivateMentions: msg`Who unsolicitedly private mention you`,\n  forLimitedAccounts: msg`Who are limited by server moderators`,\n};\n\nfunction Notifications({ columnMode }) {\n  const { _, t } = useLingui();\n  useTitle(t`Notifications`, '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterable = useRef();\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterable.current = mastoFetchNotificationsIterable({\n        excludeTypes: ['follow_request'],\n      });\n      notificationsIterator.current = notificationsIterable.current.values();\n    }\n    if (/max_id=($|&)/i.test(notificationsIterator.current?.nextParams)) {\n      // Pixelfed returns next paginationed link with empty max_id\n      // I assume, it's done (end of list)\n      return {\n        done: true,\n      };\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      // TEST: Slot in a fake notification to test 'severed_relationships'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'severed_relationships',\n      //   createdAt: '2024-03-22T19:20:08.316Z',\n      //   event: {\n      //     type: 'account_suspension',\n      //     targetName: 'mastodon.dev',\n      //     followersCount: 0,\n      //     followingCount: 0,\n      //   },\n      // });\n\n      // TEST: Slot in a fake notification to test 'moderation_warning'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'moderation_warning',\n      //   createdAt: new Date().toISOString(),\n      //   moderation_warning: {\n      //     id: '1231234',\n      //     action: 'mark_statuses_as_sensitive',\n      //   },\n      // });\n\n      // console.log({ notifications });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = groupedNotifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: groupedNotifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const supportsFilteredNotifications = supports(\n    '@mastodon/filtered-notifications',\n  );\n  const [showNotificationsSettings, setShowNotificationsSettings] =\n    useState(false);\n  const [notificationsPolicy, setNotificationsPolicy] = useState({});\n  function fetchNotificationsPolicy() {\n    return masto.v2.notifications.policy.fetch().catch(() => {});\n  }\n  function loadNotificationsPolicy() {\n    fetchNotificationsPolicy()\n      .then((policy) => {\n        console.log('✨ Notifications policy', policy);\n        setNotificationsPolicy(policy);\n      })\n      .catch(() => {});\n  }\n  const [notificationsRequests, setNotificationsRequests] = useState(null);\n  function fetchNotificationsRequest() {\n    return masto.v1.notifications.requests.list();\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                return (\n                  Date.parse(b.updatedAt || b.createdAt) -\n                  Date.parse(a.updatedAt || a.createdAt)\n                );\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n\n          if (supportsFilteredNotifications) {\n            loadNotificationsPolicy();\n          }\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    let unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n      if (firstLoad.current) {\n        firstLoad.current = false;\n        return;\n      }\n      if (uiState === 'loading') return;\n      if (v) loadUpdates();\n      setShowNew(v);\n    });\n    return () => unsub?.();\n  }, []);\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const [annualReportNotification, setAnnualReportNotification] =\n    useState(null);\n  useEffect(async () => {\n    // Skip this if not in December\n    const date = new Date();\n    if (date.getMonth() !== 11) return;\n\n    // Skip if doesn't support annual report\n    if (!supports('@mastodon/annual-report')) return;\n\n    let annualReportNotification = store.account.get(\n      'annualReportNotification',\n    );\n    if (annualReportNotification) {\n      setAnnualReportNotification(annualReportNotification);\n      return;\n    }\n    const notificationIterator = mastoFetchNotifications({\n      types: ['annual_report'],\n    });\n    try {\n      const notification = await notificationIterator.next();\n      annualReportNotification = notification?.value?.notificationGroups?.[0];\n      const annualReportYear = annualReportNotification?.annualReport?.year;\n      // If same year, show the annual report\n      if (annualReportYear == date.getFullYear()) {\n        console.log(\n          'ANNUAL REPORT',\n          annualReportYear,\n          annualReportNotification,\n        );\n        setAnnualReportNotification(annualReportNotification);\n        store.account.set('annualReportNotification', annualReportNotification);\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const oRef = useHotkeys(\n    ['enter', 'o'],\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const statusLink = activeItem?.querySelector('.status-link');\n      if (statusLink) {\n        statusLink.click();\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const today = new Date();\n  const todaySubHeading = useMemo(() => {\n    return niceDateTime(today, {\n      forceOpts: {\n        weekday: 'long',\n      },\n    });\n  }, [today]);\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        oRef.current = node;\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Notifications</Trans>\n            </h1>\n            <div class=\"header-side\">\n              {supportsFilteredNotifications && (\n                <button\n                  type=\"button\"\n                  class=\"button plain4\"\n                  onClick={() => {\n                    setShowNotificationsSettings(true);\n                  }}\n                >\n                  <Icon\n                    icon=\"settings\"\n                    size=\"l\"\n                    alt={t`Notifications settings`}\n                  />\n                </button>\n              )}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> <Trans>New notifications</Trans>\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <Plural\n                      value={announcements.length}\n                      one=\"Announcement\"\n                      other=\"Announcements\"\n                    />{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">\n              <Trans>Follow requests</Trans>\n            </h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>\n                  <Plural\n                    value={followRequests.length}\n                    one=\"# follow request\"\n                    other=\"# follow requests\"\n                  />\n                </summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        {supportsFilteredNotifications &&\n          notificationsPolicy?.summary?.pendingRequestsCount > 0 && (\n            <div class=\"shazam-container\">\n              <div class=\"shazam-container-inner\">\n                <div class=\"filtered-notifications\">\n                  <details\n                    onToggle={async (e) => {\n                      const { open } = e.target;\n                      if (open) {\n                        const requests = await fetchNotificationsRequest();\n                        setNotificationsRequests(requests);\n                        console.log({ open, requests });\n                      }\n                    }}\n                  >\n                    <summary>\n                      <Plural\n                        value={notificationsPolicy.summary.pendingRequestsCount}\n                        one=\"Filtered notifications from # person\"\n                        other=\"Filtered notifications from # people\"\n                      />\n                    </summary>\n                    {!notificationsRequests ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      notificationsRequests?.length > 0 && (\n                        <ul>\n                          {notificationsRequests.map((request) => (\n                            <li key={request.id}>\n                              <div class=\"request-notifcations\">\n                                {!request.lastStatus?.id && (\n                                  <AccountBlock\n                                    useAvatarStatic\n                                    showStats\n                                    account={request.account}\n                                  />\n                                )}\n                                {request.lastStatus?.id && (\n                                  <div class=\"last-post\">\n                                    <Link\n                                      class=\"status-link\"\n                                      to={`/${instance}/s/${request.lastStatus.id}`}\n                                    >\n                                      <Status\n                                        status={request.lastStatus}\n                                        size=\"s\"\n                                        readOnly\n                                      />\n                                    </Link>\n                                  </div>\n                                )}\n                                <NotificationRequestModalButton\n                                  request={request}\n                                />\n                              </div>\n                              <NotificationRequestButtons\n                                request={request}\n                                onChange={() => {\n                                  loadNotifications(true);\n                                }}\n                              />\n                            </li>\n                          ))}\n                        </ul>\n                      )\n                    )}\n                  </details>\n                </div>\n              </div>\n            </div>\n          )}\n        {annualReportNotification && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <Notification notification={annualReportNotification} />\n            </div>\n          </div>\n        )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            <Trans>Only mentions</Trans>\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">\n          <Trans>Today</Trans>{' '}\n          <small class=\"insignificant bidi-isolate\">{todaySubHeading}</small>\n        </h2>\n        {showTodayEmpty && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? t`You're all caught up.` : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <FilterContext.Provider value=\"notifications\">\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? t`Yesterday`\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                const subHeading = niceDateTime(currentDay, {\n                  forceOpts: {\n                    weekday: 'long',\n                  },\n                });\n                return (\n                  <Fragment key={notification._ids || notification.id}>\n                    {differentDay && (\n                      <h2 class=\"timeline-header\">\n                        <span>{heading}</span>{' '}\n                        <small class=\"insignificant bidi-isolate\">\n                          {subHeading}\n                        </small>\n                      </h2>\n                    )}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification._ids || notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </FilterContext.Provider>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load notifications</Trans>\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <Trans>Show more…</Trans>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n      {supportsFilteredNotifications && showNotificationsSettings && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowNotificationsSettings(false);\n            }\n          }}\n        >\n          <div class=\"sheet\" id=\"notifications-settings\" tabIndex=\"-1\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowNotificationsSettings(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Notifications settings</Trans>\n              </h2>\n            </header>\n            <main>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const {\n                    forNotFollowing,\n                    forNotFollowers,\n                    forNewAccounts,\n                    forPrivateMentions,\n                    forLimitedAccounts,\n                  } = e.target;\n                  const newPolicy = {\n                    ...notificationsPolicy,\n                    forNotFollowing: forNotFollowing.value,\n                    forNotFollowers: forNotFollowers.value,\n                    forNewAccounts: forNewAccounts.value,\n                    forPrivateMentions: forPrivateMentions.value,\n                    forLimitedAccounts: forLimitedAccounts.value,\n                  };\n                  setNotificationsPolicy(newPolicy);\n                  setShowNotificationsSettings(false);\n                  (async () => {\n                    try {\n                      await masto.v2.notifications.policy.update(newPolicy);\n                      showToast(t`Notifications settings updated`);\n                    } catch (e) {\n                      console.error(e);\n                    }\n                  })();\n                }}\n              >\n                <p>\n                  <Trans>Filter out notifications from people:</Trans>\n                </p>\n                <div class=\"notification-policy-fields\">\n                  {NOTIFICATIONS_POLICIES.map((key) => {\n                    const value = notificationsPolicy[key];\n                    return (\n                      <div key={key}>\n                        <label>\n                          {_(NOTIFICATIONS_POLICIES_TEXT[key])}\n                          <select name={key} defaultValue={value} class=\"small\">\n                            <option value=\"accept\">\n                              <Trans>Accept</Trans>\n                            </option>\n                            <option value=\"filter\">\n                              <Trans>Filter</Trans>\n                            </option>\n                            <option value=\"drop\">\n                              <Trans>Ignore</Trans>\n                            </option>\n                          </select>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p>\n                  <button type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </p>\n              </form>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              <Trans>\n                Updated{' '}\n                <time datetime={updatedAtDate.toISOString()}>\n                  {niceDateTime(updatedAtDate)}\n                </time>\n              </Trans>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction fetchNotficationsByAccount(accountID) {\n  const { masto } = api();\n  return masto.v1.notifications.list({\n    accountID,\n  });\n}\nfunction NotificationRequestModalButton({ request }) {\n  const { instance } = api();\n  const [uiState, setUIState] = useState('loading');\n  const { account, lastStatus } = request;\n  const [showModal, setShowModal] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  function onClose() {\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    if (!request?.account?.id) return;\n    if (!showModal) return;\n    setUIState('loading');\n    (async () => {\n      const notifs = await fetchNotficationsByAccount(request.account.id);\n      setNotifications(notifs || []);\n      setUIState('default');\n    })();\n  }, [showModal, request?.account?.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        class=\"plain4 request-notifications-account\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      >\n        <Icon icon=\"notification\" class=\"more-insignificant\" />{' '}\n        <small>\n          <Trans>\n            View notifications from{' '}\n            <span class=\"bidi-isolate\">@{account.username}</span>\n          </Trans>\n        </small>{' '}\n        <Icon icon=\"chevron-down\" />\n      </button>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              onClose();\n            }\n          }}\n        >\n          <div class=\"sheet\" tabIndex=\"-1\">\n            <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <b>\n                <Trans>\n                  Notifications from{' '}\n                  <span class=\"bidi-isolate\">@{account.username}</span>\n                </Trans>\n              </b>\n            </header>\n            <main>\n              {uiState === 'loading' ? (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              ) : (\n                notifications.map((notification) => (\n                  <div\n                    class=\"notification-peek\"\n                    onClick={(e) => {\n                      const { target } = e;\n                      // If button or links\n                      if (\n                        e.target.tagName === 'BUTTON' ||\n                        e.target.tagName === 'A'\n                      ) {\n                        onClose();\n                      }\n                    }}\n                  >\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      isStatic\n                    />\n                  </div>\n                ))\n              )}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction NotificationRequestButtons({ request, onChange }) {\n  const { t } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, dismiss\n  const hasRequestState = requestState !== null;\n\n  return (\n    <p class=\"notification-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .accept();\n              setRequestState('accept');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'accept',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not be filtered from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to accept notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Allow</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .dismiss();\n              setRequestState('dismiss');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'dismiss',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not show up in Filtered notifications from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to dismiss notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Dismiss</Trans>\n      </button>\n      <span class=\"notification-request-states\">\n        {uiState === 'loading' ? (\n          <Loader abrupt />\n        ) : requestState === 'accept' ? (\n          <Icon\n            icon=\"check-circle\"\n            alt={t`Accepted`}\n            class=\"notification-accepted\"\n          />\n        ) : (\n          requestState === 'dismiss' && (\n            <Icon\n              icon=\"x-circle\"\n              alt={t`Dismissed`}\n              class=\"notification-dismissed\"\n            />\n          )\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default memo(Notifications);\n","import { Trans, useLingui } from '@lingui/react/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = isLocal\n    ? t`Local timeline (${instance})`\n    : t`Federated timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      const opts = {\n        limit: LIMIT,\n        local: isLocal || undefined,\n      };\n      if (!isLocal && supports('@pixelfed/global-feed')) {\n        opts.remote = true;\n      }\n      publicIterator.current = masto.v1.timelines.public.list(opts).values();\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .values()\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? t`Local timeline` : t`Federated timeline`}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText={t`No one has posted anything yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Federated</Trans>\n                </span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Local</Trans>\n                </span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useReducer } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport {\n  addToSearchHistory,\n  clearAllSearchHistory,\n  getSearchHistory,\n  removeFromSearchHistory,\n} from '../utils/search-history';\nimport showToast from '../utils/show-toast';\n\nimport Icon from './icon';\nimport Link from './link';\nimport { generateSearchItemData } from './search-form';\n\nexport default function RecentSearches({ onItemClick }) {\n  const { t } = useLingui();\n  const { instance } = api();\n  const [, reload] = useReducer((c) => c + 1, 0);\n  const history = getSearchHistory();\n\n  const handleClearAll = () => {\n    clearAllSearchHistory();\n    showToast({\n      text: t`Cleared recent searches`,\n      delay: 1000,\n    });\n    reload();\n  };\n\n  const handleRemoveItem = (query, queryType) => {\n    removeFromSearchHistory(query, queryType);\n    reload();\n  };\n\n  const [listRef] = useAutoAnimate();\n\n  if (history.length === 0) {\n    return null;\n  }\n\n  return (\n    <div class=\"recent-searches\">\n      <div class=\"recent-searches-header\">\n        <Icon icon=\"history\" />{' '}\n        <span>\n          <Trans>Recent searches</Trans>\n        </span>\n        <span class=\"spacer\" />\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          onClick={handleClearAll}\n          disabled={history.length <= 0}\n        >\n          <span>\n            <Trans>Clear all</Trans>\n          </span>\n        </button>\n      </div>\n      <ul class=\"link-list recent-searches-list\" ref={listRef}>\n        {history.map((historyItem) => {\n          const { label, to, icon } = generateSearchItemData(\n            historyItem.query,\n            historyItem.queryType,\n            instance,\n          );\n\n          return (\n            <li\n              key={`${historyItem.query}-${historyItem.queryType}-${historyItem.timestamp}`}\n              class=\"recent-searches-item\"\n            >\n              <Link\n                to={to}\n                class=\"recent-searches-link\"\n                onClick={(e) => {\n                  addToSearchHistory(historyItem.query, historyItem.queryType);\n                  onItemClick?.(e);\n                }}\n              >\n                <Icon icon={icon} class=\"more-insignificant\" />\n                <span class=\"recent-searches-label\">{label}</span>\n              </Link>\n              <button\n                type=\"button\"\n                class=\"plain4 small\"\n                onClick={() =>\n                  handleRemoveItem(historyItem.query, historyItem.queryType)\n                }\n              >\n                <Icon icon=\"trash\" alt={t`Clear`} />\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport RecentSearches from '../components/recent-searches';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Search({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  let title = t`Search`;\n  if (q) {\n    switch (type) {\n      case 'statuses':\n        title = t`Search: ${q} (Posts)`;\n        break;\n      case 'accounts':\n        title = t`Search: ${q} (Accounts)`;\n        break;\n      case 'hashtags':\n        title = t`Search: ${q} (Hashtags)`;\n        break;\n      default:\n        title = t`Search: ${q}`;\n    }\n  }\n  useTitle(title, `/search`);\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const typeResults = {\n    statuses: statusResults,\n    accounts: accountResults,\n    hashtags: hashtagResults,\n  };\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.list(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            // If first item is the same, it means API doesn't support offset\n            // I know this is a very basic check, but it works for now\n            if (results[type]?.[0]?.id === typeResults[type]?.[0]?.id) {\n              setShowMore(false);\n            } else {\n              setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n              const length = results[type]?.length;\n              offsetRef.current = offsetRef.current + LIMIT;\n              setShowMore(!!length);\n            }\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    let timer;\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      timer = setTimeout(() => {\n        searchFormRef.current?.focus?.();\n      }, 150); // Right after focusDeck runs\n    }\n    return () => clearTimeout(timer);\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n      searchFormRef.current?.select?.();\n    },\n    {\n      useKey: true,\n      preventDefault: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const itemsSelector = '.timeline > li > a, .hashtag-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      // focus on previous status after active item\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div\n      id=\"search-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n      }}\n    >\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" alt={t`Search`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  <Icon icon=\"chevron-left\" /> <Trans>All</Trans>\n                </Link>\n              )}\n              {[\n                {\n                  label: t`Accounts`,\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: t`Hashtags`,\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: t`Posts`,\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Accounts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            <Trans>See more accounts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No accounts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Hashtags</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" alt=\"#\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            <Trans>See more hashtags</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No hashtags found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Posts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            <Trans>See more posts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No posts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        <Trans>Show more…</Trans>\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">\n                      <Trans>The end.</Trans>\n                    </p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <>\n              <p class=\"ui-state insignificant\">\n                <Trans>\n                  Enter your search term or paste a URL above to get started.\n                </Trans>\n              </p>\n              <RecentSearches />\n            </>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import '../components/links-bar.css';\nimport './trending.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport getDomain from '../utils/get-domain';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst TREND_CACHE_TIME = 10 * 60 * 1000; // 10 minutes\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().values().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nconst fetchHashtags = pmem(\n  (masto) => {\n    return masto.v1.trends.tags.list().values().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nfunction fetchTrendsStatuses(masto) {\n  if (supports('@pixelfed/trending')) {\n    return masto.pixelfed.v2.discover.posts.trending\n      .list({\n        range: 'daily',\n      })\n      .values();\n  }\n  return masto.v1.trends.statuses\n    .list({\n      limit: LIMIT,\n    })\n    .values();\n}\n\nfunction fetchLinkList(masto, params) {\n  return masto.v1.timelines.link.list(params).values();\n}\n\nfunction Trending({ columnMode, ...props }) {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = t`Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const sameCurrentInstance = instance === currentInstance;\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n\n  async function fetchTrends(firstLoad) {\n    console.log('fetchTrend', firstLoad);\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = fetchTrendsStatuses(masto);\n\n      // Get hashtags\n      if (supports('@mastodon/trending-hashtags')) {\n        try {\n          // const iterator = masto.v1.trends.tags.list();\n          const { value: tags } = await fetchHashtags(masto);\n          console.log('tags', tags);\n          if (tags?.length) {\n            setHashtags(tags);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Get links\n      if (supports('@mastodon/trending-links')) {\n        try {\n          const { value } = await fetchLinks(masto, instance);\n          // 4 types available: link, photo, video, rich\n          // Only want links for now\n          const links = value?.filter?.((link) => link.type === 'link');\n          console.log('links', links);\n          if (links?.length) {\n            setLinks(links);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  // Link mentions\n  // https://github.com/mastodon/mastodon/pull/30381\n  const [currentLinkMentionsLoading, setCurrentLinkMentionsLoading] =\n    useState(false);\n  const currentLinkMentionsIterator = useRef();\n  const [currentLink, setCurrentLink] = useState(null);\n  const hasCurrentLink = !!currentLink;\n  const currentLinkRef = useRef();\n  const supportsTrendingLinkPosts =\n    sameCurrentInstance && supports('@mastodon/trending-link-posts');\n\n  useEffect(() => {\n    if (currentLink && currentLinkRef.current) {\n      currentLinkRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center',\n      });\n    }\n  }, [currentLink]);\n\n  const prevCurrentLink = useRef();\n  async function fetchLinkMentions(firstLoad) {\n    if (firstLoad || !currentLinkMentionsIterator.current) {\n      setCurrentLinkMentionsLoading(true);\n      currentLinkMentionsIterator.current = fetchLinkList(masto, {\n        url: currentLink,\n      });\n    }\n    prevCurrentLink.current = currentLink;\n    const results = await currentLinkMentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    if (prevCurrentLink.current === currentLink) {\n      setCurrentLinkMentionsLoading(false);\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .values()\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span dir=\"auto\">\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>\n                <Trans>Trending News</Trans>\n              </h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authors,\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const author = authors?.[0]?.account?.id\n                ? authors[0].account\n                : null;\n              const isShortTitle = title.length < 30;\n              const hasAuthor = !!(authorName || author);\n              const domain = getDomain(url);\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <div key={url}>\n                  <a\n                    ref={currentLink === url ? currentLinkRef : null}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    class={`link-block ${\n                      hasCurrentLink\n                        ? currentLink === url\n                          ? 'active'\n                          : 'inactive'\n                        : ''\n                    }`}\n                    style={\n                      accentColor\n                        ? {\n                            '--accent-color': `rgb(${accentColor.join(',')})`,\n                            '--accent-alpha-color': `rgba(${accentColor.join(\n                              ',',\n                            )}, 0.4)`,\n                          }\n                        : {}\n                    }\n                  >\n                    <article>\n                      <figure>\n                        <img\n                          src={image}\n                          alt={imageDescription}\n                          width={width}\n                          height={height}\n                          loading=\"lazy\"\n                        />\n                      </figure>\n                      <div class=\"article-body\">\n                        <header>\n                          <div class=\"article-meta\">\n                            <span class=\"domain\">{domain}</span>{' '}\n                            {!!publishedAt && <>&middot; </>}\n                            {!!publishedAt && (\n                              <>\n                                <RelativeTime\n                                  datetime={publishedAt}\n                                  format=\"micro\"\n                                />\n                              </>\n                            )}\n                          </div>\n                          {!!title && (\n                            <h1\n                              class=\"title\"\n                              lang={language}\n                              dir=\"auto\"\n                              title={title}\n                            >\n                              {title}\n                            </h1>\n                          )}\n                        </header>\n                        {!!description && (\n                          <p\n                            class={`description ${\n                              hasAuthor && !isShortTitle ? '' : 'more-lines'\n                            }`}\n                            lang={language}\n                            dir=\"auto\"\n                            title={description}\n                          >\n                            {description}\n                          </p>\n                        )}\n                        {hasAuthor && (\n                          <>\n                            <hr />\n                            <p class=\"byline\">\n                              <small>\n                                <Trans comment=\"By [Author]\">\n                                  By{' '}\n                                  {author ? (\n                                    <NameText account={author} showAvatar />\n                                  ) : authorUrl ? (\n                                    <a\n                                      href={authorUrl}\n                                      target=\"_blank\"\n                                      rel=\"noopener\"\n                                    >\n                                      {authorName}\n                                    </a>\n                                  ) : (\n                                    authorName\n                                  )}\n                                </Trans>\n                              </small>\n                            </p>\n                          </>\n                        )}\n                      </div>\n                    </article>\n                  </a>\n                  {supportsTrendingLinkPosts && (\n                    <button\n                      type=\"button\"\n                      class=\"small plain4 block\"\n                      onClick={() => {\n                        setCurrentLink(url);\n                      }}\n                      disabled={url === currentLink}\n                    >\n                      <Icon icon=\"comment2\" />{' '}\n                      <span>\n                        <Trans>Mentions</Trans>\n                      </span>{' '}\n                      <Icon icon=\"chevron-down\" />\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {supportsTrendingLinkPosts && !!links.length && (\n          <div\n            class={`timeline-header-block ${hasCurrentLink ? 'blended' : ''}`}\n          >\n            {hasCurrentLink ? (\n              <>\n                <div style={{ width: 50, flexShrink: 0, textAlign: 'center' }}>\n                  {currentLinkMentionsLoading ? (\n                    <Loader abrupt />\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"light\"\n                      onClick={() => {\n                        setCurrentLink(null);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt={t`Back to showing trending posts`} />\n                    </button>\n                  )}\n                </div>\n                <p>\n                  <Trans>\n                    Showing posts mentioning{' '}\n                    <span class=\"link-text\">\n                      {currentLink\n                        .replace(/^https?:\\/\\/(www\\.)?/i, '')\n                        .replace(/\\/$/, '')}\n                    </span>\n                  </Trans>\n                </p>\n              </>\n            ) : (\n              <p class=\"insignificant\">\n                <Trans>Trending posts</Trans>\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links, currentLink, currentLinkMentionsLoading]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>\n            <Trans>Trending</Trans>\n          </b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText={t`No trending posts.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={hasCurrentLink ? fetchLinkMentions : fetchTrends}\n      checkForUpdates={hasCurrentLink ? undefined : checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      refresh={currentLink}\n      clearWhenRefresh\n      view={hasCurrentLink ? 'link-mentions' : undefined}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { useLingui } from '@lingui/react/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport isRTL from '../utils/is-rtl';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'nearest',\n  behavior: 'smooth',\n};\n\nfunction Columns() {\n  const { t } = useLingui();\n  useTitle(t`Home`, '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    // Don't show List column with no list, for now\n    if (type === 'list' && !params.id) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(\n    ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n    (e) => {\n      try {\n        const index = parseInt(e.key, 10) - 1;\n        const $column = document.querySelectorAll('#columns > *')[index];\n        if ($column) {\n          $column.focus();\n          $column.scrollIntoView(scrollIntoViewOptions);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    ['[', ']'],\n    (e, handler) => {\n      const key = handler.keys[0];\n      const currentFocusedColumn =\n        document.activeElement.closest('#columns > *');\n\n      const rtl = isRTL();\n      const prevColKey = rtl ? ']' : '[';\n      const nextColKey = rtl ? '[' : ']';\n      let $column;\n\n      if (key === prevColKey) {\n        // If [, focus on left of focused column, else first column\n        $column = currentFocusedColumn\n          ? currentFocusedColumn.previousElementSibling\n          : document.querySelectorAll('#columns > *')[0];\n      } else if (key === nextColKey) {\n        // If ], focus on right of focused column, else 2nd column\n        $column = currentFocusedColumn\n          ? currentFocusedColumn.nextElementSibling\n          : document.querySelectorAll('#columns > *')[1];\n      }\n      if ($column) {\n        $column.focus();\n        $column.scrollIntoView(scrollIntoViewOptions);\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n      onFocus={() => {\n        // Get current focused column\n        const currentFocusedColumn =\n          document.activeElement.closest('#columns > *');\n        if (currentFocusedColumn) {\n          // Remove focus classes from all columns\n          // Add focus class to current focused column\n          document.querySelectorAll('#columns > *').forEach((column) => {\n            column.classList.toggle('focus', column === currentFocusedColumn);\n          });\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { msg } from '@lingui/core/macro';\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport FilterContext from '../utils/filter-context';\nimport { massageNotifications2 } from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\nimport {\n  getGroupedNotifications,\n  mastoFetchNotifications,\n} from './notifications';\n\nfunction Home() {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  __BENCHMARK.end('time-to-home');\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title={_(msg`Home`)}\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt={t`Notifications`} />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = mastoFetchNotifications();\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      states.notificationsLast = groupedNotifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: groupedNotifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications({ skipFollowRequests = false } = {}) {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        if (!skipFollowRequests) {\n          const followRequests = await fetchFollowRequests();\n          setHasFollowRequests(!!followRequests?.length);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  const menuRef = useRef();\n  const headerHeight = 52;\n  useEffect(() => {\n    if (state !== 'open') return;\n    if (snapStates.notificationsShowNew) {\n      const menuElement = menuRef.current;\n      if (menuElement?.scrollTop <= headerHeight) {\n        loadNotifications({\n          skipFollowRequests: true,\n        });\n      }\n    } else {\n      loadNotifications();\n    }\n  }, [state, snapStates.notificationsShowNew]);\n\n  return (\n    <ControlledMenu\n      ref={menuRef}\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      containerProps={{\n        onClick: () => {\n          menuRef.current?.closeMenu?.();\n        },\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>\n          <Trans>Notifications</Trans>\n        </h2>\n      </header>\n      <FilterContext.Provider value=\"notifications\">\n        <main>\n          {snapStates.notifications.length ? (\n            <>\n              {snapStates.notifications\n                .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n                .map((notification) => (\n                  <Notification\n                    key={notification._ids || notification.id}\n                    instance={instance}\n                    notification={notification}\n                    disableContextMenu\n                  />\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <div class=\"ui-state\">\n              <Loader abrupt />\n            </div>\n          ) : (\n            uiState === 'error' && (\n              <div class=\"ui-state\">\n                <p>\n                  <Trans>Unable to fetch notifications.</Trans>\n                </p>\n                <p>\n                  <button type=\"button\" onClick={loadNotifications}>\n                    <Trans>Try again</Trans>\n                  </button>\n                </p>\n              </div>\n            )\n          )}\n        </main>\n      </FilterContext.Provider>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" />{' '}\n          <span>\n            <Trans>Mentions</Trans>\n          </span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <Trans>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </Trans>\n          ) : (\n            <b>\n              <Trans>See all</Trans>\n            </b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+\\/post\\/([^\\/]+)/i, // Threads\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n  /^\\/p\\/[^\\/]+\\/([^\\/]+)/i, // Pixelfed\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const theURL = URL.parse(url);\n  if (!theURL) return {};\n  const { hostname, pathname } = theURL;\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { Trans } from '@lingui/react/macro';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        if (id) {\n          const { masto } = api({ instance });\n          const status = await masto.v1.statuses.$select(id).fetch();\n          if (status) {\n            window.location.hash = statusURL + '?view=full';\n            return;\n          }\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.list({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>\n            <Trans>Resolving…</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>\n            <Trans>Unable to resolve URL</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport ListExclusiveBadge from '../components/list-exclusive-badge';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { fetchLists } from '../utils/lists';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  const { t } = useLingui();\n  useTitle(t`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await fetchLists();\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  const hasExclusiveLists = lists.some((list) => list.exclusive);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Lists</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New list`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <Icon icon=\"list\" />{' '}\n                      <span>\n                        {list.title}\n                        {list.exclusive && (\n                          <>\n                            {' '}\n                            <ListExclusiveBadge insignificant />\n                          </>\n                        )}\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  {hasExclusiveLists && (\n                    <p>\n                      <small class=\"insignificant\">\n                        <ListExclusiveBadge />{' '}\n                        <Trans>\n                          Posts on this list are hidden from Home/Following\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                  <p>\n                    <small class=\"insignificant\">\n                      <Plural\n                        value={lists.length}\n                        one=\"# list\"\n                        other=\"# lists\"\n                      />\n                    </small>\n                  </p>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load lists.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No lists yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"__VITE_ASSET__Bj_CmqRM__\"","import './login.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport Fuse from 'fuse.js';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport {\n  getAuthorizationURL,\n  getPKCEAuthorizationURL,\n  registerApplication,\n} from '../utils/auth';\nimport { supportsPKCE } from '../utils/oauth-pkce';\nimport store from '../utils/store';\nimport {\n  getCredentialApplication,\n  hasAccountInInstance,\n  storeCredentialApplication,\n} from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  const { t } = useLingui();\n  useTitle(t`Log in`, '/login');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  const searcher = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n        searcher.current = new Fuse(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n\n    (async () => {\n      // WEB_DOMAIN vs LOCAL_DOMAIN negotiation time\n      // https://docs.joinmastodon.org/admin/config/#web_domain\n      try {\n        const res = await fetch(`https://${instanceURL}/.well-known/host-meta`); // returns XML\n        const text = await res.text();\n        // Parse XML\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(text, 'text/xml');\n        // Get Link[template]\n        const link = xmlDoc.getElementsByTagName('Link')[0];\n        const template = link.getAttribute('template');\n        const url = URL.parse(template);\n        const { host } = url; // host includes the port\n        if (instanceURL !== host) {\n          console.log(`💫 ${instanceURL} -> ${host}`);\n          instanceURL = host;\n        }\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n\n      store.local.set('instanceURL', instanceURL);\n\n      setUIState('loading');\n      try {\n        let credentialApplication = getCredentialApplication(instanceURL);\n        if (\n          !credentialApplication ||\n          !credentialApplication.client_id ||\n          !credentialApplication.client_secret\n        ) {\n          credentialApplication = await registerApplication({\n            instanceURL,\n          });\n          storeCredentialApplication(instanceURL, credentialApplication);\n        }\n\n        const { client_id, client_secret } = credentialApplication;\n\n        const authPKCE = await supportsPKCE({ instanceURL });\n        console.log({ authPKCE });\n        const forceLogin = hasAccountInInstance(instanceURL);\n        if (authPKCE) {\n          if (client_id && client_secret) {\n            const [url, verifier] = await getPKCEAuthorizationURL({\n              instanceURL,\n              client_id,\n              forceLogin,\n            });\n            store.sessionCookie.set('codeVerifier', verifier);\n            location.href = url;\n          } else {\n            alert(t`Failed to register application`);\n          }\n        } else {\n          if (client_id && client_secret) {\n            location.href = await getAuthorizationURL({\n              instanceURL,\n              client_id,\n              forceLogin,\n            });\n          } else {\n            alert(t`Failed to register application`);\n          }\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? searcher.current\n        ?.search(cleanInstanceText, {\n          limit: 10,\n        })\n        ?.map((match) => match.item)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n      ? instancesSuggestions[0]\n      : instanceText\n        ? instancesList.find((instance) => instance.includes(instanceText))\n        : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          <Trans>Log in</Trans>\n        </h1>\n        <label>\n          <p>\n            <Trans>Instance</Trans>\n          </p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder={t`instance domain`}\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n            dir=\"auto\"\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">\n              <Trans>e.g. &ldquo;mastodon.social&rdquo;</Trans>\n            </div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            <Trans>\n              Failed to log in. Please try again or try another instance.\n            </Trans>\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? t`Continue with ${selectedInstanceText}`\n              : t`Continue`}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              <Trans>Don't have an account? Create one!</Trans>\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">\n            <Trans>Go home</Trans>\n          </Link>\n        </p>\n        <LangSelector />\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import './scheduled-posts.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useMemo, useReducer, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport ScheduledAtField, {\n  getLocalTimezoneName,\n} from '../components/ScheduledAtField';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport niceDateTime from '../utils/nice-date-time';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 40;\n\nexport default function ScheduledPosts() {\n  const { t } = useLingui();\n  const snapStates = useSnapshot(states);\n  useTitle(t`Scheduled Posts`, '/sp');\n  const { masto } = api();\n  const [scheduledPosts, setScheduledPosts] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [showScheduledPostModal, setShowScheduledPostModal] = useState(false);\n\n  useEffect(reload, [snapStates.reloadScheduledPosts]);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const postsIterator = masto.v1.scheduledStatuses\n          .list({ limit: LIMIT })\n          .values();\n        const allPosts = [];\n        let posts;\n        do {\n          const result = await postsIterator.next();\n          posts = result.value;\n          if (posts?.length) {\n            allPosts.push(...posts);\n          }\n        } while (posts?.length);\n        setScheduledPosts(allPosts);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      } finally {\n        setUIState('default');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"scheduled-posts-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Scheduled Posts</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <Menu2\n                portal\n                setDownOverflow\n                overflow=\"auto\"\n                viewScroll=\"close\"\n                position=\"anchor\"\n                menuButton={\n                  <button type=\"button\" class=\"plain\">\n                    <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                  </button>\n                }\n              >\n                <MenuItem\n                  onClick={() => {\n                    reload();\n                  }}\n                >\n                  <Icon icon=\"refresh\" size=\"l\" />\n                  <span>\n                    <Trans>Refresh</Trans>\n                  </span>\n                </MenuItem>\n              </Menu2>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!scheduledPosts.length ? (\n            <p class=\"ui-state\">\n              {uiState === 'loading' ? <Loader /> : t`No scheduled posts.`}\n            </p>\n          ) : (\n            <ul class=\"posts-list\">\n              {scheduledPosts.map((post) => {\n                const { id, params, scheduledAt, mediaAttachments } = post;\n                const {\n                  inReplyToId,\n                  language,\n                  poll,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                } = params;\n                const status = {\n                  // account: account.info,\n                  id,\n                  inReplyToId,\n                  language,\n                  mediaAttachments,\n                  poll: poll\n                    ? {\n                        ...poll,\n                        expiresAt: new Date(Date.now() + poll.expiresIn * 1000),\n                        options: poll.options.map((option) => ({\n                          title: option,\n                          votesCount: 0,\n                        })),\n                      }\n                    : undefined,\n                  sensitive,\n                  spoilerText,\n                  text,\n                  visibility,\n                  content: `<p>${text}</p>`,\n                  // createdAt: scheduledAt,\n                };\n\n                return (\n                  <li key={id}>\n                    <ScheduledPostPreview\n                      status={status}\n                      scheduledAt={scheduledAt}\n                      onClick={() => {\n                        setShowScheduledPostModal({\n                          post: status,\n                          scheduledAt: new Date(scheduledAt),\n                        });\n                      }}\n                    />\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {showScheduledPostModal && (\n            <Modal\n              onClick={(e) => {\n                if (e.target === e.currentTarget) {\n                  setShowScheduledPostModal(false);\n                }\n              }}\n            >\n              <ScheduledPostEdit\n                post={showScheduledPostModal.post}\n                scheduledAt={showScheduledPostModal.scheduledAt}\n                onClose={() => setShowScheduledPostModal(false)}\n              />\n            </Modal>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction ScheduledPostPreview({ status, scheduledAt, onClick }) {\n  // Look at scheduledAt, if it's months away, ICON = 'month'. If it's days away, ICON = 'day', else ICON = 'time'\n  const icon = useMemo(() => {\n    const hours = (Date.parse(scheduledAt) - Date.now()) / (1000 * 60 * 60);\n    if (hours < 24) {\n      return 'time';\n    } else if (hours < 720) {\n      // 30 days\n      return 'day';\n    } else {\n      return 'month';\n    }\n  }, [scheduledAt]);\n\n  return (\n    <button type=\"button\" class=\"textual block\" onClick={onClick}>\n      <div class={`post-schedule-meta post-schedule-${icon}`}>\n        <Icon icon={icon} class=\"insignificant\" />{' '}\n        <span>\n          <Trans comment=\"Scheduled [in 1 day] ([Thu, Feb 27, 6:30:00 PM])\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>{' '}\n            <small>\n              (\n              {niceDateTime(scheduledAt, {\n                formatOpts: {\n                  weekday: 'short',\n                  second: 'numeric',\n                },\n              })}\n              )\n            </small>\n          </Trans>\n        </span>\n      </div>\n      <Status status={status} size=\"s\" previewMode readOnly />\n    </button>\n  );\n}\n\nfunction ScheduledPostEdit({ post, scheduledAt, onClose }) {\n  const { masto } = api();\n  const { t } = useLingui();\n  const [uiState, setUIState] = useState('default');\n  const [newScheduledAt, setNewScheduledAt] = useState();\n  const differentScheduledAt =\n    newScheduledAt && newScheduledAt.getTime() !== scheduledAt.getTime();\n  const localTZ = getLocalTimezoneName();\n  const pastSchedule = scheduledAt && scheduledAt <= Date.now();\n\n  const { inReplyToId } = post;\n  const [replyToStatus, setReplyToStatus] = useState(null);\n  // TODO: Uncomment this once https://github.com/mastodon/mastodon/issues/34000 is fixed\n  // useEffect(() => {\n  //   if (inReplyToId) {\n  //     (async () => {\n  //       try {\n  //         const status = await masto.v1.statuses.$select(inReplyToId).fetch();\n  //         setReplyToStatus(status);\n  //       } catch (e) {\n  //         console.error(e);\n  //       }\n  //     })();\n  //   }\n  // }, [inReplyToId]);\n\n  return (\n    <div id=\"scheduled-post-sheet\" class=\"sheet\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" size=\"l\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>\n          <Trans comment=\"Scheduled [in 1 day]\">\n            Scheduled{' '}\n            <b>\n              <RelativeTime datetime={scheduledAt} />\n            </b>\n          </Trans>\n          <br />\n          <small>\n            {niceDateTime(scheduledAt, {\n              formatOpts: {\n                weekday: 'short',\n                second: 'numeric',\n              },\n            })}\n          </small>\n        </h2>\n      </header>\n      <main tabIndex=\"-1\">\n        {!!replyToStatus && (\n          <div class=\"status-reply\">\n            <Status status={replyToStatus} size=\"s\" previewMode readOnly />\n          </div>\n        )}\n        <Status\n          status={post}\n          size=\"s\"\n          previewMode\n          readOnly\n          onMediaClick={(e, i, media, status) => {\n            e.preventDefault();\n            states.showMediaModal = {\n              mediaAttachments: post.mediaAttachments,\n              mediaIndex: i,\n            };\n          }}\n        />\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.scheduledStatuses.$select(post.id).update({\n                  scheduledAt: newScheduledAt.toISOString(),\n                });\n                showToast(t`Scheduled post rescheduled`);\n                onClose();\n                setUIState('default');\n                states.reloadScheduledPosts++;\n              } catch (e) {\n                setUIState('error');\n                console.error(e);\n                showToast(t`Failed to reschedule post`);\n              }\n            })();\n          }}\n        >\n          <footer>\n            <div class=\"row\">\n              <span>\n                <ScheduledAtField\n                  scheduledAt={scheduledAt}\n                  setScheduledAt={(date) => {\n                    setNewScheduledAt(date);\n                  }}\n                />{' '}\n                <small class=\"ib\">{localTZ}</small>\n              </span>\n            </div>\n            <div class=\"row\">\n              <button\n                disabled={\n                  !differentScheduledAt || uiState === 'loading' || pastSchedule\n                }\n              >\n                <Trans>Reschedule</Trans>\n              </button>\n              <span class=\"grow\" />\n              <MenuConfirm\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete scheduled post?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await api()\n                        .masto.v1.scheduledStatuses.$select(post.id)\n                        .remove();\n                      showToast(t`Scheduled post deleted`);\n                      onClose();\n                      setUIState('default');\n                      states.reloadScheduledPosts++;\n                    } catch (e) {\n                      setUIState('error');\n                      console.error(e);\n                      showToast(t`Failed to delete scheduled post`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading' || pastSchedule}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            </div>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n","import { useLingui } from '@lingui/react/macro';\n\nimport { useEditHistory } from '../utils/edit-history-context';\n\nimport Icon from './icon';\n\nexport default function EditHistoryControls() {\n  const { t } = useLingui();\n  const {\n    prevEditedAt,\n    nextEditedAt,\n    editedAtIndex,\n    editHistoryMode,\n    editHistoryRef,\n    exitEditHistory,\n  } = useEditHistory();\n  if (!editHistoryMode) return null;\n  return (\n    <div class=\"edit-history-controls\">\n      <Icon icon=\"edit\" />\n      <b class=\"edit-history-heading\">{t`Edit History Snapshots`}</b>\n      <span class=\"spacer\" />\n      <span class=\"edit-history-pagination\">\n        <button\n          type=\"button\"\n          class=\"plain4\"\n          onClick={() => {\n            prevEditedAt();\n          }}\n          disabled={\n            !editHistoryMode ||\n            editedAtIndex + 1 >= editHistoryRef.current.length\n          }\n        >\n          <Icon icon=\"chevron-left\" alt={t`Previous`} />\n        </button>{' '}\n        {editHistoryRef.current.length - editedAtIndex} /{' '}\n        {editHistoryRef.current.length}{' '}\n        <button\n          type=\"button\"\n          class=\"plain4\"\n          onClick={() => {\n            nextEditedAt();\n          }}\n          disabled={!editHistoryMode || editedAtIndex <= 0}\n        >\n          <Icon icon=\"chevron-right\" alt={t`Next`} />\n        </button>\n      </span>\n      <button\n        type=\"button\"\n        class=\"plain3\"\n        onClick={() => {\n          exitEditHistory();\n        }}\n      >\n        <Icon icon=\"exit\" alt={t`Exit`} />\n      </button>\n    </div>\n  );\n}\n","import './status.css';\n\nimport { plural } from '@lingui/core/macro';\nimport { Plural, Trans, useLingui } from '@lingui/react/macro';\nimport { MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport EditHistoryControls from '../components/edit-history-controls';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { getSafeViewTransitionName } from '../components/media';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport {\n  EditHistoryProvider,\n  useEditHistory,\n} from '../utils/edit-history-context';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nimport { ThreadCountContext } from '../utils/thread-count-context';\n\nfunction StatusPage(params) {\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? snapStates.statuses[statusKey(mediaStatusID, instance)]?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const postViewState = () =>\n    window.matchMedia('(min-width: calc(40em + 350px))').matches\n      ? 'large'\n      : 'small';\n  const mediaClose = useCallback(() => {\n    console.log('xxx', {\n      postViewState: postViewState(),\n      showMediaOnly,\n    });\n    if (postViewState() === 'small' && snapStates.prevLocation) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n  const handleMediaClose = useCallback(\n    (e, currentIndex, mediaAttachments, carouselRef) => {\n      if (postViewState() === 'large' && !showMediaOnly) {\n        mediaClose();\n        return;\n      }\n      if (showMedia && document.startViewTransition) {\n        const media = mediaAttachments[currentIndex];\n        const { id, blurhash, url } = media;\n        const mediaVTN = getSafeViewTransitionName(id || blurhash || url);\n        const els = document.querySelectorAll(\n          `.status .media [data-view-transition-name=\"${mediaVTN}\"]`,\n        );\n        const foundEls = [...els]?.filter?.((el) => {\n          const elBounds = el.getBoundingClientRect();\n          return (\n            elBounds.top < window.innerHeight &&\n            elBounds.bottom > 0 &&\n            elBounds.left < window.innerWidth &&\n            elBounds.right > 0\n          );\n        });\n        // If more than one, get the one in status page\n        const el =\n          foundEls.length === 1\n            ? foundEls[0]\n            : foundEls.find((el) => !!el.closest('.status-deck'));\n\n        console.log('xxx', { media, id, els, el });\n        if (el) {\n          const transition = document.startViewTransition(() => {\n            el.style.viewTransitionName = mediaVTN;\n            if (carouselRef?.current) {\n              carouselRef.current\n                .querySelectorAll('.media img, .media video')\n                ?.forEach((el) => {\n                  el.style.viewTransitionName = '';\n                });\n            }\n            mediaClose();\n          });\n          transition.ready.finally(() => {\n            el.style.viewTransitionName = '';\n            el.dataset.viewTransitioned = mediaVTN;\n          });\n        } else {\n          mediaClose();\n        }\n      } else {\n        mediaClose();\n      }\n    },\n    [showMedia, showMediaOnly],\n  );\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  useEffect(() => {\n    const $deckContainers = document.querySelectorAll('.deck-container');\n    $deckContainers.forEach(($deckContainer) => {\n      $deckContainer.setAttribute('inert', '');\n    });\n    return () => {\n      $deckContainers.forEach(($deckContainer) => {\n        $deckContainer.removeAttribute('inert');\n      });\n    };\n  }, []);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <EditHistoryProvider statusID={id}>\n          <StatusThread\n            id={id}\n            instance={params.instance}\n            closeLink={closeLink}\n          />\n        </EditHistoryProvider>\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\n// oldest first\nfunction createdAtSort(a, b) {\n  return Date.parse(a.createdAt) - Date.parse(b.createdAt);\n}\n\nconst MONTH_IN_MS = 1000 * 60 * 60 * 24 * 30;\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const { editHistoryMode, initEditHistory, editedAtIndex, editHistoryRef } =\n    useEditHistory();\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const [threadsCount, setThreadsCount] = useState(0);\n  const fullContext = useRef(null);\n  const restructureContext = () => {\n    console.log({ fullContext: fullContext.current });\n    if (!fullContext.current) return;\n    let { ancestors, descendants, heroStatus } = fullContext.current;\n\n    if (editHistoryMode && descendants?.length) {\n      // Filter descendants based on createdAt/editedAt dates\n      // - editHistory items only has createdAt\n      // - descendants items has createdAt and optional editedAt\n      const currentEditedAtStatus = editHistoryRef.current[editedAtIndex];\n      const currentEditedAtStatusCreatedAt = Date.parse(\n        currentEditedAtStatus.createdAt,\n      );\n      const nextEditedAtStatus = editHistoryRef.current[editedAtIndex - 1];\n      const nextEditedAtStatusCreatedAt = nextEditedAtStatus\n        ? Date.parse(nextEditedAtStatus.createdAt)\n        : null;\n      descendants = descendants.filter((s) => {\n        // Show descendants created between current and next editedAt dates\n        const sCreatedAt = Date.parse(s.editedAt || s.createdAt);\n        return (\n          sCreatedAt >= currentEditedAtStatusCreatedAt &&\n          (!nextEditedAtStatusCreatedAt ||\n            sCreatedAt <= nextEditedAtStatusCreatedAt)\n        );\n      });\n    }\n\n    ancestors.sort(createdAtSort);\n    descendants.sort(createdAtSort);\n\n    totalDescendants.current = descendants?.length || 0;\n\n    const missingStatuses = new Set();\n    ancestors.forEach((status) => {\n      saveStatus(status, instance, {\n        skipThreading: true,\n      });\n      if (\n        status.inReplyToId &&\n        !ancestors.find((s) => s.id === status.inReplyToId)\n      ) {\n        missingStatuses.add(status.inReplyToId);\n      }\n    });\n    const ancestorsIsThread = ancestors.every(\n      (s) => s.account.id === heroStatus.account.id,\n    );\n    const nestedDescendants = [];\n    descendants.forEach((status) => {\n      saveStatus(status, instance, {\n        // skipThreading: true,\n      });\n\n      if (\n        status.inReplyToId &&\n        !descendants.find((s) => s.id === status.inReplyToId) &&\n        status.inReplyToId !== heroStatus.id\n      ) {\n        missingStatuses.add(status.inReplyToId);\n      }\n\n      if (status.inReplyToAccountId === status.account.id) {\n        // If replying to self, it's part of the thread, level 1\n        nestedDescendants.push(status);\n      } else if (status.inReplyToId === heroStatus.id) {\n        // If replying to the hero status, it's a reply, level 1\n        nestedDescendants.push(status);\n      } else if (\n        !status.inReplyToAccountId &&\n        nestedDescendants.find(\n          (s) =>\n            s.id === status.inReplyToId &&\n            s.account.id === heroStatus.account.id,\n        ) &&\n        status.account.id === heroStatus.account.id\n      ) {\n        // If replying to hero's own statuses, it's part of the thread, level 1\n        nestedDescendants.push(status);\n      } else {\n        // If replying to someone else, it's a reply to a reply, level 2\n        const parent = descendants.find((s) => s.id === status.inReplyToId);\n        if (parent) {\n          if (!parent.__replies) {\n            parent.__replies = [];\n          }\n          parent.__replies.push(status);\n        } else {\n          // If no parent, something is wrong\n          console.warn('No parent found for', status);\n        }\n      }\n    });\n\n    // sort hero author to top\n    nestedDescendants.sort((a, b) => {\n      const heroAccountID = heroStatus.account.id;\n      if (a.account.id === heroAccountID && b.account.id !== heroAccountID)\n        return -1;\n      if (b.account.id === heroAccountID && a.account.id !== heroAccountID)\n        return 1;\n      return 0;\n    });\n\n    console.log({ ancestors, descendants, nestedDescendants });\n    if (missingStatuses.size) {\n      console.error('Missing statuses', [...missingStatuses]);\n    }\n\n    let descendantLevelsCount = 1;\n    function expandReplies(_replies, level) {\n      const nextLevel = level + 1;\n      if (nextLevel > descendantLevelsCount) {\n        descendantLevelsCount = level;\n      }\n      return _replies?.map((_r) => ({\n        id: _r.id,\n        account: _r.account,\n        repliesCount: _r.repliesCount,\n        content: _r.content,\n        weight: calcStatusWeight(_r),\n        level: nextLevel,\n        replies: expandReplies(_r.__replies, nextLevel),\n      }));\n    }\n\n    const mappedNestedDescendants = nestedDescendants.map((s) => ({\n      id: s.id,\n      account: s.account,\n      accountID: s.account.id,\n      descendant: true,\n      thread: s.account.id === heroStatus.account.id,\n      weight: calcStatusWeight(s),\n      level: 1,\n      replies: expandReplies(s.__replies, 1),\n      createdAt: s.createdAt,\n    }));\n    const allStatuses = [\n      ...ancestors.map((s) => ({\n        id: s.id,\n        ancestor: true,\n        isThread: ancestorsIsThread,\n        accountID: s.account.id,\n        account: s.account,\n        repliesCount: s.repliesCount,\n        weight: calcStatusWeight(s),\n        createdAt: s.createdAt,\n      })),\n      {\n        id,\n        accountID: heroStatus.account.id,\n        weight: calcStatusWeight(heroStatus),\n        createdAt: heroStatus.createdAt,\n      },\n      ...mappedNestedDescendants,\n    ];\n\n    console.log({ allStatuses, descendantLevelsCount });\n    return { allStatuses, ancestorsIsThread, mappedNestedDescendants };\n  };\n\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors } = context;\n        fullContext.current = { ...context, heroStatus };\n        const { allStatuses, ancestorsIsThread, mappedNestedDescendants } =\n          restructureContext();\n\n        const descendantsThread =\n          ancestors.length && !ancestorsIsThread\n            ? []\n            : mappedNestedDescendants.filter((s) => s.thread);\n        const threadsCount =\n          (ancestorsIsThread ? ancestors.length : 0) + descendantsThread.length;\n        if (threadsCount > 0 && threadsCount < 100) {\n          // Cap at 100 because there's no point showing 100+\n          // Include hero as part of thread count\n          setThreadsCount(threadsCount + 1);\n        }\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        // const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        const heroLimit = ancestors.length || 0; // 0-indexed\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  useEffect(() => {\n    try {\n      const { allStatuses } = restructureContext();\n      setStatuses(allStatuses);\n    } catch (e) {}\n    // Only run this when editHistoryMode changes\n    // If id changes, initContext will run instead, so don't worry\n  }, [editHistoryMode, editedAtIndex]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : t({\n          id: 'post.title',\n          message: 'Post',\n        }),\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return URL.parse(url)?.hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal || e.metaKey || e.ctrlKey || e.altKey || e.shiftKey;\n      },\n      useKey: true,\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys(\n    'backspace',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    'j',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      const activeStatusRect = activeStatus?.getBoundingClientRect();\n      const allStatusLinks = Array.from(\n        scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n      );\n      console.log({ allStatusLinks });\n      if (\n        activeStatus &&\n        activeStatusRect.top < scrollableRef.current.clientHeight &&\n        activeStatusRect.bottom > 0\n      ) {\n        const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n        let nextStatus = allStatusLinks[activeStatusIndex + 1];\n        if (nextStatus) {\n          nextStatus.focus();\n          nextStatus.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostStatusLink = allStatusLinks.find((statusLink) => {\n          const statusLinkRect = statusLink.getBoundingClientRect();\n          return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostStatusLink) {\n          topmostStatusLink.focus();\n          topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  useHotkeys(\n    'k',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      const activeStatusRect = activeStatus?.getBoundingClientRect();\n      const allStatusLinks = Array.from(\n        scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n      );\n      if (\n        activeStatus &&\n        activeStatusRect.top < scrollableRef.current.clientHeight &&\n        activeStatusRect.bottom > 0\n      ) {\n        const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n        let prevStatus = allStatusLinks[activeStatusIndex - 1];\n        if (prevStatus) {\n          prevStatus.focus();\n          prevStatus.scrollIntoView(scrollIntoViewOptions);\n        }\n      } else {\n        // If active status is not in viewport, get the topmost status-link in viewport\n        const topmostStatusLink = allStatusLinks.find((statusLink) => {\n          const statusLinkRect = statusLink.getBoundingClientRect();\n          return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n        });\n        if (topmostStatusLink) {\n          topmostStatusLink.focus();\n          topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys(\n    'x',\n    () => {\n      const activeStatus = document.activeElement.closest(\n        '.status-link, .status-focus',\n      );\n      if (activeStatus) {\n        const details = activeStatus.nextElementSibling;\n        if (details && details.tagName.toLowerCase() === 'details') {\n          details.open = !details.open;\n        }\n      }\n    },\n    {\n      useKey: true,\n      ignoreEventWhen: (e) => e.metaKey || e.ctrlKey || e.altKey || e.shiftKey,\n    },\n  );\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n        level,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    <Trans>\n                      You're not logged in. Interactions (reply, boost, etc) are\n                      not possible.\n                    </Trans>\n                  </p>\n                  <Link\n                    to={\n                      DEFAULT_INSTANCE\n                        ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                        : '/login'\n                    }\n                    class=\"button\"\n                  >\n                    <Trans>Log in</Trans>\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      <Trans>\n                        This post is from another instance (<b>{instance}</b>).\n                        Interactions (reply, boost, etc) are not possible.\n                      </Trans>\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.list({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert(t`Error: ${e}`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" />{' '}\n                      <Trans>\n                        Switch to my instance to enable interactions\n                      </Trans>\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={level}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                <Trans>Unable to load replies.</Trans>\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  // Helper function to format time differences between two dates\n  function formatTimeGap(months) {\n    if (months < 12) {\n      return plural(months, {\n        one: '# month later',\n        other: '# months later',\n      });\n    } else {\n      const years = Math.floor(months / 12);\n      return plural(years, {\n        one: '# year later',\n        other: '# years later',\n      });\n    }\n  }\n\n  const statusesList = useMemo(() => {\n    const result = [];\n    const slicedStatuses = statuses.slice(0, limit);\n\n    for (let i = 0; i < slicedStatuses.length; i++) {\n      const status = slicedStatuses[i];\n\n      // Add time gap indicator if needed\n      if (i > 0) {\n        const prevStatus = slicedStatuses[i - 1];\n\n        const { createdAt, descendant, thread, id } = status;\n\n        if (prevStatus?.createdAt && createdAt) {\n          const currentDate = Date.parse(createdAt);\n          if (isFinite(currentDate) && currentDate > MONTH_IN_MS) {\n            const prevDate = Date.parse(prevStatus.createdAt);\n\n            if (prevDate && isFinite(prevDate)) {\n              const { ancestor, id: prevID } = prevStatus;\n              const timeDiff = currentDate - prevDate;\n              const monthsDiff = ~~(timeDiff / MONTH_IN_MS);\n\n              if (monthsDiff > 0) {\n                result.push(\n                  <li\n                    key={`time-gap-${id}-${prevID}`}\n                    style={{\n                      '--time-gap-range': Math.min(12, monthsDiff),\n                    }}\n                    class={`time-gap ${ancestor ? 'ancestor' : ''} ${descendant ? 'descendant' : ''} ${\n                      thread ? 'thread' : ''\n                    }`}\n                  >\n                    {formatTimeGap(monthsDiff)}\n                  </li>,\n                );\n              } else {\n                // NOTE: For testing purposes\n                // result.push(\n                //   <li\n                //     key={`time-gap-${id}`}\n                //     class={`time-gap ${ancestor ? 'ancestor' : ''} ${descendant ? 'descendant' : ''} ${\n                //       thread ? 'thread' : ''\n                //     }`}\n                //   >\n                //     One eternity later\n                //   </li>,\n                // );\n              }\n            }\n          }\n        }\n      }\n\n      result.push(renderStatus(status, i));\n    }\n\n    return result;\n  }, [statuses, limit, renderStatus, editHistoryMode, editedAtIndex]);\n\n  // If there's spoiler in hero status, auto-expand it\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (!heroStatusRef.current) return;\n      const spoilerButton = heroStatusRef.current.querySelector(\n        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n      );\n      if (spoilerButton) spoilerButton.click();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  return (\n    <ThreadCountContext.Provider value={threadsCount}>\n      <div\n        tabIndex=\"-1\"\n        ref={scrollableRef}\n        class={`status-deck deck contained ${\n          statuses.length > 1 ? 'padded-bottom' : ''\n        } ${\n          initialPageState.current === 'status' && !firstLoad.current\n            ? 'slide-in'\n            : ''\n        } ${viewMode ? `deck-view-${viewMode}` : ''} ${\n          editHistoryMode ? 'edit-history-mode' : ''\n        }`}\n        style={\n          editHistoryMode\n            ? {\n                '--edit-history-percentage': `${editedAtIndex / (editHistoryRef.current.length - 1)}`,\n              }\n            : undefined\n        }\n        onAnimationEnd={(e) => {\n          // Fix the bounce effect when switching viewMode\n          // `slide-in` animation kicks in when switching viewMode\n          if (initialPageState.current === 'status') {\n            // e.target.classList.remove('slide-in');\n            initialPageState.current = null;\n          }\n        }}\n      >\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onDblClick={(e) => {\n            // reload statuses\n            states.reloadStatusPage++;\n          }}\n        >\n          {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n          <div class=\"header-grid header-grid-2\">\n            <h1>\n              {prevLocationIsStatusPage && (\n                <button\n                  type=\"button\"\n                  class=\"plain deck-back\"\n                  onClick={() => {\n                    history.back();\n                  }}\n                >\n                  <Icon icon=\"chevron-left\" size=\"xl\" alt={t`Back`} />\n                </button>\n              )}\n              {!heroInView && heroStatus && uiState !== 'loading' ? (\n                <>\n                  <span class=\"hero-heading\">\n                    <NameText\n                      account={heroStatus.account}\n                      instance={instance}\n                      showAvatar\n                      short\n                    />{' '}\n                    <span class=\"insignificant\">\n                      &bull;{' '}\n                      <RelativeTime\n                        datetime={heroStatus.createdAt}\n                        format=\"micro\"\n                      />\n                    </span>\n                  </span>{' '}\n                  <button\n                    type=\"button\"\n                    class=\"ancestors-indicator light small\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      heroStatusRef.current.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'start',\n                      });\n                    }}\n                    title={t`Go to main post`}\n                  >\n                    <Icon\n                      icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                    />\n                  </button>\n                </>\n              ) : (\n                <>\n                  <Trans id=\"post.title\">Post</Trans>{' '}\n                  <button\n                    type=\"button\"\n                    class=\"ancestors-indicator light small\"\n                    onClick={(e) => {\n                      // Scroll to top\n                      e.preventDefault();\n                      e.stopPropagation();\n                      scrollableRef.current.scrollTo({\n                        top: 0,\n                        behavior: 'smooth',\n                      });\n                    }}\n                    hidden={!ancestors.length || reachTopPost}\n                    title={t`${ancestors.length} posts above ‒ Go to top`}\n                  >\n                    <Icon icon=\"arrow-up\" />\n                    {ancestors\n                      .filter(\n                        (a, i, arr) =>\n                          arr.findIndex((b) => b.accountID === a.accountID) ===\n                          i,\n                      )\n                      .slice(0, 3)\n                      .map((ancestor) => (\n                        <Avatar\n                          key={ancestor.account.id}\n                          url={\n                            ancestor.account.avatarStatic ||\n                            ancestor.account.avatar\n                          }\n                          alt={ancestor.account.displayName}\n                          squircle={ancestor.account?.bot}\n                        />\n                      ))}\n                    {/* <Icon icon=\"comment\" />{' '} */}\n                    {ancestors.length > 3 && (\n                      <>\n                        {' '}\n                        <span class=\"insignificant\">\n                          {shortenNumber(ancestors.length)}\n                        </span>\n                      </>\n                    )}\n                  </button>\n                </>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain4 button-switch-view\"\n                style={{\n                  display: viewMode === 'full' ? '' : 'none',\n                }}\n                onClick={() => {\n                  setViewMode(null);\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  searchParams.delete('view');\n                  setSearchParams(searchParams);\n                }}\n                title={t`Switch to Side Peek view`}\n              >\n                <Icon icon=\"layout4\" size=\"l\" />\n              </button>\n              {showRefresh && (\n                <button\n                  type=\"button\"\n                  class=\"plain button-refresh\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                    setShowRefresh(false);\n                  }}\n                >\n                  <Icon icon=\"refresh\" size=\"l\" alt={t`Refresh`} />\n                </button>\n              )}\n              <Menu2\n                align=\"end\"\n                portal={{\n                  // Need this, else the menu click will cause scroll jump\n                  target: scrollableRef.current,\n                }}\n                menuButton={\n                  <button type=\"button\" class=\"button plain4\">\n                    <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n                  </button>\n                }\n              >\n                <MenuItem\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Icon icon=\"refresh\" />\n                  <span>\n                    <Trans>Refresh</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  className=\"menu-switch-view\"\n                  onClick={() => {\n                    setViewMode(viewMode === 'full' ? null : 'full');\n                    searchParams.delete('media');\n                    searchParams.delete('media-only');\n                    if (viewMode === 'full') {\n                      searchParams.delete('view');\n                    } else {\n                      searchParams.set('view', 'full');\n                    }\n                    setSearchParams(searchParams);\n                  }}\n                >\n                  <Icon\n                    icon={\n                      {\n                        '': 'layout5',\n                        full: 'layout4',\n                      }[viewMode || '']\n                    }\n                  />\n                  <span>\n                    {viewMode === 'full'\n                      ? t`Switch to Side Peek view`\n                      : t`Switch to Full view`}\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    // Click all buttons with class .spoiler but not .spoiling\n                    const buttons = Array.from(\n                      scrollableRef.current.querySelectorAll(\n                        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                      ),\n                    );\n                    buttons.forEach((button) => {\n                      button.click();\n                    });\n                  }}\n                >\n                  <Icon icon=\"eye-open\" />{' '}\n                  <span>\n                    <Trans>Show all sensitive content</Trans>\n                  </span>\n                </MenuItem>\n                <MenuDivider />\n                <MenuHeader className=\"plain\">\n                  <Trans>Experimental</Trans>\n                </MenuHeader>\n                <MenuItem\n                  disabled={!postInstance || postSameInstance}\n                  onClick={() => {\n                    const statusURL = getInstanceStatusURL(heroStatus.url);\n                    if (statusURL) {\n                      location.hash = statusURL;\n                    } else {\n                      alert(t`Unable to switch`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"transfer\" />\n                  <small class=\"menu-double-lines\">\n                    {postInstance\n                      ? t`Switch to post's instance (${punycode.toUnicode(\n                          postInstance,\n                        )})`\n                      : t`Switch to post's instance`}\n                  </small>\n                </MenuItem>\n                <MenuItem\n                  disabled={\n                    !sameInstance ||\n                    uiState === 'loading' ||\n                    !heroStatus?.editedAt ||\n                    !totalDescendants.current\n                  }\n                  onClick={initEditHistory}\n                >\n                  <Icon icon=\"edit\" />\n                  <span>{t`View Edit History Snapshots`}</span>\n                </MenuItem>\n              </Menu2>\n              <Link class=\"button plain deck-close\" to={closeLink}>\n                <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n              </Link>\n            </div>\n          </div>\n        </header>\n        <EditHistoryControls />\n        {!!statuses.length && heroStatus ? (\n          <ul\n            class={`timeline flat contextual grow ${\n              uiState === 'loading' ? 'loading' : ''\n            }`}\n          >\n            {statusesList}\n            {showMore > 0 && (\n              <li class=\"descendant descendant-more\">\n                <button\n                  type=\"button\"\n                  class=\"plain block show-more\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => setLimit((l) => l + LIMIT)}\n                  style={{ marginBlockEnd: '6em' }}\n                  data-state-post-ids={moreStatusesKeys.join(' ')}\n                >\n                  <div class=\"ib avatars-bunch\">\n                    {/* show avatars for first 5 statuses */}\n                    {statuses.slice(limit, limit + 5).map((status) => (\n                      <Avatar\n                        key={status.id}\n                        url={status.account.avatarStatic}\n                        // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                      />\n                    ))}\n                  </div>{' '}\n                  <div class=\"ib\">\n                    <Trans>Show more…</Trans>{' '}\n                    <span class=\"tag\">\n                      {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                    </span>\n                  </div>\n                </button>\n              </li>\n            )}\n          </ul>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <ul class=\"timeline flat contextual grow loading\">\n                <li>\n                  <Status skeleton size=\"l\" />\n                </li>\n              </ul>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load post</Trans>\n                <br />\n                <br />\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n      </div>\n    </ThreadCountContext.Provider>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const { t } = useLingui();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      // NOTE: this scrollLeft works for RTL too\n      // Browsers do the magic for us\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  // If not open, delay render replies\n  const [renderReplies, setRenderReplies] = useState(openBefore || open);\n  useEffect(() => {\n    let timer;\n    if (!openBefore && !open) {\n      timer = setTimeout(() => setRenderReplies(true), 100);\n    }\n    return () => clearTimeout(timer);\n  }, [openBefore, open]);\n\n  const Container = open ? 'div' : 'details';\n  const isDetails = Container === 'details';\n\n  return (\n    <Container\n      ref={detailsRef}\n      class=\"replies\"\n      open={isDetails ? openBefore || open : undefined}\n      onToggle={\n        isDetails\n          ? (e) => {\n              const { open } = e.target;\n              // use first reply as ID\n              cachedRepliesToggle[replies[0].id] = open;\n            }\n          : undefined\n      }\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      {!open && (\n        <summary class=\"replies-summary\" hidden={open}>\n          <span class=\"avatars\">\n            {accounts.map((a) => (\n              <Avatar\n                key={a.id}\n                url={a.avatarStatic}\n                title={`${a.displayName} @${a.username}`}\n                squircle={a?.bot}\n              />\n            ))}\n          </span>\n          <span class=\"replies-counts\">\n            <b>\n              <Plural\n                value={replies.length}\n                one=\"# reply\"\n                other={\n                  <Trans>\n                    <span title={replies.length}>\n                      {shortenNumber(replies.length)}\n                    </span>{' '}\n                    replies\n                  </Trans>\n                }\n              />\n            </b>\n            {!sameCount && totalComments > 1 && (\n              <>\n                {' '}\n                &middot;{' '}\n                <span>\n                  <Plural\n                    value={totalComments}\n                    one=\"# comment\"\n                    other={\n                      <Trans>\n                        <span title={totalComments}>\n                          {shortenNumber(totalComments)}\n                        </span>{' '}\n                        comments\n                      </Trans>\n                    }\n                  />\n                </span>\n              </>\n            )}\n          </span>\n          <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n          {!!parentLink && (\n            <Link\n              class=\"replies-parent-link\"\n              to={parentLink.to}\n              onClick={parentLink.onClick}\n              title={t`View post with its replies`}\n            >\n              &raquo;\n            </Link>\n          )}\n        </summary>\n      )}\n      {renderReplies && (\n        <ul>\n          {replies.map((r) => (\n            <li key={r.id}>\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n              <div class=\"status-focus\" tabIndex={0}>\n                <Status\n                  statusID={r.id}\n                  instance={instance}\n                  withinContext\n                  size=\"s\"\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  showActionsBar\n                />\n                {!r.replies?.length && r.repliesCount > 0 && (\n                  <div class=\"replies-link\">\n                    <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                    <span title={r.repliesCount}>\n                      {shortenNumber(r.repliesCount)}\n                    </span>\n                  </div>\n                )}\n              </div>\n              {/* </Link> */}\n              {r.replies?.length && (\n                <SubComments\n                  instance={instance}\n                  replies={r.replies}\n                  level={r.level}\n                  accWeight={!open ? r.weight : totalWeight}\n                  openAll={openAll}\n                  parentLink={{\n                    to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                    onClick: () => {\n                      resetScrollPosition(r.id);\n                    },\n                  }}\n                />\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__BbkKeAoc__\"","export default \"__VITE_ASSET__C$apFnmr__\"","export default \"__VITE_ASSET__MUCjVR2Z__\"","export default \"__VITE_ASSET__Pb$jWfr9__\"","export default \"__VITE_ASSET__DJIucEyS__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport { Trans, useLingui } from '@lingui/react/macro';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logo from '../assets/logo.svg';\nimport logoText from '../assets/logo-text.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  const { t } = useLingui();\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">\n            <Trans>A minimalistic opinionated Mastodon web client.</Trans>\n          </p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? t`Log in` : t`Log in with Mastodon`}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                <Trans>Sign up</Trans>\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                <Trans>\n                  Connect your existing Mastodon/Fediverse account.\n                  <br />\n                  Your credentials are not stored on this server.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <Trans>\n            <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n              Built\n            </a>{' '}\n            by{' '}\n            <a\n              href=\"https://mastodon.social/@cheeaun\"\n              target=\"_blank\"\n              onClick={(e) => {\n                e.preventDefault();\n                states.showAccount = 'cheeaun@mastodon.social';\n              }}\n            >\n              @cheeaun\n            </a>\n            .{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n              Privacy Policy\n            </a>\n            .\n          </Trans>\n        </p>\n        <div>\n          <LangSelector />\n        </div>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt={t`Screenshot of Boosts Carousel`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Boosts Carousel</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Visually separate original posts and re-shared posts (boosted\n                posts).\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt={t`Screenshot of nested comments thread`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Nested comments thread</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Effortlessly follow conversations. Semi-collapsible replies.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt={t`Screenshot of grouped notifications`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Grouped notifications</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Similar notifications are grouped and collapsed to reduce\n                clutter.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt={t`Screenshot of multi-column UI`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Single or multi-column</Trans>\n            </h4>\n            <p>\n              <Trans>\n                By default, single column for zen-mode seekers. Configurable\n                multi-column for power users.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt={t`Screenshot of multi-hashtag timeline with a form to add more hashtags`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Multi-hashtag timeline</Trans>\n            </h4>\n            <p>\n              <Trans>Up to 5 hashtags combined into a single timeline.</Trans>\n            </p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport { useLingui } from '@lingui/react';\nimport debounce from 'just-debounce-it';\nimport { lazy, memo, Suspense } from 'preact/compat';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\n\nimport 'swiped-events';\n\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\nimport Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport AnnualReport from './pages/annual-report';\nimport Bookmarks from './pages/bookmarks';\nimport Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport Filters from './pages/filters';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport ScheduledPosts from './pages/scheduled-posts';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  hasInstance,\n  hasPreferences,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport {\n  getAccount,\n  getCredentialApplication,\n  getCurrentAccount,\n  getVapidKey,\n  setCurrentAccountID,\n} from './utils/store-utils';\n\nimport './utils/toast-alert';\n\n// Lazy load Sandbox component only in development\nconst Sandbox =\n  import.meta.env.DEV || import.meta.env.PHANPY_DEV\n    ? lazy(() => import('./pages/sandbox'))\n    : () => null;\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(\n  () => {\n    if (!window.__IDLE__) return;\n    const { statuses, unfurledLinks, notifications } = states;\n    let keysCount = 0;\n    const { instance } = api();\n    for (const key in statuses) {\n      if (!window.__IDLE__) break;\n      try {\n        const $post = document.querySelector(\n          `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n        );\n        const postInNotifications = notifications.some(\n          (n) => key === statusKey(n.status?.id, instance),\n        );\n        if (!$post && !postInNotifications) {\n          delete states.statuses[key];\n          delete states.statusQuotes[key];\n          for (const link in unfurledLinks) {\n            const unfurled = unfurledLinks[link];\n            const sKey = statusKey(unfurled.id, unfurled.instance);\n            if (sKey === key) {\n              delete states.unfurledLinks[link];\n              break;\n            }\n          }\n          keysCount++;\n        }\n      } catch (e) {}\n    }\n    if (keysCount) {\n      console.info(`GC: Removed ${keysCount} keys`);\n    }\n  },\n  15 * 60 * 1000,\n);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    setTimeout(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else if (typeof ICONS[icon] === 'object') {\n        ICONS[icon].module?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    }, 1);\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      // Don't reset theme color if media modal is showing\n      // Media modal will set its own theme color based on the media's color\n      const showingMediaModal =\n        document.getElementsByClassName('media-modal-container').length > 0;\n      if (showingMediaModal) return;\n\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'light dark');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nconst BENCHES = new Map();\nwindow.__BENCH_RESULTS = new Map();\nwindow.__BENCHMARK = {\n  start(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    // If already started, ignore\n    if (BENCHES.has(name)) return;\n    const start = performance.now();\n    BENCHES.set(name, start);\n  },\n  end(name) {\n    if (!import.meta.env.DEV && !import.meta.env.PHANPY_DEV) return;\n    const start = BENCHES.get(name);\n    if (start) {\n      const end = performance.now();\n      const duration = end - start;\n      __BENCH_RESULTS.set(name, duration);\n      BENCHES.delete(name);\n    }\n  },\n};\n\nif (import.meta.env.DEV) {\n  // If press shift down, set --time-scale to 10 in root\n  document.addEventListener('keydown', (e) => {\n    if (e.key === 'Shift') {\n      document.documentElement.classList.add('slow-mo');\n    }\n  });\n  document.addEventListener('keyup', (e) => {\n    if (e.key === 'Shift') {\n      document.documentElement.classList.remove('slow-mo');\n    }\n  });\n}\n\n{\n  // Temporary Experiments\n  // May be removed in the future\n  document.body.classList.toggle(\n    'exp-tab-bar-v2',\n    store.local.get('experiments-tabBarV2') ?? false,\n  );\n}\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n  __BENCHMARK.start('app-init');\n  __BENCHMARK.start('time-to-following');\n  __BENCHMARK.start('time-to-home');\n  __BENCHMARK.start('time-to-isLoggedIn');\n  useLingui();\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const {\n        client_id: clientID,\n        client_secret: clientSecret,\n        vapid_key,\n      } = getCredentialApplication(instanceURL) || {};\n      const vapidKey = getVapidKey(instanceURL) || vapid_key;\n      const verifier = store.sessionCookie.get('codeVerifier');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n          code_verifier: verifier || undefined,\n        });\n\n        if (accessToken) {\n          const client = initClient({ instance: instanceURL, accessToken });\n          await Promise.allSettled([\n            initPreferences(client),\n            initInstance(client, instanceURL),\n            initAccount(client, instanceURL, accessToken, vapidKey),\n          ]);\n          initStates();\n          window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n\n          setIsLoggedIn(true);\n          setUIState('default');\n        } else {\n          setUIState('error');\n        }\n        __BENCHMARK.end('app-init');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const searchAccount = decodeURIComponent(\n        (window.location.search.match(/account=([^&]+)/) || [, ''])[1],\n      );\n      let account;\n      if (searchAccount) {\n        account = getAccount(searchAccount);\n        console.log('searchAccount', searchAccount, account);\n        if (account) {\n          setCurrentAccountID(account.info.id);\n          window.history.replaceState(\n            {},\n            document.title,\n            window.location.pathname || '/',\n          );\n        }\n      }\n      if (!account) {\n        account = getCurrentAccount();\n      }\n      if (account) {\n        setCurrentAccountID(account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        setUIState('loading');\n        (async () => {\n          try {\n            if (hasPreferences() && hasInstance(instance)) {\n              // Non-blocking\n              initPreferences(client);\n              initInstance(client, instance);\n            } else {\n              await Promise.allSettled([\n                initPreferences(client),\n                initInstance(client, instance),\n              ]);\n            }\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n            __BENCHMARK.end('app-init');\n          }\n        })();\n      } else {\n        setUIState('default');\n        __BENCHMARK.end('app-init');\n      }\n    }\n\n    // Cleanup\n    store.sessionCookie.del('clientID');\n    store.sessionCookie.del('clientSecret');\n    store.sessionCookie.del('codeVerifier');\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  if (uiState === 'loading') {\n    return <Loader id=\"loader-root\" />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      <Routes>\n        <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n      </Routes>\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Modals />\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      <SearchCommand onClose={focusDeck} />\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction Root({ isLoggedIn }) {\n  if (isLoggedIn) {\n    __BENCHMARK.end('time-to-isLoggedIn');\n  }\n  return isLoggedIn ? <Home /> : <Welcome />;\n}\n\nconst PrimaryRoutes = memo(({ isLoggedIn }) => {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome|_sandbox)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route path=\"/\" element={<Root isLoggedIn={isLoggedIn} />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n      {(import.meta.env.DEV || import.meta.env.PHANPY_DEV) && (\n        <Route\n          path=\"/_sandbox\"\n          element={\n            <Suspense fallback={<Loader id=\"loader-sandbox\" />}>\n              <Sandbox />\n            </Suspense>\n          }\n        />\n      )}\n    </Routes>\n  );\n});\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/fh\" element={<FollowedHashtags />} />\n          <Route path=\"/sp\" element={<ScheduledPosts />} />\n          <Route path=\"/ft\" element={<Filters />} />\n          <Route path=\"/catchup\" element={<Catchup />} />\n          <Route path=\"/annual_report/:year\" element={<AnnualReport />} />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\nimport './cloak-mode.css';\nimport './polyfills';\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\n// import '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\nimport { IconSpriteProvider } from './components/icon-sprite-manager';\nimport { initActivateLang } from './utils/lang';\nimport { initPWAViewport } from './utils/pwa-viewport';\n\ninitActivateLang();\ninitPWAViewport();\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\nrender(\n  <I18nProvider i18n={i18n}>\n    <HashRouter>\n      <IconSpriteProvider>\n        <App />\n      </IconSpriteProvider>\n    </HashRouter>\n  </I18nProvider>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\n// Service worker cache cleanup\nif ('serviceWorker' in navigator && typeof caches !== 'undefined') {\n  const MAX_SW_CACHE_SIZE = 50;\n  const IGNORE_CACHE_KEYS = ['icons'];\n  let clearRanOnce = false;\n  const FAST_INTERVAL = 10_000; // 10 seconds\n  const SLOW_INTERVAL = 60 * 60 * 1000; // 1 hour\n  async function clearCaches() {\n    if (window.__IDLE__) {\n      try {\n        const keys = await caches.keys();\n        for (const key of keys) {\n          if (IGNORE_CACHE_KEYS.includes(key)) continue;\n          const cache = await caches.open(key);\n          const _keys = await cache.keys();\n          if (_keys.length > MAX_SW_CACHE_SIZE) {\n            console.warn('Cleaning cache', key, _keys.length);\n            const deleteKeys = _keys.slice(MAX_SW_CACHE_SIZE);\n            for (const deleteKey of deleteKeys) {\n              await cache.delete(deleteKey);\n            }\n          }\n        }\n        clearRanOnce = true;\n      } catch (e) {} // Silent fail\n    }\n    // Once cleared, clear again at slower interval\n    setTimeout(clearCaches, clearRanOnce ? SLOW_INTERVAL : FAST_INTERVAL);\n  }\n  setTimeout(clearCaches, FAST_INTERVAL);\n}\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","addEventListener","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","t","_useLingui","visible","setVisible","useState","visibleTimeout","clearTimeout","setTimeout","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","values","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","streamTimeout","pollNotifications","streaming","api","hasStreaming","user","notification","subscribe","entry","skipThreading","unsubscribe","clearInterval","r","info","useInterval","checkForUpdates","lastCheckDate","now","appVersion","currentCloakMode","_t","useHotkeys","showToast","fetchLatestPostsMemoized","pmem","currentAccountID","statusesIterator","accounts","$select","statuses","exclude_replies","exclude_reblogs","maxAge","ComposeButton","snapStates","useSnapshot","menuOpen","setMenuOpen","latestPosts","setLatestPosts","loadingPosts","setLoadingPosts","buttonRef","menuRef","columnMode","settings","shortcutsViewMode","handleButton","key","toLowerCase","composerState","minimized","openOSK","composeDataElements","querySelectorAll","opts","JSON","parse","undefined","shiftKey","openCompose","showCompose","useKey","ignoreEventWhen","querySelector","metaKey","ctrlKey","altKey","bindLongPress","useLongPress","threshold","fetchLatestPosts","useCallback","getCurrentAccountID","posts","handleReplyToPost","post","replyToStatus","_jsxs","_Fragment","children","_jsx","ref","type","onClick","onContextMenu","preventDefault","class","publishing","publishingError","Icon","icon","size","alt","ControlledMenu","state","anchorRef","onClose","direction","gap","unmountOnClose","portal","target","body","boundingBoxPadding","safeBoundingBoxPadding","containerProps","style","zIndex","closeMenu","submenuOpenDelay","MenuLink","to","_Trans","MenuDivider","SubMenu2","align","shift","disabled","label","className","map","createdDate","Date","createdAt","isWithinDay","getTime","MenuItem","statusPeek","RelativeTime","datetime","format","dateTime","toISOString","title","toLocaleString","niceDateTime","KeyboardShortcutsHelp","showKeyboardShortcutsHelp","test","hash","Modal","tabindex","keys","components","0","action","1","2","parents","coords","siblings","animations","intersections","mutationObservers","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","isOffscreen","rect","vw","vh","observePosition","oldObserver","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","forEach","lowPriority","poll","callback","resize","supportedBrowser","nodes","mutation","node","i","child","_a","_b","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaLeft","deltaTop","deltaRight","start","end","keyframes","cleanUp","prev","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","deltaY","deltaX","offsetParent","parentStyles","parentCoords","autoAnimate","element","mo","d","a","io","useAutoAnimate","controller","setController","setEnabled","dec2hex","dec","toString","slice","verifier","array","Uint32Array","crypto","getRandomValues","Array","from","join","sha256","plain","data","TextEncoder","encode","subtle","digest","base64urlencode","bytes","Uint8Array","len","byteLength","String","fromCharCode","btoa","replace","generateCodeChallenge","v","hashed","supportsPKCE","instanceURL","res","ok","status","json","code_challenge_methods_supported","includes","__generateCodeChallenge","DEV","PHANPY_CLIENT_NAME","CLIENT_NAME","PHANPY_WEBSITE","WEBSITE","import","SCOPES","sameSite","location","hostname","currentLocation","origin","pathname","REDIRECT_URI","registerApplication","registrationParams","URLSearchParams","client_name","redirect_uris","scopes","website","method","headers","getPKCEAuthorizationURL","client_id","forceLogin","codeVerifier","code_challenge_method","code_challenge","codeChallenge","response_type","authorizationParams","scope","client_secret","code","code_verifier","append","tokenResponse","revokeAccessToken","token","revokeResponse","error","isStandalone","matchMedia","matches","Accounts","getAccounts","currentAccount","moreThanOneAccount","_","reload","useReducer","accountsListParent","tabIndex","account","isCurrent","isDefault","Avatar","url","avatarStatic","onDblClick","log","saveAccounts","NameText","showAcct","setCurrentAccountID","Menu2","menuButton","href","splice","MenuConfirm","subMenu","confirmLabel","menuItemClassName","clientId","clientSecret","store","session","get","Link","logo","regionMaps","LangSelector","i18n","useLingui","populatedLocales","useMemo","LOCALES","lang","regionlessCode","native","localeCode2Text","locale","fallback","CATALOGS","find","c","nativeName","_common","name","sort","b","order","localeCompare","DEFAULT_LANG","onChange","local","set","activateLang","common","createBackendPushSubscription","subscription","push","create","fetchBackendPushSubscription","updateBackendPushSubscription","update","removeBackendPushSubscription","isPushSupported","navigator","getRegistration","serviceWorker","getSubscription","registration","pushManager","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","sameKey","vapidKey","key2","applicationServerKey","vapidKeyStr","applicationServerKeyStr","policy","DEFAULT_TEXT_SIZE","TEXT_SIZES","PHANPY_PRIVACY_POLICY_URL","PRIVACY_POLICY_URL","PHANPY_TRANSLANG_INSTANCES","TRANSLANG_INSTANCES","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","targetLanguages","Object","languages","tl","TRANSLATION_API_NAME","Settings","currentTheme","themeFormRef","targetLanguage","contentTranslationTargetLanguage","systemTargetLanguage","getTranslateTargetLanguage","systemTargetLanguageText","currentTextSize","prefs","setPrefs","getPreferences","authenticated","expTabBarV2","setExpTabBarV2","disableQuotePolicy","onInput","formData","FormData","theme","documentElement","html","classList","$manualMeta","$autoMetas","m","toggle","defaultChecked","min","max","step","parseInt","setProperty","rel","for","source","newPrefs","setPreferences","supportsNativeQuote","alert","checked","autoRefresh","boostsCarousel","contentTranslation","showCommon","contentTranslationHideLanguages","contentTranslationAutoInline","composerGIFPicker","mediaAltGenerator","getAPIVersions","groupedNotificationsAlpha","shortcutSettingsCloudImportExport","cloakMode","showDrafts","PushNotificationsSection","display","flexWrap","alignItems","marginTop","src","aspectRatio","background","borderRadius","showAccount","readOnly","select","warn","_t2","pushFormRef","setNeedRelogin","previousPolicyRef","allowNotifications","setUIState","needRelogin","alerts","setAllowNotifications","alert2","policyEl","fromEntries","mention","favourite","reblog","follow","followRequest","alertsCount","policyChanged","allowNotifications2","updateSubscription","removeSubscription","catch","isLoading","permission","Notification","focusDeck","timer","columns","getElementById","focusedColumn","focus","firstVisibleColumn","column","getBoundingClientRect","modals","modal","modalFocusElement","pages","page","useLocationChange","useLocation","currentLocationRef","AccountHandleInfo","acct","username","server","split","encodedAcct","punycode","toASCII","SUPPORTED_IMAGE_FORMATS","SUPPORTED_IMAGE_FORMATS_STR","FieldsAttributesRow","index","hasValue","setHasValue","maxLength","required","dir","currentTarget","EditProfileSheet","uiState","setAccount","headerPreview","setHeaderPreview","avatarPreview","setAvatarPreview","acc","verifyCredentials","displayName","avatar","header","note","fields","fieldsAttributesRef","avatarMediaAttachments","headerMediaAttachments","abrupt","fieldsAttributesFields","field","fieldsAttributes","newAccount","header2","file","accept","blob","mediaAttachments","mediaIndex","Math","ENDORSEMENTS_LIMIT","Endorsements","accountID","open","onlyOpenIfHasEndorsements","endorsementsContainer","endorsementsUIState","setEndorsementsUIState","endorsements","setEndorsements","relationshipsMap","setRelationshipsMap","supports","behavior","block","fetchRelationships","relationships","reallyOpen","Loader","AccountBlock","avatarSize","relationship","FETCH_MAX_AGE","MAX_AGE","fetchLists","lists","updatedAt","getLists","fetchList","getList","theList","getListTitle","addListStore","updateListStore","deleteListStore","listID","findIndex","ListExclusiveBadge","insignificant","ListAddEdit","editMode","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","onSubmit","listResult","replies_policy","AddRemoveListsSheet","setLists","listsContainingAccount","setListsContainingAccount","reloadCount","listsContainingAccount2","setShowListAddEditModal","showListAddEditModal","inList","l","accountIds","PrivateNoteSheet","initialNote","onRelationshipChange","textareaRef","trim","newRelationship","comment","TranslatedBioSheet","fieldsText","getHTMLText","text","whiteSpace","TranslationBlock","forceTranslate","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","i18nDuration","RelatedActions","standalone","setShowEditProfile","showEndorsements","renderEndorsements","setRenderEndorsements","currentMasto","currentInstance","currentAuthenticated","sameInstance","relationshipUIState","setRelationshipUIState","setRelationship","locked","lastStatusAt","moved","following","showingReblogs","notifying","followedBy","blocking","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","privateNote","currentInfo","setCurrentInfo","isSelf","setIsSelf","acctWithInstance","supportsEndorsements","currentID","acctHasInstance","results","v2","search","q","resolve","updateAccount","setShowTranslatedBio","setShowAddRemoveLists","showPrivateNoteModal","setShowPrivateNoteModal","showTranslatedBio","showAddRemoveLists","hideTime","position","loading","overflow","lists2","onMenuChange","draftStatus","handle","openTrigger","duration","textOverflow","reloadGenericAccounts","counter","confirm","showReportModal","relationship2","urlObj","host","LIMIT","ACCOUNT_INFO_MAX_AGE","fetchFamiliarFollowers","familiarFollowers","memFetchFamiliarFollowers","fetchPostingStats","fetchStatuses","stats","total","originals","replies","boosts","memFetchPostingStats","fetchAccount","AccountInfo","isString","setInfo","sameCurrentInstance","info2","bot","emojis","group","statusesCount","memorial","roles","hideCollections","headerStatic","headerIsAvatar","infoHasEssentials","account2","updated","headerCornerColors","setHeaderCornerColors","followersIterator","accountInstance","firstLoad","familiarFollowersCache","newValue","familiarFollowers2","familiar","followingIterator","LinkOrDiv","accountLink","postingStats","setPostingStats","renderFamiliarFollowers","setFamiliarFollowers","postingStatsUIState","setPostingStatsUIState","followers","renderPostingStats","onProfileUpdate","isStringURL","skeleton","stopPropagation","ctx","canvas","crossOrigin","pixelDimension","rgbColors","OffscreenCanvas","createElement","willReadFrequently","imageSmoothingEnabled","drawImage","colors","g","dataLength","lightenRGB","color","handleWithInstance","showMediaModal","internal","handleContentLinks","dangerouslySetInnerHTML","verifiedAt","__html","EmojiText","fetchFollowers","showGenericAccounts","heading","fetchAccounts","excludeRelationshipAttrs","blankCopy","follower","followersCount","shortenNumber","fetchFollowing","followingCount","hasPostingStats","3","_i18n","daysSinceLastPost","luminence","alpha","AccountSheet","propInstance","lookup","skip_webfinger","result","accountWithSameString","startsWith","accountURL","URL","Drafts","drafts","setDrafts","db","ns","getCurrentAccountNS","ownKeys","filter","getMany","hasDrafts","draft","replyTo","quote","updatedAtDate","quoteStatus","MiniDraft","spoilerText","hasPoll","hasMedia","hasQuote","hasPollOrMedia","firstImageMedia","image","objectURL","createObjectURL","EmbedModal","GenericAccounts","postID","isCurrentInstance","showMore","setShowMore","staticAccounts","showReactions","setAccounts","loadRelationships","loadAccounts","done","isArray","theAccount","j","_types","newAccounts","Status","showStats","InView","FORCE_TRANSLATE_LIMIT","MediaAltModal","setForceTranslate","differentLanguage","localeMatch","isShortAlt","supportsTTS","speak","textWrap","sourceLanguage","classToType","obj","unpack","keyOrder","k","PI","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","multiplyMatrices","A","B","B_cols","product","row","col","labConstants","compand","linear","sign","xyz2rgb","z","MtxAdaptMa","MtxAdaptMaI","MtxXYZ2RGB","RefWhiteRGB","Xn","Yn","Zn","LAB_CONSTANTS","As","Bs","Cs","Ad","Bd","Cd","X1","Y1","Z1","X2","Y2","Z2","oklab2rgb","L","rest","X","Y","Z","OKLab_to_XYZ","b_","OKLab","LMStoXYZ","OKLabtoLMS","LMSnl","gammaAdjustSRGB","companded","rgb2xyz","MtxRGB2XYZ","rgb2oklab","xyz","XYZ_to_OKLab","XYZ","XYZtoLMS","LMStoOKLab","LMS","sin","cos","lch2lab","h","oklch2rgb","sqrt","atan2","round","lab2lch","rgb2oklch","MediaModal","statusID","carouselRef","currentIndex","setCurrentIndex","carouselFocusItem","useLayoutEffect","scrollIntoView","prevStatusID","scrollLeft","clientWidth","differentStatusID","scrollTo","isRTL","showControls","setShowControls","handleSwipe","removeEventListener","handleScroll","abs","passive","mediaOkColors","media","blurhash","averageColor","getBlurHashAverageColor","mediaAccentColors","okColor","light","dark","default","mediaAccentGradients","range","lightGradient","darkGradient","toastRef","hideToast","currentColor","$meta","metaColor","mediaColor","colorScheme","content","contains","backgroundAttachment","accentColor","showMediaAlt","description","showOriginal","menuClassName","OpenLinkSheet","linkText","displayUrl","protocol","handleCopy","clipboard","writeText","handleShare","CATEGORIES","CATEGORIES_INFO","spam","legal","violation","stampLabel","other","excludeStamp","findMatchingLanguage","rule","currentLang","translations","availableLanguages","matchedLang","normalizedLanguages","part","region","charAt","toUpperCase","translateRules","rules","_translatedText","ReportModal","domain","translatedRules","currentDomain","getCurrentInstance","selectedCategory","setSelectedCategory","showRules","setShowRules","rulesRef","hasRules","setHasRules","previewMode","useAvatarStatic","showActivity","category","forward","ruleIds","reports","accountId","statusIds","Fragment","maxlength","rows","switch","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","compressed","uncompressed","buf","TotalLen","current_value","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","getFollowedTags","fauxDiv","extractTagsFromStatus","hashtagLinks","AsyncText","setText","Promise","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","public","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","placeholder","pattern","fetchAccountTitle","SHORTCUTS_META","path","excludeViewMode","subtitle","query","encodeURIComponent","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","fontSize","opacity","textTransform","imgURL","multiColumnUrl","Boolean","shortcut","excludedViewMode","shortcutsArr","temp","shortcutIndex","justifyContent","ShortcutForm","mode","ImportExport","FORM_NOTES","currentType","setCurrentType","followedHashtags","setFollowedHashtags","form","formRef","reset","autocorrect","autocapitalize","tag","spellCheck","shortcutsStr","compressToEncodedURIComponent","setImportShortcutStr","parsedImportShortcutStr","setImportUIState","importShortcutStr","parsed","decompressFromEncodedURIComponent","hasCurrentSettings","shortcutsImportFieldRef","match","dt","s","some","importUIState","menuFooter","nonUniqueShortcuts","exceededLimit","newShortcuts","settingsJSON","newNote","changes","prevValue","Modals","navigate","useNavigate","preload","ComposeSuspense","__COMPOSE__","editStatus","newStatus","scheduledAt","reloadStatusPage","reloadScheduledPosts","reply","edit","toast","prevLocation","showSettings","showAccounts","destination","showOpenLink","showShortcutsSettings","showEmbedModal","FollowRequestButtons","requestState","setRequestState","hasRelationship","followRequests","authorize","Error","NOTIFICATION_ICONS","follow_request","severed_relationships","moderation_warning","emoji_reaction","annual_report","quoted_update","emojiText","emoji","emoji_url","staticUrl","emojiObject","CustomEmoji","contentText","count","postsCount","postType","Subject","clickable","poll-self","poll-voted","favourite+reblog","admin.sign_up","admin.report","targetAccount","year","SEVERED_RELATIONSHIPS_TEXT","account_suspension","targetName","domain_block","user_domain_block","MODERATION_WARNING_TEXT","none","disable","mark_statuses_as_sensitive","delete_statuses","sensitive","silence","suspend","AVATARS_LIMIT","isStatic","disableContextMenu","report","annualReport","_ids","_accounts","_statuses","_groupKeys","sampleAccounts","notificationsCount","groupKey","_notificationsCount","_sampleAccountsCount","actualStatus","actualStatusID","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","props","handleOpenGenericAccounts","diffCount","expandAccounts","showAvatar","emojiURL","shortcode","formattedCreatedAt","genericAccountsHeading","statusKey","filtered","isOwnPost","filterInfo","isFiltered","type2","gKey","keyAccounts","keyAccount","_accounts2","status2","allowContextMenu","TruncatedLink","dispatchEvent","clientX","clientY","allowFilters","useTruncated","Notification$2","oldProps","newProps","accessToken","NotificationService","routeNotification","showNotificationSheet","notificationAccount","hasModal","hasStatus","clearAppBadge","id2","setShowNotificationSheet","getSearchHistory","history","MAX_HISTORY_LENGTH","addToSearchHistory","queryType","existingIndex","item","unshift","timestamp","limitedHistory","removeFromSearchHistory","filteredHistory","clearAllSearchHistory","generateSearchItemData","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","setQuery","searchFieldRef","useImperativeHandle","setValue","blur","searchHistory","searchSuggestionsData","recentSearchItems","historyItem","isRecentSearch","autocomplete","onSearch","onFocus","firstItem","onBlur","onKeyDown","focusItem","nextItem","nextElementSibling","parentElement","prevItem","previousElementSibling","items","lastItem","click","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enableOnFormTags","Shortcuts","isMultiColumnMode","shortcutsColumnsMode","tabBarRef","hasLists","formattedShortcuts","pin","timeoutId","activeTab","inline","scrollTop","updatesButton","instanceRef","viewScroll","getComputedStyle","Shortcuts$1","groupBoosts","newValues","boostStash","serialBoosts","boostStashID","half","floor","dedupeBoosts","boostedStatusIDs","filteredItems","boosterID","groupContext","contextIndex","contexts","repliedItem","self","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","inReplyToIds","contextItems","every","it","sKey","statusReply","queueMicrotask","fallbackFetch","fetchStatus","saveStatus","ids","replyToStatuses","assignFollowedTags","statusFollowedTags","statusWithFollowedTags","extractedTags","itemFollowedTags","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","onScroll","scrollHeight","scrollWidth","clientHeight","scrollStart","scrollDimension","clientDimension","scrollDistance","init","Event","useScrollFn","useThrottledCallback","resetScrollDirection","MediaPost","onMediaClick","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","visibility","language","editedAt","card","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","showSpoilerMedia","hasSpoiler","readingExpandMedia","filterTitleStr","Media","MediaPost$1","NavMenu","showFollowing","detect","cancelOnMovement","menuState","setMenuState","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","buttonClickTS","squircle","commitHash","__COMMIT_HASH__","ListMenu","supportsLists","NavMenu$1","scrollIntoViewOptions","Timeline","titleComponent","emptyText","errorText","useItemID","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","clearWhenRefresh","setItems","showNew","setShowNew","debug","__BENCHMARK","isMediaFirstInstance","mediaFirst","allowGrouping","loadItemsTS","firstLoad2","loadItems","useDebouncedCallback","ts","otherPosts","pinnedPosts","items2","leading","jRef","handler","itemsSelector","activeItem","activeElement","activeItemRect","allItems","activeItemIndex","indexOf","itemRect","topmostItem","kRef","showNewPostsIndicator","handleLoadNewPosts","headerRef","hiddenUI","cancel","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","visible2","lastHiddenTime","dotRef","Provider","oRef","TimelineItem","inView","marginBlockEnd","fItems","aFiltered","bFiltered","filteredItemsIDs","isCarousel","unfiltered","filteredItems2","StatusCarousel","_grouped","_pinned2","item2","_pinned3","actualStatusID3","reblog3","statusID3","statusID2","actualStatusID2","reblog2","url2","contentTextWeight","manyItems","enableCommentHint","isMiddle","showCompact","_differentAuthor","isSpoiler","isStart","isEnd","TimelineStatusCompact","itemKey","oldID","newID","setRender","render","startButtonRef","_t3","endButtonRef","_t4","statusPeekText","ThreadBadge","titlesStr","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","mem","setAttribute","_isSearchEnabled","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","searchOffsetRef","searchEnabled","setSearchEnabled","isValidMonth","_month","monthIndex","after","_year","afterStr","before","beforeStr","searchResults","done2","offset","value2","pinnedStatuses","pinned","pinnedStatusesIds","postId","featuredTags","setFeaturedTags","acctDisplay","accountDisplay","monthYear","fetchAccount2","featuredTags2","useTitle","TimelineStart","cachedAccount","filterBarRef","month2","date","validity","MonthPicker","active","valid","allowSwitch","offsetLeft","fetchAccountStatuses","masto2","stringify","minYear","maxYear","minMonth","maxMonth","yearFieldRef","checkValidity","monthFieldRef","AnnualReport","setResults","annualReports","report2","datePlaceholder","Bookmarks","bookmarksIterator","fetchBookmarks","catchupUrl","FILTER_CONTEXT","RANGES","FILTER_KEYS","original","quotes","groups","FILTER_SORTS","FILTER_GROUPS","DTF","Intl","DateTimeFormat","day","hour","minute","quotedStatus","Catchup","dtf","showTopLinks","setShowTopLinks","supportsPixelfed","fetchHome","maxCreatedAt","allResults","homeIterable","homeIterator","mainloop","addedResults","createdAtTime","selfPost","_filtered","_followedTags","catchupRangeRef","catchupLastRef","handleCatchupClick","catchupID","catchup","setPosts","reloadCatchups","setLastCatchupEndAt","prevCatchups","setPrevCatchups","lastCatchupEndAt","catchups","ownCatchups","lastCatchups","restCatchups","startAt","endAt","trimmedCatchups","reloadCatchupsCount","__FILTER","thePost","links","links2","sharers","likes","link","topLinks","shared","linksLoop","authors","authorCounts","selectedFilterCategory","setSelectedFilterCategory","filteredPosts2","setSelectedAuthor","sortBy","authorsHash","setSortOrder","authorCountsMap","setGroupBy","filteredPosts","postFilterMatches","boostedPosts","__BOOSTERS","selectedAuthor","filteredPostsMap","authorID","authorCountsList","sortedFilteredPosts","aAccountID","authorIndices","bIndex","bAccountID","aIndex","postDensity","bDensity","aDensity","sortOrder","groupBy","prevGroup","authorsListParent","autoAnimated","isFiltered2","postsBarType","posts2","postsBins","bins","binByTime","lastCatchupRange","sortOrderIndex","authorElement","scrollableRect","authorRect","right","showHelp","setShowHelp","hlRef","_2","isRadio","handleArrowKeys","escRef","isArrowKeys","closest","setRange","pc","st","yes","del","formatRange","setSortBy","transform","imageDescription","publishedAt","labAverageColor","postsBar","filterCounts","author","paddingInline","showSeparator","IntersectionPostLineItem","PostLine","isFollowedTags","isReplyTo","onMouseEnter","setShow","show","IntersectionObserver","unobserve","MEDIA_DENSITY","CARD_DENSITY","pollContent","cur","htmlContentLength","PostPeek","_thread","isThread","theQuote","readingExpandSpoilers","postText","showPostContent","emojifyText","o","remoteMediaURL","showMedia","mediaURL","MEDIA_SIZE","previewUrl","onError","gifv","video","audio","quotesCount","PostStats","numBins","dates","minDate","maxDate","normalized","binIndex","Favourites","favouritesIterator","fetchFavourites","FILTER_CONTEXT_UNIMPLEMENTED","FILTER_CONTEXT_LABELS","home","thread","EXPIRY_DURATIONS","EXPIRY_DURATIONS_LABELS","Filters","showFiltersAddEditModal","setShowFiltersAddEditModal","filters","setFilters","keywords","expiresAt","keyword","ExpiryStatus","FiltersAddEdit","_id","incID","filterAction","hasExpiry","expiresAtDate","editKeywords","setEditKeywords","keywordsRef","setRemovedKeyword_IDs","filteredEditKeywords","setRemovedKeywordIDs","removedKeyword_IDs","keywordIDs","getAll","keywordKeywords","keywordWholeWords","keywordsAttributes","wholeWord","removedKeywordIDs","context2","expiresIn","wholeWords","filterResult","filterAction2","_id2","showNeverExpires","expired","rerender","FollowedHashtags","Following","client","streamingClient","setStreamingClient","latestItem","onStreamingReady","latestItemChanged","clearFollowedTagsState","include_reblogs","valueContainsLatestItem","getStatus","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","hashtags","linkParams","hashtagTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","followUIState","setFollowUIState","reachLimit","featuredUIState","setFeaturedUIState","isFeaturedTag","setIsFeaturedTag","setDownOverflow","finally","featuredTagID","delete","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","setList","showManageMembersModal","setShowManageMembersModal","list2","MenuHeader","ListManageMembers","MEMBERS_LIMIT","members","setMembers","membersIterator","fetchMembers","member","as","RemoveAddButton","setRemoved","removed","notificationTypeKeys","GROUP_TYPES","groupable","fixNotifications","massageNotifications2","notificationGroups","sampleAccountIds","statusId","groupNotifications2","groupNotifications","newGroupNotifications","gn","latestPageNotificationAt","mostRecentNotificationId","newGroupNotifications1","notificationsMap","virtualType","sampleCountDiffNotificationsCount","mappedNotification","ma","mappedAccount","newGroupNotifications2","notificationsMap2","toLocaleDateString","hasOneAccount","n","cleanNotifications","reverse","cleanNotifications2","emptySearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","NOTIFICATIONS_LIMIT","NOTIFICATIONS_GROUPED_LIMIT","memSupportsGroupedNotifications","mastodon","mastoFetchNotificationsIterable","mastoFetchNotifications","getGroupedNotifications","NOTIFICATIONS_POLICIES","NOTIFICATIONS_POLICIES_TEXT","forNotFollowing","forNotFollowers","forNewAccounts","forPrivateMentions","forLimitedAccounts","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","notificationsIterable","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","supportsFilteredNotifications","showNotificationsSettings","setShowNotificationsSettings","notificationsPolicy","setNotificationsPolicy","fetchNotificationsPolicy","loadNotificationsPolicy","notificationsRequests","setNotificationsRequests","fetchNotificationsRequest","loadNotifications","fetchNotificationsPromise","fetchNotifications","loadUpdates","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","annualReportNotification2","setAnnualReportNotification","annualReportNotification","annualReportYear","getFullYear","statusLink","todaySubHeading","today","forceOpts","announcement","onToggle","request","summary","pendingRequestsCount","NotificationRequestModalButton","differentDay","notificationDay","subHeading","newPolicy","AnnouncementBlock","contact","contactAccount","startsAt","endsAt","published","allDay","reactions","read","publishedDateText","updatedAtText","publishedAtDate","reaction","me","fetchNotficationsByAccount","showModal","setShowModal","notifs","setNotifications","NotificationRequestButtons","hasRequestState","Notifications$1","Public","isLocal","publicIterator","fetchPublic","remote","prompt","RecentSearches","onItemClick","handleClearAll","handleRemoveItem","listRef","SHORT_LIMIT","Search","offsetRef","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","typeResults","setTypeResultsFunc","loadResults","filterBarParent","reduce","TREND_CACHE_TIME","fetchLinks","trends","fetchTrendsStatuses","pixelfed","discover","fetchLinkList","Trending","setHashtags","setLinks","trendIterator","fetchTrends","currentLinkMentionsLoading","setCurrentLinkMentionsLoading","currentLinkMentionsIterator","currentLink","setCurrentLink","hasCurrentLink","supportsTrendingLinkPosts","currentLinkRef","prevCurrentLink","authorUrl","authorName","providerName","providerUrl","isShortTitle","title2","hasAuthor","flexShrink","textAlign","fetchLinkMentions","Columns","Component","Hashtag","$column","currentFocusedColumn","prevColKey","nextColKey","Home","NotificationsLink","notificationLinkRef","NotificationsMenu","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","skipFollowRequests","headerHeight","Home$1","statusPostRegexes","getInstanceStatusObject","theURL","regex","getInstanceStatusURL","HttpRoute","statusObject","statusURL","Lists","hasExclusiveLists","instancesListURL","PHANPY_DEFAULT_INSTANCE","DEFAULT_INSTANCE","Login","instanceURLRef","cachedInstanceURL","submit","instanceText","setInstanceText","instancesList","setInstancesList","searcher","Fuse","submitInstance","xmlDoc","DOMParser","parseFromString","getElementsByTagName","template","getCredentialApplication","credentialApplication","storeCredentialApplication","authPKCE","cleanInstanceText","instanceTextLooksLikeDomain","instancesSuggestions","instance2","selectedInstanceText","ScheduledPosts","scheduledPosts","setScheduledPosts","showScheduledPostModal","setShowScheduledPostModal","postsIterator","scheduledStatuses","allPosts","option","votesCount","ScheduledPostPreview","ScheduledPostEdit","hours","formatOpts","weekday","differentScheduledAt","setNewScheduledAt","newScheduledAt","localTZ","getLocalTimezoneName","pastSchedule","ScheduledAtField","setScheduledAt","EditHistoryControls","prevEditedAt","nextEditedAt","editedAtIndex","editHistoryMode","editHistoryRef","exitEditHistory","useEditHistory","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaStatusID","mediaStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","matchStatusPath","matchPath","postViewState","mediaClose","mediaAttachments2","handleMediaClose","mediaVTN","getSafeViewTransitionName","els","foundEls","el2","elBounds","innerHeight","transition","startViewTransition","viewTransitionName","viewTransitioned","$carousel","$deckContainer","$deckContainers","linkable","restProps","createdAtSort","MONTH_IN_MS","StatusThread","setViewMode","totalDescendants","setStatuses","heroStatusRef","scrollOffsets","fullContext","initEditHistory","threadsCount","currentEditedAtStatus","nextEditedAtStatus","descendants","sCreatedAt","currentEditedAtStatusCreatedAt","nextEditedAtStatusCreatedAt","ancestors2","ancestors","ancestorsIsThread","heroStatus2","nestedDescendants","missingStatuses","heroAccountID","descendantLevelsCount","__replies","level","nextLevel","_replies","_r","expandReplies","calcStatusWeight","descendant","weight","mappedNestedDescendants","reloadHero","ancestor","reallyCachedStatuses","allStatuses","contextFetch","pRetry","initContext","heroTimer","cachedStatuses","retries","restructureContext","descendantsThread","threadsCount2","heroFetch","heroLimit","threadifyStatus","setThreadsCount","setShowRefresh","interval","offsetTop","lastInitContextTS","setLimit","scrollPosition","newScrollOffsets","newScrollTop","showRefresh","contextURL","statusWeightCache","heroContentText","heroDisplayName","postInstance","apiCache","ignoreVary","postSameInstance","heroInView","setHeroInView","activeStatusRect","activeStatus","allStatusLinks","activeStatusIndex","nextStatus","statusLinkRect","topmostStatusLink","heroPointer","prevStatus","details","initialPageState","handleMediaClick","handleStatusLinkClick","renderStatus","isHero","tagName","reachTopPost","requestAnimationFrame","withinContext","enableTranslate","translate","StatusParent","setReachTopPost","SubComments","isLinkable","hasDescendants","showActionsBar","prevEntry","moreStatusesKeys","getIDs","hasParentThread","accWeight","months","slicedStatuses","prevLocationIsStatusPage","currentDate","prevDate","prevID","monthsDiff","years","spoilerButton","ThreadCountContext","statusesList","viewMode","isFinite","onAnimationEnd","back","short","arr","button","buttons","openAll","parentLink","diveDeep","replies3","sameCount","totalComments","totalWeight","openBefore","detailsRef","setRenderReplies","Container","isDetails","shortReply","dataset","renderReplies","cachedWeight","POLL_VIRTUAL_LENGTH","cardLength","CARD_VIRTUAL_LENGTH","mediaLength","pollLength","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL","DEFAULT_INSTANCE_REGISTRATION_URL","appSite","__BUILD_TIME__","Welcome","nativeAlert","__nativeAlert","Toastify","gravity","__STATES__","__STATES_STATS__","counts","unmountedPosts","setInterval","unfurledLinks","postInNotifications","$post","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","capture","relatedTarget","isIOS","showingMediaModal","textSize","$app","$body","BENCHES","__BENCH_RESULTS","App","setIsLoggedIn","decodeURIComponent","getVapidKey","vapid_key","clientID","getAccessToken","initStates","initClient","searchAccount","__IGNORE_GET_ACCOUNT_ERROR__","getAccount","hasPreferences","hasInstance","initPreferences","initInstance","sessionCookie","Routes","Route","Root","PrimaryRoutes","nonRootLocation","Sandbox","backgroundLocation","getPrevLocation","isModalPage","initActivateLang","initPWAViewport","I18nProvider","HashRouter","IconSpriteProvider","localStorage","removeItem","sessionStorage","caches","IGNORE_CACHE_KEYS","clearRanOnce","FAST_INTERVAL","SLOW_INTERVAL","clearCaches","cache","_keys","MAX_SW_CACHE_SIZE","deleteKeys"],"mappings":"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","x_google_ignoreList":[0,1,6,7,33,34,35,36,37,38,39,40,41,42,43,44,45,46,50]}