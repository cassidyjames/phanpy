{"version":3,"mappings":";;;;;;gHAIA,MAAMA,EAAwB,CAACC,IAE/B,SAAwBC,EAAsB,CAAEC,UAAS,EAAG,CAC1D,GAAIH,EACF,OAAOI,EAACC,EAAQ,CAAAF,WAAqB,EAGvC,KAAM,CAACG,EAAgBC,CAAiB,EAAIC,EAAS,EAAK,EAC1DC,SAAU,IAAM,EACb,UACC,MAAAC,EAAA,IAAM,OAAO,8BAAyC,OAAAC,KAAA,2CACtDJ,EAAkB,EAAI,KAE1B,EAAG,CAAE,GAEED,GAAkBF,EAACC,EAAQ,CAAAF,WAAqB,CACzD","names":["supportsIntlSegmenter","shouldPolyfill","IntlSegmenterSuspense","children","_jsx","Suspense","polyfillLoaded","setPolyfillLoaded","useState","useEffect","__vitePreload","n"],"ignoreList":[],"sources":["../../src/components/intl-segmenter-suspense.jsx"],"sourcesContent":["import { shouldPolyfill } from '@formatjs/intl-segmenter/should-polyfill';\nimport { Suspense } from 'preact/compat';\nimport { useEffect, useState } from 'preact/hooks';\n\nconst supportsIntlSegmenter = !shouldPolyfill();\n\nexport default function IntlSegmenterSuspense({ children }) {\n  if (supportsIntlSegmenter) {\n    return <Suspense>{children}</Suspense>;\n  }\n\n  const [polyfillLoaded, setPolyfillLoaded] = useState(false);\n  useEffect(() => {\n    (async () => {\n      await import('@formatjs/intl-segmenter/polyfill-force');\n      setPolyfillLoaded(true);\n    })();\n  }, []);\n\n  return polyfillLoaded && <Suspense>{children}</Suspense>;\n}\n"],"file":"assets/intl-segmenter-suspense-EhT4pn-r.js"}