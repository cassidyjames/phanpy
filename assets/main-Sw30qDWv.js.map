{"version":3,"file":"main-Sw30qDWv.js","sources":["../../node_modules/just-debounce-it/index.mjs","../../node_modules/swiped-events/src/swiped-events.js","../../src/utils/usePageVisibility.js","../../src/components/background-service.jsx","../../src/components/compose-button.jsx","../../src/components/keyboard-shortcuts-help.jsx","../../node_modules/@formkit/auto-animate/index.mjs","../../node_modules/@formkit/auto-animate/preact/index.mjs","../../src/pages/accounts.jsx","../../src/assets/logo.svg","../../src/components/lang-selector.jsx","../../src/utils/push-notifications.js","../../src/pages/settings.jsx","../../src/utils/focus-deck.jsx","../../src/utils/useLocationChange.js","../../src/utils/lists.js","../../src/components/list-add-edit.jsx","../../src/components/account-info.jsx","../../src/components/account-sheet.jsx","../../src/components/drafts.jsx","../../src/components/embed-modal.jsx","../../src/components/generic-accounts.jsx","../../src/components/media-alt-modal.jsx","../../src/utils/color-utils.js","../../src/components/media-modal.jsx","../../src/components/report-modal.jsx","../../node_modules/lz-string/libs/lz-string.js","../../src/assets/floating-button.svg","../../src/assets/multi-column.svg","../../src/assets/tab-menu-bar.svg","../../src/utils/followed-tags.js","../../src/components/AsyncText.jsx","../../src/components/shortcuts-settings.jsx","../../src/components/modals.jsx","../../src/components/follow-request-buttons.jsx","../../src/components/notification.jsx","../../src/components/notification-service.jsx","../../src/components/search-form.jsx","../../src/components/search-command.jsx","../../src/components/shortcuts.jsx","../../src/utils/timeline-utils.jsx","../../src/utils/useScroll.js","../../src/utils/useScrollFn.js","../../src/components/media-post.jsx","../../src/components/nav-menu.jsx","../../src/components/timeline.jsx","../../src/pages/account-statuses.jsx","../../src/pages/bookmarks.jsx","../../src/assets/features/catch-up.png","../../src/pages/catchup.jsx","../../src/pages/favourites.jsx","../../src/pages/filters.jsx","../../src/pages/followed-hashtags.jsx","../../src/pages/following.jsx","../../src/pages/hashtag.jsx","../../src/pages/list.jsx","../../src/utils/group-notifications.jsx","../../src/pages/mentions.jsx","../../src/pages/notifications.jsx","../../src/pages/public.jsx","../../src/pages/search.jsx","../../src/pages/trending.jsx","../../src/components/columns.jsx","../../src/pages/home.jsx","../../src/utils/get-instance-status-url.js","../../src/pages/http-route.jsx","../../src/pages/lists.jsx","../../src/data/instances.json?url","../../src/utils/auth.js","../../src/pages/login.jsx","../../src/pages/status.jsx","../../src/pages/status-route.jsx","../../src/assets/features/boosts-carousel.jpg","../../src/assets/features/grouped-notifications.jpg","../../src/assets/features/multi-column.jpg","../../src/assets/features/multi-hashtag-timeline.jpg","../../src/assets/features/nested-comments-thread.jpg","../../src/assets/logo-text.svg","../../src/pages/welcome.jsx","../../src/utils/toast-alert.js","../../src/app.jsx","../../src/main.jsx"],"sourcesContent":["var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","/*!\n * swiped-events.js - v@version@\n * Pure JavaScript swipe events\n * https://github.com/john-doherty/swiped-events\n * @inspiration https://stackoverflow.com/questions/16348031/disable-scrolling-when-touch-moving-certain-element\n * @author John Doherty <www.johndoherty.info>\n * @license MIT\n */\n(function (window, document) {\n\n    'use strict';\n\n    // patch CustomEvent to allow constructor creation (IE/Chrome)\n    if (typeof window.CustomEvent !== 'function') {\n\n        window.CustomEvent = function (event, params) {\n\n            params = params || { bubbles: false, cancelable: false, detail: undefined };\n\n            var evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n            return evt;\n        };\n\n        window.CustomEvent.prototype = window.Event.prototype;\n    }\n\n    document.addEventListener('touchstart', handleTouchStart, false);\n    document.addEventListener('touchmove', handleTouchMove, false);\n    document.addEventListener('touchend', handleTouchEnd, false);\n\n    var xDown = null;\n    var yDown = null;\n    var xDiff = null;\n    var yDiff = null;\n    var timeDown = null;\n    var startEl = null;\n    var touchCount = 0;\n\n    /**\n     * Fires swiped event if swipe detected on touchend\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchEnd(e) {\n\n        // if the user released on a different target, cancel!\n        if (startEl !== e.target) return;\n\n        var swipeThreshold = parseInt(getNearestAttribute(startEl, 'data-swipe-threshold', '20'), 10); // default 20 units\n        var swipeUnit = getNearestAttribute(startEl, 'data-swipe-unit', 'px'); // default px\n        var swipeTimeout = parseInt(getNearestAttribute(startEl, 'data-swipe-timeout', '500'), 10);    // default 500ms\n        var timeDiff = Date.now() - timeDown;\n        var eventType = '';\n        var changedTouches = e.changedTouches || e.touches || [];\n\n        if (swipeUnit === 'vh') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientHeight); // get percentage of viewport height in pixels\n        }\n        if (swipeUnit === 'vw') {\n            swipeThreshold = Math.round((swipeThreshold / 100) * document.documentElement.clientWidth); // get percentage of viewport height in pixels\n        }\n\n        if (Math.abs(xDiff) > Math.abs(yDiff)) { // most significant\n            if (Math.abs(xDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n                if (xDiff > 0) {\n                    eventType = 'swiped-left';\n                }\n                else {\n                    eventType = 'swiped-right';\n                }\n            }\n        }\n        else if (Math.abs(yDiff) > swipeThreshold && timeDiff < swipeTimeout) {\n            if (yDiff > 0) {\n                eventType = 'swiped-up';\n            }\n            else {\n                eventType = 'swiped-down';\n            }\n        }\n\n        if (eventType !== '') {\n\n            var eventData = {\n                dir: eventType.replace(/swiped-/, ''),\n                touchType: (changedTouches[0] || {}).touchType || 'direct',\n                fingers: touchCount, // Number of fingers used\n                xStart: parseInt(xDown, 10),\n                xEnd: parseInt((changedTouches[0] || {}).clientX || -1, 10),\n                yStart: parseInt(yDown, 10),\n                yEnd: parseInt((changedTouches[0] || {}).clientY || -1, 10)\n            };\n\n            // fire `swiped` event event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent('swiped', { bubbles: true, cancelable: true, detail: eventData }));\n\n            // fire `swiped-dir` event on the element that started the swipe\n            startEl.dispatchEvent(new CustomEvent(eventType, { bubbles: true, cancelable: true, detail: eventData }));\n        }\n\n        // reset values\n        xDown = null;\n        yDown = null;\n        timeDown = null;\n    }\n    /**\n     * Records current location on touchstart event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchStart(e) {\n\n        // if the element has data-swipe-ignore=\"true\" we stop listening for swipe events\n        if (e.target.getAttribute('data-swipe-ignore') === 'true') return;\n\n        startEl = e.target;\n\n        timeDown = Date.now();\n        xDown = e.touches[0].clientX;\n        yDown = e.touches[0].clientY;\n        xDiff = 0;\n        yDiff = 0;\n        touchCount = e.touches.length;\n    }\n\n    /**\n     * Records location diff in px on touchmove event\n     * @param {object} e - browser event object\n     * @returns {void}\n     */\n    function handleTouchMove(e) {\n\n        if (!xDown || !yDown) return;\n\n        var xUp = e.touches[0].clientX;\n        var yUp = e.touches[0].clientY;\n\n        xDiff = xDown - xUp;\n        yDiff = yDown - yUp;\n    }\n\n    /**\n     * Gets attribute off HTML element or nearest parent\n     * @param {object} el - HTML element to retrieve attribute from\n     * @param {string} attributeName - name of the attribute\n     * @param {any} defaultValue - default value to return if no match found\n     * @returns {any} attribute value or defaultValue\n     */\n    function getNearestAttribute(el, attributeName, defaultValue) {\n\n        // walk up the dom tree looking for attributeName\n        while (el && el !== document.documentElement) {\n\n            var attributeValue = el.getAttribute(attributeName);\n\n            if (attributeValue) {\n                return attributeValue;\n            }\n\n            el = el.parentNode;\n        }\n\n        return defaultValue;\n    }\n\n}(window, document));\n","import { useEffect, useRef } from 'preact/hooks';\n\nexport default function usePageVisibility(fn = () => {}, deps = []) {\n  const savedCallback = useRef(fn);\n  useEffect(() => {\n    savedCallback.current = fn;\n  }, [deps]);\n\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      const hidden = document.hidden || document.visibilityState === 'hidden';\n      console.log('👀 Page visibility changed', hidden ? 'hidden' : 'visible');\n      savedCallback.current(!hidden);\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () =>\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, []);\n}\n","import { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nconst STREAMING_TIMEOUT = 1000 * 3; // 3 seconds\nconst POLL_INTERVAL = 20_000; // 20 seconds\n\nexport default memo(function BackgroundService({ isLoggedIn }) {\n  // Notifications service\n  // - WebSocket to receive notifications when page is visible\n  const [visible, setVisible] = useState(true);\n  usePageVisibility(setVisible);\n  const checkLatestNotification = async (masto, instance, skipCheckMarkers) => {\n    if (states.notificationsLast) {\n      const notificationsIterator = masto.v1.notifications.list({\n        limit: 1,\n        sinceId: states.notificationsLast.id,\n      });\n      const { value: notifications } = await notificationsIterator.next();\n      if (notifications?.length) {\n        if (skipCheckMarkers) {\n          states.notificationsShowNew = true;\n        } else {\n          let lastReadId;\n          try {\n            const markers = await masto.v1.markers.fetch({\n              timeline: 'notifications',\n            });\n            lastReadId = markers?.notifications?.lastReadId;\n          } catch (e) {}\n          if (lastReadId) {\n            states.notificationsShowNew = notifications[0].id !== lastReadId;\n          } else {\n            states.notificationsShowNew = true;\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    let sub;\n    let streamTimeout;\n    let pollNotifications;\n    if (isLoggedIn && visible) {\n      const { masto, streaming, instance } = api();\n      (async () => {\n        // 1. Get the latest notification\n        await checkLatestNotification(masto, instance);\n\n        let hasStreaming = false;\n        // 2. Start streaming\n        if (streaming) {\n          streamTimeout = setTimeout(() => {\n            (async () => {\n              try {\n                hasStreaming = true;\n                sub = streaming.user.notification.subscribe();\n                console.log('🎏 Streaming notification', sub);\n                for await (const entry of sub) {\n                  if (!sub) break;\n                  if (!visible) break;\n                  console.log('🔔🔔 Notification entry', entry);\n                  if (entry.event === 'notification') {\n                    console.log('🔔🔔 Notification', entry);\n                    saveStatus(entry.payload, instance, {\n                      skipThreading: true,\n                    });\n                  }\n                  states.notificationsShowNew = true;\n                }\n                console.log('💥 Streaming notification loop STOPPED');\n              } catch (e) {\n                hasStreaming = false;\n                console.error(e);\n              }\n\n              if (!hasStreaming) {\n                console.log('🎏 Streaming failed, fallback to polling');\n                pollNotifications = setInterval(() => {\n                  checkLatestNotification(masto, instance, true);\n                }, POLL_INTERVAL);\n              }\n            })();\n          }, STREAMING_TIMEOUT);\n        }\n      })();\n    }\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n      clearTimeout(streamTimeout);\n      clearInterval(pollNotifications);\n    };\n  }, [visible, isLoggedIn]);\n\n  // Check for updates service\n  const lastCheckDate = useRef();\n  const checkForUpdates = () => {\n    lastCheckDate.current = Date.now();\n    console.log('✨ Check app update');\n    fetch('./version.json')\n      .then((r) => r.json())\n      .then((info) => {\n        if (info) states.appVersion = info;\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  };\n  useInterval(checkForUpdates, visible && 1000 * 60 * 30); // 30 minutes\n  usePageVisibility((visible) => {\n    if (visible) {\n      if (!lastCheckDate.current) {\n        checkForUpdates();\n      } else {\n        const diff = Date.now() - lastCheckDate.current;\n        if (diff > 1000 * 60 * 60) {\n          // 1 hour\n          checkForUpdates();\n        }\n      }\n    }\n  });\n\n  // Global keyboard shortcuts \"service\"\n  useHotkeys('shift+alt+k', () => {\n    const currentCloakMode = states.settings.cloakMode;\n    states.settings.cloakMode = !currentCloakMode;\n    showToast({\n      text: currentCloakMode ? t`Cloak mode disabled` : t`Cloak mode enabled`,\n    });\n  });\n\n  return null;\n});\n","import { t, Trans } from '@lingui/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport openCompose from '../utils/open-compose';\nimport openOSK from '../utils/open-osk';\nimport states from '../utils/states';\n\nimport Icon from './icon';\n\nexport default function ComposeButton() {\n  const snapStates = useSnapshot(states);\n\n  function handleButton(e) {\n    if (snapStates.composerState.minimized) {\n      states.composerState.minimized = false;\n      openOSK();\n      return;\n    }\n\n    if (e.shiftKey) {\n      const newWin = openCompose();\n\n      if (!newWin) {\n        states.showCompose = true;\n      }\n    } else {\n      openOSK();\n      states.showCompose = true;\n    }\n  }\n\n  useHotkeys('c, shift+c', handleButton, {\n    ignoreEventWhen: (e) => {\n      const hasModal = !!document.querySelector('#modal-container > *');\n      return hasModal;\n    },\n  });\n\n  return (\n    <button\n      type=\"button\"\n      id=\"compose-button\"\n      onClick={handleButton}\n      class={`${snapStates.composerState.minimized ? 'min' : ''} ${\n        snapStates.composerState.publishing ? 'loading' : ''\n      } ${snapStates.composerState.publishingError ? 'error' : ''}`}\n    >\n      <Icon icon=\"quill\" size=\"xl\" alt={t`Compose`} />\n    </button>\n  );\n}\n","import './keyboard-shortcuts-help.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Modal from './modal';\n\nexport default memo(function KeyboardShortcutsHelp() {\n  const snapStates = useSnapshot(states);\n\n  function onClose() {\n    states.showKeyboardShortcutsHelp = false;\n  }\n\n  useHotkeys(\n    '?, shift+?, shift+slash',\n    (e) => {\n      console.log('help');\n      states.showKeyboardShortcutsHelp = true;\n    },\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n\n  return (\n    !!snapStates.showKeyboardShortcutsHelp && (\n      <Modal onClose={onClose}>\n        <div id=\"keyboard-shortcuts-help-container\" class=\"sheet\" tabindex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <h2>\n              <Trans>Keyboard shortcuts</Trans>\n            </h2>\n          </header>\n          <main>\n            <table>\n              <tbody>\n                {[\n                  {\n                    action: t`Keyboard shortcuts help`,\n                    keys: <kbd>?</kbd>,\n                  },\n                  {\n                    action: t`Next post`,\n                    keys: <kbd>j</kbd>,\n                  },\n                  {\n                    action: t`Previous post`,\n                    keys: <kbd>k</kbd>,\n                  },\n                  {\n                    action: t`Skip carousel to next post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>j</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Skip carousel to previous post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Load new posts`,\n                    keys: <kbd>.</kbd>,\n                  },\n                  {\n                    action: t`Open post details`,\n                    keys: (\n                      <Trans>\n                        <kbd>Enter</kbd> or <kbd>o</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: (\n                      <Trans>\n                        Expand content warning or\n                        <br />\n                        toggle expanded/collapsed thread\n                      </Trans>\n                    ),\n                    keys: <kbd>x</kbd>,\n                  },\n                  {\n                    action: t`Close post or dialogs`,\n                    keys: (\n                      <Trans>\n                        <kbd>Esc</kbd> or <kbd>Backspace</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Focus column in multi-column mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>1</kbd> to <kbd>9</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Compose new post`,\n                    keys: <kbd>c</kbd>,\n                  },\n                  {\n                    action: t`Compose new post (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>c</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Send post`,\n                    keys: (\n                      <Trans>\n                        <kbd>Ctrl</kbd> + <kbd>Enter</kbd> or <kbd>⌘</kbd> +{' '}\n                        <kbd>Enter</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Search`,\n                    keys: <kbd>/</kbd>,\n                  },\n                  {\n                    action: t`Reply`,\n                    keys: <kbd>r</kbd>,\n                  },\n                  {\n                    action: t`Reply (new window)`,\n                    className: 'insignificant',\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>r</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Like (favourite)`,\n                    keys: (\n                      <Trans>\n                        <kbd>l</kbd> or <kbd>f</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Boost`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>b</kbd>\n                      </Trans>\n                    ),\n                  },\n                  {\n                    action: t`Bookmark`,\n                    keys: <kbd>d</kbd>,\n                  },\n                  {\n                    action: t`Toggle Cloak mode`,\n                    keys: (\n                      <Trans>\n                        <kbd>Shift</kbd> + <kbd>Alt</kbd> + <kbd>k</kbd>\n                      </Trans>\n                    ),\n                  },\n                ].map(({ action, className, keys }) => (\n                  <tr key={action}>\n                    <th class={className}>{action}</th>\n                    <td>{keys}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </main>\n        </div>\n      </Modal>\n    )\n  );\n});\n","/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * Ensure the browser is supported.\n */\nconst supportedBrowser = typeof window !== \"undefined\" && \"ResizeObserver\" in window;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (supportedBrowser) {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useRef, useState, useEffect } from 'preact/hooks';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to preact.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const element = useRef(null);\n    const [controller, setController] = useState();\n    const setEnabled = (enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    };\n    useEffect(() => {\n        if (element.current instanceof HTMLElement)\n            setController(autoAnimate(element.current, options || {}));\n    }, []);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n","import './accounts.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useReducer } from 'preact/hooks';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, setCurrentAccountID } from '../utils/store-utils';\n\nfunction Accounts({ onClose }) {\n  const { masto } = api();\n  // Accounts\n  const accounts = store.local.getJSON('accounts');\n  const currentAccount = getCurrentAccountID();\n  const moreThanOneAccount = accounts.length > 1;\n\n  const [_, reload] = useReducer((x) => x + 1, 0);\n  const [accountsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"accounts-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Accounts</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul class=\"accounts-list\" ref={accountsListParent}>\n            {accounts.map((account, i) => {\n              const isCurrent = account.info.id === currentAccount;\n              const isDefault = i === 0; // first account is always default\n              return (\n                <li key={account.info.id}>\n                  <div>\n                    {moreThanOneAccount && (\n                      <span class={`current ${isCurrent ? 'is-current' : ''}`}>\n                        <Icon icon=\"check-circle\" alt={t`Current`} />\n                      </span>\n                    )}\n                    <Avatar\n                      url={account.info.avatarStatic}\n                      size=\"xxl\"\n                      onDblClick={async () => {\n                        if (isCurrent) {\n                          try {\n                            const info = await masto.v1.accounts\n                              .$select(account.info.id)\n                              .fetch();\n                            console.log('fetched account info', info);\n                            account.info = info;\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          } catch (e) {}\n                        }\n                      }}\n                    />\n                    <NameText\n                      account={\n                        moreThanOneAccount\n                          ? {\n                              ...account.info,\n                              acct: /@/.test(account.info.acct)\n                                ? account.info.acct\n                                : `${account.info.acct}@${account.instanceURL}`,\n                            }\n                          : account.info\n                      }\n                      showAcct\n                      onClick={() => {\n                        if (isCurrent) {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        } else {\n                          setCurrentAccountID(account.info.id);\n                          location.reload();\n                        }\n                      }}\n                    />\n                  </div>\n                  <div class=\"actions\">\n                    {isDefault && moreThanOneAccount && (\n                      <>\n                        <span class=\"tag\">\n                          <Trans>Default</Trans>\n                        </span>{' '}\n                      </>\n                    )}\n                    <Menu2\n                      align=\"end\"\n                      menuButton={\n                        <button type=\"button\" class=\"plain more-button\">\n                          <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                        </button>\n                      }\n                    >\n                      <MenuItem\n                        onClick={() => {\n                          states.showAccount = `${account.info.username}@${account.instanceURL}`;\n                        }}\n                      >\n                        <Icon icon=\"user\" />\n                        <span>\n                          <Trans>View profile…</Trans>\n                        </span>\n                      </MenuItem>\n                      <MenuDivider />\n                      {moreThanOneAccount && (\n                        <MenuItem\n                          disabled={isDefault}\n                          onClick={() => {\n                            // Move account to the top of the list\n                            accounts.splice(i, 1);\n                            accounts.unshift(account);\n                            store.local.setJSON('accounts', accounts);\n                            reload();\n                          }}\n                        >\n                          <Icon icon=\"check-circle\" />\n                          <span>\n                            <Trans>Set as default</Trans>\n                          </span>\n                        </MenuItem>\n                      )}\n                      <MenuConfirm\n                        subMenu\n                        confirmLabel={\n                          <>\n                            <Icon icon=\"exit\" />\n                            <span>\n                              <Trans>\n                                Log out{' '}\n                                <span class=\"bidi-isolate\">\n                                  @{account.info.acct}\n                                </span>\n                                ?\n                              </Trans>\n                            </span>\n                          </>\n                        }\n                        disabled={!isCurrent}\n                        menuItemClassName=\"danger\"\n                        onClick={() => {\n                          // const yes = confirm('Log out?');\n                          // if (!yes) return;\n                          accounts.splice(i, 1);\n                          store.local.setJSON('accounts', accounts);\n                          // location.reload();\n                          location.href = location.pathname || '/';\n                        }}\n                      >\n                        <Icon icon=\"exit\" />\n                        <span>\n                          <Trans>Log out…</Trans>\n                        </span>\n                      </MenuConfirm>\n                    </Menu2>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n          <p>\n            <Link to=\"/login\" class=\"button plain2\" onClick={onClose}>\n              <Icon icon=\"plus\" />{' '}\n              <span>\n                <Trans>Add an existing account</Trans>\n              </span>\n            </Link>\n          </p>\n          {moreThanOneAccount && (\n            <p>\n              <small>\n                <Trans>\n                  Note: <i>Default</i> account will always be used for first\n                  load. Switched accounts will persist during the session.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Accounts;\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%2064%2064'%3e%3cpath%20fill='none'%20d='M0%200h63.994v63.994H0z'/%3e%3cpath%20fill='%23a4bff7'%20d='M37.774%2011.471c14.639%203.752%2019.034%2016.557%2015.889%2031.304-.696%203.261-2.563%206.661-6.356%208.693-3.204%201.717-8.07%202.537-15.338.55l-9.634-2.404C11.651%2046.992%208.378%2038.733%2010.027%2031.823c3.627-15.201%2015.543-23.48%2027.747-20.352Z'/%3e%3cpath%20fill='%23d8e7fe'%20d='M36.76%2015.429c12.289%203.15%2015.547%2014.114%2012.907%2026.493-.947%204.44-4.937%209.365-16.664%206.143l-9.684-2.417c-7.854-1.923-10.53-7.8-9.318-12.877%203.016-12.639%2012.611-19.943%2022.759-17.342Z'/%3e%3cpath%20fill='%236081e6'%20d='M27.471%2024.991c-1.457-.698-7.229%203.213-7.663%208.926-.182%202.39%204.55%203.237%205.071-.169.725-4.743%203.715-8.218%202.592-8.757Zm10.746%202.005c-2.083.327-.382%205.901-.595%2010.727-.123%202.8%204.388%203.464%204.703%202.011%201.098-5.073-2.066-13.058-4.108-12.738Z'/%3e%3c/svg%3e\"","import { useLingui } from '@lingui/react';\nimport { useMemo } from 'preact/hooks';\n\nimport { CATALOGS, DEFAULT_LANG, DEV_LOCALES, LOCALES } from '../locales';\nimport { activateLang } from '../utils/lang';\nimport localeCode2Text from '../utils/localeCode2Text';\n\nconst regionMaps = {\n  'zh-CN': 'zh-Hans',\n  'zh-TW': 'zh-Hant',\n};\n\nexport default function LangSelector() {\n  const { i18n } = useLingui();\n\n  // Sorted on render, so the order won't suddenly change based on current locale\n  const populatedLocales = useMemo(() => {\n    return LOCALES.map((lang) => {\n      // Don't need regions for now, it makes text too noisy\n      // Wait till there's too many languages and there are regional clashes\n      const regionlessCode = regionMaps[lang] || lang.replace(/-[a-z]+$/i, '');\n\n      const native = localeCode2Text({\n        code: regionlessCode,\n        locale: lang,\n        fallback: CATALOGS.find((c) => c.code === lang)?.nativeName,\n      });\n\n      // Not used when rendering because it'll change based on current locale\n      // Only used for sorting on render\n      const _common = localeCode2Text({\n        code: regionlessCode,\n        locale: i18n.locale,\n        fallback: CATALOGS.find((c) => c.code === lang)?.name,\n      });\n\n      return {\n        code: lang,\n        regionlessCode,\n        _common,\n        native,\n      };\n    }).sort((a, b) => {\n      // Sort by common name\n      const order = a._common.localeCompare(b._common, i18n.locale);\n      if (order !== 0) return order;\n      // Sort by code (fallback)\n      if (a.code < b.code) return -1;\n      if (a.code > b.code) return 1;\n      return 0;\n    });\n  }, []);\n\n  return (\n    <label class=\"lang-selector\">\n      🌐{' '}\n      <select\n        class=\"small\"\n        value={i18n.locale || DEFAULT_LANG}\n        onChange={(e) => {\n          localStorage.setItem('lang', e.target.value);\n          activateLang(e.target.value);\n        }}\n      >\n        {populatedLocales.map(({ code, regionlessCode, native }) => {\n          // Common name changes based on current locale\n          const common = localeCode2Text({\n            code: regionlessCode,\n            locale: i18n.locale,\n            fallback: CATALOGS.find((c) => c.code === code)?.name,\n          });\n          const showCommon = !!common && common !== native;\n          return (\n            <option\n              value={code}\n              data-regionless-code={regionlessCode}\n              key={code}\n            >\n              {showCommon ? `${native} - ${common}` : native}\n            </option>\n          );\n        })}\n        {(import.meta.env.DEV || import.meta.env.PHANPY_SHOW_DEV_LOCALES) && (\n          <optgroup label=\"🚧 Development (<50% translated)\">\n            {DEV_LOCALES.map((code) => {\n              if (code === 'pseudo-LOCALE') {\n                return (\n                  <>\n                    <hr />\n                    <option value={code} key={code}>\n                      Pseudolocalization (test)\n                    </option>\n                  </>\n                );\n              }\n              const nativeName = CATALOGS.find(\n                (c) => c.code === code,\n              )?.nativeName;\n              const completion = CATALOGS.find(\n                (c) => c.code === code,\n              )?.completion;\n              return (\n                <option value={code} key={code}>\n                  {nativeName || code} &lrm;[{completion}%]\n                </option>\n              );\n            })}\n          </optgroup>\n        )}\n      </select>\n    </label>\n  );\n}\n","// Utils for push notifications\nimport { api } from './api';\nimport { getCurrentAccount } from './store-utils';\n\n// Subscription is an object with the following structure:\n// {\n//   data: {\n//     alerts: {\n//       admin: {\n//         report: boolean,\n//         signUp: boolean,\n//       },\n//       favourite: boolean,\n//       follow: boolean,\n//       mention: boolean,\n//       poll: boolean,\n//       reblog: boolean,\n//       status: boolean,\n//       update: boolean,\n//     }\n//   },\n//   policy: \"all\" | \"followed\" | \"follower\" | \"none\",\n//   subscription: {\n//     endpoint: string,\n//     keys: {\n//       auth: string,\n//       p256dh: string,\n//     },\n//   },\n// }\n\n// Back-end CRUD\n// =============\n\nfunction createBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.create(subscription);\n}\n\nfunction fetchBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.fetch();\n}\n\nfunction updateBackendPushSubscription(subscription) {\n  const { masto } = api();\n  return masto.v1.push.subscription.update(subscription);\n}\n\nfunction removeBackendPushSubscription() {\n  const { masto } = api();\n  return masto.v1.push.subscription.remove();\n}\n\n// Front-end\n// =========\n\nexport function isPushSupported() {\n  return 'serviceWorker' in navigator && 'PushManager' in window;\n}\n\nexport function getRegistration() {\n  // return navigator.serviceWorker.ready;\n  return navigator.serviceWorker.getRegistration();\n}\n\nasync function getSubscription() {\n  const registration = await getRegistration();\n  const subscription = registration\n    ? await registration.pushManager.getSubscription()\n    : undefined;\n  return { registration, subscription };\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = `${base64String}${padding}`\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = window.atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\n// Front-end <-> back-end\n// ======================\n\nexport async function initSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  let backendSubscription = null;\n  try {\n    backendSubscription = await fetchBackendPushSubscription();\n  } catch (err) {\n    if (/(not found|unknown)/i.test(err.message)) {\n      // No subscription found\n    } else {\n      // Other error\n      throw err;\n    }\n  }\n  console.log('INIT subscription', {\n    subscription,\n    backendSubscription,\n  });\n\n  // Check if the subscription changed\n  if (backendSubscription && subscription) {\n    const sameEndpoint = backendSubscription.endpoint === subscription.endpoint;\n    const { vapidKey } = getCurrentAccount();\n    const sameKey = backendSubscription.serverKey === vapidKey;\n    if (!sameEndpoint) {\n      throw new Error('Backend subscription endpoint changed');\n    }\n    if (sameKey) {\n      // Subscription didn't change\n    } else {\n      // Subscription changed\n      console.error('🔔 Subscription changed', {\n        sameEndpoint,\n        serverKey: backendSubscription.serverKey,\n        vapIdKey: vapidKey,\n        endpoint1: backendSubscription.endpoint,\n        endpoint2: subscription.endpoint,\n        sameKey,\n        key1: backendSubscription.serverKey,\n        key2: vapidKey,\n      });\n      throw new Error('Backend subscription key and vapid key changed');\n      // Only unsubscribe from backend, not from browser\n      // await removeBackendPushSubscription();\n      // // Now let's resubscribe\n      // // NOTE: I have no idea if this works\n      // return await updateSubscription({\n      //   data: backendSubscription.data,\n      //   policy: backendSubscription.policy,\n      // });\n    }\n  }\n\n  if (subscription && !backendSubscription) {\n    // check if account's vapidKey is same as subscription's applicationServerKey\n    const { vapidKey } = getCurrentAccount();\n    if (vapidKey) {\n      const { applicationServerKey } = subscription.options;\n      const vapidKeyStr = urlBase64ToUint8Array(vapidKey).toString();\n      const applicationServerKeyStr = new Uint8Array(\n        applicationServerKey,\n      ).toString();\n      const sameKey = vapidKeyStr === applicationServerKeyStr;\n      if (sameKey) {\n        // Subscription didn't change\n      } else {\n        // Subscription changed\n        console.error('🔔 Subscription changed', {\n          vapidKeyStr,\n          applicationServerKeyStr,\n          sameKey,\n        });\n        // Unsubscribe since backend doesn't have a subscription\n        await subscription.unsubscribe();\n        throw new Error('Subscription key and vapid key changed');\n      }\n    } else {\n      console.warn('No vapidKey found');\n    }\n  }\n\n  // Check if backend subscription returns 404\n  // if (subscription && !backendSubscription) {\n  //   // Re-subscribe to backend\n  //   backendSubscription = await createBackendPushSubscription({\n  //     subscription,\n  //     data: {},\n  //     policy: 'all',\n  //   });\n  // }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function updateSubscription({ data, policy }) {\n  console.log('🔔 Updating subscription', { data, policy });\n  if (!isPushSupported()) return;\n  let { registration, subscription } = await getSubscription();\n  let backendSubscription = null;\n\n  if (subscription) {\n    try {\n      backendSubscription = await updateBackendPushSubscription({\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    } catch (error) {\n      // Backend doesn't have a subscription for this user\n      // Create a new one\n      backendSubscription = await createBackendPushSubscription({\n        subscription,\n        data,\n        policy,\n      });\n      // TODO: save subscription in user settings\n    }\n  } else {\n    // User is not subscribed\n    const { vapidKey } = getCurrentAccount();\n    if (!vapidKey) throw new Error('No server key found');\n    subscription = await registration.pushManager.subscribe({\n      userVisibleOnly: true,\n      applicationServerKey: urlBase64ToUint8Array(vapidKey),\n    });\n    backendSubscription = await createBackendPushSubscription({\n      subscription,\n      data,\n      policy,\n    });\n    // TODO: save subscription in user settings\n  }\n\n  return { subscription, backendSubscription };\n}\n\nexport async function removeSubscription() {\n  if (!isPushSupported()) return;\n  const { subscription } = await getSubscription();\n  if (subscription) {\n    await removeBackendPushSubscription();\n    await subscription.unsubscribe();\n  }\n}\n","import './settings.css';\n\nimport { Plural, t, Trans } from '@lingui/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport logo from '../assets/logo.svg';\n\nimport Icon from '../components/icon';\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport RelativeTime from '../components/relative-time';\nimport targetLanguages from '../data/lingva-target-languages';\nimport { api } from '../utils/api';\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeCode2Text from '../utils/localeCode2Text';\nimport {\n  initSubscription,\n  isPushSupported,\n  removeSubscription,\n  updateSubscription,\n} from '../utils/push-notifications';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport supports from '../utils/supports';\n\nconst DEFAULT_TEXT_SIZE = 16;\nconst TEXT_SIZES = [14, 15, 16, 17, 18, 19, 20];\nconst {\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL,\n  PHANPY_GIPHY_API_KEY: GIPHY_API_KEY,\n} = import.meta.env;\n\nfunction Settings({ onClose }) {\n  const snapStates = useSnapshot(states);\n  const currentTheme = store.local.get('theme') || 'auto';\n  const themeFormRef = useRef();\n  const targetLanguage =\n    snapStates.settings.contentTranslationTargetLanguage || null;\n  const systemTargetLanguage = getTranslateTargetLanguage();\n  const systemTargetLanguageText = localeCode2Text(systemTargetLanguage);\n  const currentTextSize = store.local.get('textSize') || DEFAULT_TEXT_SIZE;\n\n  const [prefs, setPrefs] = useState(store.account.get('preferences') || {});\n  const { masto, authenticated, instance } = api();\n  // Get preferences every time Settings is opened\n  // NOTE: Disabled for now because I don't expect this to change often. Also for some reason, the /api/v1/preferences endpoint is cached for a while and return old prefs if refresh immediately after changing them.\n  // useEffect(() => {\n  //   const { masto } = api();\n  //   (async () => {\n  //     try {\n  //       const preferences = await masto.v1.preferences.fetch();\n  //       setPrefs(preferences);\n  //       store.account.set('preferences', preferences);\n  //     } catch (e) {\n  //       // Silently fail\n  //       console.error(e);\n  //     }\n  //   })();\n  // }, []);\n\n  return (\n    <div id=\"settings-container\" class=\"sheet\" tabIndex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Settings</Trans>\n        </h2>\n      </header>\n      <main>\n        <section>\n          <ul>\n            <li>\n              <div>\n                <label>\n                  <Trans>Appearance</Trans>\n                </label>\n              </div>\n              <div>\n                <form\n                  ref={themeFormRef}\n                  onInput={(e) => {\n                    console.log(e);\n                    e.preventDefault();\n                    const formData = new FormData(themeFormRef.current);\n                    const theme = formData.get('theme');\n                    const html = document.documentElement;\n\n                    if (theme === 'auto') {\n                      html.classList.remove('is-light', 'is-dark');\n\n                      // Disable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = '';\n                      }\n                      // Enable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = 'theme-color';\n                      });\n                    } else {\n                      html.classList.toggle('is-light', theme === 'light');\n                      html.classList.toggle('is-dark', theme === 'dark');\n\n                      // Enable manual theme <meta>\n                      const $manualMeta = document.querySelector(\n                        'meta[data-theme-setting=\"manual\"]',\n                      );\n                      if ($manualMeta) {\n                        $manualMeta.name = 'theme-color';\n                        $manualMeta.content =\n                          theme === 'light'\n                            ? $manualMeta.dataset.themeLightColor\n                            : $manualMeta.dataset.themeDarkColor;\n                      }\n                      // Disable auto theme <meta>s\n                      const $autoMetas = document.querySelectorAll(\n                        'meta[data-theme-setting=\"auto\"]',\n                      );\n                      $autoMetas.forEach((m) => {\n                        m.name = '';\n                      });\n                    }\n                    document\n                      .querySelector('meta[name=\"color-scheme\"]')\n                      .setAttribute(\n                        'content',\n                        theme === 'auto' ? 'dark light' : theme,\n                      );\n\n                    if (theme === 'auto') {\n                      store.local.del('theme');\n                    } else {\n                      store.local.set('theme', theme);\n                    }\n                  }}\n                >\n                  <div class=\"radio-group\">\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"light\"\n                        defaultChecked={currentTheme === 'light'}\n                      />\n                      <span>\n                        <Trans>Light</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"dark\"\n                        defaultChecked={currentTheme === 'dark'}\n                      />\n                      <span>\n                        <Trans>Dark</Trans>\n                      </span>\n                    </label>\n                    <label>\n                      <input\n                        type=\"radio\"\n                        name=\"theme\"\n                        value=\"auto\"\n                        defaultChecked={\n                          currentTheme !== 'light' && currentTheme !== 'dark'\n                        }\n                      />\n                      <span>\n                        <Trans>Auto</Trans>\n                      </span>\n                    </label>\n                  </div>\n                </form>\n              </div>\n            </li>\n            <li>\n              <div>\n                <label>\n                  <Trans>Text size</Trans>\n                </label>\n              </div>\n              <div class=\"range-group\">\n                <span style={{ fontSize: TEXT_SIZES[0] }}>\n                  <Trans comment=\"Preview of one character, in smallest size\">\n                    A\n                  </Trans>\n                </span>{' '}\n                <input\n                  type=\"range\"\n                  min={TEXT_SIZES[0]}\n                  max={TEXT_SIZES[TEXT_SIZES.length - 1]}\n                  step=\"1\"\n                  value={currentTextSize}\n                  list=\"sizes\"\n                  onChange={(e) => {\n                    const value = parseInt(e.target.value, 10);\n                    const html = document.documentElement;\n                    // set CSS variable\n                    html.style.setProperty('--text-size', `${value}px`);\n                    // save to local storage\n                    if (value === DEFAULT_TEXT_SIZE) {\n                      store.local.del('textSize');\n                    } else {\n                      store.local.set('textSize', e.target.value);\n                    }\n                  }}\n                />{' '}\n                <span style={{ fontSize: TEXT_SIZES[TEXT_SIZES.length - 1] }}>\n                  <Trans comment=\"Preview of one character, in largest size\">\n                    A\n                  </Trans>\n                </span>\n                <datalist id=\"sizes\">\n                  {TEXT_SIZES.map((size) => (\n                    <option value={size} />\n                  ))}\n                </datalist>\n              </div>\n            </li>\n            <li>\n              <label>\n                <Trans>Display language</Trans>\n              </label>\n              <LangSelector />\n            </li>\n          </ul>\n        </section>\n        {authenticated && (\n          <>\n            <h3>\n              <Trans>Posting</Trans>\n            </h3>\n            <section>\n              <ul>\n                <li>\n                  <div>\n                    <label for=\"posting-privacy-field\">\n                      <Trans>Default visibility</Trans>{' '}\n                      <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />\n                    </label>\n                  </div>\n                  <div>\n                    <select\n                      id=\"posting-privacy-field\"\n                      value={prefs['posting:default:visibility'] || 'public'}\n                      onChange={(e) => {\n                        const { value } = e.target;\n                        (async () => {\n                          try {\n                            await masto.v1.accounts.updateCredentials({\n                              source: {\n                                privacy: value,\n                              },\n                            });\n                            setPrefs({\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                            store.account.set('preferences', {\n                              ...prefs,\n                              'posting:default:visibility': value,\n                            });\n                          } catch (e) {\n                            alert(t`Failed to update posting privacy`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <option value=\"public\">\n                        <Trans>Public</Trans>\n                      </option>\n                      <option value=\"unlisted\">\n                        <Trans>Unlisted</Trans>\n                      </option>\n                      <option value=\"private\">\n                        <Trans>Followers only</Trans>\n                      </option>\n                    </select>\n                  </div>\n                </li>\n              </ul>\n            </section>\n            <p class=\"section-postnote\">\n              <Icon icon=\"cloud\" alt={t`Synced`} class=\"synced-icon\" />{' '}\n              <small>\n                <Trans>\n                  Synced to your instance server's settings.{' '}\n                  <a\n                    href={`https://${instance}/`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Go to your instance ({instance}) for more settings.\n                  </a>\n                </Trans>\n              </small>\n            </p>\n          </>\n        )}\n        <h3>\n          <Trans>Experiments</Trans>\n        </h3>\n        <section>\n          <ul>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.autoRefresh}\n                  onChange={(e) => {\n                    states.settings.autoRefresh = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Auto refresh timeline posts</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.boostsCarousel}\n                  onChange={(e) => {\n                    states.settings.boostsCarousel = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>Boosts carousel</Trans>\n              </label>\n            </li>\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.contentTranslation}\n                  onChange={(e) => {\n                    const { checked } = e.target;\n                    states.settings.contentTranslation = checked;\n                    if (!checked) {\n                      states.settings.contentTranslationTargetLanguage = null;\n                    }\n                  }}\n                />{' '}\n                <Trans>Post translation</Trans>\n              </label>\n              <div\n                class={`sub-section ${\n                  !snapStates.settings.contentTranslation\n                    ? 'more-insignificant'\n                    : ''\n                }`}\n              >\n                <div>\n                  <label>\n                    <Trans>Translate to </Trans>{' '}\n                    <select\n                      value={targetLanguage || ''}\n                      disabled={!snapStates.settings.contentTranslation}\n                      style={{ width: '10em' }}\n                      onChange={(e) => {\n                        states.settings.contentTranslationTargetLanguage =\n                          e.target.value || null;\n                      }}\n                    >\n                      <option value=\"\">\n                        <Trans>\n                          System language ({systemTargetLanguageText})\n                        </Trans>\n                      </option>\n                      <option disabled>──────────</option>\n                      {targetLanguages.map((lang) => {\n                        const common = localeCode2Text({\n                          code: lang.code,\n                          fallback: lang.name,\n                        });\n                        const native = localeCode2Text({\n                          code: lang.code,\n                          locale: lang.code,\n                        });\n                        const showCommon = common !== native;\n                        return (\n                          <option value={lang.code}>\n                            {showCommon ? `${native} - ${common}` : common}\n                          </option>\n                        );\n                      })}\n                    </select>\n                  </label>\n                </div>\n                <hr />\n                <div class=\"checkbox-fieldset\">\n                  <Plural\n                    value={\n                      snapStates.settings.contentTranslationHideLanguages.length\n                    }\n                    _0={`Hide \"Translate\" button for:`}\n                    other={`Hide \"Translate\" button for (#):`}\n                  />\n                  <div class=\"checkbox-fields\">\n                    {targetLanguages.map((lang) => {\n                      const common = localeCode2Text({\n                        code: lang.code,\n                        fallback: lang.name,\n                      });\n                      const native = localeCode2Text({\n                        code: lang.code,\n                        locale: lang.code,\n                      });\n                      const showCommon = common !== native;\n                      return (\n                        <label>\n                          <input\n                            type=\"checkbox\"\n                            checked={snapStates.settings.contentTranslationHideLanguages.includes(\n                              lang.code,\n                            )}\n                            onChange={(e) => {\n                              const { checked } = e.target;\n                              if (checked) {\n                                states.settings.contentTranslationHideLanguages.push(\n                                  lang.code,\n                                );\n                              } else {\n                                states.settings.contentTranslationHideLanguages =\n                                  snapStates.settings.contentTranslationHideLanguages.filter(\n                                    (code) => code !== lang.code,\n                                  );\n                              }\n                            }}\n                          />{' '}\n                          {showCommon ? (\n                            <span>\n                              {native}{' '}\n                              <span class=\"insignificant\">- {common}</span>\n                            </span>\n                          ) : (\n                            common\n                          )}\n                        </label>\n                      );\n                    })}\n                  </div>\n                </div>\n                <p class=\"insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external translation services,\n                      powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/lingva-api\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Lingva API\n                      </a>{' '}\n                      &amp;{' '}\n                      <a\n                        href=\"https://github.com/thedaviddelta/lingva-translate\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        Lingva Translate\n                      </a>\n                      .\n                    </Trans>\n                  </small>\n                </p>\n                <hr />\n                <div>\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={snapStates.settings.contentTranslationAutoInline}\n                      disabled={!snapStates.settings.contentTranslation}\n                      onChange={(e) => {\n                        states.settings.contentTranslationAutoInline =\n                          e.target.checked;\n                      }}\n                    />{' '}\n                    <Trans>Auto inline translation</Trans>\n                  </label>\n                  <p class=\"insignificant\">\n                    <small>\n                      <Trans>\n                        Automatically show translation for posts in timeline.\n                        Only works for <b>short</b> posts without content\n                        warning, media and poll.\n                      </Trans>\n                    </small>\n                  </p>\n                </div>\n              </div>\n            </li>\n            {!!GIPHY_API_KEY && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.composerGIFPicker}\n                    onChange={(e) => {\n                      states.settings.composerGIFPicker = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>GIF Picker for composer</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external GIF search service,\n                      powered by{' '}\n                      <a\n                        href=\"https://developers.giphy.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        GIPHY\n                      </a>\n                      . G-rated (suitable for viewing by all ages), tracking\n                      parameters are stripped, referrer information is omitted\n                      from requests, but search queries and IP address\n                      information will still reach their servers.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {!!IMG_ALT_API_URL && authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.mediaAltGenerator}\n                    onChange={(e) => {\n                      states.settings.mediaAltGenerator = e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Image description generator</Trans>{' '}\n                  <Icon icon=\"sparkles2\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Only for new images while composing new posts.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses external AI service, powered by{' '}\n                      <a\n                        href=\"https://github.com/cheeaun/img-alt-api\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        img-alt-api\n                      </a>\n                      . May not work well. Only for images and in English.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && supports('@mastodon/grouped-notifications') && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={snapStates.settings.groupedNotificationsAlpha}\n                    onChange={(e) => {\n                      states.settings.groupedNotificationsAlpha =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>Server-side grouped notifications</Trans>\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Alpha-stage feature. Potentially improved grouping window\n                      but basic grouping logic.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            {authenticated && (\n              <li class=\"block\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      snapStates.settings.shortcutSettingsCloudImportExport\n                    }\n                    onChange={(e) => {\n                      states.settings.shortcutSettingsCloudImportExport =\n                        e.target.checked;\n                    }}\n                  />{' '}\n                  <Trans>\"Cloud\" import/export for shortcuts settings</Trans>{' '}\n                  <Icon icon=\"cloud\" class=\"more-insignificant\" />\n                </label>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      ⚠️⚠️⚠️ Very experimental.\n                      <br />\n                      Stored in your own profile’s notes. Profile (private)\n                      notes are mainly used for other profiles, and hidden for\n                      own profile.\n                    </Trans>\n                  </small>\n                </div>\n                <div class=\"sub-section insignificant\">\n                  <small>\n                    <Trans>\n                      Note: This feature uses currently-logged-in instance\n                      server API.\n                    </Trans>\n                  </small>\n                </div>\n              </li>\n            )}\n            <li class=\"block\">\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={snapStates.settings.cloakMode}\n                  onChange={(e) => {\n                    states.settings.cloakMode = e.target.checked;\n                  }}\n                />{' '}\n                <Trans>\n                  Cloak mode{' '}\n                  <span class=\"insignificant\">\n                    (<samp>Text</samp> → <samp>████</samp>)\n                  </span>\n                </Trans>\n              </label>\n              <div class=\"sub-section insignificant\">\n                <small>\n                  <Trans>\n                    Replace text as blocks, useful when taking screenshots, for\n                    privacy reasons.\n                  </Trans>\n                </small>\n              </div>\n            </li>\n            {authenticated && (\n              <li>\n                <button\n                  type=\"button\"\n                  class=\"light\"\n                  onClick={() => {\n                    states.showDrafts = true;\n                    states.showSettings = false;\n                  }}\n                >\n                  <Trans>Unsent drafts</Trans>\n                </button>\n              </li>\n            )}\n          </ul>\n        </section>\n        {authenticated && <PushNotificationsSection onClose={onClose} />}\n        <h3>\n          <Trans>About</Trans>\n        </h3>\n        <section>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 8,\n              lineHeight: 1.25,\n              alignItems: 'center',\n              marginTop: 8,\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"64\"\n              height=\"64\"\n              style={{\n                aspectRatio: '1/1',\n                verticalAlign: 'middle',\n                background: '#b7cdf9',\n                borderRadius: 12,\n              }}\n            />\n            <div>\n              <b>Phanpy</b>{' '}\n              <a\n                href=\"https://hachyderm.io/@phanpy\"\n                // target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  states.showAccount = 'phanpy@hachyderm.io';\n                }}\n              >\n                @phanpy\n              </a>\n              <br />\n              <Trans>\n                <a\n                  href=\"https://github.com/cheeaun/phanpy\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Built\n                </a>{' '}\n                by{' '}\n                <a\n                  href=\"https://mastodon.social/@cheeaun\"\n                  // target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = 'cheeaun@mastodon.social';\n                  }}\n                >\n                  @cheeaun\n                </a>\n              </Trans>\n            </div>\n          </div>\n          <p>\n            <a\n              href=\"https://github.com/sponsors/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Sponsor</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href=\"https://www.buymeacoffee.com/cheeaun\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Donate</Trans>\n            </a>{' '}\n            &middot;{' '}\n            <a\n              href={PRIVACY_POLICY_URL}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Privacy Policy</Trans>\n            </a>\n          </p>\n          {__BUILD_TIME__ && (\n            <p>\n              {WEBSITE && (\n                <>\n                  <Trans>\n                    <span class=\"insignificant\">Site:</span>{' '}\n                    {WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')}\n                  </Trans>\n                  <br />\n                </>\n              )}\n              <Trans>\n                <span class=\"insignificant\">Version:</span>{' '}\n                <input\n                  type=\"text\"\n                  class=\"version-string\"\n                  readOnly\n                  size=\"18\" // Manually calculated here\n                  value={`${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n                    __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n                  }`}\n                  onClick={(e) => {\n                    e.target.select();\n                    // Copy to clipboard\n                    try {\n                      navigator.clipboard.writeText(e.target.value);\n                      showToast(t`Version string copied`);\n                    } catch (e) {\n                      console.warn(e);\n                      showToast(t`Unable to copy version string`);\n                    }\n                  }}\n                />{' '}\n                {!__FAKE_COMMIT_HASH__ && (\n                  <span class=\"ib insignificant\">\n                    (\n                    <a\n                      href={`https://github.com/cheeaun/phanpy/commit/${__COMMIT_HASH__}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <RelativeTime datetime={new Date(__BUILD_TIME__)} />\n                    </a>\n                    )\n                  </span>\n                )}\n              </Trans>\n            </p>\n          )}\n        </section>\n      </main>\n    </div>\n  );\n}\n\nfunction PushNotificationsSection({ onClose }) {\n  if (!isPushSupported()) return null;\n\n  const { instance } = api();\n  const [uiState, setUIState] = useState('default');\n  const pushFormRef = useRef();\n  const [allowNotifications, setAllowNotifications] = useState(false);\n  const [needRelogin, setNeedRelogin] = useState(false);\n  const previousPolicyRef = useRef();\n  useEffect(() => {\n    (async () => {\n      setUIState('loading');\n      try {\n        const { subscription, backendSubscription } = await initSubscription();\n        if (\n          backendSubscription?.policy &&\n          backendSubscription.policy !== 'none'\n        ) {\n          setAllowNotifications(true);\n          const { alerts, policy } = backendSubscription;\n          console.log('backendSubscription', backendSubscription);\n          previousPolicyRef.current = policy;\n          const { elements } = pushFormRef.current;\n          const policyEl = elements.namedItem('policy');\n          if (policyEl) policyEl.value = policy;\n          // alerts is {}, iterate it\n          Object.keys(alerts).forEach((alert) => {\n            const el = elements.namedItem(alert);\n            if (el?.type === 'checkbox') {\n              el.checked = true;\n            }\n          });\n        }\n        setUIState('default');\n      } catch (err) {\n        console.warn(err);\n        if (/outside.*authorized/i.test(err.message)) {\n          setNeedRelogin(true);\n        } else {\n          alert(err?.message || err);\n        }\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  const isLoading = uiState === 'loading';\n\n  return (\n    <form\n      ref={pushFormRef}\n      onChange={() => {\n        setTimeout(() => {\n          const values = Object.fromEntries(new FormData(pushFormRef.current));\n          const allowNotifications = !!values['policy-allow'];\n          const params = {\n            data: {\n              policy: values.policy,\n              alerts: {\n                mention: !!values.mention,\n                favourite: !!values.favourite,\n                reblog: !!values.reblog,\n                follow: !!values.follow,\n                follow_request: !!values.followRequest,\n                poll: !!values.poll,\n                update: !!values.update,\n                status: !!values.status,\n              },\n            },\n          };\n\n          let alertsCount = 0;\n          // Remove false values from data.alerts\n          // API defaults to false anyway\n          Object.keys(params.data.alerts).forEach((key) => {\n            if (!params.data.alerts[key]) {\n              delete params.data.alerts[key];\n            } else {\n              alertsCount++;\n            }\n          });\n          const policyChanged =\n            previousPolicyRef.current !== params.data.policy;\n\n          console.log('PN Form', {\n            values,\n            allowNotifications: allowNotifications,\n            params,\n          });\n\n          if (allowNotifications && alertsCount > 0) {\n            if (policyChanged) {\n              console.debug('Policy changed.');\n              removeSubscription()\n                .then(() => {\n                  updateSubscription(params);\n                })\n                .catch((err) => {\n                  console.warn(err);\n                  alert(t`Failed to update subscription. Please try again.`);\n                });\n            } else {\n              updateSubscription(params).catch((err) => {\n                console.warn(err);\n                alert(t`Failed to update subscription. Please try again.`);\n              });\n            }\n          } else {\n            removeSubscription().catch((err) => {\n              console.warn(err);\n              alert(t`Failed to remove subscription. Please try again.`);\n            });\n          }\n        }, 100);\n      }}\n    >\n      <h3>\n        <Trans>Push Notifications (beta)</Trans>\n      </h3>\n      <section>\n        <ul>\n          <li>\n            <label>\n              <input\n                type=\"checkbox\"\n                disabled={isLoading || needRelogin}\n                name=\"policy-allow\"\n                checked={allowNotifications}\n                onChange={async (e) => {\n                  const { checked } = e.target;\n                  if (checked) {\n                    // Request permission\n                    const permission = await Notification.requestPermission();\n                    if (permission === 'granted') {\n                      setAllowNotifications(true);\n                    } else {\n                      setAllowNotifications(false);\n                      if (permission === 'denied') {\n                        alert(\n                          t`Push notifications are blocked. Please enable them in your browser settings.`,\n                        );\n                      }\n                    }\n                  } else {\n                    setAllowNotifications(false);\n                  }\n                }}\n              />{' '}\n              <Trans>\n                Allow from{' '}\n                <select\n                  name=\"policy\"\n                  disabled={isLoading || needRelogin || !allowNotifications}\n                >\n                  {[\n                    {\n                      value: 'all',\n                      label: t`anyone`,\n                    },\n                    {\n                      value: 'followed',\n                      label: t`people I follow`,\n                    },\n                    {\n                      value: 'follower',\n                      label: t`followers`,\n                    },\n                  ].map((type) => (\n                    <option value={type.value}>{type.label}</option>\n                  ))}\n                </select>\n              </Trans>\n            </label>\n            <div\n              class=\"shazam-container no-animation\"\n              style={{\n                width: '100%',\n              }}\n              hidden={!allowNotifications}\n            >\n              <div class=\"shazam-container-inner\">\n                <div class=\"sub-section\">\n                  <ul>\n                    {[\n                      {\n                        value: 'mention',\n                        label: t`Mentions`,\n                      },\n                      {\n                        value: 'favourite',\n                        label: t`Likes`,\n                      },\n                      {\n                        value: 'reblog',\n                        label: t`Boosts`,\n                      },\n                      {\n                        value: 'follow',\n                        label: t`Follows`,\n                      },\n                      {\n                        value: 'followRequest',\n                        label: t`Follow requests`,\n                      },\n                      {\n                        value: 'poll',\n                        label: t`Polls`,\n                      },\n                      {\n                        value: 'update',\n                        label: t`Post edits`,\n                      },\n                      {\n                        value: 'status',\n                        label: t`New posts`,\n                      },\n                    ].map((alert) => (\n                      <li>\n                        <label>\n                          <input type=\"checkbox\" name={alert.value} />{' '}\n                          {alert.label}\n                        </label>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {needRelogin && (\n              <div class=\"sub-section\">\n                <p>\n                  <Trans>\n                    Push permission was not granted since your last login.\n                    You'll need to{' '}\n                    <Link to={`/login?instance=${instance}`} onClick={onClose}>\n                      <b>log in</b> again to grant push permission\n                    </Link>\n                    .\n                  </Trans>\n                </p>\n              </div>\n            )}\n          </li>\n        </ul>\n      </section>\n      <p class=\"section-postnote\">\n        <small>\n          <Trans>\n            NOTE: Push notifications only work for <b>one account</b>.\n          </Trans>\n        </small>\n      </p>\n    </form>\n  );\n}\n\nexport default Settings;\n","const focusDeck = () => {\n  let timer = setTimeout(() => {\n    const columns = document.getElementById('columns');\n    if (columns) {\n      // Focus first column\n      // columns.querySelector('.deck-container')?.focus?.();\n    } else {\n      const modals = document.querySelectorAll('#modal-container > *');\n      if (modals?.length) {\n        // Focus last modal\n        const modal = modals[modals.length - 1]; // last one\n        const modalFocusElement =\n          modal.querySelector('[tabindex=\"-1\"]') || modal;\n        if (modalFocusElement) {\n          modalFocusElement.focus();\n          return;\n        }\n      }\n      const backDrop = document.querySelector('.deck-backdrop');\n      if (backDrop) return;\n      // Focus last deck\n      const pages = document.querySelectorAll('.deck-container');\n      const page = pages[pages.length - 1]; // last one\n      if (page && page.tabIndex === -1) {\n        console.log('FOCUS', page);\n        page.focus();\n      }\n    }\n  }, 100);\n  return () => clearTimeout(timer);\n};\n\nexport default focusDeck;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\n// Hook that runs a callback when the location changes\n// Won't run on the first render\n\nexport default function useLocationChange(fn) {\n  if (!fn) return;\n  const location = useLocation();\n  const currentLocationRef = useRef(location.pathname);\n  useEffect(() => {\n    // console.log('location', {\n    //   current: currentLocationRef.current,\n    //   next: location.pathname,\n    // });\n    if (\n      currentLocationRef.current &&\n      location.pathname !== currentLocationRef.current\n    ) {\n      fn?.();\n    }\n  }, [location.pathname, fn]);\n}\n","import { api } from './api';\nimport pmem from './pmem';\nimport store from './store';\n\nconst FETCH_MAX_AGE = 1000 * 60; // 1 minute\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\n\nexport const fetchLists = pmem(\n  async () => {\n    const { masto } = api();\n    const lists = await masto.v1.lists.list();\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n\n    if (lists.length) {\n      setTimeout(() => {\n        // Save to local storage, with saved timestamp\n        store.account.set('lists', {\n          lists,\n          updatedAt: Date.now(),\n        });\n      }, 1);\n    }\n\n    return lists;\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getLists() {\n  try {\n    const { lists, updatedAt } = store.account.get('lists') || {};\n    if (!lists?.length) return await fetchLists();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchLists();\n      return lists;\n    }\n    return lists;\n  } catch (e) {\n    return [];\n  }\n}\n\nexport const fetchList = pmem(\n  (id) => {\n    const { masto } = api();\n    return masto.v1.lists.$select(id).fetch();\n  },\n  {\n    maxAge: FETCH_MAX_AGE,\n  },\n);\n\nexport async function getList(id) {\n  const { lists } = store.account.get('lists') || {};\n  console.log({ lists });\n  if (lists?.length) {\n    const theList = lists.find((l) => l.id === id);\n    if (theList) return theList;\n  }\n  try {\n    return fetchList(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexport async function getListTitle(id) {\n  const list = await getList(id);\n  return list?.title || '';\n}\n\nexport function addListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    lists.push(list);\n    lists.sort((a, b) => a.title.localeCompare(b.title));\n    store.account.set('lists', {\n      lists,\n      updatedAt: Date.now(),\n    });\n  }\n}\n\nexport function updateListStore(list) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === list.id);\n    if (index !== -1) {\n      lists[index] = list;\n      lists.sort((a, b) => a.title.localeCompare(b.title));\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n\nexport function deleteListStore(listID) {\n  const { lists } = store.account.get('lists') || {};\n  if (lists?.length) {\n    const index = lists.findIndex((l) => l.id === listID);\n    if (index !== -1) {\n      lists.splice(index, 1);\n      store.account.set('lists', {\n        lists,\n        updatedAt: Date.now(),\n      });\n    }\n  }\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport { addListStore, deleteListStore, updateListStore } from '../utils/lists';\nimport supports from '../utils/supports';\n\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\n\nfunction ListAddEdit({ list, onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!list;\n  const nameFieldRef = useRef();\n  const repliesPolicyFieldRef = useRef();\n  const exclusiveFieldRef = useRef();\n  useEffect(() => {\n    if (editMode) {\n      nameFieldRef.current.value = list.title;\n      repliesPolicyFieldRef.current.value = list.repliesPolicy;\n      if (exclusiveFieldRef.current) {\n        exclusiveFieldRef.current.checked = list.exclusive;\n      }\n    }\n  }, [editMode]);\n  const supportsExclusive = supports('@mastodon/list-exclusive');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}{' '}\n      <header>\n        <h2>{editMode ? t`Edit list` : t`New list`}</h2>\n      </header>\n      <main>\n        <form\n          class=\"list-form\"\n          onSubmit={(e) => {\n            e.preventDefault(); // Get form values\n\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const repliesPolicy = formData.get('replies_policy');\n            const exclusive = formData.get('exclusive') === 'on';\n            console.log({\n              title,\n              repliesPolicy,\n              exclusive,\n            });\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let listResult;\n\n                if (editMode) {\n                  listResult = await masto.v1.lists.$select(list.id).update({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                } else {\n                  listResult = await masto.v1.lists.create({\n                    title,\n                    replies_policy: repliesPolicy,\n                    exclusive,\n                  });\n                }\n\n                console.log(listResult);\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  list: listResult,\n                });\n\n                setTimeout(() => {\n                  if (editMode) {\n                    updateListStore(listResult);\n                  } else {\n                    addListStore(listResult);\n                  }\n                }, 1);\n              } catch (e) {\n                console.error(e);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit list.`\n                    : t`Unable to create list.`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"list-form-row\">\n            <label for=\"list-title\">\n              <Trans>Name</Trans>{' '}\n              <input\n                ref={nameFieldRef}\n                type=\"text\"\n                id=\"list-title\"\n                name=\"title\"\n                required\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n              />\n            </label>\n          </div>\n          <div class=\"list-form-row\">\n            <select\n              ref={repliesPolicyFieldRef}\n              name=\"replies_policy\"\n              required\n              disabled={uiState === 'loading'}\n            >\n              <option value=\"list\">\n                <Trans>Show replies to list members</Trans>\n              </option>\n              <option value=\"followed\">\n                <Trans>Show replies to people I follow</Trans>\n              </option>\n              <option value=\"none\">\n                <Trans>Don't show replies</Trans>\n              </option>\n            </select>\n          </div>\n          {supportsExclusive && (\n            <div class=\"list-form-row\">\n              <label class=\"label-block\">\n                <input\n                  ref={exclusiveFieldRef}\n                  type=\"checkbox\"\n                  name=\"exclusive\"\n                  disabled={uiState === 'loading'}\n                />{' '}\n                <Trans>Hide posts on this list from Home/Following</Trans>\n              </label>\n            </div>\n          )}\n          <div class=\"list-form-footer\">\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              {editMode ? t`Save` : t`Create`}\n            </button>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this list?`}\n                onClick={() => {\n                  // const yes = confirm('Delete this list?');\n                  // if (!yes) return;\n                  setUIState('loading');\n\n                  (async () => {\n                    try {\n                      await masto.v1.lists.$select(list.id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'deleted',\n                      });\n                      setTimeout(() => {\n                        deleteListStore(list.id);\n                      }, 1);\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete list.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ListAddEdit;\n","import './account-info.css';\n\nimport { msg, plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\n\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport getHTMLText from '../utils/getHTMLText';\nimport handleContentLinks from '../utils/handle-content-links';\nimport i18nDuration from '../utils/i18n-duration';\nimport { getLists } from '../utils/lists';\nimport niceDateTime from '../utils/nice-date-time';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport showCompose from '../utils/show-compose';\nimport showToast from '../utils/show-toast';\nimport states, { hideAllModals } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID, updateAccount } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport AccountBlock from './account-block';\nimport Avatar from './avatar';\nimport EmojiText from './emoji-text';\nimport Icon from './icon';\nimport Link from './link';\nimport ListAddEdit from './list-add-edit';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport Modal from './modal';\nimport SubMenu2 from './submenu2';\nimport TranslationBlock from './translation-block';\n\nconst MUTE_DURATIONS = [\n  60 * 5, // 5 minutes\n  60 * 30, // 30 minutes\n  60 * 60, // 1 hour\n  60 * 60 * 6, // 6 hours\n  60 * 60 * 24, // 1 day\n  60 * 60 * 24 * 3, // 3 days\n  60 * 60 * 24 * 7, // 1 week\n  0, // forever\n];\nconst MUTE_DURATIONS_LABELS = {\n  0: msg`Forever`,\n  300: i18nDuration(5, 'minute'),\n  1_800: i18nDuration(30, 'minute'),\n  3_600: i18nDuration(1, 'hour'),\n  21_600: i18nDuration(6, 'hour'),\n  86_400: i18nDuration(1, 'day'),\n  259_200: i18nDuration(3, 'day'),\n  604_800: i18nDuration(1, 'week'),\n};\nconsole.log({ MUTE_DURATIONS_LABELS });\n\nconst LIMIT = 80;\n\nconst ACCOUNT_INFO_MAX_AGE = 1000 * 60 * 10; // 10 mins\n\nfunction fetchFamiliarFollowers(currentID, masto) {\n  return masto.v1.accounts.familiarFollowers.fetch({\n    id: [currentID],\n  });\n}\nconst memFetchFamiliarFollowers = pmem(fetchFamiliarFollowers, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nasync function fetchPostingStats(accountID, masto) {\n  const fetchStatuses = masto.v1.accounts\n    .$select(accountID)\n    .statuses.list({\n      limit: 20,\n    })\n    .next();\n\n  const { value: statuses } = await fetchStatuses;\n  console.log('fetched statuses', statuses);\n  const stats = {\n    total: statuses.length,\n    originals: 0,\n    replies: 0,\n    boosts: 0,\n  };\n  // Categories statuses by type\n  // - Original posts (not replies to others)\n  // - Threads (self-replies + 1st original post)\n  // - Boosts (reblogs)\n  // - Replies (not-self replies)\n  statuses.forEach((status) => {\n    if (status.reblog) {\n      stats.boosts++;\n    } else if (\n      !!status.inReplyToId &&\n      status.inReplyToAccountId !== status.account.id // Not self-reply\n    ) {\n      stats.replies++;\n    } else {\n      stats.originals++;\n    }\n  });\n\n  // Count days since last post\n  if (statuses.length) {\n    stats.daysSinceLastPost = Math.ceil(\n      (Date.now() - new Date(statuses[statuses.length - 1].createdAt)) /\n        86400000,\n    );\n  }\n\n  console.log('posting stats', stats);\n  return stats;\n}\nconst memFetchPostingStats = pmem(fetchPostingStats, {\n  maxAge: ACCOUNT_INFO_MAX_AGE,\n});\n\nfunction AccountInfo({\n  account,\n  fetchAccount = () => {},\n  standalone,\n  instance,\n  authenticated,\n}) {\n  const { i18n } = useLingui();\n  const { masto } = api({\n    instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const [uiState, setUIState] = useState('default');\n  const isString = typeof account === 'string';\n  const [info, setInfo] = useState(isString ? null : account);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n\n  useEffect(() => {\n    if (!isString) {\n      setInfo(account);\n      return;\n    }\n    setUIState('loading');\n    (async () => {\n      try {\n        const info = await fetchAccount();\n        states.accounts[`${info.id}@${instance}`] = info;\n        setInfo(info);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setInfo(null);\n        setUIState('error');\n      }\n    })();\n  }, [isString, account, fetchAccount]);\n\n  const {\n    acct,\n    avatar,\n    avatarStatic,\n    bot,\n    createdAt,\n    displayName,\n    emojis,\n    fields,\n    followersCount,\n    followingCount,\n    group,\n    // header,\n    // headerStatic,\n    id,\n    lastStatusAt,\n    locked,\n    note,\n    statusesCount,\n    url,\n    username,\n    memorial,\n    moved,\n    roles,\n    hideCollections,\n  } = info || {};\n  let headerIsAvatar = false;\n  let { header, headerStatic } = info || {};\n  if (!header || /missing\\.png$/.test(header)) {\n    if (avatar && !/missing\\.png$/.test(avatar)) {\n      header = avatar;\n      headerIsAvatar = true;\n      if (avatarStatic && !/missing\\.png$/.test(avatarStatic)) {\n        headerStatic = avatarStatic;\n      }\n    }\n  }\n\n  const isSelf = useMemo(() => id === getCurrentAccountID(), [id]);\n\n  useEffect(() => {\n    const infoHasEssentials = !!(\n      info?.id &&\n      info?.username &&\n      info?.acct &&\n      info?.avatar &&\n      info?.avatarStatic &&\n      info?.displayName &&\n      info?.url\n    );\n    if (isSelf && instance && infoHasEssentials) {\n      const accounts = store.local.getJSON('accounts');\n      let updated = false;\n      accounts.forEach((account) => {\n        if (account.info.id === info.id && account.instanceURL === instance) {\n          account.info = info;\n          updated = true;\n        }\n      });\n      if (updated) {\n        console.log('Updated account info', info);\n        store.local.setJSON('accounts', accounts);\n      }\n    }\n  }, [isSelf, info, instance]);\n\n  const accountInstance = useMemo(() => {\n    if (!url) return null;\n    const domain = punycode.toUnicode(URL.parse(url).hostname);\n    return domain;\n  }, [url]);\n\n  const [headerCornerColors, setHeaderCornerColors] = useState([]);\n\n  const followersIterator = useRef();\n  const familiarFollowersCache = useRef([]);\n  async function fetchFollowers(firstLoad) {\n    if (firstLoad || !followersIterator.current) {\n      followersIterator.current = masto.v1.accounts.$select(id).followers.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followersIterator.current.next();\n    if (isSelf) return results;\n    if (!sameCurrentInstance) return results;\n\n    const { value } = results;\n    let newValue = [];\n    // On first load, fetch familiar followers, merge to top of results' `value`\n    // Remove dups on every fetch\n    if (firstLoad) {\n      let familiarFollowers = [];\n      try {\n        familiarFollowers = await masto.v1.accounts.familiarFollowers.fetch({\n          id: [id],\n        });\n      } catch (e) {}\n      familiarFollowersCache.current = familiarFollowers?.[0]?.accounts || [];\n      newValue = [\n        ...familiarFollowersCache.current,\n        ...value.filter(\n          (account) =>\n            !familiarFollowersCache.current.some(\n              (familiar) => familiar.id === account.id,\n            ),\n        ),\n      ];\n    } else if (value?.length) {\n      newValue = value.filter(\n        (account) =>\n          !familiarFollowersCache.current.some(\n            (familiar) => familiar.id === account.id,\n          ),\n      );\n    }\n\n    return {\n      ...results,\n      value: newValue,\n    };\n  }\n\n  const followingIterator = useRef();\n  async function fetchFollowing(firstLoad) {\n    if (firstLoad || !followingIterator.current) {\n      followingIterator.current = masto.v1.accounts.$select(id).following.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await followingIterator.current.next();\n    return results;\n  }\n\n  const LinkOrDiv = standalone ? 'div' : Link;\n  const accountLink = instance ? `/${instance}/a/${id}` : `/a/${id}`;\n\n  const [familiarFollowers, setFamiliarFollowers] = useState([]);\n  const [postingStats, setPostingStats] = useState();\n  const [postingStatsUIState, setPostingStatsUIState] = useState('default');\n  const hasPostingStats = !!postingStats?.total;\n\n  const renderFamiliarFollowers = async (currentID) => {\n    try {\n      const followers = await memFetchFamiliarFollowers(\n        currentID,\n        currentMasto,\n      );\n      console.log('fetched familiar followers', followers);\n      setFamiliarFollowers(\n        followers[0].accounts.slice(0, FAMILIAR_FOLLOWERS_LIMIT),\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const renderPostingStats = async () => {\n    if (!id) return;\n    setPostingStatsUIState('loading');\n    try {\n      const stats = await memFetchPostingStats(id, masto);\n      setPostingStats(stats);\n      setPostingStatsUIState('default');\n    } catch (e) {\n      console.error(e);\n      setPostingStatsUIState('error');\n    }\n  };\n\n  const onRelationshipChange = useCallback(\n    ({ relationship, currentID }) => {\n      if (!relationship.following) {\n        renderFamiliarFollowers(currentID);\n        if (!standalone && statusesCount > 0) {\n          // Only render posting stats if not standalone and has posts\n          renderPostingStats();\n        }\n      }\n    },\n    [standalone, id, statusesCount],\n  );\n\n  const onProfileUpdate = useCallback(\n    (newAccount) => {\n      if (newAccount.id === id) {\n        console.log('Updated account info', newAccount);\n        setInfo(newAccount);\n        states.accounts[`${newAccount.id}@${instance}`] = newAccount;\n      }\n    },\n    [id, instance],\n  );\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      class={`account-container ${uiState === 'loading' ? 'skeleton' : ''}`}\n      style={{\n        '--header-color-1': headerCornerColors[0],\n        '--header-color-2': headerCornerColors[1],\n        '--header-color-3': headerCornerColors[2],\n        '--header-color-4': headerCornerColors[3],\n      }}\n    >\n      {uiState === 'error' && (\n        <div class=\"ui-state\">\n          <p>\n            <Trans>Unable to load account.</Trans>\n          </p>\n          <p>\n            <a\n              href={isString ? account : url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Trans>Go to account page</Trans> <Icon icon=\"external\" />\n            </a>\n          </p>\n        </div>\n      )}\n      {uiState === 'loading' ? (\n        <>\n          <header>\n            <AccountBlock avatarSize=\"xxxl\" skeleton />\n          </header>\n          <main>\n            <div class=\"note\">\n              <p>███████ ████ ████</p>\n              <p>████ ████████ ██████ █████████ ████ ██</p>\n            </div>\n            <div class=\"account-metadata-box\">\n              <div class=\"profile-metadata\">\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">███</b>\n                  <p>██████</p>\n                </div>\n                <div class=\"profile-field\">\n                  <b class=\"more-insignificant\">████</b>\n                  <p>███████████</p>\n                </div>\n              </div>\n              <div class=\"stats\">\n                <div>\n                  <span>██</span> <Trans>Followers</Trans>\n                </div>\n                <div>\n                  <span>██</span> <Trans>Following</Trans>\n                </div>\n                <div>\n                  <span>██</span> <Trans>Posts</Trans>\n                </div>\n              </div>\n            </div>\n            <div class=\"actions\">\n              <span />\n              <span class=\"buttons\">\n                <button type=\"button\" class=\"plain\" disabled>\n                  <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n                </button>\n              </span>\n            </div>\n          </main>\n        </>\n      ) : (\n        info && (\n          <>\n            {!!moved && (\n              <div class=\"account-moved\">\n                <p>\n                  <Trans>\n                    <b>{displayName}</b> has indicated that their new account is\n                    now:\n                  </Trans>\n                </p>\n                <AccountBlock\n                  account={moved}\n                  instance={instance}\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    states.showAccount = moved;\n                  }}\n                />\n              </div>\n            )}\n            {!!header && !/missing\\.png$/.test(header) && (\n              <img\n                src={header}\n                alt=\"\"\n                class={`header-banner ${\n                  headerIsAvatar ? 'header-is-avatar' : ''\n                }`}\n                onError={(e) => {\n                  if (e.target.crossOrigin) {\n                    if (e.target.src !== headerStatic) {\n                      e.target.src = headerStatic;\n                    } else {\n                      e.target.removeAttribute('crossorigin');\n                      e.target.src = header;\n                    }\n                  } else if (e.target.src !== headerStatic) {\n                    e.target.src = headerStatic;\n                  } else {\n                    e.target.remove();\n                  }\n                }}\n                crossOrigin=\"anonymous\"\n                onLoad={(e) => {\n                  e.target.classList.add('loaded');\n                  try {\n                    // Get color from four corners of image\n                    const canvas = window.OffscreenCanvas\n                      ? new OffscreenCanvas(1, 1)\n                      : document.createElement('canvas');\n                    const ctx = canvas.getContext('2d', {\n                      willReadFrequently: true,\n                    });\n                    canvas.width = e.target.width;\n                    canvas.height = e.target.height;\n                    ctx.imageSmoothingEnabled = false;\n                    ctx.drawImage(e.target, 0, 0);\n                    // const colors = [\n                    //   ctx.getImageData(0, 0, 1, 1).data,\n                    //   ctx.getImageData(e.target.width - 1, 0, 1, 1).data,\n                    //   ctx.getImageData(0, e.target.height - 1, 1, 1).data,\n                    //   ctx.getImageData(\n                    //     e.target.width - 1,\n                    //     e.target.height - 1,\n                    //     1,\n                    //     1,\n                    //   ).data,\n                    // ];\n                    // Get 10x10 pixels from corners, get average color from each\n                    const pixelDimension = 10;\n                    const colors = [\n                      ctx.getImageData(0, 0, pixelDimension, pixelDimension)\n                        .data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        0,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        0,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                      ctx.getImageData(\n                        e.target.width - pixelDimension,\n                        e.target.height - pixelDimension,\n                        pixelDimension,\n                        pixelDimension,\n                      ).data,\n                    ].map((data) => {\n                      let r = 0;\n                      let g = 0;\n                      let b = 0;\n                      let a = 0;\n                      for (let i = 0; i < data.length; i += 4) {\n                        r += data[i];\n                        g += data[i + 1];\n                        b += data[i + 2];\n                        a += data[i + 3];\n                      }\n                      const dataLength = data.length / 4;\n                      return [\n                        r / dataLength,\n                        g / dataLength,\n                        b / dataLength,\n                        a / dataLength,\n                      ];\n                    });\n                    const rgbColors = colors.map((color) => {\n                      const [r, g, b, a] = lightenRGB(color);\n                      return `rgba(${r}, ${g}, ${b}, ${a})`;\n                    });\n                    setHeaderCornerColors(rgbColors);\n                    console.log({ colors, rgbColors });\n                  } catch (e) {\n                    // Silently fail\n                  }\n                }}\n              />\n            )}\n            <header>\n              {standalone ? (\n                <Menu2\n                  shift={\n                    window.matchMedia('(min-width: calc(40em))').matches\n                      ? 114\n                      : 64\n                  }\n                  menuButton={\n                    <div>\n                      <AccountBlock\n                        account={info}\n                        instance={instance}\n                        avatarSize=\"xxxl\"\n                        onClick={() => {}}\n                      />\n                    </div>\n                  }\n                >\n                  <div class=\"szh-menu__header\">\n                    <AccountHandleInfo acct={acct} instance={instance} />\n                  </div>\n                  <MenuItem\n                    onClick={() => {\n                      const handleWithInstance = acct.includes('@')\n                        ? `@${acct}`\n                        : `@${acct}@${instance}`;\n                      try {\n                        navigator.clipboard.writeText(handleWithInstance);\n                        showToast(t`Handle copied`);\n                      } catch (e) {\n                        console.error(e);\n                        showToast(t`Unable to copy handle`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"link\" />\n                    <span>\n                      <Trans>Copy handle</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuItem href={url} target=\"_blank\">\n                    <Icon icon=\"external\" />\n                    <span>\n                      <Trans>Go to original profile page</Trans>\n                    </span>\n                  </MenuItem>\n                  <MenuDivider />\n                  <MenuLink href={info.avatar} target=\"_blank\">\n                    <Icon icon=\"user\" />\n                    <span>\n                      <Trans>View profile image</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuLink href={info.header} target=\"_blank\">\n                    <Icon icon=\"media\" />\n                    <span>\n                      <Trans>View profile header</Trans>\n                    </span>\n                  </MenuLink>\n                </Menu2>\n              ) : (\n                <AccountBlock\n                  account={info}\n                  instance={instance}\n                  avatarSize=\"xxxl\"\n                  internal\n                />\n              )}\n            </header>\n            <div class=\"faux-header-bg\" aria-hidden=\"true\" />\n            <main>\n              {!!memorial && (\n                <span class=\"tag\">\n                  <Trans>In Memoriam</Trans>\n                </span>\n              )}\n              {!!bot && (\n                <span class=\"tag\">\n                  <Icon icon=\"bot\" /> <Trans>Automated</Trans>\n                </span>\n              )}\n              {!!group && (\n                <span class=\"tag\">\n                  <Icon icon=\"group\" /> <Trans>Group</Trans>\n                </span>\n              )}\n              {roles?.map((role) => (\n                <span class=\"tag\">\n                  {role.name}\n                  {!!accountInstance && (\n                    <>\n                      {' '}\n                      <span class=\"more-insignificant\">{accountInstance}</span>\n                    </>\n                  )}\n                </span>\n              ))}\n              <div\n                class=\"note\"\n                dir=\"auto\"\n                onClick={handleContentLinks({\n                  instance: currentInstance,\n                })}\n                dangerouslySetInnerHTML={{\n                  __html: enhanceContent(note, { emojis }),\n                }}\n              />\n              <div class=\"account-metadata-box\">\n                {fields?.length > 0 && (\n                  <div class=\"profile-metadata\">\n                    {fields.map(({ name, value, verifiedAt }, i) => (\n                      <div\n                        class={`profile-field ${\n                          verifiedAt ? 'profile-verified' : ''\n                        }`}\n                        key={name + i}\n                        dir=\"auto\"\n                      >\n                        <b>\n                          <EmojiText text={name} emojis={emojis} />{' '}\n                          {!!verifiedAt && (\n                            <Icon\n                              icon=\"check-circle\"\n                              size=\"s\"\n                              alt={t`Verified`}\n                            />\n                          )}\n                        </b>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: enhanceContent(value, { emojis }),\n                          }}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                )}\n                <div class=\"stats\">\n                  <LinkOrDiv\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          id: 'followers',\n                          heading: t`Followers`,\n                          fetchAccounts: fetchFollowers,\n                          instance,\n                          excludeRelationshipAttrs: isSelf\n                            ? ['followedBy']\n                            : [],\n                          blankCopy: hideCollections\n                            ? t`This user has chosen to not make this information available.`\n                            : undefined,\n                        };\n                      }, 0);\n                    }}\n                  >\n                    {!!familiarFollowers.length && (\n                      <span class=\"shazam-container-horizontal\">\n                        <span class=\"shazam-container-inner stats-avatars-bunch\">\n                          {familiarFollowers.map((follower) => (\n                            <Avatar\n                              url={follower.avatarStatic}\n                              size=\"s\"\n                              alt={`${follower.displayName} @${follower.acct}`}\n                              squircle={follower?.bot}\n                            />\n                          ))}\n                        </span>\n                      </span>\n                    )}\n                    <span title={followersCount}>\n                      {shortenNumber(followersCount)}\n                    </span>{' '}\n                    <Trans>Followers</Trans>\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    tabIndex={0}\n                    to={accountLink}\n                    onClick={() => {\n                      // states.showAccount = false;\n                      setTimeout(() => {\n                        states.showGenericAccounts = {\n                          heading: t`Following`,\n                          fetchAccounts: fetchFollowing,\n                          instance,\n                          excludeRelationshipAttrs: isSelf ? ['following'] : [],\n                          blankCopy: hideCollections\n                            ? t`This user has chosen to not make this information available.`\n                            : undefined,\n                        };\n                      }, 0);\n                    }}\n                  >\n                    <span title={followingCount}>\n                      {shortenNumber(followingCount)}\n                    </span>{' '}\n                    <Trans>Following</Trans>\n                    <br />\n                  </LinkOrDiv>\n                  <LinkOrDiv\n                    class=\"insignificant\"\n                    to={accountLink}\n                    // onClick={\n                    //   standalone\n                    //     ? undefined\n                    //     : () => {\n                    //         hideAllModals();\n                    //       }\n                    // }\n                  >\n                    <span title={statusesCount}>\n                      {shortenNumber(statusesCount)}\n                    </span>{' '}\n                    <Trans>Posts</Trans>\n                  </LinkOrDiv>\n                  {!!createdAt && (\n                    <div class=\"insignificant\">\n                      <Trans>\n                        Joined{' '}\n                        <time datetime={createdAt}>\n                          {niceDateTime(createdAt, {\n                            hideTime: true,\n                          })}\n                        </time>\n                      </Trans>\n                    </div>\n                  )}\n                </div>\n              </div>\n              {!!postingStats && (\n                <LinkOrDiv\n                  to={accountLink}\n                  class=\"account-metadata-box\"\n                  // onClick={() => {\n                  //   states.showAccount = false;\n                  // }}\n                >\n                  <div class=\"shazam-container\">\n                    <div class=\"shazam-container-inner\">\n                      {hasPostingStats ? (\n                        <div\n                          class=\"posting-stats\"\n                          title={t`${(\n                            postingStats.originals / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} original posts, ${(\n                            postingStats.replies / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} replies, ${(\n                            postingStats.boosts / postingStats.total\n                          ).toLocaleString(i18n.locale || undefined, {\n                            style: 'percent',\n                          })} boosts`}\n                        >\n                          <div>\n                            {postingStats.daysSinceLastPost < 365\n                              ? plural(postingStats.total, {\n                                  one: plural(postingStats.daysSinceLastPost, {\n                                    one: `Last 1 post in the past 1 day`,\n                                    other: `Last 1 post in the past ${postingStats.daysSinceLastPost} days`,\n                                  }),\n                                  other: plural(\n                                    postingStats.daysSinceLastPost,\n                                    {\n                                      one: `Last ${postingStats.total} posts in the past 1 day`,\n                                      other: `Last ${postingStats.total} posts in the past ${postingStats.daysSinceLastPost} days`,\n                                    },\n                                  ),\n                                })\n                              : plural(postingStats.total, {\n                                  one: 'Last 1 post in the past year(s)',\n                                  other: `Last ${postingStats.total} posts in the past year(s)`,\n                                })}\n                          </div>\n                          <div\n                            class=\"posting-stats-bar\"\n                            style={{\n                              // [originals | replies | boosts]\n                              '--originals-percentage': `${\n                                (postingStats.originals / postingStats.total) *\n                                100\n                              }%`,\n                              '--replies-percentage': `${\n                                ((postingStats.originals +\n                                  postingStats.replies) /\n                                  postingStats.total) *\n                                100\n                              }%`,\n                            }}\n                          />\n                          <div class=\"posting-stats-legends\">\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-originals\" />{' '}\n                              <Trans>Original</Trans>\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-replies\" />{' '}\n                              <Trans>Replies</Trans>\n                            </span>{' '}\n                            <span class=\"ib\">\n                              <span class=\"posting-stats-legend-item posting-stats-legend-item-boosts\" />{' '}\n                              <Trans>Boosts</Trans>\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <div class=\"posting-stats\">\n                          <Trans>Post stats unavailable.</Trans>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </LinkOrDiv>\n              )}\n              {!moved && (\n                <div class=\"account-metadata-box\">\n                  <div\n                    class=\"shazam-container no-animation\"\n                    hidden={!!postingStats}\n                  >\n                    <div class=\"shazam-container-inner\">\n                      <button\n                        type=\"button\"\n                        class=\"posting-stats-button\"\n                        disabled={postingStatsUIState === 'loading'}\n                        onClick={() => {\n                          renderPostingStats();\n                        }}\n                      >\n                        <div\n                          class={`posting-stats-bar posting-stats-icon ${\n                            postingStatsUIState === 'loading' ? 'loading' : ''\n                          }`}\n                          style={{\n                            '--originals-percentage': '33%',\n                            '--replies-percentage': '66%',\n                          }}\n                        />\n                        <Trans>View post stats</Trans>{' '}\n                        {/* <Loader\n                        abrupt\n                        hidden={postingStatsUIState !== 'loading'}\n                      /> */}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </main>\n            <footer>\n              <RelatedActions\n                info={info}\n                instance={instance}\n                standalone={standalone}\n                authenticated={authenticated}\n                onRelationshipChange={onRelationshipChange}\n                onProfileUpdate={onProfileUpdate}\n              />\n            </footer>\n          </>\n        )\n      )}\n    </div>\n  );\n}\n\nconst FAMILIAR_FOLLOWERS_LIMIT = 3;\n\nfunction RelatedActions({\n  info,\n  instance,\n  standalone,\n  authenticated,\n  onRelationshipChange = () => {},\n  onProfileUpdate = () => {},\n}) {\n  if (!info) return null;\n  const { _ } = useLingui();\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n\n  const [relationshipUIState, setRelationshipUIState] = useState('default');\n  const [relationship, setRelationship] = useState(null);\n\n  const { id, acct, url, username, locked, lastStatusAt, note, fields, moved } =\n    info;\n  const accountID = useRef(id);\n\n  const {\n    following,\n    showingReblogs,\n    notifying,\n    followedBy,\n    blocking,\n    blockedBy,\n    muting,\n    mutingNotifications,\n    requested,\n    domainBlocking,\n    endorsed,\n    note: privateNote,\n  } = relationship || {};\n\n  const [currentInfo, setCurrentInfo] = useState(null);\n  const [isSelf, setIsSelf] = useState(false);\n\n  const acctWithInstance = acct.includes('@') ? acct : `${acct}@${instance}`;\n\n  useEffect(() => {\n    if (info) {\n      const currentAccount = getCurrentAccountID();\n      let currentID;\n      (async () => {\n        if (sameInstance && authenticated) {\n          currentID = id;\n        } else if (!sameInstance && currentAuthenticated) {\n          // Grab this account from my logged-in instance\n          const acctHasInstance = info.acct.includes('@');\n          try {\n            const results = await currentMasto.v2.search.fetch({\n              q: acctHasInstance ? info.acct : `${info.username}@${instance}`,\n              type: 'accounts',\n              limit: 1,\n              resolve: true,\n            });\n            console.log('🥏 Fetched account from logged-in instance', results);\n            if (results.accounts.length) {\n              currentID = results.accounts[0].id;\n              setCurrentInfo(results.accounts[0]);\n            }\n          } catch (e) {\n            console.error(e);\n          }\n        }\n\n        if (!currentID) return;\n\n        if (currentAccount === currentID) {\n          // It's myself!\n          setIsSelf(true);\n          return;\n        }\n\n        accountID.current = currentID;\n\n        // if (moved) return;\n\n        setRelationshipUIState('loading');\n\n        const fetchRelationships = currentMasto.v1.accounts.relationships.fetch(\n          {\n            id: [currentID],\n          },\n        );\n\n        try {\n          const relationships = await fetchRelationships;\n          console.log('fetched relationship', relationships);\n          setRelationshipUIState('default');\n\n          if (relationships.length) {\n            const relationship = relationships[0];\n            setRelationship(relationship);\n            onRelationshipChange({ relationship, currentID });\n          }\n        } catch (e) {\n          console.error(e);\n          setRelationshipUIState('error');\n        }\n      })();\n    }\n  }, [info, authenticated]);\n\n  useEffect(() => {\n    if (info && isSelf) {\n      updateAccount(info);\n    }\n  }, [info, isSelf]);\n\n  const loading = relationshipUIState === 'loading';\n\n  const [showTranslatedBio, setShowTranslatedBio] = useState(false);\n  const [showAddRemoveLists, setShowAddRemoveLists] = useState(false);\n  const [showPrivateNoteModal, setShowPrivateNoteModal] = useState(false);\n  const [showEditProfile, setShowEditProfile] = useState(false);\n  const [lists, setLists] = useState([]);\n\n  return (\n    <>\n      <div class=\"actions\">\n        <span>\n          {followedBy ? (\n            <span class=\"tag\">\n              <Trans>Follows you</Trans>\n            </span>\n          ) : !!lastStatusAt ? (\n            <small class=\"insignificant\">\n              <Trans>\n                Last post:{' '}\n                <span class=\"ib\">\n                  {niceDateTime(lastStatusAt, {\n                    hideTime: true,\n                  })}\n                </span>\n              </Trans>\n            </small>\n          ) : (\n            <span />\n          )}\n          {muting && (\n            <span class=\"tag danger\">\n              <Trans>Muted</Trans>\n            </span>\n          )}\n          {blocking && (\n            <span class=\"tag danger\">\n              <Trans>Blocked</Trans>\n            </span>\n          )}\n        </span>{' '}\n        <span class=\"buttons\">\n          {!!privateNote && (\n            <button\n              type=\"button\"\n              class=\"private-note-tag\"\n              title={t`Private note`}\n              onClick={() => {\n                setShowPrivateNoteModal(true);\n              }}\n              dir=\"auto\"\n            >\n              <span>{privateNote}</span>\n            </button>\n          )}\n          <Menu2\n            portal={{\n              target: document.body,\n            }}\n            containerProps={{\n              style: {\n                // Higher than the backdrop\n                zIndex: 1001,\n              },\n            }}\n            align=\"center\"\n            position=\"anchor\"\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\" disabled={loading}>\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n            onMenuChange={(e) => {\n              if (following && e.open) {\n                // Fetch lists that have this account\n                (async () => {\n                  try {\n                    const lists = await currentMasto.v1.accounts\n                      .$select(accountID.current)\n                      .lists.list();\n                    console.log('fetched account lists', lists);\n                    setLists(lists);\n                  } catch (e) {\n                    console.error(e);\n                  }\n                })();\n              }\n            }}\n          >\n            {currentAuthenticated && !isSelf && (\n              <>\n                <MenuItem\n                  onClick={() => {\n                    showCompose({\n                      draftStatus: {\n                        status: `@${currentInfo?.acct || acct} `,\n                      },\n                    });\n                  }}\n                >\n                  <Icon icon=\"at\" />\n                  <span>\n                    <Trans>\n                      Mention <span class=\"bidi-isolate\">@{username}</span>\n                    </Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    setShowTranslatedBio(true);\n                  }}\n                >\n                  <Icon icon=\"translate\" />\n                  <span>\n                    <Trans>Translate bio</Trans>\n                  </span>\n                </MenuItem>\n                {supports('@mastodon/profile-private-note') && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowPrivateNoteModal(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      {privateNote ? t`Edit private note` : t`Add private note`}\n                    </span>\n                  </MenuItem>\n                )}\n                {following && !!relationship && (\n                  <>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                notify: !notifying,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.notifying\n                                ? t`Notifications enabled for @${username}'s posts.`\n                                : t` Notifications disabled for @${username}'s posts.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"notification\" />\n                      <span>\n                        {notifying\n                          ? t`Disable notifications`\n                          : t`Enable notifications`}\n                      </span>\n                    </MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        setRelationshipUIState('loading');\n                        (async () => {\n                          try {\n                            const rel = await currentMasto.v1.accounts\n                              .$select(accountID.current)\n                              .follow({\n                                reblogs: !showingReblogs,\n                              });\n                            if (rel) setRelationship(rel);\n                            setRelationshipUIState('default');\n                            showToast(\n                              rel.showingReblogs\n                                ? t`Boosts from @${username} enabled.`\n                                : t`Boosts from @${username} disabled.`,\n                            );\n                          } catch (e) {\n                            alert(e);\n                            setRelationshipUIState('error');\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"rocket\" />\n                      <span>\n                        {showingReblogs ? t`Disable boosts` : t`Enable boosts`}\n                      </span>\n                    </MenuItem>\n                  </>\n                )}\n                {/* Add/remove from lists is only possible if following the account */}\n                {following && (\n                  <MenuItem\n                    onClick={() => {\n                      setShowAddRemoveLists(true);\n                    }}\n                  >\n                    <Icon icon=\"list\" />\n                    {lists.length ? (\n                      <>\n                        <small class=\"menu-grow\">\n                          <Trans>Add/Remove from Lists</Trans>\n                          <br />\n                          <span class=\"more-insignificant\">\n                            {lists.map((list) => list.title).join(', ')}\n                          </span>\n                        </small>\n                        <small class=\"more-insignificant\">{lists.length}</small>\n                      </>\n                    ) : (\n                      <span>\n                        <Trans>Add/Remove from Lists</Trans>\n                      </span>\n                    )}\n                  </MenuItem>\n                )}\n                <MenuDivider />\n              </>\n            )}\n            <MenuItem\n              onClick={() => {\n                const handle = `@${currentInfo?.acct || acctWithInstance}`;\n                try {\n                  navigator.clipboard.writeText(handle);\n                  showToast(t`Handle copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy handle`);\n                }\n              }}\n            >\n              <Icon icon=\"copy\" />\n              <small>\n                <Trans>Copy handle</Trans>\n                <br />\n                <span class=\"more-insignificant bidi-isolate\">\n                  @{currentInfo?.acct || acctWithInstance}\n                </span>\n              </small>\n            </MenuItem>\n            <MenuItem href={url} target=\"_blank\">\n              <Icon icon=\"external\" />\n              <small class=\"menu-double-lines\">{niceAccountURL(url)}</small>\n            </MenuItem>\n            <div class=\"menu-horizontal\">\n              <MenuItem\n                onClick={() => {\n                  // Copy url to clipboard\n                  try {\n                    navigator.clipboard.writeText(url);\n                    showToast(t`Link copied`);\n                  } catch (e) {\n                    console.error(e);\n                    showToast(t`Unable to copy link`);\n                  }\n                }}\n              >\n                <Icon icon=\"link\" />\n                <span>\n                  <Trans>Copy</Trans>\n                </span>\n              </MenuItem>\n              {navigator?.share &&\n                navigator?.canShare?.({\n                  url,\n                }) && (\n                  <MenuItem\n                    onClick={() => {\n                      try {\n                        navigator.share({\n                          url,\n                        });\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Sharing doesn't seem to work.`);\n                      }\n                    }}\n                  >\n                    <Icon icon=\"share\" />\n                    <span>\n                      <Trans>Share…</Trans>\n                    </span>\n                  </MenuItem>\n                )}\n            </div>\n            {!!relationship && (\n              <>\n                <MenuDivider />\n                {muting ? (\n                  <MenuItem\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unmute();\n                          console.log('unmuting', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unmuted @${username}`);\n                          states.reloadGenericAccounts.id = 'mute';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"unmute\" />\n                    <span>\n                      <Trans>\n                        Unmute <span class=\"bidi-isolate\">@{username}</span>\n                      </Trans>\n                    </span>\n                  </MenuItem>\n                ) : (\n                  <SubMenu2\n                    menuClassName=\"menu-blur\"\n                    openTrigger=\"clickOnly\"\n                    direction=\"bottom\"\n                    overflow=\"auto\"\n                    shift={16}\n                    label={\n                      <>\n                        <Icon icon=\"mute\" />\n                        <span class=\"menu-grow\">\n                          <Trans>\n                            Mute <span class=\"bidi-isolate\">@{username}</span>…\n                          </Trans>\n                        </span>\n                        <span\n                          style={{\n                            textOverflow: 'clip',\n                          }}\n                        >\n                          <Icon icon=\"time\" />\n                          <Icon icon=\"chevron-right\" />\n                        </span>\n                      </>\n                    }\n                  >\n                    <div class=\"menu-wrap\">\n                      {MUTE_DURATIONS.map((duration) => (\n                        <MenuItem\n                          onClick={() => {\n                            setRelationshipUIState('loading');\n                            (async () => {\n                              try {\n                                const newRelationship =\n                                  await currentMasto.v1.accounts\n                                    .$select(currentInfo?.id || id)\n                                    .mute({\n                                      duration,\n                                    });\n                                console.log('muting', newRelationship);\n                                setRelationship(newRelationship);\n                                setRelationshipUIState('default');\n                                showToast(\n                                  t`Muted @${username} for ${\n                                    typeof MUTE_DURATIONS_LABELS[duration] ===\n                                    'function'\n                                      ? MUTE_DURATIONS_LABELS[duration]()\n                                      : _(MUTE_DURATIONS_LABELS[duration])\n                                  }`,\n                                );\n                                states.reloadGenericAccounts.id = 'mute';\n                                states.reloadGenericAccounts.counter++;\n                              } catch (e) {\n                                console.error(e);\n                                setRelationshipUIState('error');\n                                showToast(t`Unable to mute @${username}`);\n                              }\n                            })();\n                          }}\n                        >\n                          {typeof MUTE_DURATIONS_LABELS[duration] === 'function'\n                            ? MUTE_DURATIONS_LABELS[duration]()\n                            : _(MUTE_DURATIONS_LABELS[duration])}\n                        </MenuItem>\n                      ))}\n                    </div>\n                  </SubMenu2>\n                )}\n                {followedBy && (\n                  <MenuConfirm\n                    subMenu\n                    menuItemClassName=\"danger\"\n                    confirmLabel={\n                      <>\n                        <Icon icon=\"user-x\" />\n                        <span>\n                          <Trans>\n                            Remove <span class=\"bidi-isolate\">@{username}</span>{' '}\n                            from followers?\n                          </Trans>\n                        </span>\n                      </>\n                    }\n                    onClick={() => {\n                      setRelationshipUIState('loading');\n                      (async () => {\n                        try {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .removeFromFollowers();\n                          console.log(\n                            'removing from followers',\n                            newRelationship,\n                          );\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`@${username} removed from followers`);\n                          states.reloadGenericAccounts.id = 'followers';\n                          states.reloadGenericAccounts.counter++;\n                        } catch (e) {\n                          console.error(e);\n                          setRelationshipUIState('error');\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"user-x\" />\n                    <span>\n                      <Trans>Remove follower…</Trans>\n                    </span>\n                  </MenuConfirm>\n                )}\n                <MenuConfirm\n                  subMenu\n                  confirm={!blocking}\n                  confirmLabel={\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>?\n                        </Trans>\n                      </span>\n                    </>\n                  }\n                  menuItemClassName=\"danger\"\n                  onClick={() => {\n                    // if (!blocking && !confirm(`Block @${username}?`)) {\n                    //   return;\n                    // }\n                    setRelationshipUIState('loading');\n                    (async () => {\n                      try {\n                        if (blocking) {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .unblock();\n                          console.log('unblocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Unblocked @${username}`);\n                        } else {\n                          const newRelationship = await currentMasto.v1.accounts\n                            .$select(currentInfo?.id || id)\n                            .block();\n                          console.log('blocking', newRelationship);\n                          setRelationship(newRelationship);\n                          setRelationshipUIState('default');\n                          showToast(t`Blocked @${username}`);\n                        }\n                        states.reloadGenericAccounts.id = 'block';\n                        states.reloadGenericAccounts.counter++;\n                      } catch (e) {\n                        console.error(e);\n                        setRelationshipUIState('error');\n                        if (blocking) {\n                          showToast(t`Unable to unblock @${username}`);\n                        } else {\n                          showToast(t`Unable to block @${username}`);\n                        }\n                      }\n                    })();\n                  }}\n                >\n                  {blocking ? (\n                    <>\n                      <Icon icon=\"unblock\" />\n                      <span>\n                        <Trans>\n                          Unblock <span class=\"bidi-isolate\">@{username}</span>\n                        </Trans>\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <Icon icon=\"block\" />\n                      <span>\n                        <Trans>\n                          Block <span class=\"bidi-isolate\">@{username}</span>…\n                        </Trans>\n                      </span>\n                    </>\n                  )}\n                </MenuConfirm>\n                <MenuItem\n                  className=\"danger\"\n                  onClick={() => {\n                    states.showReportModal = {\n                      account: currentInfo || info,\n                    };\n                  }}\n                >\n                  <Icon icon=\"flag\" />\n                  <span>\n                    <Trans>\n                      Report <span class=\"bidi-isolate\">@{username}</span>…\n                    </Trans>\n                  </span>\n                </MenuItem>\n              </>\n            )}\n            {currentAuthenticated &&\n              isSelf &&\n              standalone &&\n              supports('@mastodon/profile-edit') && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={() => {\n                      setShowEditProfile(true);\n                    }}\n                  >\n                    <Icon icon=\"pencil\" />\n                    <span>\n                      <Trans>Edit profile</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n            {import.meta.env.DEV && currentAuthenticated && isSelf && (\n              <>\n                <MenuDivider />\n                <MenuItem\n                  onClick={async () => {\n                    const relationships =\n                      await currentMasto.v1.accounts.relationships.fetch({\n                        id: [accountID.current],\n                      });\n                    const { note } = relationships[0] || {};\n                    if (note) {\n                      alert(note);\n                      console.log(note);\n                    }\n                  }}\n                >\n                  <Icon icon=\"pencil\" />\n                  <span>See note</span>\n                </MenuItem>\n              </>\n            )}\n          </Menu2>\n          {!relationship && relationshipUIState === 'loading' && (\n            <Loader abrupt />\n          )}\n          {!!relationship && !moved && (\n            <MenuConfirm\n              confirm={following || requested}\n              confirmLabel={\n                <span>\n                  {requested\n                    ? t`Withdraw follow request?`\n                    : t`Unfollow @${info.acct || info.username}?`}\n                </span>\n              }\n              menuItemClassName=\"danger\"\n              align=\"end\"\n              disabled={loading}\n              onClick={() => {\n                setRelationshipUIState('loading');\n                (async () => {\n                  try {\n                    let newRelationship;\n\n                    if (following || requested) {\n                      // const yes = confirm(\n                      //   requested\n                      //     ? 'Withdraw follow request?'\n                      //     : `Unfollow @${info.acct || info.username}?`,\n                      // );\n\n                      // if (yes) {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .unfollow();\n                      // }\n                    } else {\n                      newRelationship = await currentMasto.v1.accounts\n                        .$select(accountID.current)\n                        .follow();\n                    }\n\n                    if (newRelationship) setRelationship(newRelationship);\n                    setRelationshipUIState('default');\n                  } catch (e) {\n                    alert(e);\n                    setRelationshipUIState('error');\n                  }\n                })();\n              }}\n            >\n              <button\n                type=\"button\"\n                class={`${following || requested ? 'light swap' : ''}`}\n                data-swap-state={following || requested ? 'danger' : ''}\n                disabled={loading}\n              >\n                {following ? (\n                  <>\n                    <span>\n                      <Trans>Following</Trans>\n                    </span>\n                    <span>\n                      <Trans>Unfollow…</Trans>\n                    </span>\n                  </>\n                ) : requested ? (\n                  <>\n                    <span>\n                      <Trans>Requested</Trans>\n                    </span>\n                    <span>\n                      <Trans>Withdraw…</Trans>\n                    </span>\n                  </>\n                ) : locked ? (\n                  <>\n                    <Icon icon=\"lock\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                ) : (\n                  t`Follow`\n                )}\n              </button>\n            </MenuConfirm>\n          )}\n        </span>\n      </div>\n      {!!showTranslatedBio && (\n        <Modal\n          onClose={() => {\n            setShowTranslatedBio(false);\n          }}\n        >\n          <TranslatedBioSheet\n            note={note}\n            fields={fields}\n            onClose={() => setShowTranslatedBio(false)}\n          />\n        </Modal>\n      )}\n      {!!showAddRemoveLists && (\n        <Modal\n          onClose={() => {\n            setShowAddRemoveLists(false);\n          }}\n        >\n          <AddRemoveListsSheet\n            accountID={accountID.current}\n            onClose={() => setShowAddRemoveLists(false)}\n          />\n        </Modal>\n      )}\n      {!!showPrivateNoteModal && (\n        <Modal\n          onClose={() => {\n            setShowPrivateNoteModal(false);\n          }}\n        >\n          <PrivateNoteSheet\n            account={info}\n            note={privateNote}\n            onRelationshipChange={(relationship) => {\n              setRelationship(relationship);\n              // onRelationshipChange({ relationship, currentID: accountID.current });\n            }}\n            onClose={() => setShowPrivateNoteModal(false)}\n          />\n        </Modal>\n      )}\n      {!!showEditProfile && (\n        <Modal\n          onClose={() => {\n            setShowEditProfile(false);\n          }}\n        >\n          <EditProfileSheet\n            onClose={({ state, account } = {}) => {\n              setShowEditProfile(false);\n              if (state === 'success' && account) {\n                onProfileUpdate(account);\n              }\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\n// Apply more alpha if high luminence\nfunction lightenRGB([r, g, b]) {\n  const luminence = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  console.log('luminence', luminence);\n  let alpha;\n  if (luminence >= 220) {\n    alpha = 1;\n  } else if (luminence <= 50) {\n    alpha = 0.1;\n  } else {\n    alpha = luminence / 255;\n  }\n  alpha = Math.min(1, alpha);\n  return [r, g, b, alpha];\n}\n\nfunction niceAccountURL(url) {\n  if (!url) return;\n  const urlObj = URL.parse(url);\n  const { host, pathname } = urlObj;\n  const path = pathname.replace(/\\/$/, '').replace(/^\\//, '');\n  return (\n    <>\n      <span class=\"more-insignificant\">{punycode.toUnicode(host)}/</span>\n      <wbr />\n      <span>{path}</span>\n    </>\n  );\n}\n\nfunction TranslatedBioSheet({ note, fields, onClose }) {\n  const fieldsText =\n    fields\n      ?.map(({ name, value }) => `${name}\\n${getHTMLText(value)}`)\n      .join('\\n\\n') || '';\n\n  const text = getHTMLText(note) + (fieldsText ? `\\n\\n${fieldsText}` : '');\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Translated Bio</Trans>\n        </h2>\n      </header>\n      <main>\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n          }}\n        >\n          {text}\n        </p>\n        <TranslationBlock forceTranslate text={text} />\n      </main>\n    </div>\n  );\n}\n\nfunction AddRemoveListsSheet({ accountID, onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [listsContainingAccount, setListsContainingAccount] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await getLists();\n        setLists(lists);\n        const listsContainingAccount = await masto.v1.accounts\n          .$select(accountID)\n          .lists.list();\n        console.log({ lists, listsContainingAccount });\n        setListsContainingAccount(listsContainingAccount);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div class=\"sheet\" id=\"list-add-remove-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Add/Remove from Lists</Trans>\n        </h2>\n      </header>\n      <main>\n        {lists.length > 0 ? (\n          <ul class=\"list-add-remove\">\n            {lists.map((list) => {\n              const inList = listsContainingAccount.some(\n                (l) => l.id === list.id,\n              );\n              return (\n                <li>\n                  <button\n                    type=\"button\"\n                    class={`light ${inList ? 'checked' : ''}`}\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      (async () => {\n                        try {\n                          if (inList) {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.remove({\n                                accountIds: [accountID],\n                              });\n                          } else {\n                            await masto.v1.lists\n                              .$select(list.id)\n                              .accounts.create({\n                                accountIds: [accountID],\n                              });\n                          }\n                          // setUIState('default');\n                          reload();\n                        } catch (e) {\n                          console.error(e);\n                          setUIState('error');\n                          alert(\n                            inList\n                              ? t`Unable to remove from list.`\n                              : t`Unable to add to list.`,\n                          );\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"check-circle\" alt=\"☑️\" />\n                    <span>{list.title}</span>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Unable to load lists.</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state\">\n            <Trans>No lists.</Trans>\n          </p>\n        )}\n        <button\n          type=\"button\"\n          class=\"plain2\"\n          onClick={() => setShowListAddEditModal(true)}\n          disabled={uiState !== 'default'}\n        >\n          <Icon icon=\"plus\" size=\"l\" />{' '}\n          <span>\n            <Trans>New list</Trans>\n          </span>\n        </button>\n      </main>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction PrivateNoteSheet({\n  account,\n  note: initialNote,\n  onRelationshipChange = () => {},\n  onClose = () => {},\n}) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    let timer;\n    if (textareaRef.current && !initialNote) {\n      timer = setTimeout(() => {\n        textareaRef.current.focus?.();\n      }, 100);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"private-note-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>\n            Private note about{' '}\n            <span class=\"bidi-isolate\">\n              @{account?.username || account?.acct}\n            </span>\n          </Trans>\n        </b>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const note = formData.get('note');\n            if (note?.trim() !== initialNote?.trim()) {\n              setUIState('loading');\n              (async () => {\n                try {\n                  const newRelationship = await masto.v1.accounts\n                    .$select(account?.id)\n                    .note.create({\n                      comment: note,\n                    });\n                  console.log('updated relationship', newRelationship);\n                  setUIState('default');\n                  onRelationshipChange(newRelationship);\n                  onClose();\n                } catch (e) {\n                  console.error(e);\n                  setUIState('error');\n                  alert(e?.message || t`Unable to update private note.`);\n                }\n              })();\n            }\n          }}\n        >\n          <textarea\n            ref={textareaRef}\n            name=\"note\"\n            disabled={uiState === 'loading'}\n            dir=\"auto\"\n          >\n            {initialNote}\n          </textarea>\n          <footer>\n            <button\n              type=\"button\"\n              class=\"light\"\n              disabled={uiState === 'loading'}\n              onClick={() => {\n                onClose?.();\n              }}\n            >\n              <Trans>Cancel</Trans>\n            </button>\n            <span>\n              <Loader abrupt hidden={uiState !== 'loading'} />\n              <button disabled={uiState === 'loading'} type=\"submit\">\n                <Trans>Save &amp; close</Trans>\n              </button>\n            </span>\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction EditProfileSheet({ onClose = () => {} }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('loading');\n  const [account, setAccount] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await masto.v1.accounts.verifyCredentials();\n        setAccount(acc);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  console.log('EditProfileSheet', account);\n  const { displayName, source } = account || {};\n  const { note, fields } = source || {};\n  const fieldsAttributesRef = useRef(null);\n\n  return (\n    <div class=\"sheet\" id=\"edit-profile-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <b>\n          <Trans>Edit profile</Trans>\n        </b>\n      </header>\n      <main>\n        {uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : (\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.target);\n              const displayName = formData.get('display_name');\n              const note = formData.get('note');\n              const fieldsAttributesFields =\n                fieldsAttributesRef.current.querySelectorAll(\n                  'input[name^=\"fields_attributes\"]',\n                );\n              const fieldsAttributes = [];\n              fieldsAttributesFields.forEach((field) => {\n                const name = field.name;\n                const [_, index, key] =\n                  name.match(/fields_attributes\\[(\\d+)\\]\\[(.+)\\]/) || [];\n                const value = field.value ? field.value.trim() : '';\n                if (index && key && value) {\n                  if (!fieldsAttributes[index]) fieldsAttributes[index] = {};\n                  fieldsAttributes[index][key] = value;\n                }\n              });\n              // Fill in the blanks\n              fieldsAttributes.forEach((field) => {\n                if (field.name && !field.value) {\n                  field.value = '';\n                }\n              });\n\n              (async () => {\n                try {\n                  const newAccount = await masto.v1.accounts.updateCredentials({\n                    displayName,\n                    note,\n                    fieldsAttributes,\n                  });\n                  console.log('updated account', newAccount);\n                  onClose?.({\n                    state: 'success',\n                    account: newAccount,\n                  });\n                } catch (e) {\n                  console.error(e);\n                  alert(e?.message || t`Unable to update profile.`);\n                }\n              })();\n            }}\n          >\n            <p>\n              <label>\n                Name{' '}\n                <input\n                  type=\"text\"\n                  name=\"display_name\"\n                  defaultValue={displayName}\n                  maxLength={30}\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            <p>\n              <label>\n                <Trans>Bio</Trans>\n                <textarea\n                  defaultValue={note}\n                  name=\"note\"\n                  maxLength={500}\n                  rows=\"5\"\n                  disabled={uiState === 'loading'}\n                  dir=\"auto\"\n                />\n              </label>\n            </p>\n            {/* Table for fields; name and values are in fields, min 4 rows */}\n            <p>\n              <Trans>Extra fields</Trans>\n            </p>\n            <table ref={fieldsAttributesRef}>\n              <thead>\n                <tr>\n                  <th>\n                    <Trans>Label</Trans>\n                  </th>\n                  <th>\n                    <Trans>Content</Trans>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {Array.from({ length: Math.max(4, fields.length) }).map(\n                  (_, i) => {\n                    const { name = '', value = '' } = fields[i] || {};\n                    return (\n                      <FieldsAttributesRow\n                        key={i}\n                        name={name}\n                        value={value}\n                        index={i}\n                        disabled={uiState === 'loading'}\n                      />\n                    );\n                  },\n                )}\n              </tbody>\n            </table>\n            <footer>\n              <button\n                type=\"button\"\n                class=\"light\"\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  onClose?.();\n                }}\n              >\n                <Trans>Cancel</Trans>\n              </button>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                <Trans>Save</Trans>\n              </button>\n            </footer>\n          </form>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction FieldsAttributesRow({ name, value, disabled, index: i }) {\n  const [hasValue, setHasValue] = useState(!!value);\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][name]`}\n          defaultValue={name}\n          disabled={disabled}\n          maxLength={255}\n          required={hasValue}\n          dir=\"auto\"\n        />\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          name={`fields_attributes[${i}][value]`}\n          defaultValue={value}\n          disabled={disabled}\n          maxLength={255}\n          onChange={(e) => setHasValue(!!e.currentTarget.value)}\n          dir=\"auto\"\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction AccountHandleInfo({ acct, instance }) {\n  // acct = username or username@server\n  let [username, server] = acct.split('@');\n  if (!server) server = instance;\n  return (\n    <div class=\"handle-info\">\n      <span class=\"handle-handle\">\n        <b class=\"handle-username\">{username}</b>\n        <span class=\"handle-at\">@</span>\n        <b class=\"handle-server\">{server}</b>\n      </span>\n      <div class=\"handle-legend\">\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon username\" /> <Trans>username</Trans>\n        </span>{' '}\n        <span class=\"ib\">\n          <span class=\"handle-legend-icon server\" />{' '}\n          <Trans>server domain name</Trans>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountInfo;\n","import { t } from '@lingui/macro';\nimport { useEffect } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountInfo from './account-info';\nimport Icon from './icon';\n\nfunction AccountSheet({ account, instance: propInstance, onClose }) {\n  const { masto, instance, authenticated } = api({ instance: propInstance });\n  const isString = typeof account === 'string';\n\n  useEffect(() => {\n    if (!isString) {\n      states.accounts[`${account.id}@${instance}`] = account;\n    }\n  }, [account]);\n\n  useLocationChange(onClose);\n\n  return (\n    <div\n      class=\"sheet\"\n      // onClick={(e) => {\n      //   const accountBlock = e.target.closest('.account-block');\n      //   if (accountBlock) {\n      //     onClose({\n      //       destination: 'account-statuses',\n      //     });\n      //   }\n      // }}\n    >\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <AccountInfo\n        instance={instance}\n        authenticated={authenticated}\n        account={account}\n        fetchAccount={async () => {\n          if (isString) {\n            try {\n              const info = await masto.v1.accounts.lookup({\n                acct: account,\n                skip_webfinger: false,\n              });\n              return info;\n            } catch (e) {\n              const result = await masto.v2.search.fetch({\n                q: account,\n                type: 'accounts',\n                limit: 1,\n                resolve: authenticated,\n              });\n              if (result.accounts.length) {\n                return result.accounts[0];\n              } else if (/https?:\\/\\/[^/]+\\/@/.test(account)) {\n                const accountURL = URL.parse(account);\n                const { hostname, pathname } = accountURL;\n                const acct =\n                  pathname.replace(/^\\//, '').replace(/\\/$/, '') +\n                  '@' +\n                  hostname;\n                const result = await masto.v2.search.fetch({\n                  q: acct,\n                  type: 'accounts',\n                  limit: 1,\n                  resolve: authenticated,\n                });\n                if (result.accounts.length) {\n                  return result.accounts[0];\n                }\n              }\n            }\n          } else {\n            return account;\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountSheet;\n","import './drafts.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport niceDateTime from '../utils/nice-date-time';\nimport states from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Icon from './icon';\nimport Loader from './loader';\nimport MenuConfirm from './menu-confirm';\n\nfunction Drafts({ onClose }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [drafts, setDrafts] = useState([]);\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const keys = await db.drafts.keys();\n        if (keys.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = keys.filter((key) => key.startsWith(ns));\n          if (ownKeys.length) {\n            const drafts = await db.drafts.getMany(ownKeys);\n            drafts.sort(\n              (a, b) =>\n                new Date(b.updatedAt).getTime() -\n                new Date(a.updatedAt).getTime(),\n            );\n            setDrafts(drafts);\n          } else {\n            setDrafts([]);\n          }\n        } else {\n          setDrafts([]);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const hasDrafts = drafts?.length > 0;\n\n  return (\n    <div class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Unsent drafts</Trans>{' '}\n          <Loader abrupt hidden={uiState !== 'loading'} />\n        </h2>\n        {hasDrafts && (\n          <div class=\"insignificant\">\n            <Trans>\n              Looks like you have unsent drafts. Let's continue where you left\n              off.\n            </Trans>\n          </div>\n        )}\n      </header>\n      <main>\n        {hasDrafts ? (\n          <>\n            <ul class=\"drafts-list\">\n              {drafts.map((draft) => {\n                const { updatedAt, key, draftStatus, replyTo } = draft;\n                const updatedAtDate = new Date(updatedAt);\n                return (\n                  <li key={updatedAt}>\n                    <div class=\"mini-draft-meta\">\n                      <b>\n                        <Icon icon={replyTo ? 'reply' : 'quill'} size=\"s\" />{' '}\n                        <time>\n                          {!!replyTo && (\n                            <>\n                              <span class=\"bidi-isolate\">\n                                @{replyTo.account.acct}\n                              </span>\n                              <br />\n                            </>\n                          )}\n                          {niceDateTime(updatedAtDate)}\n                        </time>\n                      </b>\n                      <MenuConfirm\n                        confirmLabel={\n                          <span>\n                            <Trans>Delete this draft?</Trans>\n                          </span>\n                        }\n                        menuItemClassName=\"danger\"\n                        align=\"end\"\n                        disabled={uiState === 'loading'}\n                        onClick={() => {\n                          (async () => {\n                            try {\n                              // const yes = confirm('Delete this draft?');\n                              // if (yes) {\n                              await db.drafts.del(key);\n                              reload();\n                              // }\n                            } catch (e) {\n                              alert(t`Error deleting draft! Please try again.`);\n                            }\n                          })();\n                        }}\n                      >\n                        <button\n                          type=\"button\"\n                          class=\"small light\"\n                          disabled={uiState === 'loading'}\n                        >\n                          <Trans>Delete…</Trans>\n                        </button>\n                      </MenuConfirm>\n                    </div>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      class=\"draft-item\"\n                      onClick={async () => {\n                        // console.log({ draftStatus });\n                        let replyToStatus;\n                        if (replyTo) {\n                          setUIState('loading');\n                          try {\n                            replyToStatus = await masto.v1.statuses\n                              .$select(replyTo.id)\n                              .fetch();\n                          } catch (e) {\n                            console.error(e);\n                            alert(t`Error fetching reply-to status!`);\n                            setUIState('default');\n                            return;\n                          }\n                          setUIState('default');\n                        }\n                        window.__COMPOSE__ = {\n                          draftStatus,\n                          replyToStatus,\n                        };\n                        states.showCompose = true;\n                        states.showDrafts = false;\n                      }}\n                    >\n                      <MiniDraft draft={draft} />\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            {drafts.length > 1 && (\n              <p>\n                <MenuConfirm\n                  confirmLabel={\n                    <span>\n                      <Trans>Delete all drafts?</Trans>\n                    </span>\n                  }\n                  menuItemClassName=\"danger\"\n                  disabled={uiState === 'loading'}\n                  onClick={() => {\n                    (async () => {\n                      // const yes = confirm('Delete all drafts?');\n                      // if (yes) {\n                      setUIState('loading');\n                      try {\n                        await db.drafts.delMany(\n                          drafts.map((draft) => draft.key),\n                        );\n                        setUIState('default');\n                        reload();\n                      } catch (e) {\n                        console.error(e);\n                        alert(t`Error deleting drafts! Please try again.`);\n                        setUIState('error');\n                      }\n                      // }\n                    })();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"light danger\"\n                    disabled={uiState === 'loading'}\n                  >\n                    <Trans>Delete all…</Trans>\n                  </button>\n                </MenuConfirm>\n              </p>\n            )}\n          </>\n        ) : (\n          <p>\n            <Trans>No drafts found.</Trans>\n          </p>\n        )}\n      </main>\n    </div>\n  );\n}\n\nfunction MiniDraft({ draft }) {\n  const { draftStatus, replyTo } = draft;\n  const { status, spoilerText, poll, mediaAttachments } = draftStatus;\n  const hasPoll = poll?.options?.length > 0;\n  const hasMedia = mediaAttachments?.length > 0;\n  const hasPollOrMedia = hasPoll || hasMedia;\n  const firstImageMedia = useMemo(() => {\n    if (!hasMedia) return;\n    const image = mediaAttachments.find((media) => /image/.test(media.type));\n    if (!image) return;\n    const { file } = image;\n    const objectURL = URL.createObjectURL(file);\n    return objectURL;\n  }, [hasMedia, mediaAttachments]);\n  return (\n    <>\n      <div class=\"mini-draft\">\n        {hasPollOrMedia && (\n          <div\n            class={`mini-draft-aside ${firstImageMedia ? 'has-image' : ''}`}\n            style={\n              firstImageMedia\n                ? {\n                    '--bg-image': `url(${firstImageMedia})`,\n                  }\n                : {}\n            }\n          >\n            {hasPoll && <Icon icon=\"poll\" alt={t`Poll`} />}\n            {hasMedia && (\n              <span>\n                <Icon icon=\"attachment\" alt={t`Media`} />{' '}\n                <small>{mediaAttachments?.length}</small>\n              </span>\n            )}\n          </div>\n        )}\n        <div class=\"mini-draft-main\">\n          {!!spoilerText && <div class=\"mini-draft-spoiler\">{spoilerText}</div>}\n          {!!status && <div class=\"mini-draft-status\">{status}</div>}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Drafts;\n","import './embed-modal.css';\n\nimport { t, Trans } from '@lingui/macro';\n\nimport Icon from './icon';\n\nfunction EmbedModal({ html, url, width, height, onClose = () => {} }) {\n  return (\n    <div class=\"embed-modal-container\">\n      <div class=\"top-controls\">\n        <button type=\"button\" class=\"light\" onClick={() => onClose()}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n        {url && (\n          <a\n            href={url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"button plain\"\n          >\n            <span>\n              <Trans>Open in new window</Trans>\n            </span>{' '}\n            <Icon icon=\"external\" />\n          </a>\n        )}\n      </div>\n      <div\n        class=\"embed-content\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        style={{\n          '--width': width + 'px',\n          '--height': height + 'px',\n          '--aspect-ratio': `${width}/${height}`,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default EmbedModal;\n","import './generic-accounts.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport states from '../utils/states';\nimport useLocationChange from '../utils/useLocationChange';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Link from './link';\nimport Loader from './loader';\nimport Status from './status';\n\nexport default function GenericAccounts({\n  instance,\n  excludeRelationshipAttrs = [],\n  postID,\n  onClose = () => {},\n  blankCopy = t`Nothing to show`,\n}) {\n  const { masto, instance: currentInstance } = api();\n  const isCurrentInstance = instance ? instance === currentInstance : true;\n  const snapStates = useSnapshot(states);\n  ``;\n  const [uiState, setUIState] = useState('default');\n  const [accounts, setAccounts] = useState([]);\n  const [showMore, setShowMore] = useState(false);\n\n  useLocationChange(onClose);\n\n  if (!snapStates.showGenericAccounts) {\n    return null;\n  }\n\n  const {\n    id,\n    heading,\n    fetchAccounts,\n    accounts: staticAccounts,\n    showReactions,\n  } = snapStates.showGenericAccounts;\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    if (!isCurrentInstance) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  const loadAccounts = (firstLoad) => {\n    if (!fetchAccounts) return;\n    if (firstLoad) setAccounts([]);\n    setUIState('loading');\n    (async () => {\n      try {\n        const { done, value } = await fetchAccounts(firstLoad);\n        if (Array.isArray(value)) {\n          if (firstLoad) {\n            const accounts = [];\n            for (let i = 0; i < value.length; i++) {\n              const account = value[i];\n              const theAccount = accounts.find(\n                (a, j) => a.id === account.id && i !== j,\n              );\n              if (!theAccount) {\n                accounts.push({\n                  _types: [],\n                  ...account,\n                });\n              } else {\n                theAccount._types.push(...account._types);\n              }\n            }\n            setAccounts(accounts);\n          } else {\n            // setAccounts((prev) => [...prev, ...value]);\n            // Merge accounts by id and _types\n            setAccounts((prev) => {\n              const newAccounts = prev;\n              for (const account of value) {\n                const theAccount = newAccounts.find((a) => a.id === account.id);\n                if (!theAccount) {\n                  newAccounts.push(account);\n                } else {\n                  theAccount._types.push(...account._types);\n                }\n              }\n              return newAccounts;\n            });\n          }\n          setShowMore(!done);\n\n          loadRelationships(value);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (staticAccounts?.length > 0) {\n      setAccounts(staticAccounts);\n      loadRelationships(staticAccounts);\n    } else {\n      loadAccounts(true);\n      firstLoad.current = false;\n    }\n  }, [staticAccounts, fetchAccounts]);\n\n  useEffect(() => {\n    if (firstLoad.current) return;\n    // reloadGenericAccounts contains value like {id: 'mute', counter: 1}\n    // We only need to reload if the id matches\n    if (snapStates.reloadGenericAccounts?.id === id) {\n      loadAccounts(true);\n    }\n  }, [snapStates.reloadGenericAccounts.counter]);\n\n  const post = states.statuses[postID];\n\n  return (\n    <div id=\"generic-accounts-container\" class=\"sheet\" tabindex=\"-1\">\n      <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n        <Icon icon=\"x\" alt={t`Close`} />\n      </button>\n      <header>\n        <h2>{heading || t`Accounts`}</h2>\n      </header>\n      <main>\n        {post && (\n          <Link\n            to={`/${instance || currentInstance}/s/${post.id}`}\n            class=\"post-preview\"\n          >\n            <Status status={post} size=\"s\" readOnly />\n          </Link>\n        )}\n        {accounts.length > 0 ? (\n          <>\n            <ul class=\"accounts-list\">\n              {accounts.map((account) => {\n                const relationship = relationshipsMap[account.id];\n                const key = `${account.id}-${account._types?.length || ''}`;\n                return (\n                  <li key={key}>\n                    {showReactions && account._types?.length > 0 && (\n                      <div class=\"reactions-block\">\n                        {account._types.map((type) => (\n                          <Icon\n                            icon={\n                              {\n                                reblog: 'rocket',\n                                favourite: 'heart',\n                              }[type]\n                            }\n                            class={`${type}-icon`}\n                          />\n                        ))}\n                      </div>\n                    )}\n                    <div class=\"account-relationships\">\n                      <AccountBlock\n                        account={account}\n                        showStats\n                        relationship={relationship}\n                        excludeRelationshipAttrs={excludeRelationshipAttrs}\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {uiState === 'default' ? (\n              showMore ? (\n                <InView\n                  onChange={(inView) => {\n                    if (inView) {\n                      loadAccounts();\n                    }\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain block\"\n                    onClick={() => loadAccounts()}\n                  >\n                    <Trans>Show more…</Trans>\n                  </button>\n                </InView>\n              ) : (\n                <p class=\"ui-state insignificant\">\n                  <Trans>The end.</Trans>\n                </p>\n              )\n            ) : (\n              uiState === 'loading' && (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              )\n            )}\n          </>\n        ) : uiState === 'loading' ? (\n          <p class=\"ui-state\">\n            <Loader abrupt />\n          </p>\n        ) : uiState === 'error' ? (\n          <p class=\"ui-state\">\n            <Trans>Error loading accounts</Trans>\n          </p>\n        ) : (\n          <p class=\"ui-state insignificant\">{blankCopy}</p>\n        )}\n      </main>\n    </div>\n  );\n}\n","import { t, Trans } from '@lingui/macro';\nimport { Menu, MenuItem } from '@szhsin/react-menu';\nimport { useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport getTranslateTargetLanguage from '../utils/get-translate-target-language';\nimport localeMatch from '../utils/locale-match';\nimport { speak, supportsTTS } from '../utils/speech';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Menu2 from './menu2';\nimport TranslationBlock from './translation-block';\n\nexport default function MediaAltModal({ alt, lang, onClose }) {\n  const snapStates = useSnapshot(states);\n  const [forceTranslate, setForceTranslate] = useState(false);\n  const targetLanguage = getTranslateTargetLanguage(true);\n  const contentTranslationHideLanguages =\n    snapStates.settings.contentTranslationHideLanguages || [];\n  const differentLanguage =\n    !!lang &&\n    lang !== targetLanguage &&\n    !localeMatch([lang], [targetLanguage]) &&\n    !contentTranslationHideLanguages.find(\n      (l) => lang === l || localeMatch([lang], [l]),\n    );\n\n  return (\n    <div class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close outer\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header class=\"header-grid\">\n        <h2>\n          <Trans>Media description</Trans>\n        </h2>\n        <div class=\"header-side\">\n          <Menu2\n            align=\"end\"\n            menuButton={\n              <button type=\"button\" class=\"plain4\">\n                <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n              </button>\n            }\n          >\n            <MenuItem\n              disabled={forceTranslate}\n              onClick={() => {\n                setForceTranslate(true);\n              }}\n            >\n              <Icon icon=\"translate\" />\n              <span>\n                <Trans>Translate</Trans>\n              </span>\n            </MenuItem>\n            {supportsTTS && (\n              <MenuItem\n                onClick={() => {\n                  speak(alt, lang);\n                }}\n              >\n                <Icon icon=\"speak\" />\n                <span>\n                  <Trans>Speak</Trans>\n                </span>\n              </MenuItem>\n            )}\n          </Menu2>\n        </div>\n      </header>\n      <main lang={lang} dir=\"auto\">\n        <p\n          style={{\n            whiteSpace: 'pre-wrap',\n            textWrap: 'pretty',\n          }}\n        >\n          {alt}\n        </p>\n        {(differentLanguage || forceTranslate) && (\n          <TranslationBlock\n            forceTranslate={forceTranslate}\n            sourceLanguage={lang}\n            text={alt}\n          />\n        )}\n      </main>\n    </div>\n  );\n}\n","// https://gist.github.com/earthbound19/e7fe15fdf8ca3ef814750a61bc75b5ce\nfunction clamp(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst gammaToLinear = (c) =>\n  c >= 0.04045 ? Math.pow((c + 0.055) / 1.055, 2.4) : c / 12.92;\nconst linearToGamma = (c) =>\n  c >= 0.0031308 ? 1.055 * Math.pow(c, 1 / 2.4) - 0.055 : 12.92 * c;\n\nexport function rgb2oklab([r, g, b]) {\n  r = gammaToLinear(r / 255);\n  g = gammaToLinear(g / 255);\n  b = gammaToLinear(b / 255);\n  var l = 0.4122214708 * r + 0.5363325363 * g + 0.0514459929 * b;\n  var m = 0.2119034982 * r + 0.6806995451 * g + 0.1073969566 * b;\n  var s = 0.0883024619 * r + 0.2817188376 * g + 0.6299787005 * b;\n  l = Math.cbrt(l);\n  m = Math.cbrt(m);\n  s = Math.cbrt(s);\n  return [\n    l * +0.2104542553 + m * +0.793617785 + s * -0.0040720468,\n    l * +1.9779984951 + m * -2.428592205 + s * +0.4505937099,\n    l * +0.0259040371 + m * +0.7827717662 + s * -0.808675766,\n  ];\n}\n\nexport function oklab2rgb([L, a, b]) {\n  var l = L + a * +0.3963377774 + b * +0.2158037573;\n  var m = L + a * -0.1055613458 + b * -0.0638541728;\n  var s = L + a * -0.0894841775 + b * -1.291485548;\n  // The ** operator here cubes; same as l_*l_*l_ in the C++ example:\n  l = l ** 3;\n  m = m ** 3;\n  s = s ** 3;\n  var r = l * +4.0767416621 + m * -3.3077115913 + s * +0.2309699292;\n  var g = l * -1.2684380046 + m * +2.6097574011 + s * -0.3413193965;\n  var b = l * -0.0041960863 + m * -0.7034186147 + s * +1.707614701;\n  // Convert linear RGB values returned from oklab math to sRGB for our use before returning them:\n  r = 255 * linearToGamma(r);\n  g = 255 * linearToGamma(g);\n  b = 255 * linearToGamma(b);\n  // OPTION: clamp r g and b values to the range 0-255; but if you use the values immediately to draw, JavaScript clamps them on use:\n  r = clamp(r, 0, 255);\n  g = clamp(g, 0, 255);\n  b = clamp(b, 0, 255);\n  // OPTION: round the values. May not be necessary if you use them immediately for rendering in JavaScript, as JavaScript (also) discards decimals on render:\n  r = Math.round(r);\n  g = Math.round(g);\n  b = Math.round(b);\n  return [r, g, b];\n}\n","import { t, Trans } from '@lingui/macro';\nimport { MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport isRTL from '../utils/is-rtl';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Media from './media';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\n\nconst { PHANPY_IMG_ALT_API_URL: IMG_ALT_API_URL } = import.meta.env;\n\nfunction MediaModal({\n  mediaAttachments,\n  statusID,\n  instance,\n  lang,\n  index = 0,\n  onClose = () => {},\n}) {\n  const [uiState, setUIState] = useState('default');\n  const carouselRef = useRef(null);\n\n  const [currentIndex, setCurrentIndex] = useState(index);\n  const carouselFocusItem = useRef(null);\n  useLayoutEffect(() => {\n    carouselFocusItem.current?.scrollIntoView();\n\n    // history.pushState({ mediaModal: true }, '');\n    // const handlePopState = (e) => {\n    //   if (e.state?.mediaModal) {\n    //     onClose();\n    //   }\n    // };\n    // window.addEventListener('popstate', handlePopState);\n    // return () => {\n    //   window.removeEventListener('popstate', handlePopState);\n    // };\n  }, []);\n  const prevStatusID = useRef(statusID);\n  useEffect(() => {\n    const scrollLeft = index * carouselRef.current.clientWidth;\n    const differentStatusID = prevStatusID.current !== statusID;\n    if (differentStatusID) prevStatusID.current = statusID;\n    carouselRef.current.focus();\n    carouselRef.current.scrollTo({\n      left: scrollLeft * (isRTL() ? -1 : 1),\n      behavior: differentStatusID ? 'auto' : 'smooth',\n    });\n  }, [index, statusID]);\n\n  const [showControls, setShowControls] = useState(true);\n\n  useEffect(() => {\n    let handleSwipe = () => {\n      onClose();\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('swiped-down', handleSwipe);\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('swiped-down', handleSwipe);\n      }\n    };\n  }, []);\n\n  useHotkeys(\n    'esc',\n    onClose,\n    {\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n    [onClose],\n  );\n\n  useEffect(() => {\n    let handleScroll = () => {\n      const { clientWidth, scrollLeft } = carouselRef.current;\n      const index = Math.round(Math.abs(scrollLeft) / clientWidth);\n      setCurrentIndex(index);\n    };\n    if (carouselRef.current) {\n      carouselRef.current.addEventListener('scroll', handleScroll, {\n        passive: true,\n      });\n    }\n    return () => {\n      if (carouselRef.current) {\n        carouselRef.current.removeEventListener('scroll', handleScroll);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      carouselRef.current?.focus?.();\n    }, 100);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const mediaAccentColors = useMemo(() => {\n    return mediaAttachments?.map((media) => {\n      const { blurhash } = media;\n      if (blurhash) {\n        const averageColor = getBlurHashAverageColor(blurhash);\n        const labAverageColor = rgb2oklab(averageColor);\n        return oklab2rgb([0.6, labAverageColor[1], labAverageColor[2]]);\n      }\n      return null;\n    });\n  }, [mediaAttachments]);\n  const mediaAccentGradient = useMemo(() => {\n    const gap = 5;\n    const range = 100 / mediaAccentColors.length;\n    return (\n      mediaAccentColors\n        ?.map((color, i) => {\n          const start = i * range + gap;\n          const end = (i + 1) * range - gap;\n          if (color) {\n            return `\n            rgba(${color?.join(',')}, 0.4) ${start}%,\n            rgba(${color?.join(',')}, 0.4) ${end}%\n          `;\n          }\n\n          return `\n            transparent ${start}%,\n            transparent ${end}%\n          `;\n        })\n        ?.join(', ') || 'transparent'\n    );\n  }, [mediaAccentColors]);\n\n  let toastRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      toastRef.current?.hideToast?.();\n    };\n  }, []);\n\n  return (\n    <div\n      class={`media-modal-container media-modal-count-${mediaAttachments?.length}`}\n    >\n      <div\n        ref={carouselRef}\n        tabIndex=\"0\"\n        data-swipe-threshold=\"44\"\n        class=\"carousel\"\n        onClick={(e) => {\n          if (\n            e.target.classList.contains('carousel-item') ||\n            e.target.classList.contains('media') ||\n            e.target.classList.contains('media-zoom')\n          ) {\n            onClose();\n          }\n        }}\n        style={\n          mediaAttachments.length > 1\n            ? {\n                backgroundAttachment: 'local',\n                backgroundImage: `linear-gradient(\n            to ${isRTL() ? 'left' : 'right'}, ${mediaAccentGradient})`,\n              }\n            : {}\n        }\n      >\n        {mediaAttachments?.map((media, i) => {\n          const accentColor =\n            mediaAttachments.length === 1 ? mediaAccentColors[i] : null;\n          return (\n            <div\n              class=\"carousel-item\"\n              style={\n                accentColor\n                  ? {\n                      '--accent-color': `rgb(${accentColor?.join(',')})`,\n                      '--accent-alpha-color': `rgba(${accentColor?.join(\n                        ',',\n                      )}, 0.4)`,\n                    }\n                  : {}\n              }\n              tabindex=\"0\"\n              key={media.id}\n              ref={i === currentIndex ? carouselFocusItem : null}\n              onClick={(e) => {\n                // console.log(e);\n                // if (e.target !== e.currentTarget) {\n                //   setShowControls(!showControls);\n                // }\n                if (!e.target.classList.contains('media')) {\n                  setShowControls(!showControls);\n                }\n              }}\n            >\n              {!!media.description && (\n                <button\n                  type=\"button\"\n                  class=\"media-alt\"\n                  hidden={!showControls}\n                  onClick={() => {\n                    states.showMediaAlt = {\n                      alt: media.description,\n                      lang,\n                    };\n                  }}\n                >\n                  <span class=\"alt-badge\">ALT</span>\n                  <span class=\"media-alt-desc\" lang={lang} dir=\"auto\">\n                    {media.description}\n                  </span>\n                </button>\n              )}\n              <Media media={media} showOriginal lang={lang} />\n            </div>\n          );\n        })}\n      </div>\n      <div class=\"carousel-top-controls\" hidden={!showControls}>\n        <span>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            onClick={() => onClose()}\n          >\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n        </span>\n        {mediaAttachments?.length > 1 ? (\n          <span class=\"carousel-dots\">\n            {mediaAttachments?.map((media, i) => (\n              <button\n                key={media.id}\n                type=\"button\"\n                disabled={i === currentIndex}\n                class={`carousel-dot ${i === currentIndex ? 'active' : ''}`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  const left =\n                    carouselRef.current.clientWidth * i * (isRTL() ? -1 : 1);\n                  carouselRef.current.scrollTo({ left, behavior: 'smooth' });\n                  carouselRef.current.focus();\n                }}\n              >\n                <Icon icon=\"round\" size=\"s\" alt=\"⸱\" />\n              </button>\n            ))}\n          </span>\n        ) : (\n          <span />\n        )}\n        <span>\n          <Menu2\n            overflow=\"auto\"\n            align=\"end\"\n            position=\"anchor\"\n            gap={4}\n            menuClassName=\"glass-menu\"\n            menuButton={\n              <button type=\"button\" class=\"carousel-button\">\n                <Icon icon=\"more\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuLink\n              href={\n                mediaAttachments[currentIndex]?.remoteUrl ||\n                mediaAttachments[currentIndex]?.url\n              }\n              class=\"carousel-button\"\n              target=\"_blank\"\n              title={t`Open original media in new window`}\n            >\n              <Icon icon=\"popout\" />\n              <span>\n                <Trans>Open original media</Trans>\n              </span>\n            </MenuLink>\n            {import.meta.env.DEV && // Only dev for now\n              !!states.settings.mediaAltGenerator &&\n              !!IMG_ALT_API_URL &&\n              !!mediaAttachments[currentIndex]?.url &&\n              !mediaAttachments[currentIndex]?.description &&\n              mediaAttachments[currentIndex]?.type === 'image' && (\n                <>\n                  <MenuDivider />\n                  <MenuItem\n                    disabled={uiState === 'loading'}\n                    onClick={() => {\n                      setUIState('loading');\n                      toastRef.current = showToast({\n                        text: t`Attempting to describe image. Please wait…`,\n                        duration: -1,\n                      });\n                      (async function () {\n                        try {\n                          const response = await fetch(\n                            `${IMG_ALT_API_URL}?image=${encodeURIComponent(\n                              mediaAttachments[currentIndex]?.url,\n                            )}`,\n                          ).then((r) => r.json());\n                          states.showMediaAlt = {\n                            alt: response.description,\n                          };\n                        } catch (e) {\n                          console.error(e);\n                          showToast(t`Failed to describe image`);\n                        } finally {\n                          setUIState('default');\n                          toastRef.current?.hideToast?.();\n                        }\n                      })();\n                    }}\n                  >\n                    <Icon icon=\"sparkles2\" />\n                    <span>\n                      <Trans>Describe image…</Trans>\n                    </span>\n                  </MenuItem>\n                </>\n              )}\n          </Menu2>{' '}\n          <Link\n            to={`${instance ? `/${instance}` : ''}/s/${statusID}${\n              window.matchMedia('(min-width: calc(40em + 350px))').matches\n                ? `?media=${currentIndex + 1}`\n                : ''\n            }`}\n            class=\"button carousel-button media-post-link\"\n            // onClick={() => {\n            //   // if small screen (not media query min-width 40em + 350px), run onClose\n            //   if (\n            //     !window.matchMedia('(min-width: calc(40em + 350px))').matches\n            //   ) {\n            //     onClose();\n            //   }\n            // }}\n          >\n            <span class=\"button-label\">\n              <Trans>View post</Trans>{' '}\n            </span>\n            &raquo;\n          </Link>\n        </span>\n      </div>\n      {mediaAttachments?.length > 1 && (\n        <div class=\"carousel-controls\" hidden={!showControls}>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === 0}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex - 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-left\" alt={t`Previous`} />\n          </button>\n          <button\n            type=\"button\"\n            class=\"carousel-button\"\n            hidden={currentIndex === mediaAttachments.length - 1}\n            onClick={(e) => {\n              e.preventDefault();\n              e.stopPropagation();\n              carouselRef.current.focus();\n              carouselRef.current.scrollTo({\n                left:\n                  carouselRef.current.clientWidth *\n                  (currentIndex + 1) *\n                  (isRTL() ? -1 : 1),\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"arrow-right\" alt={t`Next`} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MediaModal;\n","import './report-modal.css';\n\nimport { msg, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { Fragment } from 'preact';\nimport { useMemo, useRef, useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\nimport showToast from '../utils/show-toast';\nimport { getCurrentInstance } from '../utils/store-utils';\n\nimport AccountBlock from './account-block';\nimport Icon from './icon';\nimport Loader from './loader';\nimport Status from './status';\n\n// NOTE: `dislike` hidden for now, it's actually not used for reporting\n// Mastodon shows another screen for unfollowing, muting or blocking instead of reporting\n\nconst CATEGORIES = [, /*'dislike'*/ 'spam', 'legal', 'violation', 'other'];\n// `violation` will be set if there are `rule_ids[]`\n\nconst CATEGORIES_INFO = {\n  // dislike: {\n  //   label: 'Dislike',\n  //   description: 'Not something you want to see',\n  // },\n  spam: {\n    label: msg`Spam`,\n    description: msg`Malicious links, fake engagement, or repetitive replies`,\n  },\n  legal: {\n    label: msg`Illegal`,\n    description: msg`Violates the law of your or the server's country`,\n  },\n  violation: {\n    label: msg`Server rule violation`,\n    description: msg`Breaks specific server rules`,\n    stampLabel: msg`Violation`,\n  },\n  other: {\n    label: msg`Other`,\n    description: msg`Issue doesn't fit other categories`,\n    excludeStamp: true,\n  },\n};\n\nfunction ReportModal({ account, post, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [username, domain] = account.acct.split('@');\n\n  const [rules, currentDomain] = useMemo(() => {\n    const { rules, domain } = getCurrentInstance();\n    return [rules || [], domain];\n  });\n\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showRules, setShowRules] = useState(false);\n\n  const rulesRef = useRef(null);\n  const [hasRules, setHasRules] = useState(false);\n\n  return (\n    <div class=\"report-modal-container\">\n      <div class=\"top-controls\">\n        <h1>{post ? t`Report Post` : t`Report @${username}`}</h1>\n        <button\n          type=\"button\"\n          class=\"plain4 small\"\n          disabled={uiState === 'loading'}\n          onClick={() => onClose()}\n        >\n          <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n        </button>\n      </div>\n      <main>\n        <div class=\"report-preview\">\n          {post ? (\n            <Status status={post} size=\"s\" previewMode />\n          ) : (\n            <AccountBlock\n              account={account}\n              avatarSize=\"xxl\"\n              useAvatarStatic\n              showStats\n              showActivity\n            />\n          )}\n        </div>\n        {!!selectedCategory &&\n          !CATEGORIES_INFO[selectedCategory].excludeStamp && (\n            <span\n              class=\"rubber-stamp\"\n              key={selectedCategory}\n              aria-hidden=\"true\"\n            >\n              {_(\n                CATEGORIES_INFO[selectedCategory].stampLabel ||\n                  _(CATEGORIES_INFO[selectedCategory].label),\n              )}\n              <small>\n                <Trans>Pending review</Trans>\n              </small>\n            </span>\n          )}\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const entries = Object.fromEntries(formData.entries());\n            console.log('ENTRIES', entries);\n\n            let { category, comment, forward } = entries;\n            if (!comment) comment = undefined;\n            if (forward === 'on') forward = true;\n            const ruleIds =\n              category === 'violation'\n                ? Object.entries(entries)\n                    .filter(([key]) => key.startsWith('rule_ids'))\n                    .map(([key, value]) => value)\n                : undefined;\n\n            const params = {\n              category,\n              comment,\n              forward,\n              ruleIds,\n            };\n            console.log('PARAMS', params);\n\n            setUIState('loading');\n            (async () => {\n              try {\n                await masto.v1.reports.create({\n                  accountId: account.id,\n                  statusIds: post?.id ? [post.id] : undefined,\n                  category,\n                  comment,\n                  ruleIds,\n                  forward,\n                });\n                setUIState('success');\n                showToast(post ? t`Post reported` : t`Profile reported`);\n                onClose();\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                showToast(\n                  error?.message ||\n                    (post\n                      ? t`Unable to report post`\n                      : t`Unable to report profile`),\n                );\n              }\n            })();\n          }}\n        >\n          <p>\n            {post\n              ? t`What's the issue with this post?`\n              : t`What's the issue with this profile?`}\n          </p>\n          <section class=\"report-categories\">\n            {CATEGORIES.map((category) =>\n              category === 'violation' && !rules?.length ? null : (\n                <Fragment key={category}>\n                  <label class=\"report-category\">\n                    <input\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category}\n                      required\n                      disabled={uiState === 'loading'}\n                      onChange={(e) => {\n                        setSelectedCategory(e.target.value);\n                        setShowRules(e.target.value === 'violation');\n                      }}\n                    />\n                    <span>\n                      {_(CATEGORIES_INFO[category].label)} &nbsp;\n                      <small class=\"ib insignificant\">\n                        {_(CATEGORIES_INFO[category].description)}\n                      </small>\n                    </span>\n                  </label>\n                  {category === 'violation' && !!rules?.length && (\n                    <div\n                      class=\"shazam-container no-animation\"\n                      hidden={!showRules}\n                    >\n                      <div class=\"shazam-container-inner\">\n                        <div class=\"report-rules\" ref={rulesRef}>\n                          {rules.map((rule, i) => (\n                            <label class=\"report-rule\" key={rule.id}>\n                              <input\n                                type=\"checkbox\"\n                                name={`rule_ids[${i}]`}\n                                value={rule.id}\n                                required={showRules && !hasRules}\n                                disabled={uiState === 'loading'}\n                                onChange={(e) => {\n                                  const { checked } = e.target;\n                                  if (checked) {\n                                    setHasRules(true);\n                                  } else {\n                                    const checkedInputs =\n                                      rulesRef.current.querySelectorAll(\n                                        'input:checked',\n                                      );\n                                    if (!checkedInputs.length) {\n                                      setHasRules(false);\n                                    }\n                                  }\n                                }}\n                              />\n                              <span>{rule.text}</span>\n                            </label>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </Fragment>\n              ),\n            )}\n          </section>\n          <section class=\"report-comment\">\n            <p>\n              <label for=\"report-comment\">\n                <Trans>Additional info</Trans>\n              </label>\n            </p>\n            <textarea\n              maxlength=\"1000\"\n              rows=\"1\"\n              name=\"comment\"\n              id=\"report-comment\"\n              disabled={uiState === 'loading'}\n              required={!post} // Required if not reporting a post\n            />\n          </section>\n          {!!domain && domain !== currentDomain && (\n            <section>\n              <p>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    switch\n                    name=\"forward\"\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <span>\n                    <Trans>\n                      Forward to <i>{domain}</i>\n                    </Trans>\n                  </span>\n                </label>\n              </p>\n            </section>\n          )}\n          <footer>\n            <button type=\"submit\" disabled={uiState === 'loading'}>\n              <Trans>Send Report</Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).mute(); // Infinite duration\n                  showToast(t`Muted ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to mute ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Mute profile</small>\n              </Trans>\n            </button>{' '}\n            <button\n              type=\"submit\"\n              class=\"plain2\"\n              disabled={uiState === 'loading'}\n              onClick={async () => {\n                try {\n                  await masto.v1.accounts.$select(account.id).block();\n                  showToast(t`Blocked ${username}`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to block ${username}`);\n                }\n                // onSubmit will still run\n              }}\n            >\n              <Trans>\n                Send Report <small class=\"ib\">+ Block profile</small>\n              </Trans>\n            </button>\n            <Loader hidden={uiState !== 'loading'} />\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default ReportModal;\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.5\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n} else if( typeof angular !== 'undefined' && angular != null ) {\n  angular.module('LZString', [])\n  .factory('LZString', function () {\n    return LZString;\n  });\n}\n","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%234169E1'%20d='M14%2052a4%204%200%201%201-8%200%204%204%200%200%201%208%200Zm64-42a4%204%200%201%201-8%200%204%204%200%200%201%208%200Z'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2082%2062'%3e%3crect%20width='78'%20height='58'%20x='2'%20y='2'%20fill='%23999'%20fill-opacity='.3'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3crect%20width='18'%20height='46'%20x='8'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='32'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3crect%20width='18'%20height='46'%20x='56'%20y='8'%20fill='%23fff'%20stroke='%23999'%20stroke-width='2'%20rx='1'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2084%2062'%3e%3crect%20width='64'%20height='48'%20x='18'%20y='2'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M19%203h62v10H19z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M43%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M52%208a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3crect%20width='32'%20height='48'%20x='2'%20y='12'%20fill='%23fff'%20stroke='%23999'%20stroke-width='3'%20rx='4'/%3e%3cpath%20fill='%23999'%20fill-opacity='.3'%20d='M3%2049h30v10H3z'/%3e%3cpath%20stroke='%234169E1'%20stroke-width='2'%20d='M11%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3cpath%20stroke='%23999'%20stroke-width='2'%20d='M20%2054a2%202%200%201%201-4%200%202%202%200%200%201%204%200Zm9%200a2%202%200%201%201-4%200%202%202%200%200%201%204%200Z'/%3e%3c/svg%3e\"","import { api } from '../utils/api';\nimport store from '../utils/store';\n\nconst LIMIT = 200;\nconst MAX_FETCH = 10;\n\nexport async function fetchFollowedTags() {\n  const { masto } = api();\n  const iterator = masto.v1.followedTags.list({\n    limit: LIMIT,\n  });\n  const tags = [];\n  let fetchCount = 0;\n  do {\n    const { value, done } = await iterator.next();\n    if (done || value?.length === 0) break;\n    tags.push(...value);\n    fetchCount++;\n  } while (fetchCount < MAX_FETCH);\n  tags.sort((a, b) => a.name.localeCompare(b.name));\n  console.log(tags);\n\n  if (tags.length) {\n    setTimeout(() => {\n      // Save to local storage, with saved timestamp\n      store.account.set('followedTags', {\n        tags,\n        updatedAt: Date.now(),\n      });\n    }, 1);\n  }\n\n  return tags;\n}\n\nconst MAX_AGE = 24 * 60 * 60 * 1000; // 1 day\nexport async function getFollowedTags() {\n  try {\n    const { tags, updatedAt } = store.account.get('followedTags') || {};\n    if (!tags?.length) return await fetchFollowedTags();\n    if (Date.now() - updatedAt > MAX_AGE) {\n      // Stale-while-revalidate\n      fetchFollowedTags();\n      return tags;\n    }\n    return tags;\n  } catch (e) {\n    return [];\n  }\n}\n\nconst fauxDiv = document.createElement('div');\nexport const extractTagsFromStatus = (content) => {\n  if (!content) return [];\n  if (content.indexOf('#') === -1) return [];\n  fauxDiv.innerHTML = content;\n  const hashtagLinks = fauxDiv.querySelectorAll('a.hashtag');\n  if (!hashtagLinks.length) return [];\n  return Array.from(hashtagLinks).map((a) =>\n    a.innerText.trim().replace(/^[^#]*#+/, ''),\n  );\n};\n","import { useEffect, useState } from 'preact/hooks';\n\nfunction AsyncText({ children }) {\n  if (typeof children === 'string') return children;\n  const [text, setText] = useState('');\n  useEffect(() => {\n    Promise.resolve(children).then(setText);\n  }, [children]);\n  return text;\n}\n\nexport default AsyncText;\n","import './shortcuts-settings.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { msg, Plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n} from 'lz-string';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport floatingButtonUrl from '../assets/floating-button.svg';\nimport multiColumnUrl from '../assets/multi-column.svg';\nimport tabMenuBarUrl from '../assets/tab-menu-bar.svg';\n\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport { getLists, getListTitle } from '../utils/lists';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport MenuConfirm from './menu-confirm';\nimport Modal from './modal';\n\nexport const SHORTCUTS_LIMIT = 9;\n\nconst TYPES = [\n  'following',\n  'mentions',\n  'notifications',\n  'list',\n  'public',\n  'trending',\n  'search',\n  'hashtag',\n  'bookmarks',\n  'favourites',\n  // NOTE: Hide for now\n  // 'account-statuses', // Need @acct search first\n];\nconst TYPE_TEXT = {\n  following: msg`Home / Following`,\n  notifications: msg`Notifications`,\n  list: msg`Lists`,\n  public: msg`Public (Local / Federated)`,\n  search: msg`Search`,\n  'account-statuses': msg`Account`,\n  bookmarks: msg`Bookmarks`,\n  favourites: msg`Likes`,\n  hashtag: msg`Hashtag`,\n  trending: msg`Trending`,\n  mentions: msg`Mentions`,\n};\nconst TYPE_PARAMS = {\n  list: [\n    {\n      text: msg`List ID`,\n      name: 'id',\n      notRequired: true,\n    },\n  ],\n  public: [\n    {\n      text: msg`Local only`,\n      name: 'local',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  trending: [\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n  search: [\n    {\n      text: msg`Search term`,\n      name: 'query',\n      type: 'text',\n      placeholder: msg`Optional, unless for multi-column mode`,\n      notRequired: true,\n    },\n  ],\n  'account-statuses': [\n    {\n      text: '@',\n      name: 'id',\n      type: 'text',\n      placeholder: 'cheeaun@mastodon.social',\n    },\n  ],\n  hashtag: [\n    {\n      text: '#',\n      name: 'hashtag',\n      type: 'text',\n      placeholder: msg`e.g. PixelArt (Max 5, space-separated)`,\n      pattern: '[^#]+',\n    },\n    {\n      text: msg`Media only`,\n      name: 'media',\n      type: 'checkbox',\n    },\n    {\n      text: msg`Instance`,\n      name: 'instance',\n      type: 'text',\n      placeholder: msg`Optional, e.g. mastodon.social`,\n      notRequired: true,\n    },\n  ],\n};\nconst fetchAccountTitle = pmem(async ({ id }) => {\n  const account = await api().masto.v1.accounts.$select(id).fetch();\n  return account.username || account.acct || account.displayName;\n});\nexport const SHORTCUTS_META = {\n  following: {\n    id: 'home',\n    title: (_, index) => (index === 0 ? t`Home` : t`Following`),\n    path: '/',\n    icon: 'home',\n  },\n  mentions: {\n    id: 'mentions',\n    title: msg`Mentions`,\n    path: '/mentions',\n    icon: 'at',\n  },\n  notifications: {\n    id: 'notifications',\n    title: msg`Notifications`,\n    path: '/notifications',\n    icon: 'notification',\n  },\n  list: {\n    id: ({ id }) => (id ? 'list' : 'lists'),\n    title: ({ id }) => (id ? getListTitle(id) : t`Lists`),\n    path: ({ id }) => (id ? `/l/${id}` : '/l'),\n    icon: 'list',\n    excludeViewMode: ({ id }) => (!id ? ['multi-column'] : []),\n  },\n  public: {\n    id: 'public',\n    title: ({ local }) => (local ? t`Local` : t`Federated`),\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ local, instance }) => `/${instance}/p${local ? '/l' : ''}`,\n    icon: ({ local }) => (local ? 'building' : 'earth'),\n  },\n  trending: {\n    id: 'trending',\n    title: msg`Trending`,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ instance }) => `/${instance}/trending`,\n    icon: 'chart',\n  },\n  search: {\n    id: 'search',\n    title: ({ query }) => (query ? `“${query}”` : t`Search`),\n    path: ({ query }) =>\n      query\n        ? `/search?q=${encodeURIComponent(query)}&type=statuses`\n        : '/search',\n    icon: 'search',\n    excludeViewMode: ({ query }) => (!query ? ['multi-column'] : []),\n  },\n  'account-statuses': {\n    id: 'account-statuses',\n    title: fetchAccountTitle,\n    path: ({ id }) => `/a/${id}`,\n    icon: 'user',\n  },\n  bookmarks: {\n    id: 'bookmarks',\n    title: msg`Bookmarks`,\n    path: '/b',\n    icon: 'bookmark',\n  },\n  favourites: {\n    id: 'favourites',\n    title: msg`Likes`,\n    path: '/f',\n    icon: 'heart',\n  },\n  hashtag: {\n    id: 'hashtag',\n    title: ({ hashtag }) => hashtag,\n    subtitle: ({ instance }) => instance || api().instance,\n    path: ({ hashtag, instance, media }) =>\n      `${instance ? `/${instance}` : ''}/t/${hashtag.split(/\\s+/).join('+')}${\n        media ? '?media=1' : ''\n      }`,\n    icon: 'hashtag',\n  },\n};\n\nfunction ShortcutsSettings({ onClose }) {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n  const [showForm, setShowForm] = useState(false);\n  const [showImportExport, setShowImportExport] = useState(false);\n\n  const [shortcutsListParent] = useAutoAnimate();\n\n  return (\n    <div id=\"shortcuts-settings-container\" class=\"sheet\" tabindex=\"-1\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Icon icon=\"shortcut\" /> <Trans>Shortcuts</Trans>{' '}\n          <sup\n            style={{\n              fontSize: 12,\n              opacity: 0.5,\n              textTransform: 'uppercase',\n            }}\n          >\n            <Trans>beta</Trans>\n          </sup>\n        </h2>\n      </header>\n      <main>\n        <p>\n          <Trans>Specify a list of shortcuts that'll appear&nbsp;as:</Trans>\n        </p>\n        <div class=\"shortcuts-view-mode\">\n          {[\n            {\n              value: 'float-button',\n              label: t`Floating button`,\n              imgURL: floatingButtonUrl,\n            },\n            {\n              value: 'tab-menu-bar',\n              label: t`Tab/Menu bar`,\n              imgURL: tabMenuBarUrl,\n            },\n            {\n              value: 'multi-column',\n              label: t`Multi-column`,\n              imgURL: multiColumnUrl,\n            },\n          ].map(({ value, label, imgURL }) => {\n            const checked =\n              snapStates.settings.shortcutsViewMode === value ||\n              (value === 'float-button' &&\n                !snapStates.settings.shortcutsViewMode);\n            return (\n              <label key={value} class={checked ? 'checked' : ''}>\n                <input\n                  type=\"radio\"\n                  name=\"shortcuts-view-mode\"\n                  value={value}\n                  checked={checked}\n                  onChange={(e) => {\n                    states.settings.shortcutsViewMode = e.target.value;\n                  }}\n                />{' '}\n                <img src={imgURL} alt=\"\" width=\"80\" height=\"58\" />{' '}\n                <span>{label}</span>\n              </label>\n            );\n          })}\n        </div>\n        {shortcuts.length > 0 ? (\n          <>\n            <ol class=\"shortcuts-list\" ref={shortcutsListParent}>\n              {shortcuts.filter(Boolean).map((shortcut, i) => {\n                // const key = i + Object.values(shortcut);\n                const key = Object.values(shortcut).join('-');\n                const { type } = shortcut;\n                if (!SHORTCUTS_META[type]) return null;\n                let { icon, title, subtitle, excludeViewMode } =\n                  SHORTCUTS_META[type];\n                if (typeof title === 'function') {\n                  title = title(shortcut, i);\n                } else {\n                  title = _(title);\n                }\n                if (typeof subtitle === 'function') {\n                  subtitle = subtitle(shortcut, i);\n                } else {\n                  subtitle = _(subtitle);\n                }\n                if (typeof icon === 'function') {\n                  icon = icon(shortcut, i);\n                }\n                if (typeof excludeViewMode === 'function') {\n                  excludeViewMode = excludeViewMode(shortcut, i);\n                }\n                const excludedViewMode = excludeViewMode?.includes(\n                  snapStates.settings.shortcutsViewMode,\n                );\n                return (\n                  <li key={key}>\n                    <Icon icon={icon} />\n                    <span class=\"shortcut-text\">\n                      <AsyncText>{title}</AsyncText>\n                      {subtitle && (\n                        <>\n                          {' '}\n                          <small class=\"ib insignificant\">{subtitle}</small>\n                        </>\n                      )}\n                      {excludedViewMode && (\n                        <span class=\"tag\">\n                          <Trans>Not available in current view mode</Trans>\n                        </span>\n                      )}\n                    </span>\n                    <span class=\"shortcut-actions\">\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === 0}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i > 0) {\n                            const temp = states.shortcuts[i - 1];\n                            shortcutsArr[i - 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-up\" alt={t`Move up`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        disabled={i === shortcuts.length - 1}\n                        onClick={() => {\n                          const shortcutsArr = Array.from(states.shortcuts);\n                          if (i < states.shortcuts.length - 1) {\n                            const temp = states.shortcuts[i + 1];\n                            shortcutsArr[i + 1] = shortcut;\n                            shortcutsArr[i] = temp;\n                            states.shortcuts = shortcutsArr;\n                          }\n                        }}\n                      >\n                        <Icon icon=\"arrow-down\" alt={t`Move down`} />\n                      </button>\n                      <button\n                        type=\"button\"\n                        class=\"plain small\"\n                        onClick={() => {\n                          setShowForm({\n                            shortcut,\n                            shortcutIndex: i,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" alt={t`Edit`} />\n                      </button>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => {\n                        states.shortcuts.splice(i, 1);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt=\"Remove\" />\n                    </button> */}\n                    </span>\n                  </li>\n                );\n              })}\n            </ol>\n            {shortcuts.length === 1 &&\n              snapStates.settings.shortcutsViewMode !== 'float-button' && (\n                <div class=\"ui-state insignificant\">\n                  <Icon icon=\"info\" />{' '}\n                  <small>\n                    <Trans>\n                      Add more than one shortcut/column to make this work.\n                    </Trans>\n                  </small>\n                </div>\n              )}\n          </>\n        ) : (\n          <div class=\"ui-state insignificant\">\n            <p>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`No columns yet. Tap on the Add column button.`\n                : t`No shortcuts yet. Tap on the Add shortcut button.`}\n            </p>\n            <p>\n              <Trans>\n                Not sure what to add?\n                <br />\n                Try adding{' '}\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.shortcuts = [\n                      {\n                        type: 'following',\n                      },\n                      {\n                        type: 'notifications',\n                      },\n                    ];\n                  }}\n                >\n                  Home / Following and Notifications\n                </a>{' '}\n                first.\n              </Trans>\n            </p>\n          </div>\n        )}\n        <p class=\"insignificant\">\n          {shortcuts.length >= SHORTCUTS_LIMIT &&\n            (snapStates.settings.shortcutsViewMode === 'multi-column'\n              ? t`Max ${SHORTCUTS_LIMIT} columns`\n              : t`Max ${SHORTCUTS_LIMIT} shortcuts`)}\n        </p>\n        <p\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <button\n            type=\"button\"\n            class=\"light\"\n            onClick={() => setShowImportExport(true)}\n          >\n            <Trans>Import/export</Trans>\n          </button>\n          <button\n            type=\"button\"\n            disabled={shortcuts.length >= SHORTCUTS_LIMIT}\n            onClick={() => setShowForm(true)}\n          >\n            <Icon icon=\"plus\" />{' '}\n            <span>\n              {snapStates.settings.shortcutsViewMode === 'multi-column'\n                ? t`Add column…`\n                : t`Add shortcut…`}\n            </span>\n          </button>\n        </p>\n      </main>\n      {showForm && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowForm(false);\n            }\n          }}\n        >\n          <ShortcutForm\n            shortcut={showForm.shortcut}\n            shortcutIndex={showForm.shortcutIndex}\n            onSubmit={({ result, mode }) => {\n              console.log('onSubmit', result);\n              if (mode === 'edit') {\n                states.shortcuts[showForm.shortcutIndex] = result;\n              } else {\n                states.shortcuts.push(result);\n              }\n            }}\n            onClose={() => setShowForm(false)}\n          />\n        </Modal>\n      )}\n      {showImportExport && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowImportExport(false);\n            }\n          }}\n        >\n          <ImportExport\n            shortcuts={shortcuts}\n            onClose={() => setShowImportExport(false)}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst FORM_NOTES = {\n  list: msg`Specific list is optional. For multi-column mode, list is required, else the column will not be shown.`,\n  search: msg`For multi-column mode, search term is required, else the column will not be shown.`,\n  hashtag: msg`Multiple hashtags are supported. Space-separated.`,\n};\n\nfunction ShortcutForm({\n  onSubmit,\n  disabled,\n  shortcut,\n  shortcutIndex,\n  onClose,\n}) {\n  const { _ } = useLingui();\n  console.log('shortcut', shortcut);\n  const editMode = !!shortcut;\n  const [currentType, setCurrentType] = useState(shortcut?.type || null);\n\n  const [uiState, setUIState] = useState('default');\n  const [lists, setLists] = useState([]);\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    (async () => {\n      if (currentType !== 'list') return;\n      try {\n        setUIState('loading');\n        const lists = await getLists();\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    (async () => {\n      if (currentType !== 'hashtag') return;\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [currentType]);\n\n  const formRef = useRef();\n  useEffect(() => {\n    if (editMode && currentType && TYPE_PARAMS[currentType]) {\n      // Populate form\n      const form = formRef.current;\n      TYPE_PARAMS[currentType].forEach(({ name, type }) => {\n        const input = form.querySelector(`[name=\"${name}\"]`);\n        if (input && shortcut[name]) {\n          if (type === 'checkbox') {\n            input.checked = shortcut[name] === 'on' ? true : false;\n          } else {\n            input.value = shortcut[name];\n          }\n        }\n      });\n    }\n  }, [editMode, currentType]);\n\n  return (\n    <div id=\"shortcut-settings-form\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit shortcut` : t`Add shortcut`}</h2>\n      </header>\n      <main tabindex=\"-1\">\n        <form\n          ref={formRef}\n          onSubmit={(e) => {\n            // Construct a nice object from form\n            e.preventDefault();\n            const data = new FormData(e.target);\n            const result = {};\n            data.forEach((value, key) => {\n              result[key] = value?.trim();\n              if (key === 'instance') {\n                // Remove protocol and trailing slash\n                result[key] = result[key]\n                  .replace(/^https?:\\/\\//, '')\n                  .replace(/\\/+$/, '');\n                // Remove @acct@ or acct@ from instance URL\n                result[key] = result[key].replace(/^@?[^@]+@/, '');\n              }\n            });\n            console.log('result', result);\n            if (!result.type) return;\n            onSubmit({\n              result,\n              mode: editMode ? 'edit' : 'add',\n            });\n            // Reset\n            e.target.reset();\n            setCurrentType(null);\n            onClose?.();\n          }}\n        >\n          <p>\n            <label>\n              <span>\n                <Trans>Timeline</Trans>\n              </span>\n              <select\n                required\n                disabled={disabled}\n                onChange={(e) => {\n                  setCurrentType(e.target.value);\n                }}\n                defaultValue={editMode ? shortcut.type : undefined}\n                name=\"type\"\n                dir=\"auto\"\n              >\n                <option></option>\n                {TYPES.map((type) => (\n                  <option value={type}>{_(TYPE_TEXT[type])}</option>\n                ))}\n              </select>\n            </label>\n          </p>\n          {TYPE_PARAMS[currentType]?.map?.(\n            ({ text, name, type, placeholder, pattern, notRequired }) => {\n              if (currentType === 'list') {\n                return (\n                  <p>\n                    <label>\n                      <span>\n                        <Trans>List</Trans>\n                      </span>\n                      <select\n                        name=\"id\"\n                        required={!notRequired}\n                        disabled={disabled || uiState === 'loading'}\n                        defaultValue={editMode ? shortcut.id : undefined}\n                        dir=\"auto\"\n                      >\n                        <option value=\"\"></option>\n                        {lists.map((list) => (\n                          <option value={list.id}>{list.title}</option>\n                        ))}\n                      </select>\n                    </label>\n                  </p>\n                );\n              }\n\n              return (\n                <p>\n                  <label>\n                    <span>{_(text)}</span>{' '}\n                    <input\n                      type={type}\n                      switch={type === 'checkbox' || undefined}\n                      name={name}\n                      placeholder={_(placeholder)}\n                      required={type === 'text' && !notRequired}\n                      disabled={disabled}\n                      list={\n                        currentType === 'hashtag'\n                          ? 'followed-hashtags-datalist'\n                          : null\n                      }\n                      autocorrect=\"off\"\n                      autocapitalize=\"off\"\n                      spellCheck={false}\n                      pattern={pattern}\n                      dir=\"auto\"\n                    />\n                    {currentType === 'hashtag' &&\n                      followedHashtags.length > 0 && (\n                        <datalist id=\"followed-hashtags-datalist\">\n                          {followedHashtags.map((tag) => (\n                            <option value={tag.name} />\n                          ))}\n                        </datalist>\n                      )}\n                  </label>\n                </p>\n              );\n            },\n          )}\n          {!!FORM_NOTES[currentType] && (\n            <p class=\"form-note insignificant\">\n              <Icon icon=\"info\" />\n              {_(FORM_NOTES[currentType])}\n            </p>\n          )}\n          <footer>\n            <button\n              type=\"submit\"\n              class=\"block\"\n              disabled={disabled || uiState === 'loading'}\n            >\n              {editMode ? t`Save` : t`Add`}\n            </button>\n            {editMode && (\n              <button\n                type=\"button\"\n                class=\"light danger\"\n                onClick={() => {\n                  states.shortcuts.splice(shortcutIndex, 1);\n                  onClose?.();\n                }}\n              >\n                <Trans>Remove</Trans>\n              </button>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ImportExport({ shortcuts, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const shortcutsStr = useMemo(() => {\n    if (!shortcuts) return '';\n    if (!shortcuts.filter(Boolean).length) return '';\n    return compressToEncodedURIComponent(\n      JSON.stringify(shortcuts.filter(Boolean)),\n    );\n  }, [shortcuts]);\n  const [importShortcutStr, setImportShortcutStr] = useState('');\n  const [importUIState, setImportUIState] = useState('default');\n  const parsedImportShortcutStr = useMemo(() => {\n    if (!importShortcutStr) {\n      setImportUIState('default');\n      return null;\n    }\n    try {\n      const parsed = JSON.parse(\n        decompressFromEncodedURIComponent(importShortcutStr),\n      );\n      // Very basic validation, I know\n      if (!Array.isArray(parsed)) throw new Error('Not an array');\n      setImportUIState('default');\n      return parsed;\n    } catch (err) {\n      // Fallback to JSON string parsing\n      // There's a chance that someone might want to import a JSON string instead of the compressed version\n      try {\n        const parsed = JSON.parse(importShortcutStr);\n        if (!Array.isArray(parsed)) throw new Error('Not an array');\n        setImportUIState('default');\n        return parsed;\n      } catch (err) {\n        setImportUIState('error');\n        return null;\n      }\n    }\n  }, [importShortcutStr]);\n  const hasCurrentSettings = states.shortcuts.length > 0;\n\n  const shortcutsImportFieldRef = useRef();\n\n  return (\n    <div id=\"import-export-container\" class=\"sheet\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>\n            Import/Export <small class=\"ib insignificant\">Shortcuts</small>\n          </Trans>\n        </h2>\n      </header>\n      <main tabindex=\"-1\">\n        <section>\n          <h3>\n            <Icon icon=\"arrow-down-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Import</Trans>\n            </span>\n          </h3>\n          <p class=\"field-button\">\n            <input\n              ref={shortcutsImportFieldRef}\n              type=\"text\"\n              name=\"import\"\n              placeholder={t`Paste shortcuts here`}\n              class=\"block\"\n              onInput={(e) => {\n                setImportShortcutStr(e.target.value);\n              }}\n              dir=\"auto\"\n            />\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2 small\"\n                disabled={importUIState === 'cloud-downloading'}\n                onClick={async () => {\n                  setImportUIState('cloud-downloading');\n                  const currentAccount = getCurrentAccountID();\n                  showToast(\n                    t`Downloading saved shortcuts from instance server…`,\n                  );\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        const settings = note.match(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                        )[1];\n                        const { v, dt, data } = JSON.parse(settings);\n                        shortcutsImportFieldRef.current.value = data;\n                        shortcutsImportFieldRef.current.dispatchEvent(\n                          new Event('input'),\n                        );\n                      }\n                    }\n                    setImportUIState('default');\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to download shortcuts`);\n                  }\n                }}\n                title={t`Download shortcuts from instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-down\" />\n              </button>\n            )}\n          </p>\n          {!!parsedImportShortcutStr &&\n            Array.isArray(parsedImportShortcutStr) && (\n              <>\n                <p>\n                  <b>{parsedImportShortcutStr.length}</b> shortcut\n                  {parsedImportShortcutStr.length > 1 ? 's' : ''}{' '}\n                  <small class=\"insignificant\">\n                    ({importShortcutStr.length} characters)\n                  </small>\n                </p>\n                <ol class=\"import-settings-list\">\n                  {parsedImportShortcutStr.map((shortcut) => (\n                    <li>\n                      <span\n                        style={{\n                          opacity: shortcuts.some((s) =>\n                            // Compare all properties\n                            Object.keys(s).every(\n                              (key) => s[key] === shortcut[key],\n                            ),\n                          )\n                            ? 1\n                            : 0,\n                        }}\n                      >\n                        *\n                      </span>\n                      <span>\n                        {_(TYPE_TEXT[shortcut.type])}\n                        {shortcut.type === 'list' && ' ⚠️'}{' '}\n                        {TYPE_PARAMS[shortcut.type]?.map?.(\n                          ({ text, name, type }) =>\n                            shortcut[name] ? (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {text}:{' '}\n                                  {type === 'checkbox'\n                                    ? shortcut[name] === 'on'\n                                      ? '✅'\n                                      : '❌'\n                                    : shortcut[name]}\n                                </span>{' '}\n                              </>\n                            ) : null,\n                        )}\n                      </span>\n                    </li>\n                  ))}\n                </ol>\n                <p>\n                  <small>\n                    <Trans>* Exists in current shortcuts</Trans>\n                  </small>\n                  <br />\n                  <small>\n                    ⚠️{' '}\n                    <Trans>\n                      List may not work if it's from a different account.\n                    </Trans>\n                  </small>\n                </p>\n              </>\n            )}\n          {importUIState === 'error' && (\n            <p class=\"error\">\n              <small>\n                ⚠️ <Trans>Invalid settings format</Trans>\n              </small>\n            </p>\n          )}\n          <p>\n            {hasCurrentSettings && (\n              <>\n                <MenuConfirm\n                  confirmLabel={t`Append to current shortcuts?`}\n                  menuFooter={\n                    <div class=\"footer\">\n                      <Trans>\n                        Only shortcuts that don’t exist in current shortcuts\n                        will be appended.\n                      </Trans>\n                    </div>\n                  }\n                  onClick={() => {\n                    // states.shortcuts = [\n                    //   ...states.shortcuts,\n                    //   ...parsedImportShortcutStr,\n                    // ];\n                    // Append non-unique shortcuts only\n                    const nonUniqueShortcuts = parsedImportShortcutStr.filter(\n                      (shortcut) =>\n                        !states.shortcuts.some((s) =>\n                          // Compare all properties\n                          Object.keys(s).every(\n                            (key) => s[key] === shortcut[key],\n                          ),\n                        ),\n                    );\n                    if (!nonUniqueShortcuts.length) {\n                      showToast(t`No new shortcuts to import`);\n                      return;\n                    }\n                    let newShortcuts = [\n                      ...states.shortcuts,\n                      ...nonUniqueShortcuts,\n                    ];\n                    const exceededLimit = newShortcuts.length > SHORTCUTS_LIMIT;\n                    if (exceededLimit) {\n                      // If exceeded, trim it\n                      newShortcuts = newShortcuts.slice(0, SHORTCUTS_LIMIT);\n                    }\n                    states.shortcuts = newShortcuts;\n                    showToast(\n                      exceededLimit\n                        ? t`Shortcuts imported. Exceeded max ${SHORTCUTS_LIMIT}, so the rest are not imported.`\n                        : t`Shortcuts imported`,\n                    );\n                    onClose?.();\n                  }}\n                >\n                  <button\n                    type=\"button\"\n                    class=\"plain2\"\n                    disabled={!parsedImportShortcutStr}\n                  >\n                    <Trans>Import & append…</Trans>\n                  </button>\n                </MenuConfirm>{' '}\n              </>\n            )}\n            <MenuConfirm\n              confirmLabel={\n                hasCurrentSettings\n                  ? t`Override current shortcuts?`\n                  : t`Import shortcuts?`\n              }\n              menuItemClassName={hasCurrentSettings ? 'danger' : undefined}\n              onClick={() => {\n                states.shortcuts = parsedImportShortcutStr;\n                showToast(t`Shortcuts imported`);\n                onClose?.();\n              }}\n            >\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={!parsedImportShortcutStr}\n              >\n                {hasCurrentSettings ? t`or override…` : t`Import…`}\n              </button>\n            </MenuConfirm>\n          </p>\n        </section>\n        <section>\n          <h3>\n            <Icon icon=\"arrow-up-circle\" size=\"l\" class=\"insignificant\" />{' '}\n            <span>\n              <Trans>Export</Trans>\n            </span>\n          </h3>\n          <p>\n            <input\n              style={{ width: '100%' }}\n              type=\"text\"\n              value={shortcutsStr}\n              readOnly\n              onClick={(e) => {\n                if (!e.target.value) return;\n                e.target.select();\n                // Copy url to clipboard\n                try {\n                  navigator.clipboard.writeText(e.target.value);\n                  showToast(t`Shortcuts copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcuts`);\n                }\n              }}\n              dir=\"auto\"\n            />\n          </p>\n          <p>\n            <button\n              type=\"button\"\n              class=\"plain2\"\n              disabled={!shortcutsStr}\n              onClick={() => {\n                try {\n                  navigator.clipboard.writeText(shortcutsStr);\n                  showToast(t`Shortcut settings copied`);\n                } catch (e) {\n                  console.error(e);\n                  showToast(t`Unable to copy shortcut settings`);\n                }\n              }}\n            >\n              <Icon icon=\"clipboard\" />{' '}\n              <span>\n                <Trans>Copy</Trans>\n              </span>\n            </button>{' '}\n            {navigator?.share &&\n              navigator?.canShare?.({\n                text: shortcutsStr,\n              }) && (\n                <button\n                  type=\"button\"\n                  class=\"plain2\"\n                  disabled={!shortcutsStr}\n                  onClick={() => {\n                    try {\n                      navigator.share({\n                        text: shortcutsStr,\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      alert(t`Sharing doesn't seem to work.`);\n                    }\n                  }}\n                >\n                  <Icon icon=\"share\" />{' '}\n                  <span>\n                    <Trans>Share</Trans>\n                  </span>\n                </button>\n              )}{' '}\n            {states.settings.shortcutSettingsCloudImportExport && (\n              <button\n                type=\"button\"\n                class=\"plain2\"\n                disabled={importUIState === 'cloud-uploading'}\n                onClick={async () => {\n                  setImportUIState('cloud-uploading');\n                  const currentAccount = getCurrentAccountID();\n                  try {\n                    const relationships =\n                      await masto.v1.accounts.relationships.fetch({\n                        id: [currentAccount],\n                      });\n                    const relationship = relationships[0];\n                    if (relationship) {\n                      const { note = '' } = relationship;\n                      // const newNote = `${note}\\n\\n\\n$<phanpy-shortcuts-settings>{shortcutsStr}</phanpy-shortcuts-settings>`;\n                      let newNote = '';\n                      const settingsJSON = JSON.stringify({\n                        v: '1', // version\n                        dt: Date.now(), // datetime stamp\n                        data: shortcutsStr, // shortcuts settings string\n                      });\n                      if (\n                        /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/.test(\n                          note,\n                        )\n                      ) {\n                        newNote = note.replace(\n                          /<phanpy-shortcuts-settings>(.*)<\\/phanpy-shortcuts-settings>/,\n                          `<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`,\n                        );\n                      } else {\n                        newNote = `${note}\\n\\n\\n<phanpy-shortcuts-settings>${settingsJSON}</phanpy-shortcuts-settings>`;\n                      }\n                      showToast(t`Saving shortcuts to instance server…`);\n                      await masto.v1.accounts\n                        .$select(currentAccount)\n                        .note.create({\n                          comment: newNote,\n                        });\n                      setImportUIState('default');\n                      showToast(t`Shortcuts saved`);\n                    }\n                  } catch (e) {\n                    console.error(e);\n                    setImportUIState('error');\n                    showToast(t`Unable to save shortcuts`);\n                  }\n                }}\n                title={t`Sync to instance server`}\n              >\n                <Icon icon=\"cloud\" />\n                <Icon icon=\"arrow-up\" />\n              </button>\n            )}{' '}\n            {shortcutsStr.length > 0 && (\n              <small class=\"insignificant ib\">\n                <Plural\n                  value={shortcutsStr.length}\n                  one=\"# character\"\n                  other=\"# characters\"\n                />\n              </small>\n            )}\n          </p>\n          {!!shortcutsStr && (\n            <details>\n              <summary class=\"insignificant\">\n                <small>\n                  <Trans>Raw Shortcuts JSON</Trans>\n                </small>\n              </summary>\n              <textarea style={{ width: '100%' }} rows={10} readOnly>\n                {JSON.stringify(shortcuts.filter(Boolean), null, 2)}\n              </textarea>\n            </details>\n          )}\n        </section>\n        {states.settings.shortcutSettingsCloudImportExport && (\n          <footer>\n            <p>\n              <Icon icon=\"cloud\" />{' '}\n              <Trans>\n                Import/export settings from/to instance server (Very\n                experimental)\n              </Trans>\n            </p>\n          </footer>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default ShortcutsSettings;\n","import { t, Trans } from '@lingui/macro';\nimport { useEffect } from 'preact/hooks';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { subscribe, useSnapshot } from 'valtio';\n\nimport Accounts from '../pages/accounts';\nimport Settings from '../pages/settings';\nimport focusDeck from '../utils/focus-deck';\nimport showToast from '../utils/show-toast';\nimport states from '../utils/states';\n\nimport AccountSheet from './account-sheet';\nimport ComposeSuspense, { preload } from './compose-suspense';\nimport Drafts from './drafts';\nimport EmbedModal from './embed-modal';\nimport GenericAccounts from './generic-accounts';\nimport MediaAltModal from './media-alt-modal';\nimport MediaModal from './media-modal';\nimport Modal from './modal';\nimport ReportModal from './report-modal';\nimport ShortcutsSettings from './shortcuts-settings';\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // When closing modal, focus on deck\n    if (/^show/i.test(path) && !value) {\n      focusDeck();\n    }\n  }\n});\n\nexport default function Modals() {\n  const snapStates = useSnapshot(states);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    setTimeout(preload, 1000);\n  }, []);\n\n  return (\n    <>\n      {!!snapStates.showCompose && (\n        <Modal\n          class={`solid ${snapStates.composerState.minimized ? 'min' : ''}`}\n          minimized={!!snapStates.composerState.minimized}\n        >\n          <ComposeSuspense\n            replyToStatus={\n              typeof snapStates.showCompose !== 'boolean'\n                ? snapStates.showCompose.replyToStatus\n                : window.__COMPOSE__?.replyToStatus || null\n            }\n            editStatus={\n              states.showCompose?.editStatus ||\n              window.__COMPOSE__?.editStatus ||\n              null\n            }\n            draftStatus={\n              states.showCompose?.draftStatus ||\n              window.__COMPOSE__?.draftStatus ||\n              null\n            }\n            onClose={(results) => {\n              const { newStatus, instance, type } = results || {};\n              states.showCompose = false;\n              window.__COMPOSE__ = null;\n              if (newStatus) {\n                states.reloadStatusPage++;\n                showToast({\n                  text: {\n                    post: t`Post published. Check it out.`,\n                    reply: t`Reply posted. Check it out.`,\n                    edit: t`Post updated. Check it out.`,\n                  }[type || 'post'],\n                  delay: 1000,\n                  duration: 10_000, // 10 seconds\n                  onClick: (toast) => {\n                    toast.hideToast();\n                    states.prevLocation = location;\n                    navigate(\n                      instance\n                        ? `/${instance}/s/${newStatus.id}`\n                        : `/s/${newStatus.id}`,\n                    );\n                  },\n                });\n              }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showSettings && (\n        <Modal\n          onClose={() => {\n            states.showSettings = false;\n          }}\n        >\n          <Settings\n            onClose={() => {\n              states.showSettings = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccounts && (\n        <Modal\n          onClose={() => {\n            states.showAccounts = false;\n          }}\n        >\n          <Accounts\n            onClose={() => {\n              states.showAccounts = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showAccount && (\n        <Modal\n          onClose={() => {\n            states.showAccount = false;\n          }}\n        >\n          <AccountSheet\n            account={snapStates.showAccount?.account || snapStates.showAccount}\n            instance={snapStates.showAccount?.instance}\n            onClose={({ destination } = {}) => {\n              states.showAccount = false;\n              // states.showGenericAccounts = false;\n              // if (destination) {\n              //   states.showAccounts = false;\n              // }\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showDrafts && (\n        <Modal\n          onClose={() => {\n            states.showDrafts = false;\n          }}\n        >\n          <Drafts onClose={() => (states.showDrafts = false)} />\n        </Modal>\n      )}\n      {!!snapStates.showMediaModal && (\n        <Modal\n          onClick={(e) => {\n            if (\n              e.target === e.currentTarget ||\n              e.target.classList.contains('media')\n            ) {\n              states.showMediaModal = false;\n            }\n          }}\n        >\n          <MediaModal\n            mediaAttachments={snapStates.showMediaModal.mediaAttachments}\n            instance={snapStates.showMediaModal.instance}\n            index={snapStates.showMediaModal.index}\n            statusID={snapStates.showMediaModal.statusID}\n            onClose={() => {\n              states.showMediaModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showShortcutsSettings && (\n        <Modal\n          onClose={() => {\n            states.showShortcutsSettings = false;\n          }}\n        >\n          <ShortcutsSettings\n            onClose={() => (states.showShortcutsSettings = false)}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showGenericAccounts && (\n        <Modal\n          onClose={() => {\n            states.showGenericAccounts = false;\n          }}\n        >\n          <GenericAccounts\n            instance={snapStates.showGenericAccounts.instance}\n            excludeRelationshipAttrs={\n              snapStates.showGenericAccounts.excludeRelationshipAttrs\n            }\n            postID={snapStates.showGenericAccounts.postID}\n            onClose={() => (states.showGenericAccounts = false)}\n            blankCopy={snapStates.showGenericAccounts.blankCopy}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showMediaAlt && (\n        <Modal\n          onClose={(e) => {\n            states.showMediaAlt = false;\n          }}\n        >\n          <MediaAltModal\n            alt={snapStates.showMediaAlt.alt || snapStates.showMediaAlt}\n            lang={snapStates.showMediaAlt?.lang}\n            onClose={() => {\n              states.showMediaAlt = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showEmbedModal && (\n        <Modal\n          class=\"solid\"\n          onClose={() => {\n            states.showEmbedModal = false;\n          }}\n        >\n          <EmbedModal\n            html={snapStates.showEmbedModal.html}\n            url={snapStates.showEmbedModal.url}\n            width={snapStates.showEmbedModal.width}\n            height={snapStates.showEmbedModal.height}\n            onClose={() => {\n              states.showEmbedModal = false;\n            }}\n          />\n        </Modal>\n      )}\n      {!!snapStates.showReportModal && (\n        <Modal\n          onClose={() => {\n            states.showReportModal = false;\n          }}\n        >\n          <ReportModal\n            account={snapStates.showReportModal.account}\n            post={snapStates.showReportModal.post}\n            onClose={() => {\n              states.showReportModal = false;\n            }}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useState } from 'preact/hooks';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Loader from './loader';\n\nfunction FollowRequestButtons({ accountID, onChange }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, reject\n  const [relationship, setRelationship] = useState(null);\n\n  const hasRelationship = relationship !== null;\n\n  return (\n    <p class=\"follow-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('accept');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .authorize();\n              if (!rel?.followedBy) {\n                throw new Error('Follow request not accepted');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n            }\n            setUIState('default');\n          })();\n        }}\n      >\n        <Trans>Accept</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRelationship}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          setRequestState('reject');\n          (async () => {\n            try {\n              const rel = await masto.v1.followRequests\n                .$select(accountID)\n                .reject();\n              if (rel?.followedBy) {\n                throw new Error('Follow request not rejected');\n              }\n              setRelationship(rel);\n              onChange();\n            } catch (e) {\n              console.error(e);\n              setUIState('default');\n            }\n          })();\n        }}\n      >\n        <Trans>Reject</Trans>\n      </button>\n      <span class=\"follow-request-states\">\n        {hasRelationship && requestState ? (\n          requestState === 'accept' ? (\n            <Icon\n              icon=\"check-circle\"\n              alt={t`Accepted`}\n              class=\"follow-accepted\"\n            />\n          ) : (\n            <Icon icon=\"x-circle\" alt={t`Rejected`} class=\"follow-rejected\" />\n          )\n        ) : (\n          <Loader hidden={uiState !== 'loading'} />\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default FollowRequestButtons;\n","import { msg, Plural, Select, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\n\nimport shortenNumber from '../utils/shorten-number';\nimport states, { statusKey } from '../utils/states';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport useTruncated from '../utils/useTruncated';\n\nimport Avatar from './avatar';\nimport CustomEmoji from './custom-emoji';\nimport FollowRequestButtons from './follow-request-buttons';\nimport Icon from './icon';\nimport Link from './link';\nimport NameText from './name-text';\nimport Status from './status';\n\nconst NOTIFICATION_ICONS = {\n  mention: 'comment',\n  status: 'notification',\n  reblog: 'rocket',\n  follow: 'follow',\n  follow_request: 'follow-add',\n  favourite: 'heart',\n  poll: 'poll',\n  update: 'pencil',\n  'admin.signup': 'account-edit',\n  'admin.report': 'account-warning',\n  severed_relationships: 'heart-break',\n  moderation_warning: 'alert',\n  emoji_reaction: 'emoji2',\n  'pleroma:emoji_reaction': 'emoji2',\n};\n\n/*\nNotification types\n==================\nmention = Someone mentioned you in their status\nstatus = Someone you enabled notifications for has posted a status\nreblog = Someone boosted one of your statuses\nfollow = Someone followed you\nfollow_request = Someone requested to follow you\nfavourite = Someone favourited one of your statuses\npoll = A poll you have voted in or created has ended\nupdate = A status you interacted with has been edited\nadmin.sign_up = Someone signed up (optionally sent to admins)\nadmin.report = A new report has been filed\nsevered_relationships = Severed relationships\nmoderation_warning = Moderation warning\n*/\n\nfunction emojiText({ account, emoji, emoji_url }) {\n  let url;\n  let staticUrl;\n  if (typeof emoji_url === 'string') {\n    url = emoji_url;\n  } else {\n    url = emoji_url?.url;\n    staticUrl = emoji_url?.staticUrl;\n  }\n  const emojiObject = url ? (\n    <CustomEmoji url={url} staticUrl={staticUrl} alt={emoji} />\n  ) : (\n    emoji\n  );\n  return (\n    <Trans>\n      {account} reacted to your post with {emojiObject}\n    </Trans>\n  );\n}\n\nconst contentText = {\n  status: ({ account }) => <Trans>{account} published a post.</Trans>,\n  reblog: ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted your reply.</Trans>}\n              other={<Trans>{account} boosted your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  follow: ({ account, count, components: { Subject } }) => (\n    <Plural\n      value={count}\n      _1={<Trans>{account} followed you.</Trans>}\n      other={\n        <Trans>\n          <Subject clickable={count > 1}>\n            <span title={count}>{shortenNumber(count)}</span> people\n          </Subject>{' '}\n          followed you.\n        </Trans>\n      }\n    />\n  ),\n  follow_request: ({ account }) => (\n    <Trans>{account} requested to follow you.</Trans>\n  ),\n  favourite: ({\n    account,\n    count,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} liked your reply.</Trans>}\n              other={<Trans>{account} liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  poll: () => t`A poll you have voted in or created has ended.`,\n  'poll-self': () => t`A poll you have created has ended.`,\n  'poll-voted': () => t`A poll you have voted in has ended.`,\n  update: () => t`A post you interacted with has been edited.`,\n  'favourite+reblog': ({\n    count,\n    account,\n    postsCount,\n    postType,\n    components: { Subject },\n  }) => (\n    <Plural\n      value={count}\n      _1={\n        <Plural\n          value={postsCount}\n          _1={\n            <Select\n              value={postType}\n              _reply={<Trans>{account} boosted & liked your reply.</Trans>}\n              other={<Trans>{account} boosted & liked your post.</Trans>}\n            />\n          }\n          other={\n            <Trans>\n              {account} boosted & liked {postsCount} of your posts.\n            </Trans>\n          }\n        />\n      }\n      other={\n        <Select\n          value={postType}\n          _reply={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your reply.\n            </Trans>\n          }\n          other={\n            <Trans>\n              <Subject clickable={count > 1}>\n                <span title={count}>{shortenNumber(count)}</span> people\n              </Subject>{' '}\n              boosted & liked your post.\n            </Trans>\n          }\n        />\n      }\n    />\n  ),\n  'admin.sign_up': ({ account }) => <Trans>{account} signed up.</Trans>,\n  'admin.report': ({ account, targetAccount }) => (\n    <Trans>\n      {account} reported {targetAccount}\n    </Trans>\n  ),\n  severed_relationships: ({ name }) => (\n    <Trans>\n      Lost connections with <i>{name}</i>.\n    </Trans>\n  ),\n  moderation_warning: () => (\n    <b>\n      <Trans>Moderation warning</Trans>\n    </b>\n  ),\n  emoji_reaction: emojiText,\n  'pleroma:emoji_reaction': emojiText,\n};\n\n// account_suspension, domain_block, user_domain_block\nconst SEVERED_RELATIONSHIPS_TEXT = {\n  account_suspension: ({ from, targetName }) => (\n    <Trans>\n      An admin from <i>{from}</i> has suspended <i>{targetName}</i>, which means\n      you can no longer receive updates from them or interact with them.\n    </Trans>\n  ),\n  domain_block: ({ from, targetName, followersCount, followingCount }) => (\n    <Trans>\n      An admin from <i>{from}</i> has blocked <i>{targetName}</i>. Affected\n      followers: {followersCount}, followings: {followingCount}.\n    </Trans>\n  ),\n  user_domain_block: ({ targetName, followersCount, followingCount }) => (\n    <Trans>\n      You have blocked <i>{targetName}</i>. Removed followers: {followersCount},\n      followings: {followingCount}.\n    </Trans>\n  ),\n};\n\nconst MODERATION_WARNING_TEXT = {\n  none: msg`Your account has received a moderation warning.`,\n  disable: msg`Your account has been disabled.`,\n  mark_statuses_as_sensitive: msg`Some of your posts have been marked as sensitive.`,\n  delete_statuses: msg`Some of your posts have been deleted.`,\n  sensitive: msg`Your posts will be marked as sensitive from now on.`,\n  silence: msg`Your account has been limited.`,\n  suspend: msg`Your account has been suspended.`,\n};\n\nconst AVATARS_LIMIT = 30;\n\nfunction Notification({\n  notification,\n  instance,\n  isStatic,\n  disableContextMenu,\n}) {\n  const { _ } = useLingui();\n  const {\n    id,\n    status,\n    account,\n    report,\n    event,\n    moderation_warning,\n    // Client-side grouped notification\n    _ids,\n    _accounts,\n    _statuses,\n    // Server-side grouped notification\n    sampleAccounts,\n    notificationsCount,\n  } = notification;\n  let { type } = notification;\n\n  if (type === 'mention' && !status) {\n    // Could be deleted\n    return null;\n  }\n\n  // status = Attached when type of the notification is favourite, reblog, status, mention, poll, or update\n  const actualStatus = status?.reblog || status;\n  const actualStatusID = actualStatus?.id;\n\n  const currentAccount = getCurrentAccountID();\n  const isSelf = currentAccount === account?.id;\n  const isVoted = status?.poll?.voted;\n  const isReplyToOthers =\n    !!status?.inReplyToAccountId &&\n    status?.inReplyToAccountId !== currentAccount &&\n    status?.account?.id === currentAccount;\n\n  let favsCount = 0;\n  let reblogsCount = 0;\n  if (type === 'favourite+reblog') {\n    if (_accounts) {\n      for (const account of _accounts) {\n        if (account._types?.includes('favourite')) {\n          favsCount++;\n        }\n        if (account._types?.includes('reblog')) {\n          reblogsCount++;\n        }\n      }\n    }\n    if (!reblogsCount && favsCount) type = 'favourite';\n    if (!favsCount && reblogsCount) type = 'reblog';\n  }\n\n  let text;\n  if (type === 'poll') {\n    text = contentText[isSelf ? 'poll-self' : isVoted ? 'poll-voted' : 'poll'];\n  } else if (contentText[type]) {\n    text = contentText[type];\n  } else {\n    // Anticipate unhandled notification types, possibly from Mastodon forks or non-Mastodon instances\n    // This surfaces the error to the user, hoping that users will report it\n    text = t`[Unknown notification type: ${type}]`;\n  }\n\n  const Subject = ({ clickable, ...props }) =>\n    clickable ? (\n      <b tabIndex=\"0\" onClick={handleOpenGenericAccounts} {...props} />\n    ) : (\n      <b {...props} />\n    );\n\n  if (typeof text === 'function') {\n    const count =\n      _accounts?.length || sampleAccounts?.length || (account ? 1 : 0);\n    const postsCount = _statuses?.length || 0;\n    if (type === 'admin.report') {\n      const targetAccount = report?.targetAccount;\n      if (targetAccount) {\n        text = text({\n          account: <NameText account={account} showAvatar />,\n          targetAccount: <NameText account={targetAccount} showAvatar />,\n        });\n      }\n    } else if (type === 'severed_relationships') {\n      const targetName = event?.targetName;\n      if (targetName) {\n        text = text({ name: targetName });\n      }\n    } else if (\n      (type === 'emoji_reaction' || type === 'pleroma:emoji_reaction') &&\n      notification.emoji\n    ) {\n      const emojiURL =\n        notification.emoji_url || // This is string\n        status?.emojis?.find?.(\n          (emoji) =>\n            emoji?.shortcode ===\n            notification.emoji.replace(/^:/, '').replace(/:$/, ''),\n        ); // Emoji object instead of string\n      text = text({ emoji: notification.emoji, emojiURL });\n    } else {\n      text = text({\n        account: account ? (\n          <NameText account={account} showAvatar />\n        ) : (\n          sampleAccounts?.[0] && (\n            <NameText account={sampleAccounts[0]} showAvatar />\n          )\n        ),\n        count,\n        postsCount,\n        postType: isReplyToOthers ? 'reply' : 'post',\n        components: { Subject },\n      });\n    }\n  }\n\n  const formattedCreatedAt =\n    notification.createdAt && new Date(notification.createdAt).toLocaleString();\n\n  const genericAccountsHeading =\n    {\n      'favourite+reblog': t`Boosted/Liked by…`,\n      favourite: t`Liked by…`,\n      reblog: t`Boosted by…`,\n      follow: t`Followed by…`,\n    }[type] || t`Accounts`;\n  const handleOpenGenericAccounts = () => {\n    states.showGenericAccounts = {\n      heading: genericAccountsHeading,\n      accounts: _accounts,\n      showReactions: type === 'favourite+reblog',\n      excludeRelationshipAttrs: type === 'follow' ? ['followedBy'] : [],\n      postID: statusKey(actualStatusID, instance),\n    };\n  };\n\n  console.debug('RENDER Notification', notification.id);\n\n  return (\n    <div\n      class={`notification notification-${type}`}\n      data-notification-id={_ids || id}\n      tabIndex=\"0\"\n    >\n      <div\n        class={`notification-type notification-${type}`}\n        title={formattedCreatedAt}\n      >\n        {type === 'favourite+reblog' ? (\n          <>\n            <Icon icon=\"rocket\" size=\"xl\" alt={type} class=\"reblog-icon\" />\n            <Icon icon=\"heart\" size=\"xl\" alt={type} class=\"favourite-icon\" />\n          </>\n        ) : (\n          <Icon\n            icon={NOTIFICATION_ICONS[type] || 'notification'}\n            size=\"xl\"\n            alt={type}\n          />\n        )}\n      </div>\n      <div class=\"notification-content\">\n        {type !== 'mention' && (\n          <>\n            <p>{text}</p>\n            {type === 'follow_request' && (\n              <FollowRequestButtons accountID={account.id} />\n            )}\n            {type === 'severed_relationships' && (\n              <div>\n                {SEVERED_RELATIONSHIPS_TEXT[event.type]({\n                  from: instance,\n                  ...event,\n                })}\n                <br />\n                <a\n                  href={`https://${instance}/severed_relationships`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n                .\n              </div>\n            )}\n            {type === 'moderation_warning' && !!moderation_warning && (\n              <div>\n                {_(MODERATION_WARNING_TEXT[moderation_warning.action]())}\n                <br />\n                <a\n                  href={`/disputes/strikes/${moderation_warning.id}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <Trans>\n                    Learn more <Icon icon=\"external\" size=\"s\" />\n                  </Trans>\n                </a>\n              </div>\n            )}\n          </>\n        )}\n        {_accounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {_accounts.slice(0, AVATARS_LIMIT).map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener noreferrer\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size={\n                      _accounts.length <= 10\n                        ? 'xxl'\n                        : _accounts.length < 20\n                        ? 'xl'\n                        : 'l'\n                    }\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </a>{' '}\n              </Fragment>\n            ))}\n            <button\n              type=\"button\"\n              class=\"small plain\"\n              onClick={handleOpenGenericAccounts}\n            >\n              {_accounts.length > AVATARS_LIMIT &&\n                `+${_accounts.length - AVATARS_LIMIT}`}\n              <Icon icon=\"chevron-down\" />\n            </button>\n          </p>\n        )}\n        {!_accounts?.length && sampleAccounts?.length > 1 && (\n          <p class=\"avatars-stack\">\n            {sampleAccounts.map((account) => (\n              <Fragment key={account.id}>\n                <a\n                  key={account.id}\n                  href={account.url}\n                  rel=\"noopener noreferrer\"\n                  class=\"account-avatar-stack\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    states.showAccount = account;\n                  }}\n                >\n                  <Avatar\n                    url={account.avatarStatic}\n                    size=\"xxl\"\n                    key={account.id}\n                    alt={`${account.displayName} @${account.acct}`}\n                    squircle={account?.bot}\n                  />\n                  {/* {type === 'favourite+reblog' && (\n                    <div class=\"account-sub-icons\">\n                      {account._types.map((type) => (\n                        <Icon\n                          icon={NOTIFICATION_ICONS[type]}\n                          size=\"s\"\n                          class={`${type}-icon`}\n                        />\n                      ))}\n                    </div>\n                  )} */}\n                </a>{' '}\n              </Fragment>\n            ))}\n            {notificationsCount > sampleAccounts.length && (\n              <Link\n                to={\n                  instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                }\n                class=\"button small plain centered\"\n              >\n                +{notificationsCount - sampleAccounts.length}\n                <Icon icon=\"chevron-right\" />\n              </Link>\n            )}\n          </p>\n        )}\n        {_statuses?.length > 1 && (\n          <ul class=\"notification-group-statuses\">\n            {_statuses.map((status) => (\n              <li key={status.id}>\n                <TruncatedLink\n                  class={`status-link status-type-${type}`}\n                  to={\n                    instance ? `/${instance}/s/${status.id}` : `/s/${status.id}`\n                  }\n                >\n                  <Status\n                    status={status}\n                    size=\"s\"\n                    previewMode\n                    allowContextMenu\n                  />\n                </TruncatedLink>\n              </li>\n            ))}\n          </ul>\n        )}\n        {status && (!_statuses?.length || _statuses?.length <= 1) && (\n          <TruncatedLink\n            class={`status-link status-type-${type}`}\n            to={\n              instance\n                ? `/${instance}/s/${actualStatusID}`\n                : `/s/${actualStatusID}`\n            }\n            onContextMenu={\n              !disableContextMenu\n                ? (e) => {\n                    const post = e.target.querySelector('.status');\n                    if (post) {\n                      // Fire a custom event to open the context menu\n                      if (e.metaKey) return;\n                      e.preventDefault();\n                      post.dispatchEvent(\n                        new MouseEvent('contextmenu', {\n                          clientX: e.clientX,\n                          clientY: e.clientY,\n                        }),\n                      );\n                    }\n                  }\n                : undefined\n            }\n          >\n            {isStatic ? (\n              <Status\n                status={actualStatus}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            ) : (\n              <Status\n                statusID={actualStatusID}\n                size=\"s\"\n                readOnly\n                allowContextMenu\n              />\n            )}\n          </TruncatedLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction TruncatedLink(props) {\n  const ref = useTruncated();\n  return <Link {...props} data-read-more={t`Read more →`} ref={ref} />;\n}\n\nexport default memo(Notification, (oldProps, newProps) => {\n  return oldProps.notification?.id === newProps.notification?.id;\n});\n","import { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport states from '../utils/states';\nimport {\n  getAccountByAccessToken,\n  getCurrentAccount,\n} from '../utils/store-utils';\nimport usePageVisibility from '../utils/usePageVisibility';\n\nimport Icon from './icon';\nimport Link from './link';\nimport Modal from './modal';\nimport Notification from './notification';\n\n{\n  if ('serviceWorker' in navigator) {\n    console.log('👂👂👂 Listen to message');\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      console.log('💥💥💥 Message event', event);\n      const { type, id, accessToken } = event?.data || {};\n      if (type === 'notification') {\n        states.routeNotification = {\n          id,\n          accessToken,\n        };\n      }\n    });\n  }\n}\n\nexport default memo(function NotificationService() {\n  if (!('serviceWorker' in navigator)) return null;\n\n  const snapStates = useSnapshot(states);\n  const { routeNotification } = snapStates;\n\n  console.log('🛎️ Notification service', routeNotification);\n\n  const { id, accessToken } = routeNotification || {};\n  const [showNotificationSheet, setShowNotificationSheet] = useState(false);\n\n  useLayoutEffect(() => {\n    if (!id || !accessToken) return;\n    const { instance: currentInstance } = api();\n    const { masto, instance } = api({\n      accessToken,\n    });\n    console.log('API', { accessToken, currentInstance, instance });\n    const sameInstance = currentInstance === instance;\n    const account = accessToken\n      ? getAccountByAccessToken(accessToken)\n      : getCurrentAccount();\n    (async () => {\n      const notification = await masto.v1.notifications.$select(id).fetch();\n      if (notification && account) {\n        console.log('🛎️ Notification', { id, notification, account });\n        const accountInstance = account.instanceURL;\n        const { type, status, account: notificationAccount } = notification;\n        const hasModal = !!document.querySelector('#modal-container > *');\n        const isFollow = type === 'follow' && !!notificationAccount?.id;\n        const hasAccount = !!notificationAccount?.id;\n        const hasStatus = !!status?.id;\n        if (isFollow && sameInstance) {\n          // Show account sheet, can handle different instances\n          states.showAccount = {\n            account: notificationAccount,\n            instance: accountInstance,\n          };\n        } else if (hasModal || !sameInstance || (hasAccount && hasStatus)) {\n          // Show sheet of notification, if\n          // - there is a modal open\n          // - the notification is from another instance\n          // - the notification has both account and status, gives choice for users to go to account or status\n          setShowNotificationSheet({\n            id,\n            account,\n            notification,\n            sameInstance,\n          });\n        } else {\n          if (hasStatus) {\n            // Go to status page\n            location.hash = `/${currentInstance}/s/${status.id}`;\n          } else if (isFollow) {\n            // Go to profile page\n            location.hash = `/${currentInstance}/a/${notificationAccount.id}`;\n          } else {\n            // Go to notifications page\n            location.hash = '/notifications';\n          }\n        }\n      } else {\n        console.warn('🛎️ Notification not found', id);\n      }\n    })();\n  }, [id, accessToken]);\n\n  // useLayoutEffect(() => {\n  //   // Listen to message from service worker\n  //   const handleMessage = (event) => {\n  //     console.log('💥💥💥 Message event', event);\n  //     const { type, id, accessToken } = event?.data || {};\n  //     if (type === 'notification') {\n  //       states.routeNotification = {\n  //         id,\n  //         accessToken,\n  //       };\n  //     }\n  //   };\n  //   console.log('👂👂👂 Listen to message');\n  //   navigator.serviceWorker.addEventListener('message', handleMessage);\n  //   return () => {\n  //     console.log('👂👂👂 Remove listen to message');\n  //     navigator.serviceWorker.removeEventListener('message', handleMessage);\n  //   };\n  // }, []);\n\n  useLayoutEffect(() => {\n    if (navigator?.clearAppBadge) {\n      navigator.clearAppBadge();\n    }\n  }, []);\n  usePageVisibility((visible) => {\n    if (visible && navigator?.clearAppBadge) {\n      console.log('🔰 Clear app badge');\n      navigator.clearAppBadge();\n    }\n  });\n\n  const onClose = () => {\n    setShowNotificationSheet(false);\n    states.routeNotification = null;\n\n    // If url is #/notifications?id=123, go to #/notifications\n    if (/\\/notifications\\?id=/i.test(location.hash)) {\n      location.hash = '/notifications';\n    }\n  };\n\n  if (showNotificationSheet) {\n    const { id, account, notification, sameInstance } = showNotificationSheet;\n    return (\n      <Modal\n        onClick={(e) => {\n          if (e.target === e.currentTarget) {\n            onClose();\n          }\n        }}\n      >\n        <div class=\"sheet\" tabIndex=\"-1\">\n          <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n            <Icon icon=\"x\" alt={t`Close`} />\n          </button>\n          <header>\n            <b>\n              <Trans>Notification</Trans>\n            </b>\n          </header>\n          <main>\n            {!sameInstance && (\n              <p>\n                <Trans>This notification is from your other account.</Trans>\n              </p>\n            )}\n            <div\n              class=\"notification-peek\"\n              // style={{\n              //   pointerEvents: sameInstance ? '' : 'none',\n              // }}\n              onClick={(e) => {\n                const { target } = e;\n                // If button or links\n                if (e.target.tagName === 'BUTTON' || e.target.tagName === 'A') {\n                  onClose();\n                }\n              }}\n            >\n              <Notification\n                instance={account.instanceURL}\n                notification={notification}\n                isStatic\n              />\n            </div>\n            <div\n              style={{\n                textAlign: 'end',\n              }}\n            >\n              <Link to=\"/notifications\" class=\"button light\" onClick={onClose}>\n                <span>\n                  <Trans>View all notifications</Trans>\n                </span>{' '}\n                <Icon icon=\"arrow-right\" />\n              </Link>\n            </div>\n          </main>\n        </div>\n      </Modal>\n    );\n  }\n\n  return null;\n});\n","import { t, Trans } from '@lingui/macro';\nimport { forwardRef } from 'preact/compat';\nimport { useImperativeHandle, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from '../utils/api';\n\nimport Icon from './icon';\nimport Link from './link';\n\nconst SearchForm = forwardRef((props, ref) => {\n  const { instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchMenuOpen, setSearchMenuOpen] = useState(false);\n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const type = searchParams.get('type');\n  const formRef = useRef(null);\n\n  const searchFieldRef = useRef(null);\n  useImperativeHandle(ref, () => ({\n    setValue: (value) => {\n      setQuery(value);\n    },\n    focus: () => {\n      searchFieldRef.current.focus();\n    },\n    select: () => {\n      searchFieldRef.current.select();\n    },\n    blur: () => {\n      searchFieldRef.current.blur();\n    },\n  }));\n\n  return (\n    <form\n      ref={formRef}\n      class=\"search-popover-container\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const isSearchPage = /\\/search/.test(location.hash);\n        if (isSearchPage) {\n          if (query) {\n            const params = {\n              q: query,\n            };\n            if (type) params.type = type; // Preserve type\n            setSearchParams(params);\n          } else {\n            setSearchParams({});\n          }\n        } else {\n          if (query) {\n            location.hash = `/search?q=${encodeURIComponent(query)}${\n              type ? `&type=${type}` : ''\n            }`;\n          } else {\n            location.hash = `/search`;\n          }\n        }\n\n        props?.onSubmit?.(e);\n      }}\n    >\n      <input\n        ref={searchFieldRef}\n        value={query}\n        name=\"q\"\n        type=\"search\"\n        // autofocus\n        placeholder={t`Search`}\n        dir=\"auto\"\n        autocomplete=\"off\"\n        autocorrect=\"off\"\n        autocapitalize=\"off\"\n        spellCheck=\"false\"\n        onSearch={(e) => {\n          if (!e.target.value) {\n            setSearchParams({});\n          }\n        }}\n        onInput={(e) => {\n          setQuery(e.target.value);\n          setSearchMenuOpen(true);\n        }}\n        onFocus={() => {\n          setSearchMenuOpen(true);\n          formRef.current\n            ?.querySelector('.search-popover-item')\n            ?.classList.add('focus');\n        }}\n        onBlur={() => {\n          setTimeout(() => {\n            setSearchMenuOpen(false);\n          }, 100);\n          formRef.current\n            ?.querySelector('.search-popover-item.focus')\n            ?.classList.remove('focus');\n        }}\n        onKeyDown={(e) => {\n          const { key } = e;\n          switch (key) {\n            case 'Escape':\n              setSearchMenuOpen(false);\n              break;\n            case 'Down':\n            case 'ArrowDown':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = formRef.current.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let nextItem = focusItem.nextElementSibling;\n                  while (nextItem && nextItem.hidden) {\n                    nextItem = nextItem.nextElementSibling;\n                  }\n                  if (nextItem) {\n                    nextItem.classList.add('focus');\n                    const siblings = Array.from(\n                      nextItem.parentElement.children,\n                    ).filter((el) => el !== nextItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const firstItem = formRef.current.querySelector(\n                    '.search-popover-item',\n                  );\n                  if (firstItem) {\n                    firstItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Up':\n            case 'ArrowUp':\n              e.preventDefault();\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  let prevItem = focusItem.previousElementSibling;\n                  while (prevItem && prevItem.hidden) {\n                    prevItem = prevItem.previousElementSibling;\n                  }\n                  if (prevItem) {\n                    prevItem.classList.add('focus');\n                    const siblings = Array.from(\n                      prevItem.parentElement.children,\n                    ).filter((el) => el !== prevItem);\n                    siblings.forEach((el) => {\n                      el.classList.remove('focus');\n                    });\n                  }\n                } else {\n                  const lastItem = document.querySelector(\n                    '.search-popover-item:last-child',\n                  );\n                  if (lastItem) {\n                    lastItem.classList.add('focus');\n                  }\n                }\n              }\n              break;\n            case 'Enter':\n              if (searchMenuOpen) {\n                const focusItem = document.querySelector(\n                  '.search-popover-item.focus',\n                );\n                if (focusItem) {\n                  e.preventDefault();\n                  focusItem.click();\n                }\n                setSearchMenuOpen(false);\n                props?.onSubmit?.(e);\n              }\n              break;\n          }\n        }}\n      />\n      <div class=\"search-popover\" hidden={!searchMenuOpen || !query}>\n        {/* {!!query && (\n          <Link\n            to={`/search?q=${encodeURIComponent(query)}`}\n            class=\"search-popover-item focus\"\n            onClick={(e) => {\n              props?.onSubmit?.(e);\n            }}\n          >\n            <Icon icon=\"search\" />\n            <span>{query}</span>\n          </Link>\n        )} */}\n        {!!query &&\n          [\n            {\n              label: (\n                <Trans>\n                  {query}{' '}\n                  <small class=\"insignificant\">\n                    ‒ accounts, hashtags &amp; posts\n                  </small>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}`,\n              top: !type && !/\\s/.test(query),\n              hidden: !!type,\n            },\n            {\n              label: (\n                <Trans>\n                  Posts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=statuses`,\n              hidden: /^https?:/.test(query),\n              top: /\\s/.test(query),\n              icon: 'document',\n              queryType: 'statuses',\n            },\n            {\n              label: (\n                <Trans>\n                  Posts tagged with <mark>#{query.replace(/^#/, '')}</mark>\n                </Trans>\n              ),\n              to: `/${instance}/t/${query.replace(/^#/, '')}`,\n              hidden:\n                /^@/.test(query) || /^https?:/.test(query) || /\\s/.test(query),\n              top: /^#/.test(query),\n              type: 'link',\n              icon: 'hashtag',\n              queryType: 'hashtags',\n            },\n            {\n              label: (\n                <Trans>\n                  Look up <mark>{query}</mark>\n                </Trans>\n              ),\n              to: `/${query}`,\n              hidden: !/^https?:/.test(query),\n              top: /^https?:/.test(query),\n              type: 'link',\n            },\n            {\n              label: (\n                <Trans>\n                  Accounts with <q>{query}</q>\n                </Trans>\n              ),\n              to: `/search?q=${encodeURIComponent(query)}&type=accounts`,\n              icon: 'group',\n              queryType: 'accounts',\n            },\n          ]\n            .sort((a, b) => {\n              if (type) {\n                if (a.queryType === type) return -1;\n                if (b.queryType === type) return 1;\n              }\n              if (a.top && !b.top) return -1;\n              if (!a.top && b.top) return 1;\n              return 0;\n            })\n            .filter(({ hidden }) => !hidden)\n            .map(({ label, to, icon, type }, i) => (\n              <Link\n                to={to}\n                class={`search-popover-item ${i === 0 ? 'focus' : ''}`}\n                // hidden={hidden}\n                onClick={(e) => {\n                  console.log('onClick', e);\n                  props?.onSubmit?.(e);\n                }}\n              >\n                <Icon\n                  icon={icon || (type === 'link' ? 'arrow-right' : 'search')}\n                  class=\"more-insignificant\"\n                />\n                <span>{label}</span>{' '}\n              </Link>\n            ))}\n      </div>\n    </form>\n  );\n});\n\nexport default SearchForm;\n","import './search-command.css';\n\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nimport SearchForm from './search-form';\n\nexport default memo(function SearchCommand({ onClose = () => {} }) {\n  const [showSearch, setShowSearch] = useState(false);\n  const searchFormRef = useRef(null);\n\n  useHotkeys(\n    ['Slash', '/'],\n    (e) => {\n      setShowSearch(true);\n      setTimeout(() => {\n        searchFormRef.current?.focus?.();\n        searchFormRef.current?.select?.();\n      }, 0);\n    },\n    {\n      preventDefault: true,\n      ignoreEventWhen: (e) => {\n        const isSearchPage = /\\/search/.test(location.hash);\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return isSearchPage || hasModal;\n      },\n    },\n  );\n\n  const closeSearch = () => {\n    setShowSearch(false);\n    onClose();\n  };\n\n  useHotkeys(\n    'esc',\n    (e) => {\n      searchFormRef.current?.blur?.();\n      closeSearch();\n    },\n    {\n      enabled: showSearch,\n      enableOnFormTags: true,\n      preventDefault: true,\n    },\n  );\n\n  return (\n    <div\n      id=\"search-command-container\"\n      hidden={!showSearch}\n      onClick={(e) => {\n        console.log(e);\n        if (e.target === e.currentTarget) {\n          closeSearch();\n        }\n      }}\n    >\n      <SearchForm\n        ref={searchFormRef}\n        onSubmit={() => {\n          closeSearch();\n        }}\n      />\n    </div>\n  );\n});\n","import './shortcuts.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { MenuDivider } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useNavigate } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport { SHORTCUTS_META } from '../components/shortcuts-settings';\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport states from '../utils/states';\n\nimport AsyncText from './AsyncText';\nimport Icon from './icon';\nimport Link from './link';\nimport MenuLink from './menu-link';\nimport Menu2 from './menu2';\nimport SubMenu2 from './submenu2';\n\nfunction Shortcuts() {\n  const { _ } = useLingui();\n  const { instance } = api();\n  const snapStates = useSnapshot(states);\n  const { shortcuts, settings } = snapStates;\n\n  if (!shortcuts.length) {\n    return null;\n  }\n  if (\n    settings.shortcutsViewMode === 'multi-column' ||\n    (!settings.shortcutsViewMode && settings.shortcutsColumnsMode)\n  ) {\n    return null;\n  }\n\n  const menuRef = useRef();\n\n  const hasLists = useRef(false);\n  const formattedShortcuts = shortcuts\n    .map((pin, i) => {\n      const { type, ...data } = pin;\n      if (!SHORTCUTS_META[type]) return null;\n      let { id, path, title, subtitle, icon } = SHORTCUTS_META[type];\n\n      if (typeof id === 'function') {\n        id = id(data, i);\n      }\n      if (typeof path === 'function') {\n        path = path(\n          {\n            ...data,\n            instance: data.instance || instance,\n          },\n          i,\n        );\n      }\n      if (typeof title === 'function') {\n        title = title(data, i);\n      } else {\n        title = _(title);\n      }\n      if (typeof subtitle === 'function') {\n        subtitle = subtitle(data, i);\n      } else {\n        subtitle = _(subtitle);\n      }\n      if (typeof icon === 'function') {\n        icon = icon(data, i);\n      }\n\n      if (id === 'lists') {\n        hasLists.current = true;\n      }\n\n      return {\n        id,\n        path,\n        title,\n        subtitle,\n        icon,\n      };\n    })\n    .filter(Boolean);\n\n  const navigate = useNavigate();\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    const index = parseInt(handler.keys[0], 10) - 1;\n    if (index < formattedShortcuts.length) {\n      const { path } = formattedShortcuts[index];\n      if (path) {\n        navigate(path);\n        menuRef.current?.closeMenu?.();\n      }\n    }\n  });\n\n  const [lists, setLists] = useState([]);\n\n  return (\n    <div id=\"shortcuts\">\n      {snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? (\n        <nav\n          class=\"tab-bar\"\n          onContextMenu={(e) => {\n            e.preventDefault();\n            states.showShortcutsSettings = true;\n          }}\n        >\n          <ul>\n            {formattedShortcuts.map(\n              ({ id, path, title, subtitle, icon }, i) => {\n                return (\n                  <li key={`${i}-${id}-${title}-${subtitle}-${path}`}>\n                    <Link\n                      class={subtitle ? 'has-subtitle' : ''}\n                      to={path}\n                      onClick={(e) => {\n                        if (e.target.classList.contains('is-active')) {\n                          e.preventDefault();\n                          const page = document.getElementById(`${id}-page`);\n                          console.log(id, page);\n                          if (page) {\n                            page.scrollTop = 0;\n                            const updatesButton =\n                              page.querySelector('.updates-button');\n                            if (updatesButton) {\n                              updatesButton.click();\n                            }\n                          }\n                        }\n                      }}\n                    >\n                      <Icon icon={icon} size=\"xl\" alt={title} />\n                      <span>\n                        <AsyncText>{title}</AsyncText>\n                        {subtitle && (\n                          <>\n                            <br />\n                            <small>{subtitle}</small>\n                          </>\n                        )}\n                      </span>\n                    </Link>\n                  </li>\n                );\n              },\n            )}\n          </ul>\n        </nav>\n      ) : (\n        <Menu2\n          instanceRef={menuRef}\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          menuClassName=\"glass-menu shortcuts-menu\"\n          gap={8}\n          position=\"anchor\"\n          onMenuChange={(e) => {\n            if (e.open && hasLists.current) {\n              getLists().then(setLists);\n            }\n          }}\n          menuButton={\n            <button\n              type=\"button\"\n              id=\"shortcuts-button\"\n              class=\"plain\"\n              onContextMenu={(e) => {\n                e.preventDefault();\n                states.showShortcutsSettings = true;\n              }}\n              onTransitionStart={(e) => {\n                // Close menu if the button disappears\n                try {\n                  const { target } = e;\n                  if (getComputedStyle(target).pointerEvents === 'none') {\n                    menuRef.current?.closeMenu?.();\n                  }\n                } catch (e) {}\n              }}\n            >\n              <Icon icon=\"shortcut\" size=\"xl\" alt={t`Shortcuts`} />\n            </button>\n          }\n        >\n          {formattedShortcuts.map(({ id, path, title, subtitle, icon }, i) => {\n            if (id === 'lists') {\n              return (\n                <SubMenu2\n                  menuClassName=\"glass-menu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon={icon} size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <AsyncText>{title}</AsyncText>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  <MenuDivider />\n                  {lists?.map((list) => (\n                    <MenuLink key={list.id} to={`/l/${list.id}`}>\n                      <span>{list.title}</span>\n                    </MenuLink>\n                  ))}\n                </SubMenu2>\n              );\n            }\n\n            return (\n              <MenuLink\n                to={path}\n                key={`${i}-${id}-${title}-${subtitle}-${path}`}\n                class=\"glass-menu-item\"\n              >\n                <Icon icon={icon} size=\"l\" />{' '}\n                <span class=\"menu-grow\">\n                  <span>\n                    <AsyncText>{title}</AsyncText>\n                  </span>\n                  {subtitle && (\n                    <>\n                      {' '}\n                      <small class=\"more-insignificant\">{subtitle}</small>\n                    </>\n                  )}\n                </span>\n                <span class=\"menu-shortcut hide-until-focus-visible\">\n                  {i + 1}\n                </span>\n              </MenuLink>\n            );\n          })}\n        </Menu2>\n      )}\n    </div>\n  );\n}\n\nexport default memo(Shortcuts);\n","import { api } from './api';\nimport { extractTagsFromStatus, getFollowedTags } from './followed-tags';\nimport pmem from './pmem';\nimport { fetchRelationships } from './relationships';\nimport states, { saveStatus, statusKey } from './states';\nimport store from './store';\nimport supports from './supports';\n\nexport function groupBoosts(values) {\n  let newValues = [];\n  let boostStash = [];\n  let serialBoosts = 0;\n  for (let i = 0; i < values.length; i++) {\n    const item = values[i];\n    if (item.reblog && !item.account?.group) {\n      boostStash.push(item);\n      serialBoosts++;\n    } else {\n      newValues.push(item);\n      if (serialBoosts < 3) {\n        serialBoosts = 0;\n      }\n    }\n  }\n  // if boostStash is more than quarter of values\n  // or if there are 3 or more boosts in a row\n  if (\n    values.length > 10 &&\n    (boostStash.length > values.length / 4 || serialBoosts >= 3)\n  ) {\n    // if boostStash is more than 3 quarter of values\n    const boostStashID = boostStash.map((status) => status.id);\n    if (boostStash.length > (values.length * 3) / 4) {\n      // insert boost array at the end of specialHome list\n      newValues = [\n        ...newValues,\n        { id: boostStashID, items: boostStash, type: 'boosts' },\n      ];\n    } else {\n      // insert boosts array in the middle of specialHome list\n      const half = Math.floor(newValues.length / 2);\n      newValues = [\n        ...newValues.slice(0, half),\n        {\n          id: boostStashID,\n          items: boostStash,\n          type: 'boosts',\n        },\n        ...newValues.slice(half),\n      ];\n    }\n    return newValues;\n  } else {\n    return values;\n  }\n}\n\nexport function dedupeBoosts(items, instance) {\n  const boostedStatusIDs = store.account.get('boostedStatusIDs') || {};\n  const filteredItems = items.filter((item) => {\n    if (!item.reblog) return true;\n    const statusKey = `${instance}-${item.reblog.id}`;\n    const boosterID = boostedStatusIDs[statusKey];\n    if (boosterID && boosterID !== item.id) {\n      console.warn(\n        `🚫 Duplicate boost by ${item.account.displayName}`,\n        item,\n        item.reblog,\n      );\n      return false;\n    } else {\n      boostedStatusIDs[statusKey] = item.id;\n    }\n    return true;\n  });\n  // Limit to 50\n  const keys = Object.keys(boostedStatusIDs);\n  if (keys.length > 50) {\n    keys.slice(0, keys.length - 50).forEach((key) => {\n      delete boostedStatusIDs[key];\n    });\n  }\n  store.account.set('boostedStatusIDs', boostedStatusIDs);\n  return filteredItems;\n}\n\nexport function groupContext(items, instance) {\n  const contexts = [];\n  let contextIndex = 0;\n  items.forEach((item) => {\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) return;\n      if (\n        contexts[i].find((t) => t.id === item.inReplyToId) ||\n        contexts[i].find((t) => t.inReplyToId === item.id)\n      ) {\n        contexts[i].push(item);\n        return;\n      }\n    }\n    const repliedItem = items.find((i) => i.id === item.inReplyToId);\n    if (repliedItem) {\n      contexts[contextIndex++] = [item, repliedItem];\n    }\n  });\n\n  // Check for cross-item contexts\n  // Merge contexts into one if they have a common item (same id)\n  for (let i = 0; i < contexts.length; i++) {\n    for (let j = i + 1; j < contexts.length; j++) {\n      const commonItem = contexts[i].find((t) => contexts[j].includes(t));\n      if (commonItem) {\n        contexts[i] = [...contexts[i], ...contexts[j]];\n        // Remove duplicate items\n        contexts[i] = contexts[i].filter(\n          (item, index, self) =>\n            self.findIndex((t) => t.id === item.id) === index,\n        );\n        contexts.splice(j, 1);\n        j--;\n      }\n    }\n  }\n\n  // Sort items by checking inReplyToId\n  contexts.forEach((context) => {\n    context.sort((a, b) => {\n      if (!a.inReplyToId && !b.inReplyToId) {\n        return new Date(a.createdAt) - new Date(b.createdAt);\n      }\n      if (a.inReplyToId === b.id) return 1;\n      if (b.inReplyToId === a.id) return -1;\n      if (!a.inReplyToId) return -1;\n      if (!b.inReplyToId) return 1;\n      return new Date(a.createdAt) - new Date(b.createdAt);\n    });\n  });\n\n  // Tag items that has different author than first post's author\n  contexts.forEach((context) => {\n    const firstItemAccountID = context[0].account.id;\n    context.forEach((item) => {\n      if (item.account.id !== firstItemAccountID) {\n        item._differentAuthor = true;\n      }\n    });\n  });\n\n  if (contexts.length) console.log('🧵 Contexts', contexts);\n\n  const newItems = [];\n  const appliedContextIndices = [];\n  const inReplyToIds = [];\n  items.forEach((item) => {\n    if (item.reblog) {\n      newItems.push(item);\n      return;\n    }\n    for (let i = 0; i < contexts.length; i++) {\n      if (contexts[i].find((t) => t.id === item.id)) {\n        if (appliedContextIndices.includes(i)) return;\n        const contextItems = contexts[i];\n        contextItems.sort((a, b) => {\n          const aDate = new Date(a.createdAt);\n          const bDate = new Date(b.createdAt);\n          return aDate - bDate;\n        });\n        const firstItemAccountID = contextItems[0].account.id;\n        newItems.push({\n          id: contextItems.map((i) => i.id),\n          items: contextItems,\n          type: contextItems.every((it) => it.account.id === firstItemAccountID)\n            ? 'thread'\n            : 'conversation',\n        });\n        appliedContextIndices.push(i);\n        return;\n      }\n    }\n\n    // PREPARE FOR REPLY HINTS\n    if (item.inReplyToId && item.inReplyToAccountId !== item.account.id) {\n      const sKey = statusKey(item.id, instance);\n      if (!states.statusReply[sKey]) {\n        // If it's a reply and not a thread\n        inReplyToIds.push({\n          sKey,\n          inReplyToId: item.inReplyToId,\n        });\n        // queueMicrotask(async () => {\n        //   try {\n        //     const { masto } = api({ instance });\n        //     // const replyToStatus = await masto.v1.statuses\n        //     //   .$select(item.inReplyToId)\n        //     //   .fetch();\n        //     const replyToStatus = await fetchStatus(item.inReplyToId, masto);\n        //     saveStatus(replyToStatus, instance, {\n        //       skipThreading: true,\n        //       skipUnfurling: true,\n        //     });\n        //     states.statusReply[sKey] = {\n        //       id: replyToStatus.id,\n        //       instance,\n        //     };\n        //   } catch (e) {\n        //     // Silently fail\n        //     console.error(e);\n        //   }\n        // });\n      }\n    }\n\n    newItems.push(item);\n  });\n\n  // FETCH AND SHOW REPLY HINTS\n  if (inReplyToIds?.length) {\n    queueMicrotask(() => {\n      const { masto } = api({ instance });\n      console.log('REPLYHINT', inReplyToIds);\n\n      // Fallback if batch fetch fails or returns nothing or not supported\n      async function fallbackFetch() {\n        for (let i = 0; i < inReplyToIds.length; i++) {\n          const { sKey, inReplyToId } = inReplyToIds[i];\n          try {\n            const replyToStatus = await fetchStatus(inReplyToId, masto);\n            saveStatus(replyToStatus, instance, {\n              skipThreading: true,\n            });\n            states.statusReply[sKey] = {\n              id: replyToStatus.id,\n              instance,\n            };\n            // Pause 1s\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n          }\n        }\n      }\n\n      if (supports('@mastodon/fetch-multiple-statuses')) {\n        // This is batch fetching yooo, woot\n        // Limit 20, returns 422 if exceeded https://github.com/mastodon/mastodon/pull/27871\n        const ids = inReplyToIds.map(({ inReplyToId }) => inReplyToId);\n        (async () => {\n          try {\n            const replyToStatuses = await masto.v1.statuses.list({ id: ids });\n            if (replyToStatuses?.length) {\n              for (const replyToStatus of replyToStatuses) {\n                saveStatus(replyToStatus, instance, {\n                  skipThreading: true,\n                });\n                const sKey = inReplyToIds.find(\n                  ({ inReplyToId }) => inReplyToId === replyToStatus.id,\n                )?.sKey;\n                if (sKey) {\n                  states.statusReply[sKey] = {\n                    id: replyToStatus.id,\n                    instance,\n                  };\n                }\n              }\n            } else {\n              fallbackFetch();\n            }\n          } catch (e) {\n            // Silently fail\n            console.error(e);\n            fallbackFetch();\n          }\n        })();\n      } else {\n        fallbackFetch();\n      }\n    });\n  }\n\n  return newItems;\n}\n\nconst fetchStatus = pmem((statusID, masto) => {\n  return masto.v1.statuses.$select(statusID).fetch();\n});\n\nexport async function assignFollowedTags(items, instance) {\n  const followedTags = await getFollowedTags(); // [{name: 'tag'}, {...}]\n  if (!followedTags.length) return;\n  const { statusFollowedTags } = states;\n  console.log('statusFollowedTags', statusFollowedTags);\n  const statusWithFollowedTags = [];\n  items.forEach((item) => {\n    if (item.reblog) return;\n    const { id, content, tags = [] } = item;\n    const sKey = statusKey(id, instance);\n    if (statusFollowedTags[sKey]?.length) return;\n    const extractedTags = extractTagsFromStatus(content);\n    if (!extractedTags.length && !tags.length) return;\n    const itemFollowedTags = followedTags.reduce((acc, tag) => {\n      if (\n        extractedTags.some((t) => t.toLowerCase() === tag.name.toLowerCase()) ||\n        tags.some((t) => t.name.toLowerCase() === tag.name.toLowerCase())\n      ) {\n        acc.push(tag.name);\n      }\n      return acc;\n    }, []);\n    if (itemFollowedTags.length) {\n      // statusFollowedTags[sKey] = itemFollowedTags;\n      statusWithFollowedTags.push({\n        item,\n        sKey,\n        followedTags: itemFollowedTags,\n      });\n    }\n  });\n\n  if (statusWithFollowedTags.length) {\n    const accounts = statusWithFollowedTags.map((s) => s.item.account);\n    const relationships = await fetchRelationships(accounts);\n    if (!relationships) return;\n\n    statusWithFollowedTags.forEach((s) => {\n      const { item, sKey, followedTags } = s;\n      const r = relationships[item.account.id];\n      if (r && !r.following) {\n        statusFollowedTags[sKey] = followedTags;\n      }\n    });\n  }\n}\n\nexport function clearFollowedTagsState() {\n  states.statusFollowedTags = {};\n}\n","import { useLayoutEffect, useState } from 'preact/hooks';\n\nexport default function useScroll({\n  scrollableRef,\n  distanceFromStart = 1, // ratio of clientHeight/clientWidth\n  distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n  scrollThresholdStart = 10,\n  scrollThresholdEnd = 10,\n  direction = 'vertical',\n  distanceFromStartPx: _distanceFromStartPx,\n  distanceFromEndPx: _distanceFromEndPx,\n} = {}) {\n  const [scrollDirection, setScrollDirection] = useState(null);\n  const [reachStart, setReachStart] = useState(false);\n  const [reachEnd, setReachEnd] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    let previousScrollStart = isVertical\n      ? scrollableElement.scrollTop\n      : scrollableElement.scrollLeft;\n\n    function onScroll() {\n      const {\n        scrollTop,\n        scrollLeft,\n        scrollHeight,\n        scrollWidth,\n        clientHeight,\n        clientWidth,\n      } = scrollableElement;\n      const scrollStart = isVertical ? scrollTop : scrollLeft;\n      const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n      const clientDimension = isVertical ? clientHeight : clientWidth;\n      const scrollDistance = Math.abs(scrollStart - previousScrollStart);\n      const distanceFromStartPx =\n        _distanceFromStartPx ||\n        Math.min(\n          clientDimension * distanceFromStart,\n          scrollDimension,\n          scrollStart,\n        );\n      const distanceFromEndPx =\n        _distanceFromEndPx ||\n        Math.min(\n          clientDimension * distanceFromEnd,\n          scrollDimension,\n          scrollDimension - scrollStart - clientDimension,\n        );\n\n      if (\n        scrollDistance >=\n        (previousScrollStart < scrollStart\n          ? scrollThresholdEnd\n          : scrollThresholdStart)\n      ) {\n        setScrollDirection(previousScrollStart < scrollStart ? 'end' : 'start');\n        previousScrollStart = scrollStart;\n      }\n\n      setReachStart(scrollStart <= 0);\n      setReachEnd(scrollStart + clientDimension >= scrollDimension);\n      setNearReachStart(scrollStart <= distanceFromStartPx);\n      setNearReachEnd(\n        scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n      );\n    }\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n  ]);\n\n  return {\n    scrollDirection,\n    reachStart,\n    reachEnd,\n    nearReachStart,\n    nearReachEnd,\n    init: () => {\n      if (scrollableRef.current) {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      }\n    },\n  };\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useThrottledCallback } from 'use-debounce';\n\nexport default function useScrollFn(\n  {\n    scrollableRef,\n    distanceFromStart = 1, // ratio of clientHeight/clientWidth\n    distanceFromEnd = 1, // ratio of clientHeight/clientWidth\n    scrollThresholdStart = 10,\n    scrollThresholdEnd = 10,\n    direction = 'vertical',\n    distanceFromStartPx: _distanceFromStartPx,\n    distanceFromEndPx: _distanceFromEndPx,\n    init,\n  } = {},\n  callback,\n  deps,\n) {\n  if (!callback) return;\n  // const [scrollDirection, setScrollDirection] = useState(null);\n  // const [reachStart, setReachStart] = useState(false);\n  // const [reachEnd, setReachEnd] = useState(false);\n  // const [nearReachStart, setNearReachStart] = useState(false);\n  // const [nearReachEnd, setNearReachEnd] = useState(false);\n  const isVertical = direction === 'vertical';\n  const previousScrollStart = useRef(null);\n  const scrollDirection = useRef(null);\n\n  const onScroll = useThrottledCallback(() => {\n    // let scrollDirection = null;\n    let reachStart = false;\n    let reachEnd = false;\n    let nearReachStart = false;\n    let nearReachEnd = false;\n\n    const scrollableElement = scrollableRef.current;\n    const {\n      scrollTop,\n      scrollLeft,\n      scrollHeight,\n      scrollWidth,\n      clientHeight,\n      clientWidth,\n    } = scrollableElement;\n    const scrollStart = isVertical ? scrollTop : scrollLeft;\n    const scrollDimension = isVertical ? scrollHeight : scrollWidth;\n    const clientDimension = isVertical ? clientHeight : clientWidth;\n    const scrollDistance = Math.abs(scrollStart - previousScrollStart.current);\n    const distanceFromStartPx =\n      _distanceFromStartPx ||\n      Math.min(\n        clientDimension * distanceFromStart,\n        scrollDimension,\n        scrollStart,\n      );\n    const distanceFromEndPx =\n      _distanceFromEndPx ||\n      Math.min(\n        clientDimension * distanceFromEnd,\n        scrollDimension,\n        scrollDimension - scrollStart - clientDimension,\n      );\n\n    if (\n      scrollDistance >=\n      (previousScrollStart.current < scrollStart\n        ? scrollThresholdEnd\n        : scrollThresholdStart)\n    ) {\n      // setScrollDirection(\n      //   previousScrollStart.current < scrollStart ? 'end' : 'start',\n      // );\n      scrollDirection.current =\n        previousScrollStart.current < scrollStart ? 'end' : 'start';\n      previousScrollStart.current = scrollStart;\n    }\n\n    // setReachStart(scrollStart <= 0);\n    // setReachEnd(scrollStart + clientDimension >= scrollDimension);\n    // setNearReachStart(scrollStart <= distanceFromStartPx);\n    // setNearReachEnd(\n    //   scrollStart + clientDimension >= scrollDimension - distanceFromEndPx,\n    // );\n    reachStart = scrollStart <= 0;\n    reachEnd = scrollStart + clientDimension >= scrollDimension;\n    nearReachStart = scrollStart <= distanceFromStartPx;\n    nearReachEnd =\n      scrollStart + clientDimension >= scrollDimension - distanceFromEndPx;\n\n    callback({\n      scrollDirection: scrollDirection.current,\n      reachStart,\n      reachEnd,\n      nearReachStart,\n      nearReachEnd,\n    });\n  }, 500);\n\n  useLayoutEffect(() => {\n    const scrollableElement = scrollableRef.current;\n    if (!scrollableElement) return {};\n    previousScrollStart.current =\n      scrollableElement[isVertical ? 'scrollTop' : 'scrollLeft'];\n\n    scrollableElement.addEventListener('scroll', onScroll, { passive: true });\n\n    return () => scrollableElement.removeEventListener('scroll', onScroll);\n  }, [\n    distanceFromStart,\n    distanceFromEnd,\n    scrollThresholdStart,\n    scrollThresholdEnd,\n    ...deps,\n  ]);\n\n  // useEffect(() => {\n  //   callback({\n  //     scrollDirection,\n  //     reachStart,\n  //     reachEnd,\n  //     nearReachStart,\n  //     nearReachEnd,\n  //   });\n  // }, [\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   ...deps,\n  // ]);\n\n  useEffect(() => {\n    if (init && scrollableRef.current) {\n      queueMicrotask(() => {\n        scrollableRef.current.dispatchEvent(new Event('scroll'));\n      });\n    }\n  }, [init]);\n\n  // return {\n  //   scrollDirection,\n  //   reachStart,\n  //   reachEnd,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   init: () => {\n  //     if (scrollableRef.current) {\n  //       scrollableRef.current.dispatchEvent(new Event('scroll'));\n  //     }\n  //   },\n  // };\n}\n","import './media-post.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport { useContext, useMemo } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { isFiltered } from '../utils/filters';\nimport states, { statusKey } from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\n\nimport Media from './media';\n\nfunction MediaPost({\n  class: className,\n  statusID,\n  status,\n  instance,\n  parent,\n  // allowFilters,\n  onMediaClick,\n}) {\n  let sKey = statusKey(statusID, instance);\n  const snapStates = useSnapshot(states);\n  if (!status) {\n    status = snapStates.statuses[sKey] || snapStates.statuses[statusID];\n    sKey = statusKey(status?.id, instance);\n  }\n  if (!status) {\n    return null;\n  }\n\n  const {\n    account: {\n      acct,\n      avatar,\n      avatarStatic,\n      id: accountId,\n      url: accountURL,\n      displayName,\n      username,\n      emojis: accountEmojis,\n      bot,\n      group,\n    },\n    id,\n    repliesCount,\n    reblogged,\n    reblogsCount,\n    favourited,\n    favouritesCount,\n    bookmarked,\n    poll,\n    muted,\n    sensitive,\n    spoilerText,\n    visibility, // public, unlisted, private, direct\n    language,\n    editedAt,\n    filtered,\n    card,\n    createdAt,\n    inReplyToId,\n    inReplyToAccountId,\n    content,\n    mentions,\n    mediaAttachments,\n    reblog,\n    uri,\n    url,\n    emojis,\n    // Non-API props\n    _deleted,\n    _pinned,\n    // _filtered,\n  } = status;\n\n  if (!mediaAttachments?.length) {\n    return null;\n  }\n\n  const debugHover = (e) => {\n    if (e.shiftKey) {\n      console.log({\n        ...status,\n      });\n    }\n  };\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = useMemo(() => {\n    return currentAccount && currentAccount === accountId;\n  }, [accountId, currentAccount]);\n\n  const filterContext = useContext(FilterContext);\n  const filterInfo = !isSelf && isFiltered(filtered, filterContext);\n\n  if (filterInfo?.action === 'hide') {\n    return null;\n  }\n\n  console.debug('RENDER Media post', id, status?.account.displayName);\n\n  const hasSpoiler = sensitive;\n  const readingExpandMedia = useMemo(() => {\n    // default | show_all | hide_all\n    const prefs = store.account.get('preferences') || {};\n    return prefs['reading:expand:media']?.toLowerCase() || 'default';\n  }, []);\n  const showSpoilerMedia = readingExpandMedia === 'show_all';\n\n  const Parent = parent || 'div';\n\n  return mediaAttachments.map((media, i) => {\n    const mediaKey = `${sKey}-${media.id}`;\n    const filterTitleStr = filterInfo?.titlesStr;\n    return (\n      <Parent\n        data-state-post-id={sKey}\n        onMouseEnter={debugHover}\n        key={mediaKey}\n        data-spoiler-text={\n          spoilerText || (sensitive ? t`Sensitive media` : undefined)\n        }\n        data-filtered-text={\n          filterInfo\n            ? filterTitleStr\n              ? t`Filtered: ${filterTitleStr}`\n              : t`Filtered`\n            : undefined\n        }\n        class={`\n          media-post\n          ${filterInfo ? 'filtered' : ''}\n          ${hasSpoiler ? 'has-spoiler' : ''}\n          ${showSpoilerMedia ? 'show-media' : ''}\n        `}\n      >\n        <Media\n          class={className}\n          media={media}\n          lang={language}\n          to={`/${instance}/s/${id}?media-only=${i + 1}`}\n          onClick={\n            onMediaClick ? (e) => onMediaClick(e, i, media, status) : undefined\n          }\n        />\n      </Parent>\n    );\n  });\n}\n\nexport default memo(MediaPost);\n","import './nav-menu.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { ControlledMenu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useLongPress } from 'use-long-press';\nimport { useSnapshot } from 'valtio';\n\nimport { api } from '../utils/api';\nimport { getLists } from '../utils/lists';\nimport safeBoundingBoxPadding from '../utils/safe-bounding-box-padding';\nimport states from '../utils/states';\nimport store from '../utils/store';\nimport { getCurrentAccountID } from '../utils/store-utils';\nimport supports from '../utils/supports';\n\nimport Avatar from './avatar';\nimport Icon from './icon';\nimport MenuLink from './menu-link';\nimport SubMenu2 from './submenu2';\n\nfunction NavMenu(props) {\n  const snapStates = useSnapshot(states);\n  const { masto, instance, authenticated } = api();\n\n  const [currentAccount, moreThanOneAccount] = useMemo(() => {\n    const accounts = store.local.getJSON('accounts') || [];\n    const acc =\n      accounts.find((account) => account.info.id === getCurrentAccountID()) ||\n      accounts[0];\n    return [acc, accounts.length > 1];\n  }, []);\n\n  // Home = Following\n  // But when in multi-column mode, Home becomes columns of anything\n  // User may choose pin or not to pin Following\n  // If user doesn't pin Following, we show it in the menu\n  const showFollowing =\n    (snapStates.settings.shortcutsViewMode === 'multi-column' ||\n      (!snapStates.settings.shortcutsViewMode &&\n        snapStates.settings.shortcutsColumnsMode)) &&\n    !snapStates.shortcuts.find((pin) => pin.type === 'following');\n\n  const bindLongPress = useLongPress(\n    () => {\n      states.showAccounts = true;\n    },\n    {\n      threshold: 600,\n      detect: 'touch',\n      cancelOnMovement: true,\n    },\n  );\n\n  const buttonRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n\n  const boundingBoxPadding = safeBoundingBoxPadding([\n    0,\n    0,\n    snapStates.settings.shortcutsViewMode === 'tab-menu-bar' ? 50 : 0,\n    0,\n  ]);\n\n  const mutesIterator = useRef();\n  async function fetchMutes(firstLoad) {\n    if (firstLoad || !mutesIterator.current) {\n      mutesIterator.current = masto.v1.mutes.list({\n        limit: 80,\n      });\n    }\n    const results = await mutesIterator.current.next();\n    return results;\n  }\n\n  const blocksIterator = useRef();\n  async function fetchBlocks(firstLoad) {\n    if (firstLoad || !blocksIterator.current) {\n      blocksIterator.current = masto.v1.blocks.list({\n        limit: 80,\n      });\n    }\n    const results = await blocksIterator.current.next();\n    return results;\n  }\n\n  const supportsLists = supports('@mastodon/lists');\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    if (!supportsLists) return;\n    if (menuState === 'open') {\n      getLists().then(setLists);\n    }\n  }, [menuState === 'open']);\n\n  const buttonClickTS = useRef();\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        type=\"button\"\n        class={`button plain nav-menu-button ${\n          moreThanOneAccount ? 'with-avatar' : ''\n        } ${menuState === 'open' ? 'active' : ''}`}\n        style={{ position: 'relative' }}\n        onClick={() => {\n          buttonClickTS.current = Date.now();\n          setMenuState((state) => (!state ? 'open' : undefined));\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          states.showAccounts = true;\n        }}\n        {...bindLongPress()}\n      >\n        {moreThanOneAccount && (\n          <Avatar\n            url={\n              currentAccount?.info?.avatar || currentAccount?.info?.avatarStatic\n            }\n            size=\"l\"\n            squircle={currentAccount?.info?.bot}\n          />\n        )}\n        <Icon icon=\"menu\" size={moreThanOneAccount ? 's' : 'l'} alt={t`Menu`} />\n      </button>\n      <ControlledMenu\n        menuClassName=\"nav-menu\"\n        state={menuState}\n        anchorRef={buttonRef}\n        onClose={() => {\n          setMenuState(undefined);\n        }}\n        containerProps={{\n          style: {\n            zIndex: 10,\n          },\n          onClick: () => {\n            if (Date.now() - buttonClickTS.current < 300) {\n              return;\n            }\n            // setMenuState(undefined);\n          },\n        }}\n        portal={{\n          target: document.body,\n        }}\n        {...props}\n        overflow=\"auto\"\n        viewScroll=\"close\"\n        position=\"anchor\"\n        align=\"center\"\n        boundingBoxPadding={boundingBoxPadding}\n        unmountOnClose\n      >\n        {!!snapStates.appVersion?.commitHash &&\n          __COMMIT_HASH__ !== snapStates.appVersion.commitHash && (\n            <div class=\"top-menu\">\n              <MenuItem\n                onClick={() => {\n                  const yes = confirm(t`Reload page now to update?`);\n                  if (yes) {\n                    (async () => {\n                      try {\n                        location.reload();\n                      } catch (e) {}\n                    })();\n                  }\n                }}\n              >\n                <Icon icon=\"sparkles\" class=\"sparkle-icon\" size=\"l\" />{' '}\n                <span>\n                  <Trans>New update available…</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </div>\n          )}\n        <section>\n          <MenuLink to=\"/\">\n            <Icon icon=\"home\" size=\"l\" />{' '}\n            <span>\n              <Trans>Home</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              {showFollowing && (\n                <MenuLink to=\"/following\">\n                  <Icon icon=\"following\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Following</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/catchup\">\n                <Icon icon=\"history2\" size=\"l\" />\n                <span>\n                  <Trans>Catch-up</Trans>\n                </span>\n              </MenuLink>\n              {supports('@mastodon/mentions') && (\n                <MenuLink to=\"/mentions\">\n                  <Icon icon=\"at\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Mentions</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              <MenuLink to=\"/notifications\">\n                <Icon icon=\"notification\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Notifications</Trans>\n                </span>\n                {snapStates.notificationsShowNew && (\n                  <sup title={t`New`} style={{ opacity: 0.5 }}>\n                    {' '}\n                    &bull;\n                  </sup>\n                )}\n              </MenuLink>\n              <MenuDivider />\n              {currentAccount?.info?.id && (\n                <MenuLink to={`/${instance}/a/${currentAccount.info.id}`}>\n                  <Icon icon=\"user\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Profile</Trans>\n                  </span>\n                </MenuLink>\n              )}\n              {lists?.length > 0 ? (\n                <SubMenu2\n                  menuClassName=\"nav-submenu\"\n                  overflow=\"auto\"\n                  gap={-8}\n                  label={\n                    <>\n                      <Icon icon=\"list\" size=\"l\" />\n                      <span class=\"menu-grow\">\n                        <Trans>Lists</Trans>\n                      </span>\n                      <Icon icon=\"chevron-right\" />\n                    </>\n                  }\n                >\n                  <MenuLink to=\"/l\">\n                    <span>\n                      <Trans>All Lists</Trans>\n                    </span>\n                  </MenuLink>\n                  {lists?.length > 0 && (\n                    <>\n                      <MenuDivider />\n                      {lists.map((list) => (\n                        <MenuLink key={list.id} to={`/l/${list.id}`}>\n                          <span>{list.title}</span>\n                        </MenuLink>\n                      ))}\n                    </>\n                  )}\n                </SubMenu2>\n              ) : (\n                supportsLists && (\n                  <MenuLink to=\"/l\">\n                    <Icon icon=\"list\" size=\"l\" />\n                    <span>\n                      <Trans>Lists</Trans>\n                    </span>\n                  </MenuLink>\n                )\n              )}\n              <MenuLink to=\"/b\">\n                <Icon icon=\"bookmark\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Bookmarks</Trans>\n                </span>\n              </MenuLink>\n              <SubMenu2\n                menuClassName=\"nav-submenu\"\n                overflow=\"auto\"\n                gap={-8}\n                label={\n                  <>\n                    <Icon icon=\"more\" size=\"l\" />\n                    <span class=\"menu-grow\">\n                      <Trans>More…</Trans>\n                    </span>\n                    <Icon icon=\"chevron-right\" />\n                  </>\n                }\n              >\n                <MenuLink to=\"/f\">\n                  <Icon icon=\"heart\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Likes</Trans>\n                  </span>\n                </MenuLink>\n                <MenuLink to=\"/fh\">\n                  <Icon icon=\"hashtag\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Followed Hashtags</Trans>\n                  </span>\n                </MenuLink>\n                <MenuDivider />\n                {supports('@mastodon/filters') && (\n                  <MenuLink to=\"/ft\">\n                    <Icon icon=\"filters\" size=\"l\" />{' '}\n                    <span>\n                      <Trans>Filters</Trans>\n                    </span>\n                  </MenuLink>\n                )}\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'mute',\n                      heading: t`Muted users`,\n                      fetchAccounts: fetchMutes,\n                      excludeRelationshipAttrs: ['muting'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"mute\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Muted users…</Trans>\n                  </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    states.showGenericAccounts = {\n                      id: 'block',\n                      heading: t`Blocked users`,\n                      fetchAccounts: fetchBlocks,\n                      excludeRelationshipAttrs: ['blocking'],\n                    };\n                  }}\n                >\n                  <Icon icon=\"block\" size=\"l\" />{' '}\n                  <span>\n                    <Trans>Blocked users…</Trans>\n                  </span>\n                </MenuItem>{' '}\n              </SubMenu2>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showAccounts = true;\n                }}\n              >\n                <Icon icon=\"group\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Accounts…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuLink to=\"/login\">\n                <Icon icon=\"user\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Log in</Trans>\n                </span>\n              </MenuLink>\n            </>\n          )}\n        </section>\n        <section>\n          <MenuDivider />\n          <MenuLink to={`/search`}>\n            <Icon icon=\"search\" size=\"l\" />{' '}\n            <span>\n              <Trans>Search</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/trending`}>\n            <Icon icon=\"chart\" size=\"l\" />{' '}\n            <span>\n              <Trans>Trending</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p/l`}>\n            <Icon icon=\"building\" size=\"l\" />{' '}\n            <span>\n              <Trans>Local</Trans>\n            </span>\n          </MenuLink>\n          <MenuLink to={`/${instance}/p`}>\n            <Icon icon=\"earth\" size=\"l\" />{' '}\n            <span>\n              <Trans>Federated</Trans>\n            </span>\n          </MenuLink>\n          {authenticated ? (\n            <>\n              <MenuDivider className=\"divider-grow\" />\n              <MenuItem\n                onClick={() => {\n                  states.showKeyboardShortcutsHelp = true;\n                }}\n              >\n                <Icon icon=\"keyboard\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Keyboard shortcuts</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showShortcutsSettings = true;\n                }}\n              >\n                <Icon icon=\"shortcut\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Shortcuts / Columns…</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              <MenuDivider />\n              <MenuItem\n                onClick={() => {\n                  states.showSettings = true;\n                }}\n              >\n                <Icon icon=\"gear\" size=\"l\" />{' '}\n                <span>\n                  <Trans>Settings…</Trans>\n                </span>\n              </MenuItem>\n            </>\n          )}\n        </section>\n      </ControlledMenu>\n    </>\n  );\n}\n\nexport default memo(NavMenu);\n","import { t, Trans } from '@lingui/macro';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useDebouncedCallback } from 'use-debounce';\nimport { useSnapshot } from 'valtio';\n\nimport FilterContext from '../utils/filter-context';\nimport { filteredItems, isFiltered } from '../utils/filters';\nimport isRTL from '../utils/is-rtl';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport { groupBoosts, groupContext } from '../utils/timeline-utils';\nimport useInterval from '../utils/useInterval';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useScrollFn from '../utils/useScrollFn';\n\nimport Icon from './icon';\nimport Link from './link';\nimport MediaPost from './media-post';\nimport NavMenu from './nav-menu';\nimport Status from './status';\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nfunction Timeline({\n  title,\n  titleComponent,\n  id,\n  instance,\n  emptyText,\n  errorText,\n  useItemID, // use statusID instead of status object, assuming it's already in states\n  boostsCarousel,\n  fetchItems = () => {},\n  checkForUpdates = () => {},\n  checkForUpdatesInterval = 15_000, // 15 seconds\n  headerStart,\n  headerEnd,\n  timelineStart,\n  // allowFilters,\n  refresh,\n  view,\n  filterContext,\n  showFollowedTags,\n  showReplyParent,\n  clearWhenRefresh,\n}) {\n  const snapStates = useSnapshot(states);\n  const [items, setItems] = useState([]);\n  const [uiState, setUIState] = useState('start');\n  const [showMore, setShowMore] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [visible, setVisible] = useState(true);\n  const scrollableRef = useRef();\n\n  console.debug('RENDER Timeline', id, refresh);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const allowGrouping = view !== 'media';\n  const loadItemsTS = useRef(0); // Ensures only one loadItems at a time\n  const loadItems = useDebouncedCallback(\n    (firstLoad) => {\n      setShowNew(false);\n      // if (uiState === 'loading') return;\n      setUIState('loading');\n      (async () => {\n        try {\n          const ts = (loadItemsTS.current = Date.now());\n          let { done, value } = await fetchItems(firstLoad);\n          if (ts !== loadItemsTS.current) return;\n          if (Array.isArray(value)) {\n            // Avoid grouping for pinned posts\n            const [pinnedPosts, otherPosts] = value.reduce(\n              (acc, item) => {\n                if (item._pinned) {\n                  acc[0].push(item);\n                } else {\n                  acc[1].push(item);\n                }\n                return acc;\n              },\n              [[], []],\n            );\n            value = otherPosts;\n            if (allowGrouping) {\n              if (boostsCarousel) {\n                value = groupBoosts(value);\n              }\n              value = groupContext(value, instance);\n            }\n            if (pinnedPosts.length) {\n              value = pinnedPosts.concat(value);\n            }\n            console.log(value);\n            if (firstLoad) {\n              setItems(value);\n            } else {\n              setItems((items) => [...items, ...value]);\n            }\n            if (!value.length) done = true;\n            setShowMore(!done);\n          } else {\n            setShowMore(false);\n          }\n          setUIState('default');\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n        } finally {\n          loadItems.cancel();\n        }\n      })();\n    },\n    1_000,\n    {\n      leading: true,\n      // trailing: false,\n    },\n  );\n\n  const itemsSelector = '.timeline-item, .timeline-item-alt';\n\n  const jRef = useHotkeys('j, shift+j', (_, handler) => {\n    // focus on next status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (handler.shift) {\n        // get next status that's not .timeline-item-alt\n        nextItem = allItems.find(\n          (item, index) =>\n            index > activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k, shift+k', (_, handler) => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (handler.shift) {\n        // get prev status that's not .timeline-item-alt\n        prevItem = allItems.findLast(\n          (item, index) =>\n            index < activeItemIndex &&\n            !item.classList.contains('timeline-item-alt'),\n        );\n      }\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    // open active status\n    const activeItem = document.activeElement;\n    if (activeItem?.matches(itemsSelector)) {\n      activeItem.click();\n    }\n  });\n\n  const showNewPostsIndicator =\n    items.length > 0 && uiState !== 'loading' && showNew;\n  const handleLoadNewPosts = useCallback(() => {\n    if (showNewPostsIndicator) loadItems(true);\n    scrollableRef.current?.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }, [loadItems, showNewPostsIndicator]);\n  const dotRef = useHotkeys('.', handleLoadNewPosts);\n\n  // const {\n  //   scrollDirection,\n  //   nearReachStart,\n  //   nearReachEnd,\n  //   reachStart,\n  //   reachEnd,\n  // } = useScroll({\n  //   scrollableRef,\n  //   distanceFromEnd: 2,\n  //   scrollThresholdStart: 44,\n  // });\n  const headerRef = useRef();\n  // const [hiddenUI, setHiddenUI] = useState(false);\n  const [nearReachStart, setNearReachStart] = useState(false);\n  useScrollFn(\n    {\n      scrollableRef,\n      distanceFromEnd: 2,\n      scrollThresholdStart: 44,\n    },\n    ({\n      scrollDirection,\n      nearReachStart,\n      // nearReachEnd,\n      reachStart,\n      // reachEnd,\n    }) => {\n      // setHiddenUI(scrollDirection === 'end' && !nearReachEnd);\n      if (headerRef.current) {\n        const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n        headerRef.current.hidden = hiddenUI;\n      }\n      setNearReachStart(nearReachStart);\n      if (reachStart) {\n        loadItems(true);\n      }\n      // else if (nearReachEnd || (reachEnd && showMore)) {\n      //   loadItems();\n      // }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    scrollableRef.current?.scrollTo({ top: 0 });\n    loadItems(true);\n  }, []);\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    if (firstLoad.current) {\n      firstLoad.current = false;\n      return;\n    }\n    if (clearWhenRefresh && items?.length) {\n      loadItems.cancel?.();\n      setItems([]);\n    }\n    loadItems(true);\n  }, [clearWhenRefresh, refresh]);\n\n  // useEffect(() => {\n  //   if (reachStart) {\n  //     loadItems(true);\n  //   }\n  // }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd || (reachEnd && showMore)) {\n  //     loadItems();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const prevView = useRef(view);\n  useEffect(() => {\n    if (prevView.current !== view) {\n      prevView.current = view;\n      setItems([]);\n    }\n  }, [view]);\n\n  const loadOrCheckUpdates = useCallback(\n    async ({ disableIdleCheck = false } = {}) => {\n      const noPointers = scrollableRef.current\n        ? getComputedStyle(scrollableRef.current).pointerEvents === 'none'\n        : false;\n      console.log('✨ Load or check updates', id, {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current.scrollTop,\n        disableIdleCheck,\n        idle: window.__IDLE__,\n        inBackground: inBackground(),\n        noPointers,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground() &&\n        !noPointers\n      ) {\n        console.log('✨ Load updates', id, snapStates.settings.autoRefresh);\n        loadItems(true);\n      } else {\n        console.log('✨ Check updates', id, snapStates.settings.autoRefresh);\n        const hasUpdate = await checkForUpdates();\n        if (hasUpdate) {\n          console.log('✨ Has new updates', id);\n          setShowNew(true);\n        }\n      }\n    },\n    [id, loadItems, checkForUpdates, snapStates.settings.autoRefresh],\n  );\n\n  const lastHiddenTime = useRef();\n  usePageVisibility(\n    (visible) => {\n      if (visible) {\n        const timeDiff = Date.now() - lastHiddenTime.current;\n        if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n          // 3 seconds\n          loadOrCheckUpdates({\n            disableIdleCheck: true,\n          });\n        }\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n      setVisible(visible);\n    },\n    [checkForUpdates, loadOrCheckUpdates, snapStates.settings.autoRefresh],\n  );\n\n  // checkForUpdates interval\n  useInterval(\n    loadOrCheckUpdates,\n    visible && !showNew\n      ? checkForUpdatesInterval * (nearReachStart ? 1 : 2)\n      : null,\n  );\n\n  // const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n\n  return (\n    <FilterContext.Provider value={filterContext}>\n      <div\n        id={`${id}-page`}\n        class={`deck-container ${\n          mediaFirst ? 'deck-container-media-first' : ''\n        }`}\n        ref={(node) => {\n          scrollableRef.current = node;\n          jRef.current = node;\n          kRef.current = node;\n          oRef.current = node;\n          dotRef.current = node;\n        }}\n        tabIndex=\"-1\"\n        onClick={(e) => {\n          // If click on timeline item, unhide header\n          if (\n            headerRef.current &&\n            e.target.closest('.timeline-item, .timeline-item-alt')\n          ) {\n            setTimeout(() => {\n              headerRef.current.hidden = false;\n            }, 250);\n          }\n        }}\n      >\n        <div class=\"timeline-deck deck\">\n          <header\n            ref={headerRef}\n            // hidden={hiddenUI}\n            onClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }\n            }}\n            onDblClick={(e) => {\n              if (!e.target.closest('a, button')) {\n                loadItems(true);\n              }\n            }}\n            class={uiState === 'loading' ? 'loading' : ''}\n          >\n            <div class=\"header-grid\">\n              <div class=\"header-side\">\n                <NavMenu />\n                {headerStart !== null && headerStart !== undefined ? (\n                  headerStart\n                ) : (\n                  <Link to=\"/\" class=\"button plain home-button\">\n                    <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                  </Link>\n                )}\n              </div>\n              {title && (titleComponent ? titleComponent : <h1>{title}</h1>)}\n              <div class=\"header-side\">\n                {/* <Loader hidden={uiState !== 'loading'} /> */}\n                {!!headerEnd && headerEnd}\n              </div>\n            </div>\n            {showNewPostsIndicator && (\n              <button\n                class=\"updates-button shiny-pill\"\n                type=\"button\"\n                onClick={handleLoadNewPosts}\n              >\n                <Icon icon=\"arrow-up\" /> <Trans>New posts</Trans>\n              </button>\n            )}\n          </header>\n          {!!timelineStart && (\n            <div\n              class={`timeline-start ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {timelineStart}\n            </div>\n          )}\n          {!!items.length ? (\n            <>\n              <ul class={`timeline ${view ? `timeline-${view}` : ''}`}>\n                {items.map((status) => (\n                  <TimelineItem\n                    status={status}\n                    instance={instance}\n                    useItemID={useItemID}\n                    // allowFilters={allowFilters}\n                    filterContext={filterContext}\n                    key={status.id + status?._pinned + view}\n                    view={view}\n                    showFollowedTags={showFollowedTags}\n                    showReplyParent={showReplyParent}\n                    mediaFirst={mediaFirst}\n                  />\n                ))}\n                {showMore &&\n                  uiState === 'loading' &&\n                  (view === 'media' ? null : (\n                    <>\n                      <li\n                        style={{\n                          height: '20vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                      <li\n                        style={{\n                          height: '25vh',\n                        }}\n                      >\n                        <Status skeleton mediaFirst={mediaFirst} />\n                      </li>\n                    </>\n                  ))}\n              </ul>\n              {uiState === 'default' &&\n                (showMore ? (\n                  <InView\n                    root={scrollableRef.current}\n                    rootMargin={`0px 0px ${screen.height * 1.5}px 0px`}\n                    onChange={(inView) => {\n                      if (inView) {\n                        loadItems();\n                      }\n                    }}\n                  >\n                    <button\n                      type=\"button\"\n                      class=\"plain block\"\n                      onClick={() => loadItems()}\n                      style={{ marginBlockEnd: '6em' }}\n                    >\n                      <Trans>Show more…</Trans>\n                    </button>\n                  </InView>\n                ) : (\n                  <p class=\"ui-state insignificant\">\n                    <Trans>The end.</Trans>\n                  </p>\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <ul class=\"timeline\">\n              {Array.from({ length: 5 }).map((_, i) =>\n                view === 'media' ? (\n                  <div\n                    style={{\n                      height: '50vh',\n                    }}\n                  />\n                ) : (\n                  <li key={i}>\n                    <Status skeleton mediaFirst={mediaFirst} />\n                  </li>\n                ),\n              )}\n            </ul>\n          ) : (\n            uiState !== 'error' &&\n            uiState !== 'start' && <p class=\"ui-state\">{emptyText}</p>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              {errorText}\n              <br />\n              <br />\n              <button type=\"button\" onClick={() => loadItems(!items.length)}>\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </div>\n      </div>\n    </FilterContext.Provider>\n  );\n}\n\nconst TimelineItem = memo(\n  ({\n    status,\n    instance,\n    useItemID,\n    // allowFilters,\n    filterContext,\n    view,\n    showFollowedTags,\n    showReplyParent,\n    mediaFirst,\n  }) => {\n    console.debug('RENDER TimelineItem', status.id);\n    const { id: statusID, reblog, items, type, _pinned } = status;\n    if (_pinned) useItemID = false;\n    const actualStatusID = reblog?.id || statusID;\n    const url = instance\n      ? `/${instance}/s/${actualStatusID}`\n      : `/s/${actualStatusID}`;\n\n    if (items) {\n      let fItems = filteredItems(items, filterContext);\n      let title = '';\n      if (type === 'boosts') {\n        title = `${fItems.length} Boosts`;\n      } else if (type === 'pinned') {\n        title = 'Pinned posts';\n      }\n      const isCarousel = type === 'boosts' || type === 'pinned';\n      if (isCarousel) {\n        const filteredItemsIDs = new Set();\n        // Here, we don't hide filtered posts, but we sort them last\n        fItems.sort((a, b) => {\n          // if (a._filtered && !b._filtered) {\n          //   return 1;\n          // }\n          // if (!a._filtered && b._filtered) {\n          //   return -1;\n          // }\n          const aFiltered = isFiltered(a.filtered, filterContext);\n          const bFiltered = isFiltered(b.filtered, filterContext);\n          if (aFiltered) filteredItemsIDs.add(a.id);\n          if (bFiltered) filteredItemsIDs.add(b.id);\n          if (aFiltered && !bFiltered) {\n            return 1;\n          }\n          if (!aFiltered && bFiltered) {\n            return -1;\n          }\n          return 0;\n        });\n\n        if (filteredItemsIDs.size >= 2) {\n          const GROUP_SIZE = 5;\n          // If 2 or more, group filtered items into one, limit to GROUP_SIZE in a group\n          const unfiltered = [];\n          const filtered = [];\n          fItems.forEach((item) => {\n            if (filteredItemsIDs.has(item.id)) {\n              filtered.push(item);\n            } else {\n              unfiltered.push(item);\n            }\n          });\n          const filteredItems = [];\n          for (let i = 0; i < filtered.length; i += GROUP_SIZE) {\n            filteredItems.push({\n              _grouped: true,\n              posts: filtered.slice(i, i + GROUP_SIZE),\n            });\n          }\n          fItems = unfiltered.concat(filteredItems);\n        }\n\n        return (\n          <li key={`timeline-${statusID}`} class=\"timeline-item-carousel\">\n            <StatusCarousel title={title} class={`${type}-carousel`}>\n              {fItems.map((item) => {\n                const { id: statusID, reblog, _pinned, _grouped } = item;\n                if (_grouped) {\n                  return (\n                    <li key={statusID} class=\"timeline-item-carousel-group\">\n                      {item.posts.map((item) => {\n                        const { id: statusID, reblog, _pinned } = item;\n                        const actualStatusID = reblog?.id || statusID;\n                        const url = instance\n                          ? `/${instance}/s/${actualStatusID}`\n                          : `/s/${actualStatusID}`;\n                        if (_pinned) useItemID = false;\n                        return (\n                          <Link\n                            class=\"status-carousel-link timeline-item-alt\"\n                            to={url}\n                          >\n                            {useItemID ? (\n                              <Status\n                                statusID={statusID}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            ) : (\n                              <Status\n                                status={item}\n                                instance={instance}\n                                size=\"s\"\n                              />\n                            )}\n                          </Link>\n                        );\n                      })}\n                    </li>\n                  );\n                }\n\n                const actualStatusID = reblog?.id || statusID;\n                const url = instance\n                  ? `/${instance}/s/${actualStatusID}`\n                  : `/s/${actualStatusID}`;\n                if (_pinned) useItemID = false;\n                return (\n                  <li key={statusID}>\n                    <Link\n                      class=\"status-carousel-link timeline-item-alt\"\n                      to={url}\n                    >\n                      {useItemID ? (\n                        <Status\n                          statusID={statusID}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      ) : (\n                        <Status\n                          status={item}\n                          instance={instance}\n                          size=\"s\"\n                          contentTextWeight\n                          enableCommentHint\n                          // allowFilters={allowFilters}\n                          mediaFirst={mediaFirst}\n                        />\n                      )}\n                    </Link>\n                  </li>\n                );\n              })}\n            </StatusCarousel>\n          </li>\n        );\n      }\n      const manyItems = fItems.length > 3;\n      return fItems.map((item, i) => {\n        const { id: statusID, _differentAuthor } = item;\n        const url = instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`;\n        const isMiddle = i > 0 && i < fItems.length - 1;\n        const isSpoiler = item.sensitive && !!item.spoilerText;\n        const showCompact =\n          (!_differentAuthor && isSpoiler && i > 0) ||\n          (manyItems &&\n            isMiddle &&\n            (type === 'thread' ||\n              (type === 'conversation' &&\n                !_differentAuthor &&\n                !fItems[i - 1]._differentAuthor &&\n                !fItems[i + 1]._differentAuthor)));\n        const isStart = i === 0;\n        const isEnd = i === fItems.length - 1;\n        return (\n          <li\n            key={`timeline-${statusID}`}\n            class={`timeline-item-container timeline-item-container-type-${type} timeline-item-container-${\n              isStart ? 'start' : isEnd ? 'end' : 'middle'\n            } ${_differentAuthor ? 'timeline-item-diff-author' : ''}`}\n          >\n            <Link class=\"status-link timeline-item\" to={url}>\n              {showCompact ? (\n                <TimelineStatusCompact\n                  status={item}\n                  instance={instance}\n                  filterContext={filterContext}\n                />\n              ) : useItemID ? (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              ) : (\n                <Status\n                  status={item}\n                  instance={instance}\n                  enableCommentHint={isEnd}\n                  showFollowedTags={showFollowedTags}\n                  // allowFilters={allowFilters}\n                />\n              )}\n            </Link>\n          </li>\n        );\n      });\n    }\n\n    const itemKey = `timeline-${statusID + _pinned}`;\n\n    if (view === 'media') {\n      return useItemID ? (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          statusID={statusID}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      ) : (\n        <MediaPost\n          class=\"timeline-item\"\n          parent=\"li\"\n          key={itemKey}\n          status={status}\n          instance={instance}\n          // allowFilters={allowFilters}\n        />\n      );\n    }\n\n    return (\n      <li key={itemKey}>\n        <Link class=\"status-link timeline-item\" to={url}>\n          {useItemID ? (\n            <Status\n              statusID={statusID}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          ) : (\n            <Status\n              status={status}\n              instance={instance}\n              enableCommentHint\n              showFollowedTags={showFollowedTags}\n              showReplyParent={showReplyParent}\n              // allowFilters={allowFilters}\n              mediaFirst={mediaFirst}\n            />\n          )}\n        </Link>\n      </li>\n    );\n  },\n  (oldProps, newProps) => {\n    const oldID = (oldProps.status?.id || '').toString();\n    const newID = (newProps.status?.id || '').toString();\n    return (\n      oldID === newID &&\n      oldProps.instance === newProps.instance &&\n      oldProps.view === newProps.view\n    );\n  },\n);\n\nfunction StatusCarousel({ title, class: className, children }) {\n  const carouselRef = useRef();\n  // const { reachStart, reachEnd, init } = useScroll({\n  //   scrollableRef: carouselRef,\n  //   direction: 'horizontal',\n  // });\n  const startButtonRef = useRef();\n  const endButtonRef = useRef();\n  // useScrollFn(\n  //   {\n  //     scrollableRef: carouselRef,\n  //     direction: 'horizontal',\n  //     init: true,\n  //   },\n  //   ({ reachStart, reachEnd }) => {\n  //     if (startButtonRef.current) startButtonRef.current.disabled = reachStart;\n  //     if (endButtonRef.current) endButtonRef.current.disabled = reachEnd;\n  //   },\n  //   [],\n  // );\n  // useEffect(() => {\n  //   init?.();\n  // }, []);\n\n  const [render, setRender] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      setRender(true);\n    }, 1);\n  }, []);\n\n  return (\n    <div class={`status-carousel ${className}`}>\n      <header>\n        <h3>{title}</h3>\n        <span>\n          <button\n            ref={startButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachStart}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? 1 : -1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-left\" alt={t`Previous`} />\n          </button>{' '}\n          <button\n            ref={endButtonRef}\n            type=\"button\"\n            class=\"small plain2\"\n            // disabled={reachEnd}\n            onClick={() => {\n              const left =\n                Math.min(320, carouselRef.current?.offsetWidth) *\n                (isRTL() ? -1 : 1);\n              carouselRef.current?.scrollBy({\n                left,\n                behavior: 'smooth',\n              });\n            }}\n          >\n            <Icon icon=\"chevron-right\" alt={t`Next`} />\n          </button>\n        </span>\n      </header>\n      <ul ref={carouselRef}>\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (startButtonRef.current)\n              startButtonRef.current.disabled = inView;\n          }}\n        />\n        {children[0]}\n        {render && children.slice(1)}\n        <InView\n          class=\"status-carousel-beacon\"\n          onChange={(inView) => {\n            if (endButtonRef.current) endButtonRef.current.disabled = inView;\n          }}\n        />\n      </ul>\n    </div>\n  );\n}\n\nfunction TimelineStatusCompact({ status, instance, filterContext }) {\n  const snapStates = useSnapshot(states);\n  const { id, visibility, language } = status;\n  const statusPeekText = statusPeek(status);\n  const sKey = statusKey(id, instance);\n  const filterInfo = isFiltered(status.filtered, filterContext);\n  return (\n    <article\n      class={`status compact-thread ${\n        visibility === 'direct' ? 'visibility-direct' : ''\n      }`}\n      tabindex=\"-1\"\n    >\n      {!!snapStates.statusThreadNumber[sKey] ? (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n          {snapStates.statusThreadNumber[sKey]\n            ? ` ${snapStates.statusThreadNumber[sKey]}/X`\n            : ''}\n        </div>\n      ) : (\n        <div class=\"status-thread-badge\">\n          <Icon icon=\"thread\" size=\"s\" alt={t`Thread`} />\n        </div>\n      )}\n      <div\n        class=\"content-compact\"\n        title={statusPeekText}\n        lang={language}\n        dir=\"auto\"\n      >\n        {!!filterInfo ? (\n          <b\n            class=\"status-filtered-badge badge-meta horizontal\"\n            title={filterInfo?.titlesStr || ''}\n          >\n            {filterInfo?.titlesStr ? (\n              <Trans>\n                <span>Filtered</span>: <span>{filterInfo.titlesStr}</span>\n              </Trans>\n            ) : (\n              <span>\n                <Trans>Filtered</Trans>\n              </span>\n            )}\n          </b>\n        ) : (\n          <>\n            {statusPeekText}\n            {status.sensitive && status.spoilerText && (\n              <>\n                {' '}\n                <span class=\"spoiler-badge\">\n                  <Icon icon=\"eye-close\" size=\"s\" alt={t`Content warning`} />\n                </span>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </article>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nexport default Timeline;\n","import { t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { MenuItem } from '@szhsin/react-menu';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountInfo from '../components/account-info';\nimport EmojiText from '../components/emoji-text';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport pmem from '../utils/pmem';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst MIN_YEAR = 1983;\nconst MIN_YEAR_MONTH = `${MIN_YEAR}-01`; // Birth of the Internet\n\nconst supportsInputMonth = (() => {\n  try {\n    const input = document.createElement('input');\n    input.setAttribute('type', 'month');\n    return input.type === 'month';\n  } catch (e) {\n    return false;\n  }\n})();\n\nasync function _isSearchEnabled(instance) {\n  const { masto } = api({ instance });\n  const results = await masto.v2.search.fetch({\n    q: 'from:me',\n    type: 'statuses',\n    limit: 1,\n  });\n  return !!results?.statuses?.length;\n}\nconst isSearchEnabled = pmem(_isSearchEnabled);\n\nfunction AccountStatuses() {\n  const snapStates = useSnapshot(states);\n  const { id, ...params } = useParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const month = searchParams.get('month');\n  const excludeReplies = !searchParams.get('replies');\n  const excludeBoosts = !!searchParams.get('boosts');\n  const tagged = searchParams.get('tagged');\n  const media = !!searchParams.get('media');\n  const { masto, instance, authenticated } = api({ instance: params.instance });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const accountStatusesIterator = useRef();\n\n  const allSearchParams = [month, excludeReplies, excludeBoosts, tagged, media];\n  const [account, setAccount] = useState();\n  const searchOffsetRef = useRef(0);\n  useEffect(() => {\n    searchOffsetRef.current = 0;\n  }, allSearchParams);\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  const sameCurrentInstance = useMemo(\n    () => instance === currentInstance,\n    [instance, currentInstance],\n  );\n  const [searchEnabled, setSearchEnabled] = useState(false);\n  useEffect(() => {\n    // Only enable for current logged-in instance\n    // Most remote instances don't allow unauthenticated searches\n    if (!sameCurrentInstance) return;\n    if (!account?.acct) return;\n    (async () => {\n      const enabled = await isSearchEnabled(instance);\n      console.log({ enabled });\n      setSearchEnabled(enabled);\n    })();\n  }, [instance, sameCurrentInstance, account?.acct]);\n\n  async function fetchAccountStatuses(firstLoad) {\n    const isValidMonth = /^\\d{4}-[01]\\d$/.test(month);\n    const isValidYear = month?.split?.('-')?.[0] >= MIN_YEAR;\n    if (isValidMonth && isValidYear) {\n      if (!account) {\n        return {\n          value: [],\n          done: true,\n        };\n      }\n      const [_year, _month] = month.split('-');\n      const monthIndex = parseInt(_month, 10) - 1;\n      // YYYY-MM (no day)\n      // Search options:\n      // - from:account\n      // - after:YYYY-MM-DD (non-inclusive)\n      // - before:YYYY-MM-DD (non-inclusive)\n\n      // Last day of previous month\n      const after = new Date(_year, monthIndex, 0);\n      const afterStr = `${after.getFullYear()}-${(after.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${after.getDate().toString().padStart(2, '0')}`;\n      // First day of next month\n      const before = new Date(_year, monthIndex + 1, 1);\n      const beforeStr = `${before.getFullYear()}-${(before.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${before.getDate().toString().padStart(2, '0')}`;\n      console.log({\n        month,\n        _year,\n        _month,\n        monthIndex,\n        after,\n        before,\n        afterStr,\n        beforeStr,\n      });\n\n      let limit;\n      if (firstLoad) {\n        limit = LIMIT + 1;\n        searchOffsetRef.current = 0;\n      } else {\n        limit = LIMIT + searchOffsetRef.current + 1;\n        searchOffsetRef.current += LIMIT;\n      }\n\n      const searchResults = await masto.v2.search.fetch({\n        q: `from:${account.acct} after:${afterStr} before:${beforeStr}`,\n        type: 'statuses',\n        limit,\n        offset: searchOffsetRef.current,\n      });\n      if (searchResults?.statuses?.length) {\n        const value = searchResults.statuses.slice(0, LIMIT);\n        value.forEach((item) => {\n          saveStatus(item, instance);\n        });\n        const done = searchResults.statuses.length <= LIMIT;\n        return { value, done };\n      } else {\n        return { value: [], done: true };\n      }\n    }\n\n    let results = [];\n    if (firstLoad) {\n      const { value } = await masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          pinned: true,\n        })\n        .next();\n      if (value?.length && !tagged && !media) {\n        const pinnedStatuses = value.map((status) => {\n          saveStatus(status, instance);\n          return {\n            ...status,\n            _pinned: true,\n          };\n        });\n        if (pinnedStatuses.length >= 3) {\n          const pinnedStatusesIds = pinnedStatuses.map((status) => status.id);\n          results.push({\n            id: pinnedStatusesIds,\n            items: pinnedStatuses,\n            type: 'pinned',\n          });\n        } else {\n          results.push(...pinnedStatuses);\n        }\n      }\n    }\n    if (firstLoad || !accountStatusesIterator.current) {\n      accountStatusesIterator.current = masto.v1.accounts\n        .$select(id)\n        .statuses.list({\n          limit: LIMIT,\n          exclude_replies: excludeReplies,\n          exclude_reblogs: excludeBoosts,\n          only_media: media || undefined,\n          tagged,\n        });\n    }\n    const { value, done } = await accountStatusesIterator.current.next();\n    if (value?.length) {\n      // Check if value is same as pinned post (results)\n      // If the index for every post is the same, means API might not support pinned posts\n      if (results.length) {\n        let pinnedStatusesIds = [];\n        if (results[0]?.type === 'pinned') {\n          pinnedStatusesIds = results[0].id;\n        } else {\n          pinnedStatusesIds = results\n            .filter((status) => status._pinned)\n            .map((status) => status.id);\n        }\n        const containsAllPinned = pinnedStatusesIds.every((postId) =>\n          value.some((status) => status.id === postId),\n        );\n        if (containsAllPinned) {\n          // Remove pinned posts\n          results = [];\n        }\n      }\n\n      results.push(...value);\n\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      value: results,\n      done,\n    };\n  }\n\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const { i18n } = useLingui();\n  let title = t`Account posts`;\n  if (account?.acct) {\n    const acctDisplay = /@/.test(account.acct) ? '' : '@' + account.acct;\n    const accountDisplay = account?.displayName\n      ? `${account.displayName} (${acctDisplay})`\n      : `${acctDisplay}`;\n    if (!excludeReplies) {\n      title = t`${accountDisplay} (+ Replies)`;\n    } else if (excludeBoosts) {\n      title = t`${accountDisplay} (- Boosts)`;\n    } else if (tagged) {\n      title = t`${accountDisplay} (#${tagged})`;\n    } else if (media) {\n      title = t`${accountDisplay} (Media)`;\n    } else if (month) {\n      const monthYear = new Date(month).toLocaleString(i18n.locale, {\n        month: 'long',\n        year: 'numeric',\n      });\n      title = t`${accountDisplay} (${monthYear})`;\n    } else {\n      title = accountDisplay;\n    }\n  }\n  useTitle(title, '/:instance?/a/:id');\n\n  const fetchAccountPromiseRef = useRef();\n  const fetchAccount = useCallback(() => {\n    const fetchPromise =\n      fetchAccountPromiseRef.current || masto.v1.accounts.$select(id).fetch();\n    fetchAccountPromiseRef.current = fetchPromise;\n    return fetchPromise;\n  }, [id, masto]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const acc = await fetchAccount();\n        console.log(acc);\n        setAccount(acc);\n      } catch (e) {\n        console.error(e);\n      }\n      // No need, because the whole filter bar is hidden\n      // TODO: Revisit this\n      if (!mediaFirst) {\n        try {\n          const featuredTags = await masto.v1.accounts\n            .$select(id)\n            .featuredTags.list();\n          console.log({ featuredTags });\n          setFeaturedTags(featuredTags);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    })();\n  }, [id, mediaFirst]);\n\n  const { displayName, acct, emojis } = account || {};\n\n  const filterBarRef = useRef();\n  const TimelineStart = useMemo(() => {\n    const filtered =\n      !excludeReplies || excludeBoosts || tagged || media || !!month;\n    const cachedAccount = snapStates.accounts[`${id}@${instance}`];\n\n    return (\n      <>\n        <AccountInfo\n          instance={instance}\n          account={cachedAccount || id}\n          fetchAccount={fetchAccount}\n          authenticated={authenticated}\n          standalone\n        />\n        {!mediaFirst && (\n          <div\n            class=\"filter-bar\"\n            ref={filterBarRef}\n            style={{\n              position: 'relative',\n            }}\n          >\n            {filtered ? (\n              <Link\n                to={`/${instance}/a/${id}`}\n                class=\"insignificant filter-clear\"\n                title={t`Clear filters`}\n                key=\"clear-filters\"\n              >\n                <Icon icon=\"x\" size=\"l\" alt={t`Clear`} />\n              </Link>\n            ) : (\n              <Icon\n                icon=\"filter\"\n                class=\"insignificant\"\n                size=\"l\"\n                alt={t`Filters`}\n              />\n            )}\n            <Link\n              to={`/${instance}/a/${id}${excludeReplies ? '?replies=1' : ''}`}\n              onClick={() => {\n                if (excludeReplies) {\n                  showToast(t`Showing post with replies`);\n                }\n              }}\n              class={excludeReplies ? '' : 'is-active'}\n            >\n              <Trans>+ Replies</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${excludeBoosts ? '' : '?boosts=0'}`}\n              onClick={() => {\n                if (!excludeBoosts) {\n                  showToast(t`Showing posts without boosts`);\n                }\n              }}\n              class={!excludeBoosts ? '' : 'is-active'}\n            >\n              <Trans>- Boosts</Trans>\n            </Link>\n            <Link\n              to={`/${instance}/a/${id}${media ? '' : '?media=1'}`}\n              onClick={() => {\n                if (!media) {\n                  showToast(t`Showing posts with media`);\n                }\n              }}\n              class={media ? 'is-active' : ''}\n            >\n              <Trans>Media</Trans>\n            </Link>\n            {featuredTags.map((tag) => (\n              <Link\n                key={tag.id}\n                to={`/${instance}/a/${id}${\n                  tagged === tag.name\n                    ? ''\n                    : `?tagged=${encodeURIComponent(tag.name)}`\n                }`}\n                onClick={() => {\n                  if (tagged !== tag.name) {\n                    showToast(t`Showing posts tagged with #${tag.name}`);\n                  }\n                }}\n                class={tagged === tag.name ? 'is-active' : ''}\n              >\n                <span>\n                  <span class=\"more-insignificant\">#</span>\n                  {tag.name}\n                </span>\n                {\n                  // The count differs based on instance 😅\n                }\n                {/* <span class=\"filter-count\">{tag.statusesCount}</span> */}\n              </Link>\n            ))}\n            {searchEnabled &&\n              (supportsInputMonth ? (\n                <label class={`filter-field ${month ? 'is-active' : ''}`}>\n                  <Icon icon=\"month\" size=\"l\" />\n                  <input\n                    type=\"month\"\n                    disabled={!account?.acct}\n                    value={month || ''}\n                    min={MIN_YEAR_MONTH}\n                    max={new Date().toISOString().slice(0, 7)}\n                    onInput={(e) => {\n                      const { value, validity } = e.currentTarget;\n                      if (!validity.valid) return;\n                      setSearchParams(\n                        value\n                          ? {\n                              month: value,\n                            }\n                          : {},\n                      );\n                      const [year, month] = value.split('-');\n                      const monthIndex = parseInt(month, 10) - 1;\n                      const date = new Date(year, monthIndex);\n                      showToast(\n                        t`Showing posts in ${date.toLocaleString(i18n.locale, {\n                          month: 'long',\n                          year: 'numeric',\n                        })}`,\n                      );\n                    }}\n                  />\n                </label>\n              ) : (\n                // Fallback to <select> for month and <input type=\"number\"> for year\n                <MonthPicker\n                  class={`filter-field ${month ? 'is-active' : ''}`}\n                  disabled={!account?.acct}\n                  value={month || ''}\n                  min={MIN_YEAR_MONTH}\n                  max={new Date().toISOString().slice(0, 7)}\n                  onInput={(e) => {\n                    const { value, validity } = e;\n                    if (!validity.valid) return;\n                    setSearchParams(\n                      value\n                        ? {\n                            month: value,\n                          }\n                        : {},\n                    );\n                  }}\n                />\n              ))}\n          </div>\n        )}\n      </>\n    );\n  }, [\n    id,\n    instance,\n    authenticated,\n    featuredTags,\n    fetchAccount,\n    searchEnabled,\n    ...allSearchParams,\n  ]);\n\n  useEffect(() => {\n    // Focus on .is-active\n    const active = filterBarRef.current?.querySelector('.is-active');\n    if (active) {\n      console.log('active', active, active.offsetLeft);\n      filterBarRef.current.scrollTo({\n        behavior: 'smooth',\n        left:\n          active.offsetLeft -\n          (filterBarRef.current.offsetWidth - active.offsetWidth) / 2,\n      });\n    }\n  }, [featuredTags, searchEnabled, ...allSearchParams]);\n\n  const accountInstance = useMemo(() => {\n    if (!account?.url) return null;\n    const domain = URL.parse(account.url).hostname;\n    return domain;\n  }, [account]);\n  const sameInstance = instance === accountInstance;\n  const allowSwitch = !!account && !sameInstance;\n\n  return (\n    <Timeline\n      key={id}\n      title={`${account?.acct ? '@' + account.acct : t`Posts`}`}\n      titleComponent={\n        <h1\n          class=\"header-double-lines header-account\"\n          // onClick={() => {\n          //   states.showAccount = {\n          //     account,\n          //     instance,\n          //   };\n          // }}\n        >\n          <b>\n            <EmojiText text={displayName} emojis={emojis} />\n          </b>\n          <div>\n            <span class=\"bidi-isolate\">@{acct}</span>\n          </div>\n        </h1>\n      }\n      id=\"account-statuses\"\n      instance={instance}\n      emptyText={t`Nothing to see here yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchAccountStatuses}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      timelineStart={TimelineStart}\n      refresh={[\n        excludeReplies,\n        excludeBoosts,\n        tagged,\n        media,\n        month + account?.acct,\n      ].toString()}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            disabled={!allowSwitch}\n            onClick={() => {\n              (async () => {\n                try {\n                  const { masto } = api({\n                    instance: accountInstance,\n                  });\n                  const acc = await masto.v1.accounts.lookup({\n                    acct: account.acct,\n                  });\n                  const { id } = acc;\n                  location.hash = `/${accountInstance}/a/${id}`;\n                } catch (e) {\n                  console.error(e);\n                  alert(t`Unable to fetch account info`);\n                }\n              })();\n            }}\n          >\n            <Icon icon=\"transfer\" />{' '}\n            <small class=\"menu-double-lines\">\n              <Trans>\n                Switch to account's instance{' '}\n                {accountInstance ? (\n                  <>\n                    {' '}\n                    (<b>{punycode.toUnicode(accountInstance)}</b>)\n                  </>\n                ) : null}\n              </Trans>\n            </small>\n          </MenuItem>\n          {!sameCurrentInstance && (\n            <MenuItem\n              onClick={() => {\n                (async () => {\n                  try {\n                    const acc = await currentMasto.v1.accounts.lookup({\n                      acct: account.acct + '@' + instance,\n                    });\n                    const { id } = acc;\n                    location.hash = `/${currentInstance}/a/${id}`;\n                  } catch (e) {\n                    console.error(e);\n                    alert(t`Unable to fetch account info`);\n                  }\n                })();\n              }}\n            >\n              <Icon icon=\"transfer\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Switch to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nfunction MonthPicker(props) {\n  const { i18n } = useLingui();\n  const {\n    class: className,\n    disabled,\n    value,\n    min,\n    max,\n    onInput = () => {},\n  } = props;\n  const [_year, _month] = value?.split('-') || [];\n  const monthFieldRef = useRef();\n  const yearFieldRef = useRef();\n\n  const checkValidity = (month, year) => {\n    const [minYear, minMonth] = min?.split('-') || [];\n    const [maxYear, maxMonth] = max?.split('-') || [];\n    if (year < minYear) return false;\n    if (year > maxYear) return false;\n    if (year === minYear && month < minMonth) return false;\n    if (year === maxYear && month > maxMonth) return false;\n    return true;\n  };\n\n  return (\n    <div class={className}>\n      <Icon icon=\"month\" size=\"l\" />\n      <select\n        ref={monthFieldRef}\n        disabled={disabled}\n        value={_month || ''}\n        onInput={(e) => {\n          const { value: month } = e.currentTarget;\n          const year = yearFieldRef.current.value;\n          if (!checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: month ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n      >\n        <option value=\"\">\n          <Trans>Month</Trans>\n        </option>\n        <option disabled>-----</option>\n        {Array.from({ length: 12 }, (_, i) => (\n          <option\n            value={\n              // Month is 1-indexed\n              (i + 1).toString().padStart(2, '0')\n            }\n            key={i}\n          >\n            {new Date(0, i).toLocaleString(i18n.locale, {\n              month: 'long',\n            })}\n          </option>\n        ))}\n      </select>{' '}\n      <input\n        ref={yearFieldRef}\n        type=\"number\"\n        disabled={disabled}\n        value={_year || new Date().getFullYear()}\n        min={min?.slice(0, 4) || MIN_YEAR}\n        max={max?.slice(0, 4) || new Date().getFullYear()}\n        onInput={(e) => {\n          const { value: year, validity } = e.currentTarget;\n          const month = monthFieldRef.current.value;\n          if (!validity.valid || !checkValidity(month, year))\n            return {\n              value: '',\n              validity: {\n                valid: false,\n              },\n            };\n          onInput({\n            value: year ? `${year}-${month}` : '',\n            validity: {\n              valid: true,\n            },\n          });\n        }}\n        style={{\n          width: '4.5em',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default AccountStatuses;\n","import { t, Trans } from '@lingui/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Bookmarks() {\n  useTitle(t`Bookmarks`, '/bookmarks');\n  const { masto, instance } = api();\n  const bookmarksIterator = useRef();\n  async function fetchBookmarks(firstLoad) {\n    if (firstLoad || !bookmarksIterator.current) {\n      bookmarksIterator.current = masto.v1.bookmarks.list({ limit: LIMIT });\n    }\n    return await bookmarksIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Bookmarks`}\n      id=\"bookmarks\"\n      emptyText={`No bookmarks yet. Go bookmark something!`}\n      errorText={t`Unable to load bookmarks.`}\n      instance={instance}\n      fetchItems={fetchBookmarks}\n    />\n  );\n}\n\nexport default Bookmarks;\n","export default \"__VITE_ASSET__S_9SYp01__\"","import '../components/links-bar.css';\nimport './catchup.css';\n\nimport autoAnimate from '@formkit/auto-animate';\nimport { msg, Plural, select, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSearchParams } from 'react-router-dom';\nimport { uid } from 'uid/single';\n\nimport catchupUrl from '../assets/features/catch-up.png';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NameText from '../components/name-text';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport db from '../utils/db';\nimport emojifyText from '../utils/emojify-text';\nimport { isFiltered } from '../utils/filters';\nimport htmlContentLength from '../utils/html-content-length';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { statusKey } from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport store from '../utils/store';\nimport { getCurrentAccountID, getCurrentAccountNS } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport { assignFollowedTags } from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = 'home';\n\nconst RANGES = [\n  { label: msg`last 1 hour`, value: 1 },\n  { label: msg`last 2 hours`, value: 2 },\n  { label: msg`last 3 hours`, value: 3 },\n  { label: msg`last 4 hours`, value: 4 },\n  { label: msg`last 5 hours`, value: 5 },\n  { label: msg`last 6 hours`, value: 6 },\n  { label: msg`last 7 hours`, value: 7 },\n  { label: msg`last 8 hours`, value: 8 },\n  { label: msg`last 9 hours`, value: 9 },\n  { label: msg`last 10 hours`, value: 10 },\n  { label: msg`last 11 hours`, value: 11 },\n  { label: msg`last 12 hours`, value: 12 },\n  { label: msg`beyond 12 hours`, value: 13 },\n];\n\nconst FILTER_KEYS = {\n  original: msg`Original`,\n  replies: msg`Replies`,\n  boosts: msg`Boosts`,\n  followedTags: msg`Followed tags`,\n  groups: msg`Groups`,\n  filtered: msg`Filtered`,\n};\nconst FILTER_SORTS = [\n  'createdAt',\n  'repliesCount',\n  'favouritesCount',\n  'reblogsCount',\n  'density',\n];\nconst FILTER_GROUPS = [null, 'account'];\n\nconst DTF = mem(\n  (locale) =>\n    new Intl.DateTimeFormat(locale || undefined, {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n);\n\nfunction Catchup() {\n  const { i18n, _ } = useLingui();\n  const dtf = DTF(i18n.locale);\n\n  useTitle(`Catch-up`, '/catchup');\n  const { masto, instance } = api();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const id = searchParams.get('id');\n  const [uiState, setUIState] = useState('start');\n  const [showTopLinks, setShowTopLinks] = useState(false);\n\n  const currentAccount = useMemo(() => {\n    return getCurrentAccountID();\n  }, []);\n  const isSelf = (accountID) => accountID === currentAccount;\n\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome({ maxCreatedAt }) {\n    const maxCreatedAtDate = maxCreatedAt ? new Date(maxCreatedAt) : null;\n    console.debug('fetchHome', maxCreatedAtDate);\n    const allResults = [];\n    const homeIterator = masto.v1.timelines.home.list({ limit: 40 });\n    mainloop: while (true) {\n      try {\n        if (supportsPixelfed && homeIterator.nextParams) {\n          if (typeof homeIterator.nextParams === 'string') {\n            homeIterator.nextParams += '&include_reblogs=true';\n          } else {\n            homeIterator.nextParams.include_reblogs = true;\n          }\n        }\n        const results = await homeIterator.next();\n        const { value } = results;\n        if (value?.length) {\n          // This ignores maxCreatedAt filter, but it's ok for now\n          await assignFollowedTags(value, instance);\n          let addedResults = false;\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            const createdAtDate = new Date(item.createdAt);\n            if (!maxCreatedAtDate || createdAtDate >= maxCreatedAtDate) {\n              // Filtered\n              const selfPost = isSelf(\n                item.reblog?.account?.id || item.account.id,\n              );\n              const filterInfo =\n                !selfPost &&\n                isFiltered(\n                  item.reblog?.filtered || item.filtered,\n                  FILTER_CONTEXT,\n                );\n              if (filterInfo?.action === 'hide') continue;\n              item._filtered = filterInfo;\n\n              // Followed tags\n              const sKey = statusKey(item.id, instance);\n              item._followedTags = states.statusFollowedTags[sKey]\n                ? [...states.statusFollowedTags[sKey]]\n                : [];\n\n              allResults.push(item);\n              addedResults = true;\n            } else {\n              // Don't immediately stop, still add the other items that might still be within range\n              // break mainloop;\n            }\n            // Only stop when ALL items are outside of range\n            if (!addedResults) {\n              break mainloop;\n            }\n          }\n        } else {\n          break mainloop;\n        }\n        // Pause 1s\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      } catch (e) {\n        console.error(e);\n        break mainloop;\n      }\n    }\n\n    // Post-process all results\n    // 1. Threadify - tag 1st-post in a thread\n    allResults.forEach((status) => {\n      if (status?.inReplyToId) {\n        const replyToStatus = allResults.find(\n          (s) => s.id === status.inReplyToId,\n        );\n        if (replyToStatus && !replyToStatus.inReplyToId) {\n          replyToStatus._thread = true;\n        }\n      }\n    });\n\n    return allResults;\n  }\n\n  const [posts, setPosts] = useState([]);\n  const catchupRangeRef = useRef();\n  const catchupLastRef = useRef();\n  const NS = useMemo(() => getCurrentAccountNS(), []);\n  const handleCatchupClick = useCallback(async ({ duration } = {}) => {\n    const now = Date.now();\n    const maxCreatedAt = duration ? now - duration : null;\n    setUIState('loading');\n    const results = await fetchHome({ maxCreatedAt });\n    // Namespaced by account ID\n    // Possible conflict if ID matches between different accounts from different instances\n    const catchupID = `${NS}-${uid()}`;\n    try {\n      await db.catchup.set(catchupID, {\n        id: catchupID,\n        posts: results,\n        count: results.length,\n        startAt: maxCreatedAt,\n        endAt: now,\n      });\n      setSearchParams({ id: catchupID });\n    } catch (e) {\n      console.error(e, results);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      (async () => {\n        const catchup = await db.catchup.get(id);\n        if (catchup) {\n          catchup.posts.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\n          setPosts(catchup.posts);\n          setUIState('results');\n        }\n      })();\n    } else if (uiState === 'results') {\n      setPosts([]);\n      setUIState('start');\n    }\n  }, [id]);\n\n  const [reloadCatchupsCount, reloadCatchups] = useReducer((c) => c + 1, 0);\n  const [lastCatchupEndAt, setLastCatchupEndAt] = useState(null);\n  const [prevCatchups, setPrevCatchups] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const catchups = await db.catchup.keys();\n        if (catchups.length) {\n          const ns = getCurrentAccountNS();\n          const ownKeys = catchups.filter((key) => key.startsWith(`${ns}-`));\n          if (ownKeys.length) {\n            let ownCatchups = await db.catchup.getMany(ownKeys);\n            ownCatchups.sort((a, b) => b.endAt - a.endAt);\n\n            // Split to 1st 3 last catchups, and the rest\n            let lastCatchups = ownCatchups.slice(0, 3);\n            let restCatchups = ownCatchups.slice(3);\n\n            const trimmedCatchups = lastCatchups.map((c) => {\n              const { id, count, startAt, endAt } = c;\n              return {\n                id,\n                count,\n                startAt,\n                endAt,\n              };\n            });\n            setPrevCatchups(trimmedCatchups);\n            setLastCatchupEndAt(lastCatchups[0].endAt);\n\n            // GC time\n            ownCatchups = null;\n            lastCatchups = null;\n\n            queueMicrotask(() => {\n              if (restCatchups.length) {\n                // delete them\n                db.catchup\n                  .delMany(restCatchups.map((c) => c.id))\n                  .then(() => {\n                    // GC time\n                    restCatchups = null;\n                  })\n                  .catch((e) => {\n                    console.error(e);\n                  });\n              }\n            });\n\n            return;\n          }\n        }\n      } catch (e) {\n        console.error(e);\n      }\n      setPrevCatchups([]);\n    })();\n  }, [reloadCatchupsCount]);\n  useEffect(() => {\n    if (uiState === 'start') {\n      reloadCatchups();\n    }\n  }, [uiState === 'start']);\n\n  const [filterCounts, links] = useMemo(() => {\n    let filtered = 0,\n      groups = 0,\n      boosts = 0,\n      replies = 0,\n      followedTags = 0,\n      original = 0;\n    const links = {};\n    for (const post of posts) {\n      if (post._filtered) {\n        filtered++;\n        post.__FILTER = 'filtered';\n      } else if (post.group) {\n        groups++;\n        post.__FILTER = 'groups';\n      } else if (post.reblog) {\n        boosts++;\n        post.__FILTER = 'boosts';\n      } else if (post._followedTags?.length) {\n        followedTags++;\n        post.__FILTER = 'followedTags';\n      } else if (\n        post.inReplyToId &&\n        post.inReplyToAccountId !== post.account?.id\n      ) {\n        replies++;\n        post.__FILTER = 'replies';\n      } else {\n        original++;\n        post.__FILTER = 'original';\n      }\n\n      const thePost = post.reblog || post;\n      if (\n        post.__FILTER !== 'filtered' &&\n        thePost.card?.url &&\n        thePost.card?.image &&\n        thePost.card?.type === 'link'\n      ) {\n        const { card, favouritesCount, reblogsCount } = thePost;\n        let { url } = card;\n        url = url.replace(/\\/$/, '');\n        if (!links[url]) {\n          links[url] = {\n            postID: thePost.id,\n            card,\n            shared: 1,\n            sharers: [post.account],\n            likes: favouritesCount,\n            boosts: reblogsCount,\n          };\n        } else {\n          if (links[url].sharers.find((a) => a.id === post.account.id)) {\n            continue;\n          }\n          links[url].shared++;\n          links[url].sharers.push(post.account);\n          if (links[url].postID !== thePost.id) {\n            links[url].likes += favouritesCount;\n            links[url].boosts += reblogsCount;\n          }\n        }\n      }\n    }\n\n    let topLinks = [];\n    for (const link in links) {\n      topLinks.push({\n        url: link,\n        ...links[link],\n      });\n    }\n    topLinks.sort((a, b) => {\n      if (a.shared > b.shared) return -1;\n      if (a.shared < b.shared) return 1;\n      if (a.boosts > b.boosts) return -1;\n      if (a.boosts < b.boosts) return 1;\n      if (a.likes > b.likes) return -1;\n      if (a.likes < b.likes) return 1;\n      return 0;\n    });\n\n    // Slice links to shared > 1 but min 10 links\n    if (topLinks.length > 10) {\n      linksLoop: for (let i = 10; i < topLinks.length; i++) {\n        const { shared } = topLinks[i];\n        if (shared <= 1) {\n          topLinks = topLinks.slice(0, i);\n          break linksLoop;\n        }\n      }\n    }\n\n    return [\n      {\n        filtered,\n        groups,\n        boosts,\n        replies,\n        followedTags,\n        original,\n      },\n      topLinks,\n    ];\n  }, [posts]);\n\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState('all');\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n\n  const [range, setRange] = useState(1);\n\n  const [sortBy, setSortBy] = useState('createdAt');\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [groupBy, setGroupBy] = useState(null);\n\n  const [filteredPosts, authors, authorCounts] = useMemo(() => {\n    const authorsHash = {};\n    const authorCountsMap = new Map();\n\n    let filteredPosts = posts.filter((post) => {\n      const postFilterMatches =\n        selectedFilterCategory === 'all' ||\n        post.__FILTER === selectedFilterCategory;\n\n      if (postFilterMatches) {\n        authorsHash[post.account.id] = post.account;\n        authorCountsMap.set(\n          post.account.id,\n          (authorCountsMap.get(post.account.id) || 0) + 1,\n        );\n      }\n\n      return postFilterMatches;\n    });\n\n    // Deduplicate boosts\n    const boostedPosts = {};\n    filteredPosts.forEach((post) => {\n      if (post.reblog) {\n        if (boostedPosts[post.reblog.id]) {\n          if (boostedPosts[post.reblog.id].__BOOSTERS) {\n            boostedPosts[post.reblog.id].__BOOSTERS.add(post.account);\n          } else {\n            boostedPosts[post.reblog.id].__BOOSTERS = new Set([post.account]);\n          }\n          post.__HIDDEN = true;\n        } else {\n          boostedPosts[post.reblog.id] = post;\n        }\n      }\n    });\n\n    if (selectedAuthor && authorCountsMap.has(selectedAuthor)) {\n      filteredPosts = filteredPosts.filter(\n        (post) =>\n          post.account.id === selectedAuthor ||\n          [...(post.__BOOSTERS || [])].find((a) => a.id === selectedAuthor),\n      );\n    }\n\n    return [filteredPosts, authorsHash, Object.fromEntries(authorCountsMap)];\n  }, [selectedFilterCategory, selectedAuthor, posts]);\n\n  const filteredPostsMap = useMemo(() => {\n    const map = {};\n    filteredPosts.forEach((post) => {\n      map[post.id] = post;\n    });\n    return map;\n  }, [filteredPosts]);\n\n  const authorCountsList = useMemo(\n    () =>\n      Object.keys(authorCounts).sort(\n        (a, b) => authorCounts[b] - authorCounts[a],\n      ),\n    [authorCounts],\n  );\n\n  const sortedFilteredPosts = useMemo(() => {\n    const authorIndices = {};\n    authorCountsList.forEach((authorID, index) => {\n      authorIndices[authorID] = index;\n    });\n    return filteredPosts\n      .filter((post) => !post.__HIDDEN)\n      .sort((a, b) => {\n        if (groupBy === 'account') {\n          const aAccountID = a.account.id;\n          const bAccountID = b.account.id;\n          const aIndex = authorIndices[aAccountID];\n          const bIndex = authorIndices[bAccountID];\n          const order = aIndex - bIndex;\n          if (order !== 0) {\n            return order;\n          }\n        }\n        if (sortBy !== 'createdAt') {\n          a = a.reblog || a;\n          b = b.reblog || b;\n          if (sortBy !== 'density' && a[sortBy] === b[sortBy]) {\n            return a.createdAt > b.createdAt ? 1 : -1;\n          }\n        }\n        if (sortBy === 'density') {\n          const aDensity = postDensity(a);\n          const bDensity = postDensity(b);\n          if (sortOrder === 'asc') {\n            return aDensity > bDensity ? 1 : -1;\n          } else {\n            return bDensity > aDensity ? 1 : -1;\n          }\n        }\n        if (sortOrder === 'asc') {\n          return a[sortBy] > b[sortBy] ? 1 : -1;\n        } else {\n          return b[sortBy] > a[sortBy] ? 1 : -1;\n        }\n      });\n  }, [filteredPosts, sortBy, sortOrder, groupBy, authorCountsList]);\n\n  const prevGroup = useRef(null);\n\n  const authorsListParent = useRef(null);\n  const autoAnimated = useRef(false);\n  useEffect(() => {\n    if (posts.length > 100 || autoAnimated.current) return;\n    if (authorsListParent.current) {\n      autoAnimate(authorsListParent.current, {\n        duration: 200,\n      });\n      autoAnimated.current = true;\n    }\n  }, [posts, authorsListParent]);\n\n  const postsBarType = posts.length > 160 ? '3d' : '2d';\n\n  const postsBar = useMemo(() => {\n    if (postsBarType !== '2d') return null;\n    return posts.map((post) => {\n      // If part of filteredPosts\n      const isFiltered = filteredPostsMap[post.id];\n      return (\n        <span\n          key={post.id}\n          class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n        />\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const postsBins = useMemo(() => {\n    if (postsBarType !== '3d') return null;\n    if (!posts?.length) return null;\n    const bins = binByTime(posts, 'createdAt', 320);\n    return bins.map((posts, i) => {\n      return (\n        <div class=\"posts-bin\" key={i}>\n          {posts.map((post) => {\n            const isFiltered = filteredPostsMap[post.id];\n            return (\n              <span\n                key={post.id}\n                class={`post-dot ${isFiltered ? 'post-dot-highlight' : ''}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n  }, [filteredPostsMap]);\n\n  const scrollableRef = useRef(null);\n\n  // if range value exceeded lastCatchupEndAt, show error\n  const lastCatchupRange = useMemo(() => {\n    // return hour, not ms\n    if (!lastCatchupEndAt) return null;\n    return (Date.now() - lastCatchupEndAt) / 1000 / 60 / 60;\n  }, [lastCatchupEndAt, range]);\n\n  useEffect(() => {\n    if (uiState !== 'results') return;\n    const authorUsername =\n      selectedAuthor && authors[selectedAuthor]\n        ? authors[selectedAuthor].username\n        : '';\n    const sortOrderIndex = sortOrder === 'asc' ? 0 : 1;\n    const groupByText = {\n      account: 'authors',\n    };\n    let toast = showToast({\n      duration: 5_000, // 5 seconds\n      // Note: I'm sorry, translators\n      text: t`Showing ${select(selectedFilterCategory, {\n        all: 'all posts',\n        original: 'original posts',\n        replies: 'replies',\n        boosts: 'boosts',\n        followedTags: 'followed tags',\n        groups: 'groups',\n        filtered: 'filtered posts',\n      })}, ${select(sortBy, {\n        createdAt: select(sortOrder, {\n          asc: 'oldest',\n          desc: 'latest',\n        }),\n        reblogsCount: select(sortOrder, {\n          asc: 'fewest boosts',\n          desc: 'most boosts',\n        }),\n        favouritesCount: select(sortOrder, {\n          asc: 'fewest likes',\n          desc: 'most likes',\n        }),\n        repliesCount: select(sortOrder, {\n          asc: 'fewest replies',\n          desc: 'most replies',\n        }),\n        density: select(sortOrder, { asc: 'least dense', desc: 'most dense' }),\n      })} first${select(groupBy, {\n        account: ', grouped by authors',\n        other: '',\n      })}`,\n    });\n    return () => {\n      toast?.hideToast?.();\n    };\n  }, [\n    uiState,\n    selectedFilterCategory,\n    selectedAuthor,\n    sortBy,\n    sortOrder,\n    groupBy,\n    authors,\n  ]);\n\n  useEffect(() => {\n    if (selectedAuthor) {\n      if (authors[selectedAuthor]) {\n        // Check if author is visible and within the scrollable area viewport\n        const authorElement = authorsListParent.current.querySelector(\n          `[data-author=\"${selectedAuthor}\"]`,\n        );\n        const scrollableRect =\n          authorsListParent.current?.getBoundingClientRect();\n        const authorRect = authorElement?.getBoundingClientRect();\n        console.log({\n          sLeft: scrollableRect.left,\n          sRight: scrollableRect.right,\n          aLeft: authorRect.left,\n          aRight: authorRect.right,\n        });\n        if (\n          authorRect.left < scrollableRect.left ||\n          authorRect.right > scrollableRect.right\n        ) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        } else if (authorRect.top < 0) {\n          authorElement.scrollIntoView({\n            block: 'nearest',\n            inline: 'nearest',\n            behavior: 'smooth',\n          });\n        }\n      }\n    }\n  }, [selectedAuthor, authors]);\n\n  const [showHelp, setShowHelp] = useState(false);\n\n  const itemsSelector = '.catchup-list > li > a';\n  const jRef = useHotkeys(\n    'j',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        const nextItem = allItems[activeItemIndex + 1];\n        if (nextItem) {\n          nextItem.focus();\n          nextItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const kRef = useHotkeys(\n    'k',\n    () => {\n      const activeItem = document.activeElement.closest(itemsSelector);\n      const activeItemRect = activeItem?.getBoundingClientRect();\n      const allItems = Array.from(\n        scrollableRef.current.querySelectorAll(itemsSelector),\n      );\n      if (\n        activeItem &&\n        activeItemRect.top < scrollableRef.current.clientHeight &&\n        activeItemRect.bottom > 0\n      ) {\n        const activeItemIndex = allItems.indexOf(activeItem);\n        let prevItem = allItems[activeItemIndex - 1];\n        if (prevItem) {\n          prevItem.focus();\n          prevItem.scrollIntoView({\n            block: 'center',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      } else {\n        const topmostItem = allItems.find((item) => {\n          const itemRect = item.getBoundingClientRect();\n          return itemRect.top >= 44 && itemRect.left >= 0;\n        });\n        if (topmostItem) {\n          topmostItem.focus();\n          topmostItem.scrollIntoView({\n            block: 'nearest',\n            inline: 'center',\n            behavior: 'smooth',\n          });\n        }\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n    },\n  );\n\n  const hlRef = useHotkeys(\n    'h, l',\n    (_, handler) => {\n      // Go next/prev selectedAuthor in authorCountsList list\n      const key = handler.keys[0];\n      if (selectedAuthor) {\n        const index = authorCountsList.indexOf(selectedAuthor);\n        if (key === 'h') {\n          if (index > 0 && index < authorCountsList.length) {\n            setSelectedAuthor(authorCountsList[index - 1]);\n            scrollableRef.current?.focus();\n          }\n        } else if (key === 'l') {\n          if (index < authorCountsList.length - 1 && index >= 0) {\n            setSelectedAuthor(authorCountsList[index + 1]);\n            scrollableRef.current?.focus();\n          }\n        }\n      } else if (key === 'l') {\n        setSelectedAuthor(authorCountsList[0]);\n        scrollableRef.current?.focus();\n      }\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const escRef = useHotkeys(\n    'esc',\n    () => {\n      setSelectedAuthor(null);\n      scrollableRef.current?.focus();\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  const dotRef = useHotkeys(\n    '.',\n    () => {\n      scrollableRef.current?.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    },\n    {\n      preventDefault: true,\n      ignoreModifiers: true,\n      enableOnFormTags: ['input'],\n    },\n  );\n\n  return (\n    <div\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        hlRef.current = node;\n        escRef.current = node;\n      }}\n      id=\"catchup-page\"\n      class=\"deck-container\"\n      tabIndex=\"-1\"\n    >\n      <div class=\"timeline-deck deck wide\">\n        <header\n          class={`${uiState === 'loading' ? 'loading' : ''}`}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({\n                top: 0,\n                behavior: 'smooth',\n              });\n            }\n          }}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              {uiState === 'results' && (\n                <Link to=\"/catchup\" class=\"button plain\">\n                  <Icon icon=\"history2\" size=\"l\" alt={t`Catch-up`} />\n                </Link>\n              )}\n              {uiState === 'start' && (\n                <Link to=\"/\" class=\"button plain\">\n                  <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n                </Link>\n              )}\n            </div>\n            <h1>\n              {uiState !== 'start' && (\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              )}\n            </h1>\n            <div class=\"header-side\">\n              {uiState !== 'start' && uiState !== 'loading' && (\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    setShowHelp(true);\n                  }}\n                >\n                  <Trans>Help</Trans>\n                </button>\n              )}\n            </div>\n          </div>\n        </header>\n        <main>\n          {uiState === 'start' && (\n            <div class=\"catchup-start\">\n              <h1>\n                <Trans>\n                  Catch-up <sup>beta</sup>\n                </Trans>\n              </h1>\n              <details>\n                <summary>\n                  <Trans>What is this?</Trans>\n                </summary>\n                <p>\n                  <Trans>\n                    Catch-up is a separate timeline for your followings,\n                    offering a high-level view at a glance, with a simple,\n                    email-inspired interface to effortlessly sort and filter\n                    through posts.\n                  </Trans>\n                </p>\n                <img\n                  src={catchupUrl}\n                  width=\"1200\"\n                  height=\"900\"\n                  alt={t`Preview of Catch-up UI`}\n                />\n                <p>\n                  <button\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.target.closest('details').open = false;\n                    }}\n                  >\n                    <Trans>Let's catch up</Trans>\n                  </button>\n                </p>\n              </details>\n              <p>\n                <Trans>Let's catch up on the posts from your followings.</Trans>\n              </p>\n              <p>\n                <b>\n                  <Trans>Show me all posts from…</Trans>\n                </b>\n              </p>\n              <div class=\"catchup-form\">\n                <input\n                  ref={catchupRangeRef}\n                  type=\"range\"\n                  value={range}\n                  min={RANGES[0].value}\n                  max={RANGES[RANGES.length - 1].value}\n                  step=\"1\"\n                  list=\"catchup-ranges\"\n                  onChange={(e) => setRange(+e.target.value)}\n                />{' '}\n                <span\n                  style={{\n                    width: '8em',\n                  }}\n                >\n                  {_(RANGES[range - 1].label)}\n                  <br />\n                  <small class=\"insignificant\">\n                    {range == RANGES[RANGES.length - 1].value\n                      ? t`until the max`\n                      : niceDateTime(\n                          new Date(Date.now() - range * 60 * 60 * 1000),\n                        )}\n                  </small>\n                </span>\n                <datalist id=\"catchup-ranges\">\n                  {RANGES.map(({ label, value }) => (\n                    <option value={value} label={_(label)} />\n                  ))}\n                </datalist>{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (range < RANGES[RANGES.length - 1].value) {\n                      let duration;\n                      if (\n                        range === RANGES[RANGES.length - 1].value &&\n                        catchupLastRef.current?.checked\n                      ) {\n                        duration = Date.now() - lastCatchupEndAt;\n                      } else {\n                        duration = range * 60 * 60 * 1000;\n                      }\n                      handleCatchupClick({ duration });\n                    } else {\n                      handleCatchupClick();\n                    }\n                  }}\n                >\n                  <Trans>Catch up</Trans>\n                </button>\n              </div>\n              {lastCatchupRange && range > lastCatchupRange ? (\n                <p class=\"catchup-info\">\n                  <Icon icon=\"info\" />{' '}\n                  <Trans>Overlaps with your last catch-up</Trans>\n                </p>\n              ) : range === RANGES[RANGES.length - 1].value &&\n                lastCatchupEndAt ? (\n                <p class=\"catchup-info\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      switch\n                      checked\n                      ref={catchupLastRef}\n                    />{' '}\n                    <Trans>\n                      Until the last catch-up (\n                      {dtf.format(new Date(lastCatchupEndAt))})\n                    </Trans>\n                  </label>\n                </p>\n              ) : null}\n              <p class=\"insignificant\">\n                <small>\n                  <Trans>\n                    Note: your instance might only show a maximum of 800 posts\n                    in the Home timeline regardless of the time range. Could be\n                    less or more.\n                  </Trans>\n                </small>\n              </p>\n              {!!prevCatchups?.length && (\n                <div class=\"catchup-prev\">\n                  <p>\n                    <Trans>Previously…</Trans>\n                  </p>\n                  <ul>\n                    {prevCatchups.map((pc) => (\n                      <li key={pc.id}>\n                        <Link to={`/catchup?id=${pc.id}`}>\n                          <Icon icon=\"history2\" />{' '}\n                          <span>\n                            {pc.startAt\n                              ? dtf.formatRange(\n                                  new Date(pc.startAt),\n                                  new Date(pc.endAt),\n                                )\n                              : `… – ${dtf.format(new Date(pc.endAt))}`}\n                          </span>\n                        </Link>{' '}\n                        <span>\n                          <small class=\"ib insignificant\">\n                            <Plural\n                              value={pc.count}\n                              one=\"# post\"\n                              other=\"# posts\"\n                            />\n                          </small>{' '}\n                          <button\n                            type=\"button\"\n                            class=\"light danger small\"\n                            onClick={async () => {\n                              const yes = confirm(t`Remove this catch-up?`);\n                              if (yes) {\n                                let t = showToast(\n                                  t`Removing Catch-up ${pc.id}`,\n                                );\n                                await db.catchup.del(pc.id);\n                                t?.hideToast?.();\n                                showToast(t`Catch-up ${pc.id} removed`);\n                                reloadCatchups();\n                              }\n                            }}\n                          >\n                            <Icon icon=\"x\" alt={t`Remove`} />\n                          </button>\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                  {prevCatchups.length >= 3 && (\n                    <p>\n                      <small>\n                        <Trans>\n                          Note: Only max 3 will be stored. The rest will be\n                          automatically removed.\n                        </Trans>\n                      </small>\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n          {uiState === 'loading' && (\n            <div class=\"ui-state catchup-start\">\n              <Loader abrupt />\n              <p class=\"insignificant\">\n                <Trans>Fetching posts…</Trans>\n              </p>\n              <p class=\"insignificant\">\n                <Trans>This might take a while.</Trans>\n              </p>\n            </div>\n          )}\n          {uiState === 'results' && (\n            <>\n              <div class=\"catchup-header\">\n                {posts.length > 0 && (\n                  <p>\n                    <b class=\"ib\">\n                      {dtf.formatRange(\n                        new Date(posts[0].createdAt),\n                        new Date(posts[posts.length - 1].createdAt),\n                      )}\n                    </b>\n                  </p>\n                )}\n                <aside>\n                  <button\n                    hidden={\n                      selectedFilterCategory === 'all' &&\n                      !selectedAuthor &&\n                      sortBy === 'createdAt' &&\n                      sortOrder === 'asc'\n                    }\n                    type=\"button\"\n                    class=\"plain4 small\"\n                    onClick={() => {\n                      setSelectedFilterCategory('all');\n                      setSelectedAuthor(null);\n                      setSortBy('createdAt');\n                      setGroupBy(null);\n                      setSortOrder('asc');\n                    }}\n                  >\n                    <Trans>Reset filters</Trans>\n                  </button>\n                  {links?.length > 0 && (\n                    <button\n                      type=\"button\"\n                      class=\"plain small\"\n                      onClick={() => setShowTopLinks(!showTopLinks)}\n                    >\n                      <Trans>Top links</Trans>{' '}\n                      <Icon\n                        icon=\"chevron-down\"\n                        style={{\n                          transform: showTopLinks\n                            ? 'rotate(180deg)'\n                            : 'rotate(0deg)',\n                        }}\n                      />\n                    </button>\n                  )}\n                </aside>\n              </div>\n              <div class=\"shazam-container no-animation\" hidden={!showTopLinks}>\n                <div class=\"shazam-container-inner\">\n                  <div class=\"catchup-top-links links-bar\">\n                    {links.map((link) => {\n                      const { card, shared, sharers, likes, boosts } = link;\n                      const {\n                        blurhash,\n                        title,\n                        description,\n                        url,\n                        image,\n                        imageDescription,\n                        language,\n                        width,\n                        height,\n                        publishedAt,\n                      } = card;\n                      const domain = punycode.toUnicode(\n                        URL.parse(url)\n                          .hostname.replace(/^www\\./, '')\n                          .replace(/\\/$/, ''),\n                      );\n                      let accentColor;\n                      if (blurhash) {\n                        const averageColor = getBlurHashAverageColor(blurhash);\n                        const labAverageColor = rgb2oklab(averageColor);\n                        accentColor = oklab2rgb([\n                          0.6,\n                          labAverageColor[1],\n                          labAverageColor[2],\n                        ]);\n                      }\n\n                      return (\n                        <a\n                          key={url}\n                          href={url}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          style={\n                            accentColor\n                              ? {\n                                  '--accent-color': `rgb(${accentColor.join(\n                                    ',',\n                                  )})`,\n                                  '--accent-alpha-color': `rgba(${accentColor.join(\n                                    ',',\n                                  )}, 0.4)`,\n                                }\n                              : {}\n                          }\n                        >\n                          <article>\n                            <figure>\n                              <img\n                                src={image}\n                                alt={imageDescription}\n                                width={width}\n                                height={height}\n                                loading=\"lazy\"\n                              />\n                            </figure>\n                            <div class=\"article-body\">\n                              <header>\n                                <div class=\"article-meta\">\n                                  <span class=\"domain\">{domain}</span>{' '}\n                                  {!!publishedAt && <>&middot; </>}\n                                  {!!publishedAt && (\n                                    <>\n                                      <RelativeTime\n                                        datetime={publishedAt}\n                                        format=\"micro\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                                {!!title && (\n                                  <h1\n                                    class=\"title\"\n                                    lang={language}\n                                    dir=\"auto\"\n                                    title={title}\n                                  >\n                                    {title}\n                                  </h1>\n                                )}\n                              </header>\n                              {!!description && (\n                                <p\n                                  class=\"description\"\n                                  lang={language}\n                                  dir=\"auto\"\n                                  title={description}\n                                >\n                                  {description}\n                                </p>\n                              )}\n                              <hr />\n                              <p\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                }}\n                              >\n                                <Trans>\n                                  Shared by{' '}\n                                  {sharers.map((s) => {\n                                    const { avatarStatic, displayName } = s;\n                                    return (\n                                      <Avatar\n                                        url={avatarStatic}\n                                        size=\"s\"\n                                        alt={displayName}\n                                      />\n                                    );\n                                  })}\n                                </Trans>\n                              </p>\n                            </div>\n                          </article>\n                        </a>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n              {posts.length >= 5 &&\n                (postsBarType === '3d' ? (\n                  <div class=\"catchup-posts-viz-time-bar\">{postsBins}</div>\n                ) : (\n                  <div class=\"catchup-posts-viz-bar\">{postsBar}</div>\n                ))}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <label class=\"filter-cat\">\n                    <input\n                      type=\"radio\"\n                      name=\"filter-cat\"\n                      checked={selectedFilterCategory.toLowerCase() === 'all'}\n                      onChange={() => {\n                        setSelectedFilterCategory('all');\n                      }}\n                    />\n                    <Trans>All</Trans> <span class=\"count\">{posts.length}</span>\n                  </label>\n                  {Object.entries(FILTER_KEYS).map(\n                    ([key, label]) =>\n                      !!filterCounts[key] && (\n                        <label\n                          class=\"filter-cat\"\n                          key={_(label)}\n                          title={\n                            ((filterCounts[key] / posts.length) * 100).toFixed(\n                              2,\n                            ) + '%'\n                          }\n                        >\n                          <input\n                            type=\"radio\"\n                            name=\"filter-cat\"\n                            checked={\n                              selectedFilterCategory.toLowerCase() ===\n                              key.toLowerCase()\n                            }\n                            onChange={() => {\n                              setSelectedFilterCategory(key);\n                              if (key === 'boosts') {\n                                setSortBy('reblogsCount');\n                                setSortOrder('desc');\n                                setGroupBy(null);\n                              }\n                              // setSelectedAuthor(null);\n                            }}\n                          />\n                          {_(label)}{' '}\n                          <span class=\"count\">{filterCounts[key]}</span>\n                        </label>\n                      ),\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && !!authorCounts && (\n                <div\n                  class=\"catchup-filters authors-filters\"\n                  ref={authorsListParent}\n                >\n                  {authorCountsList.map((author) => (\n                    <label\n                      class=\"filter-author\"\n                      data-author={author}\n                      key={`${author}-${authorCounts[author]}`}\n                      // Preact messed up the order sometimes, need additional key besides just `author`\n                      // https://github.com/preactjs/preact/issues/2849\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"filter-author\"\n                        checked={selectedAuthor === author}\n                        onChange={() => {\n                          setSelectedAuthor(author);\n                          // setGroupBy(null);\n                        }}\n                        onClick={() => {\n                          if (selectedAuthor === author) {\n                            setSelectedAuthor(null);\n                          }\n                        }}\n                      />\n                      <Avatar\n                        url={\n                          authors[author].avatarStatic || authors[author].avatar\n                        }\n                        size=\"xxl\"\n                        alt={`${authors[author].displayName} (@${authors[author].acct})`}\n                      />{' '}\n                      <span class=\"count\">{authorCounts[author]}</span>\n                      <span class=\"username\">{authors[author].username}</span>\n                    </label>\n                  ))}\n                  {authorCountsList.length > 5 && (\n                    <small\n                      key=\"authors-count\"\n                      style={{\n                        whiteSpace: 'nowrap',\n                        paddingInline: '1em',\n                        opacity: 0.33,\n                      }}\n                    >\n                      <Plural\n                        value={authorCountsList.length}\n                        one=\"# author\"\n                        other=\"# authors\"\n                      />\n                    </small>\n                  )}\n                </div>\n              )}\n              {posts.length >= 2 && (\n                <div class=\"catchup-filters\">\n                  <span class=\"filter-label\">\n                    <Trans>Sort</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_SORTS.map((key) => (\n                      <label\n                        class=\"filter-sort\"\n                        key={key}\n                        onClick={(e) => {\n                          if (sortBy === key) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n                          }\n                        }}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-cat\"\n                          checked={sortBy === key}\n                          onChange={() => {\n                            setSortBy(key);\n                            const order = /(replies|favourites|reblogs)/.test(\n                              key,\n                            )\n                              ? 'desc'\n                              : 'asc';\n                            setSortOrder(order);\n                          }}\n                        />\n                        {\n                          {\n                            createdAt: t`Date`,\n                            repliesCount: t`Replies`,\n                            favouritesCount: t`Likes`,\n                            reblogsCount: t`Boosts`,\n                            density: t`Density`,\n                          }[key]\n                        }\n                        {sortBy === key && (sortOrder === 'asc' ? ' ↑' : ' ↓')}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {/* <fieldset class=\"radio-field-group\">\n                    {['asc', 'desc'].map((key) => (\n                      <label class=\"filter-sort\" key={key}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-sort-dir\"\n                          checked={sortOrder === key}\n                          onChange={() => {\n                            setSortOrder(key);\n                          }}\n                        />\n                        {key === 'asc' ? '↑' : '↓'}\n                      </label>\n                    ))}\n                  </fieldset> */}\n                  <span class=\"filter-label\">\n                    <Trans>Group</Trans>\n                  </span>{' '}\n                  <fieldset class=\"radio-field-group\">\n                    {FILTER_GROUPS.map((key) => (\n                      <label class=\"filter-group\" key={key || 'none'}>\n                        <input\n                          type=\"radio\"\n                          name=\"filter-group\"\n                          checked={groupBy === key}\n                          onChange={() => {\n                            setGroupBy(key);\n                          }}\n                          disabled={key === 'account' && selectedAuthor}\n                        />\n                        {{\n                          account: t`Authors`,\n                        }[key] || t`None`}\n                      </label>\n                    ))}\n                  </fieldset>\n                  {\n                    selectedAuthor && authorCountsList.length > 1 ? (\n                      <button\n                        type=\"button\"\n                        class=\"plain6 small\"\n                        onClick={() => {\n                          setSelectedAuthor(null);\n                        }}\n                        style={{\n                          whiteSpace: 'nowrap',\n                        }}\n                      >\n                        <Trans>Show all authors</Trans>\n                      </button>\n                    ) : null\n                    // <button\n                    //   type=\"button\"\n                    //   class=\"plain4 small\"\n                    //   onClick={() => {}}\n                    // >\n                    //   Group by authors\n                    // </button>\n                  }\n                </div>\n              )}\n              <ul\n                class={`catchup-list catchup-filter-${\n                  selectedFilterCategory || ''\n                } ${sortBy ? `catchup-sort-${sortBy}` : ''} ${\n                  selectedAuthor && authors[selectedAuthor]\n                    ? `catchup-selected-author`\n                    : ''\n                } ${groupBy ? `catchup-group-${groupBy}` : ''}`}\n              >\n                {sortedFilteredPosts.map((post, i) => {\n                  const id = post.reblog?.id || post.id;\n                  let showSeparator = false;\n                  if (groupBy === 'account') {\n                    if (\n                      prevGroup.current &&\n                      post.account.id !== prevGroup.current &&\n                      i > 0\n                    ) {\n                      showSeparator = true;\n                    }\n                    prevGroup.current = post.account.id;\n                  }\n                  return (\n                    <Fragment key={`${post.id}-${showSeparator}`}>\n                      {showSeparator && <li class=\"separator\" />}\n                      <IntersectionPostLineItem\n                        to={`/${instance}/s/${id}`}\n                        post={post}\n                        root={scrollableRef.current}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </ul>\n              <footer>\n                {filteredPosts.length > 5 && (\n                  <p>\n                    {selectedFilterCategory === 'boosts'\n                      ? t`You don't have to read everything.`\n                      : t`That's all.`}{' '}\n                    <button\n                      type=\"button\"\n                      class=\"textual\"\n                      onClick={() => {\n                        scrollableRef.current.scrollTop = 0;\n                      }}\n                    >\n                      <Trans>Back to top</Trans>\n                    </button>\n                    .\n                  </p>\n                )}\n              </footer>\n            </>\n          )}\n        </main>\n      </div>\n      {showHelp && (\n        <Modal onClose={() => setShowHelp(false)}>\n          <div class=\"sheet\" id=\"catchup-help-sheet\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowHelp(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Help</Trans>\n              </h2>\n            </header>\n            <main>\n              <dl>\n                <dt>\n                  <Trans>Top links</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Links shared by followings, sorted by shared counts, boosts\n                    and likes.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Sort: Density</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are sorted by information density or depth. Shorter\n                    posts are \"lighter\" while longer posts are \"heavier\". Posts\n                    with photos are \"heavier\" than posts without photos.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Group: Authors</Trans>\n                </dt>\n                <dd>\n                  <Trans>\n                    Posts are grouped by authors, sorted by posts count per\n                    author.\n                  </Trans>\n                </dd>\n                <dt>\n                  <Trans>Keyboard shortcuts</Trans>\n                </dt>\n                {/* <dd>\n                  <kbd>j</kbd>: <Trans>Next post</Trans>\n                </dd>\n                <dd>\n                  <kbd>k</kbd>: <Trans>Previous post</Trans>\n                </dd>\n                <dd>\n                  <kbd>l</kbd>: <Trans>Next author</Trans>\n                </dd>\n                <dd>\n                  <kbd>h</kbd>: <Trans>Previous author</Trans>\n                </dd>\n                <dd>\n                  <kbd>Enter</kbd>: <Trans>Open post details</Trans>\n                </dd>\n                <dd>\n                  <kbd>.</kbd>: <Trans>Scroll to top</Trans>\n                </dd> */}\n                <dd>\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td>\n                          <Trans>Next post</Trans>\n                        </td>\n                        <td>\n                          <kbd>j</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous post</Trans>\n                        </td>\n                        <td>\n                          <kbd>k</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Next author</Trans>\n                        </td>\n                        <td>\n                          <kbd>l</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Previous author</Trans>\n                        </td>\n                        <td>\n                          <kbd>h</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Open post details</Trans>\n                        </td>\n                        <td>\n                          <kbd>Enter</kbd>\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>\n                          <Trans>Scroll to top</Trans>\n                        </td>\n                        <td>\n                          <kbd>.</kbd>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </dd>\n              </dl>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nconst PostLine = memo(\n  function ({ post }) {\n    const {\n      id,\n      account,\n      group,\n      reblog,\n      inReplyToId,\n      inReplyToAccountId,\n      _followedTags: isFollowedTags,\n      _filtered: filterInfo,\n      visibility,\n      __BOOSTERS,\n    } = post;\n    const isReplyTo = inReplyToId && inReplyToAccountId !== account.id;\n    const isFiltered = !!filterInfo;\n\n    const debugHover = (e) => {\n      if (e.shiftKey) {\n        console.log({\n          ...post,\n        });\n      }\n    };\n\n    return (\n      <article\n        class={`post-line ${\n          group\n            ? 'group'\n            : reblog\n            ? 'reblog'\n            : isFollowedTags?.length\n            ? 'followed-tags'\n            : ''\n        } ${isReplyTo ? 'reply-to' : ''} ${\n          isFiltered ? 'filtered' : ''\n        } visibility-${visibility}`}\n        onMouseEnter={debugHover}\n      >\n        <span class=\"post-author\">\n          {reblog ? (\n            <span class=\"post-reblog-avatar\">\n              <Avatar\n                url={account.avatarStatic || account.avatar}\n                squircle={account.bot}\n              />\n              {__BOOSTERS?.size > 0\n                ? [...__BOOSTERS].map((b) => (\n                    <Avatar url={b.avatarStatic || b.avatar} squircle={b.bot} />\n                  ))\n                : ''}{' '}\n              <Icon icon=\"rocket\" />{' '}\n              {/* <Avatar\n              url={reblog.account.avatarStatic || reblog.account.avatar}\n              squircle={reblog.account.bot}\n            /> */}\n              <NameText account={reblog.account} showAvatar />\n            </span>\n          ) : (\n            <NameText account={account} showAvatar />\n          )}\n        </span>\n        <PostPeek post={reblog || post} filterInfo={filterInfo} />\n        <span class=\"post-meta\">\n          <PostStats post={reblog || post} />{' '}\n          <RelativeTime\n            datetime={new Date(reblog?.createdAt || post.createdAt)}\n            format=\"micro\"\n          />\n        </span>\n      </article>\n    );\n  },\n  (oldProps, newProps) => {\n    return oldProps?.post?.id === newProps?.post?.id;\n  },\n);\n\nconst IntersectionPostLineItem = ({ root, to, ...props }) => {\n  const ref = useRef();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        const entry = entries[0];\n        if (entry.isIntersecting) {\n          queueMicrotask(() => setShow(true));\n          observer.unobserve(ref.current);\n        }\n      },\n      {\n        root,\n        rootMargin: `${Math.max(320, screen.height * 0.75)}px`,\n      },\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n\n  return show ? (\n    <li>\n      <Link to={to}>\n        <PostLine {...props} />\n      </Link>\n    </li>\n  ) : (\n    <li ref={ref} style={{ height: '4em' }} />\n  );\n};\n\n// A media speak a thousand words\nconst MEDIA_DENSITY = 8;\nconst CARD_DENSITY = 8;\nfunction postDensity(post) {\n  const { spoilerText, content, poll, mediaAttachments, card } = post;\n  const pollContent = poll?.options?.length\n    ? poll.options.reduce((acc, cur) => acc + cur.title, '')\n    : '';\n  const density =\n    (spoilerText.length + htmlContentLength(content) + pollContent.length) /\n      140 +\n    (mediaAttachments?.length\n      ? MEDIA_DENSITY * mediaAttachments.length\n      : card?.image\n      ? CARD_DENSITY\n      : 0);\n  return density;\n}\n\nconst MEDIA_SIZE = 48;\n\nfunction PostPeek({ post, filterInfo }) {\n  const {\n    spoilerText,\n    sensitive,\n    content,\n    emojis,\n    poll,\n    mediaAttachments,\n    card,\n    inReplyToId,\n    inReplyToAccountId,\n    account,\n    _thread,\n  } = post;\n  const isThread =\n    (inReplyToId && inReplyToAccountId === account.id) || !!_thread;\n\n  const readingExpandSpoilers = useMemo(() => {\n    const prefs = store.account.get('preferences') || {};\n    return !!prefs['reading:expand:spoilers'];\n  }, []);\n  // const readingExpandSpoilers = true;\n  const showMedia = readingExpandSpoilers || (!spoilerText && !sensitive);\n  const postText = content ? statusPeek(post) : '';\n\n  const showPostContent = !spoilerText || readingExpandSpoilers;\n\n  return (\n    <div class=\"post-peek\" title={!spoilerText ? postText : ''}>\n      <span class=\"post-peek-content\">\n        {isThread && !showPostContent && (\n          <>\n            <span class=\"post-peek-tag post-peek-thread\">Thread</span>{' '}\n          </>\n        )}\n        {!!filterInfo ? (\n          <span class=\"post-peek-filtered\">\n            {/* Filtered{filterInfo?.titlesStr ? `: ${filterInfo.titlesStr}` : ''} */}\n            {filterInfo?.titlesStr\n              ? t`Filtered: ${filterInfo.titlesStr}`\n              : t`Filtered`}\n          </span>\n        ) : (\n          <>\n            {!!spoilerText && (\n              <span class=\"post-peek-spoiler\">\n                <Icon\n                  icon={`${readingExpandSpoilers ? 'eye-open' : 'eye-close'}`}\n                />{' '}\n                {spoilerText}\n              </span>\n            )}\n            {showPostContent && (\n              <div class=\"post-peek-html\">\n                {isThread && (\n                  <>\n                    <span class=\"post-peek-tag post-peek-thread\">\n                      <Trans>Thread</Trans>\n                    </span>{' '}\n                  </>\n                )}\n                {!!content && (\n                  <div\n                    dangerouslySetInnerHTML={{\n                      __html: emojifyText(content, emojis),\n                    }}\n                  />\n                )}\n                {!!poll?.options?.length &&\n                  poll.options.map((o) => (\n                    <div>\n                      {poll.multiple ? '▪️' : '•'} {o.title}\n                    </div>\n                  ))}\n                {!content &&\n                  mediaAttachments?.length === 1 &&\n                  mediaAttachments[0].description && (\n                    <>\n                      <span class=\"post-peek-tag post-peek-alt\">ALT</span>{' '}\n                      <div>{mediaAttachments[0].description}</div>\n                    </>\n                  )}\n              </div>\n            )}\n          </>\n        )}\n      </span>\n      {!filterInfo && (\n        <span class=\"post-peek-post-content\">\n          {!!poll && (\n            <span class=\"post-peek-tag post-peek-poll\">\n              <Icon icon=\"poll\" size=\"s\" />\n              <Trans>Poll</Trans>\n            </span>\n          )}\n          {!!mediaAttachments?.length\n            ? mediaAttachments.map((m) => {\n                const mediaURL = m.previewUrl || m.url;\n                const remoteMediaURL = m.previewRemoteUrl || m.remoteUrl;\n                const width = m.meta?.original\n                  ? m.meta.original.width\n                  : m.meta?.small?.width || m.meta?.original?.width;\n                const height = m.meta?.original\n                  ? m.meta.original.height\n                  : m.meta?.small?.height || m.meta?.original?.height;\n                return (\n                  <span key={m.id} class=\"post-peek-media\">\n                    {{\n                      image:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                            style={{\n                              '--anim-duration': `${Math.min(\n                                Math.max(Math.max(width, height) / 100, 5),\n                                120,\n                              )}s`,\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🖼</span>\n                        ),\n                      gifv:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">🎞️</span>\n                        ),\n                      video:\n                        (mediaURL || remoteMediaURL) && showMedia ? (\n                          <img\n                            src={mediaURL}\n                            width={MEDIA_SIZE}\n                            height={MEDIA_SIZE}\n                            alt={m.description}\n                            loading=\"lazy\"\n                            onError={(e) => {\n                              const { src } = e.target;\n                              if (src === mediaURL) {\n                                e.target.src = remoteMediaURL;\n                              }\n                            }}\n                          />\n                        ) : (\n                          <span class=\"post-peek-faux-media\">📹</span>\n                        ),\n                      audio: <span class=\"post-peek-faux-media\">🎵</span>,\n                    }[m.type] || null}\n                  </span>\n                );\n              })\n            : !!card &&\n              card.image &&\n              showMedia && (\n                <span\n                  class={`post-peek-media post-peek-card card-${\n                    card.type || ''\n                  }`}\n                >\n                  {card.image ? (\n                    <img\n                      src={card.image}\n                      width={MEDIA_SIZE}\n                      height={MEDIA_SIZE}\n                      alt={\n                        card.title || card.description || card.imageDescription\n                      }\n                      loading=\"lazy\"\n                      style={{\n                        '--anim-duration':\n                          card.width &&\n                          card.height &&\n                          `${Math.min(\n                            Math.max(\n                              Math.max(card.width, card.height) / 100,\n                              5,\n                            ),\n                            120,\n                          )}s`,\n                      }}\n                    />\n                  ) : (\n                    <span class=\"post-peek-faux-media\">🔗</span>\n                  )}\n                </span>\n              )}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction PostStats({ post }) {\n  const { reblogsCount, repliesCount, favouritesCount } = post;\n  return (\n    <span class=\"post-stats\">\n      {repliesCount > 0 && (\n        <span class=\"post-stat-replies\">\n          <Icon icon=\"comment2\" size=\"s\" alt={t`Replies`} />{' '}\n          {shortenNumber(repliesCount)}\n        </span>\n      )}\n      {favouritesCount > 0 && (\n        <span class=\"post-stat-likes\">\n          <Icon icon=\"heart\" size=\"s\" alt={t`Likes`} />{' '}\n          {shortenNumber(favouritesCount)}\n        </span>\n      )}\n      {reblogsCount > 0 && (\n        <span class=\"post-stat-boosts\">\n          <Icon icon=\"rocket\" size=\"s\" alt={t`Boosts`} />{' '}\n          {shortenNumber(reblogsCount)}\n        </span>\n      )}\n    </span>\n  );\n}\n\nfunction binByTime(data, key, numBins) {\n  // Extract dates from data objects\n  const dates = data.map((item) => new Date(item[key]));\n\n  // Find minimum and maximum dates directly (avoiding Math.min/max)\n  const minDate = dates.reduce(\n    (acc, date) => (date < acc ? date : acc),\n    dates[0],\n  );\n  const maxDate = dates.reduce(\n    (acc, date) => (date > acc ? date : acc),\n    dates[0],\n  );\n\n  // Calculate the time span in milliseconds\n  const range = maxDate.getTime() - minDate.getTime();\n\n  // Create empty bins and loop through data\n  const bins = Array.from({ length: numBins }, () => []);\n  data.forEach((item) => {\n    const date = new Date(item[key]);\n    const normalized = (date.getTime() - minDate.getTime()) / range;\n    const binIndex = Math.floor(normalized * (numBins - 1));\n    bins[binIndex].push(item);\n  });\n\n  return bins;\n}\n\nexport default Catchup;\n","import { t, Trans } from '@lingui/macro';\nimport { useRef } from 'preact/hooks';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Favourites() {\n  useTitle(t`Likes`, '/favourites');\n  const { masto, instance } = api();\n  const favouritesIterator = useRef();\n  async function fetchFavourites(firstLoad) {\n    if (firstLoad || !favouritesIterator.current) {\n      favouritesIterator.current = masto.v1.favourites.list({ limit: LIMIT });\n    }\n    return await favouritesIterator.current.next();\n  }\n\n  return (\n    <Timeline\n      title={t`Likes`}\n      id=\"favourites\"\n      emptyText={`No likes yet. Go like something!`}\n      errorText={t`Unable to load likes.`}\n      instance={instance}\n      fetchItems={fetchFavourites}\n    />\n  );\n}\n\nexport default Favourites;\n","import './filters.css';\n\nimport { i18n } from '@lingui/core';\nimport { msg, Plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { useEffect, useReducer, useRef, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MenuConfirm from '../components/menu-confirm';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport RelativeTime from '../components/relative-time';\nimport { api } from '../utils/api';\nimport i18nDuration from '../utils/i18n-duration';\nimport useInterval from '../utils/useInterval';\nimport useTitle from '../utils/useTitle';\n\nconst FILTER_CONTEXT = ['home', 'public', 'notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_UNIMPLEMENTED = ['notifications', 'thread', 'account'];\nconst FILTER_CONTEXT_LABELS = {\n  home: msg`Home and lists`,\n  notifications: msg`Notifications`,\n  public: msg`Public timelines`,\n  thread: msg`Conversations`,\n  account: msg`Profiles`,\n};\n\nconst EXPIRY_DURATIONS = [\n  0, // forever\n  30 * 60, // 30 minutes\n  60 * 60, // 1 hour\n  6 * 60 * 60, // 6 hours\n  12 * 60 * 60, // 12 hours\n  60 * 60 * 24, // 24 hours\n  60 * 60 * 24 * 7, // 7 days\n  60 * 60 * 24 * 30, // 30 days\n];\n\nconst EXPIRY_DURATIONS_LABELS = {\n  0: msg`Never`,\n  1800: i18nDuration(30, 'minute'),\n  3600: i18nDuration(1, 'hour'),\n  21600: i18nDuration(6, 'hour'),\n  43200: i18nDuration(12, 'hour'),\n  86_400: i18nDuration(24, 'hour'),\n  604_800: i18nDuration(7, 'day'),\n  2_592_000: i18nDuration(30, 'day'),\n};\n\nfunction Filters() {\n  const { masto } = api();\n  useTitle(t`Filters`, `/ft`);\n  const [uiState, setUIState] = useState('default');\n  const [showFiltersAddEditModal, setShowFiltersAddEditModal] = useState(false);\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [filters, setFilters] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const filters = await masto.v2.filters.list();\n        filters.sort((a, b) => a.title.localeCompare(b.title));\n        filters.forEach((filter) => {\n          if (filter.keywords?.length) {\n            filter.keywords.sort((a, b) => a.id - b.id);\n          }\n        });\n        console.log(filters);\n        setFilters(filters);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  return (\n    <div id=\"filters-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Filters</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  setShowFiltersAddEditModal(true);\n                }}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New filter`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {filters.length > 0 ? (\n            <>\n              <ul class=\"filters-list\">\n                {filters.map((filter) => {\n                  const { id, title, expiresAt, keywords } = filter;\n                  return (\n                    <li key={id}>\n                      <div>\n                        <h2>{title}</h2>\n                        {keywords?.length > 0 && (\n                          <div>\n                            {keywords.map((k) => (\n                              <>\n                                <span class=\"tag collapsed insignificant\">\n                                  {k.wholeWord ? `“${k.keyword}”` : k.keyword}\n                                </span>{' '}\n                              </>\n                            ))}\n                          </div>\n                        )}\n                        <small class=\"insignificant\">\n                          <ExpiryStatus expiresAt={expiresAt} />\n                        </small>\n                      </div>\n                      <button\n                        type=\"button\"\n                        class=\"plain\"\n                        onClick={() => {\n                          setShowFiltersAddEditModal({\n                            filter,\n                          });\n                        }}\n                      >\n                        <Icon icon=\"pencil\" size=\"l\" alt=\"Edit filter\" />\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n              {filters.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={filters.length}\n                      one=\"# filter\"\n                      other=\"# filters\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load filters.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No filters yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {!!showFiltersAddEditModal && (\n        <Modal\n          title={t`Add filter`}\n          onClose={() => {\n            setShowFiltersAddEditModal(false);\n          }}\n        >\n          <FiltersAddEdit\n            filter={showFiltersAddEditModal?.filter}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowFiltersAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nlet _id = 1;\nconst incID = () => _id++;\nfunction FiltersAddEdit({ filter, onClose }) {\n  const { _ } = useLingui();\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const editMode = !!filter;\n  const { context, expiresAt, id, keywords, title, filterAction } =\n    filter || {};\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const [editKeywords, setEditKeywords] = useState(keywords || []);\n  const keywordsRef = useRef();\n\n  // Hacky way of handling removed keywords for both existing and new ones\n  const [removedKeywordIDs, setRemovedKeywordIDs] = useState([]);\n  const [removedKeyword_IDs, setRemovedKeyword_IDs] = useState([]);\n\n  const filteredEditKeywords = editKeywords.filter(\n    (k) =>\n      !removedKeywordIDs.includes(k.id) && !removedKeyword_IDs.includes(k._id),\n  );\n\n  return (\n    <div class=\"sheet\" id=\"filters-add-edit-modal\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>{editMode ? t`Edit filter` : t`New filter`}</h2>\n      </header>\n      <main>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            const formData = new FormData(e.target);\n            const title = formData.get('title');\n            const keywordIDs = formData.getAll('keyword_attributes[][id]');\n            const keywordKeywords = formData.getAll(\n              'keyword_attributes[][keyword]',\n            );\n            // const keywordWholeWords = formData.getAll(\n            //   'keyword_attributes[][whole_word]',\n            // );\n            // Not using getAll because it skips the empty checkboxes\n            const keywordWholeWords = [\n              ...keywordsRef.current.querySelectorAll(\n                'input[name=\"keyword_attributes[][whole_word]\"]',\n              ),\n            ].map((i) => i.checked);\n            const keywordsAttributes = keywordKeywords.map((k, i) => ({\n              id: keywordIDs[i] || undefined,\n              keyword: k,\n              wholeWord: keywordWholeWords[i],\n            }));\n            // if (editMode && keywords?.length) {\n            //   // Find which one got deleted and add to keywordsAttributes\n            //   keywords.forEach((k) => {\n            //     if (!keywordsAttributes.find((ka) => ka.id === k.id)) {\n            //       keywordsAttributes.push({\n            //         ...k,\n            //         _destroy: true,\n            //       });\n            //     }\n            //   });\n            // }\n            if (editMode && removedKeywordIDs?.length) {\n              removedKeywordIDs.forEach((id) => {\n                keywordsAttributes.push({\n                  id,\n                  _destroy: true,\n                });\n              });\n            }\n            const context = formData.getAll('context');\n            let expiresIn = formData.get('expires_in');\n            const filterAction = formData.get('filter_action');\n            console.log({\n              title,\n              keywordIDs,\n              keywords: keywordKeywords,\n              wholeWords: keywordWholeWords,\n              keywordsAttributes,\n              context,\n              expiresIn,\n              filterAction,\n            });\n\n            // Required fields\n            if (!title || !context?.length) {\n              return;\n            }\n\n            setUIState('loading');\n\n            (async () => {\n              try {\n                let filterResult;\n\n                if (editMode) {\n                  if (expiresIn === '' || expiresIn === null) {\n                    // No value\n                    // Preserve existing expiry if not specified\n                    // Seconds from now to expiresAtDate\n                    // Other clients don't do this\n                    if (hasExpiry) {\n                      expiresIn = Math.floor(\n                        (expiresAtDate - new Date()) / 1000,\n                      );\n                    } else {\n                      expiresIn = null;\n                    }\n                  } else if (expiresIn === '0' || expiresIn === 0) {\n                    // 0 = Never\n                    expiresIn = null;\n                  } else {\n                    expiresIn = +expiresIn;\n                  }\n                  filterResult = await masto.v2.filters.$select(id).update({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                } else {\n                  expiresIn = +expiresIn || null;\n                  filterResult = await masto.v2.filters.create({\n                    title,\n                    context,\n                    expiresIn,\n                    keywordsAttributes,\n                    filterAction,\n                  });\n                }\n                console.log({ filterResult });\n                setUIState('default');\n                onClose?.({\n                  state: 'success',\n                  filter: filterResult,\n                });\n              } catch (error) {\n                console.error(error);\n                setUIState('error');\n                alert(\n                  editMode\n                    ? t`Unable to edit filter`\n                    : t`Unable to create filter`,\n                );\n              }\n            })();\n          }}\n        >\n          <div class=\"filter-form-row\">\n            <label>\n              <b>\n                <Trans>Title</Trans>\n              </b>\n              <input\n                type=\"text\"\n                name=\"title\"\n                defaultValue={title}\n                disabled={uiState === 'loading'}\n                dir=\"auto\"\n                required\n              />\n            </label>\n          </div>\n          <div class=\"filter-form-keywords\" ref={keywordsRef}>\n            {filteredEditKeywords.length ? (\n              <ul class=\"filter-keywords\">\n                {filteredEditKeywords.map((k) => {\n                  const { id, keyword, wholeWord, _id } = k;\n                  return (\n                    <li key={`${id}-${_id}`}>\n                      <input\n                        type=\"hidden\"\n                        name=\"keyword_attributes[][id]\"\n                        value={id}\n                      />\n                      <input\n                        name=\"keyword_attributes[][keyword]\"\n                        type=\"text\"\n                        defaultValue={keyword}\n                        disabled={uiState === 'loading'}\n                        required\n                        dir=\"auto\"\n                      />\n                      <div class=\"filter-keyword-actions\">\n                        <label>\n                          <input\n                            name=\"keyword_attributes[][whole_word]\"\n                            type=\"checkbox\"\n                            value={id} // Hacky way to map checkbox boolean to the keyword id\n                            defaultChecked={wholeWord}\n                            disabled={uiState === 'loading'}\n                          />{' '}\n                          <Trans>Whole word</Trans>\n                        </label>\n                        <button\n                          type=\"button\"\n                          class=\"light danger small\"\n                          disabled={uiState === 'loading'}\n                          onClick={() => {\n                            if (id) {\n                              removedKeywordIDs.push(id);\n                              setRemovedKeywordIDs([...removedKeywordIDs]);\n                            } else if (_id) {\n                              removedKeyword_IDs.push(_id);\n                              setRemovedKeyword_IDs([...removedKeyword_IDs]);\n                            }\n                          }}\n                        >\n                          <Icon icon=\"x\" alt={t`Remove`} />\n                        </button>\n                      </div>\n                    </li>\n                  );\n                })}\n              </ul>\n            ) : (\n              <div class=\"filter-keywords\">\n                <div class=\"insignificant\">\n                  <Trans>No keywords. Add one.</Trans>\n                </div>\n              </div>\n            )}\n            <footer class=\"filter-keywords-footer\">\n              <button\n                type=\"button\"\n                class=\"light\"\n                onClick={() => {\n                  setEditKeywords([\n                    ...editKeywords,\n                    {\n                      _id: incID(),\n                      keyword: '',\n                      wholeWord: true,\n                    },\n                  ]);\n                  setTimeout(() => {\n                    // Focus last input\n                    const fields =\n                      keywordsRef.current.querySelectorAll(\n                        'input[type=\"text\"]',\n                      );\n                    fields[fields.length - 1]?.focus?.();\n                  }, 10);\n                }}\n              >\n                <Trans>Add keyword</Trans>\n              </button>{' '}\n              {filteredEditKeywords?.length > 1 && (\n                <small class=\"insignificant\">\n                  <Plural\n                    value={filteredEditKeywords.length}\n                    one=\"# keyword\"\n                    other=\"# keywords\"\n                  />\n                </small>\n              )}\n            </footer>\n          </div>\n          <div class=\"filter-form-cols\">\n            <div class=\"filter-form-col\">\n              <div>\n                <b>\n                  <Trans>Filter from…</Trans>\n                </b>\n              </div>\n              {FILTER_CONTEXT.map((ctx) => (\n                <div>\n                  <label\n                    class={\n                      FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx)\n                        ? 'insignificant'\n                        : ''\n                    }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name=\"context\"\n                      value={ctx}\n                      defaultChecked={!!context ? context.includes(ctx) : true}\n                      disabled={uiState === 'loading'}\n                    />{' '}\n                    {_(FILTER_CONTEXT_LABELS[ctx])}\n                    {FILTER_CONTEXT_UNIMPLEMENTED.includes(ctx) ? '*' : ''}\n                  </label>{' '}\n                </div>\n              ))}\n              <p>\n                <small class=\"insignificant\">\n                  <Trans>* Not implemented yet</Trans>\n                </small>\n              </p>\n            </div>\n            <div class=\"filter-form-col\">\n              {editMode && (\n                <Trans>\n                  Status:{' '}\n                  <b>\n                    <ExpiryStatus expiresAt={expiresAt} showNeverExpires />\n                  </b>\n                </Trans>\n              )}\n              <div>\n                <label for=\"filters-expires_in\">\n                  {editMode ? t`Change expiry` : t`Expiry`}\n                </label>\n                <select\n                  id=\"filters-expires_in\"\n                  name=\"expires_in\"\n                  disabled={uiState === 'loading'}\n                  defaultValue={editMode ? undefined : 0}\n                >\n                  {editMode && <option></option>}\n                  {EXPIRY_DURATIONS.map((v) => (\n                    <option value={v}>\n                      {typeof EXPIRY_DURATIONS_LABELS[v] === 'function'\n                        ? EXPIRY_DURATIONS_LABELS[v]()\n                        : _(EXPIRY_DURATIONS_LABELS[v])}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <p>\n                <Trans>Filtered post will be…</Trans>\n                <br />\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"warn\"\n                    defaultChecked={filterAction === 'warn' || !editMode}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>minimized</Trans>\n                </label>{' '}\n                <label class=\"ib\">\n                  <input\n                    type=\"radio\"\n                    name=\"filter_action\"\n                    value=\"hide\"\n                    defaultChecked={filterAction === 'hide'}\n                    disabled={uiState === 'loading'}\n                  />{' '}\n                  <Trans>hidden</Trans>\n                </label>\n              </p>\n            </div>\n          </div>\n          <footer class=\"filter-form-footer\">\n            <span>\n              <button type=\"submit\" disabled={uiState === 'loading'}>\n                {editMode ? t`Save` : t`Create`}\n              </button>{' '}\n              <Loader abrupt hidden={uiState !== 'loading'} />\n            </span>\n            {editMode && (\n              <MenuConfirm\n                disabled={uiState === 'loading'}\n                align=\"end\"\n                menuItemClassName=\"danger\"\n                confirmLabel={t`Delete this filter?`}\n                onClick={() => {\n                  setUIState('loading');\n                  (async () => {\n                    try {\n                      await masto.v2.filters.$select(id).remove();\n                      setUIState('default');\n                      onClose?.({\n                        state: 'success',\n                      });\n                    } catch (e) {\n                      console.error(e);\n                      setUIState('error');\n                      alert(t`Unable to delete filter.`);\n                    }\n                  })();\n                }}\n              >\n                <button\n                  type=\"button\"\n                  class=\"light danger\"\n                  onClick={() => {}}\n                  disabled={uiState === 'loading'}\n                >\n                  <Trans>Delete…</Trans>\n                </button>\n              </MenuConfirm>\n            )}\n          </footer>\n        </form>\n      </main>\n    </div>\n  );\n}\n\nfunction ExpiryStatus({ expiresAt, showNeverExpires }) {\n  const hasExpiry = !!expiresAt;\n  const expiresAtDate = hasExpiry && new Date(expiresAt);\n  const expired = hasExpiry && expiresAtDate <= new Date();\n\n  // If less than a minute left, re-render interval every second, else every minute\n  const [_, rerender] = useReducer((c) => c + 1, 0);\n  useInterval(rerender, expired || 30_000);\n\n  return expired ? (\n    t`Expired`\n  ) : hasExpiry ? (\n    <Trans>\n      Expiring <RelativeTime datetime={expiresAtDate} />\n    </Trans>\n  ) : (\n    showNeverExpires && t`Never expires`\n  );\n}\n\nexport default Filters;\n","import { Plural, t, Trans } from '@lingui/macro';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport { api } from '../utils/api';\nimport { fetchFollowedTags } from '../utils/followed-tags';\nimport useTitle from '../utils/useTitle';\n\nfunction FollowedHashtags() {\n  const { masto, instance } = api();\n  useTitle(t`Followed Hashtags`, `/fh`);\n  const [uiState, setUIState] = useState('default');\n\n  const [followedHashtags, setFollowedHashtags] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const tags = await fetchFollowedTags();\n        setFollowedHashtags(tags);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, []);\n\n  return (\n    <div id=\"followed-hashtags-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Followed Hashtags</Trans>\n            </h1>\n            <div class=\"header-side\" />\n          </div>\n        </header>\n        <main>\n          {followedHashtags.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {followedHashtags.map((tag) => (\n                  <li>\n                    <Link\n                      to={\n                        instance\n                          ? `/${instance}/t/${tag.name}`\n                          : `/t/${tag.name}`\n                      }\n                    >\n                      <Icon icon=\"hashtag\" alt=\"#\" /> <span>{tag.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {followedHashtags.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural\n                      value={followedHashtags.length}\n                      one=\"# hashtag\"\n                      other=\"# hashtags\"\n                    />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load followed hashtags.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No hashtags followed yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default FollowedHashtags;\n","import { t, Trans } from '@lingui/macro';\nimport { useEffect, useRef } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { getStatus, saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport {\n  assignFollowedTags,\n  clearFollowedTagsState,\n  dedupeBoosts,\n} from '../utils/timeline-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Following({ title, path, id, ...props }) {\n  useTitle(title || t`Following`, path || '/following');\n  const { masto, streaming, instance } = api();\n  const snapStates = useSnapshot(states);\n  const homeIterator = useRef();\n  const latestItem = useRef();\n\n  console.debug('RENDER Following', title, id);\n  const supportsPixelfed = supports('@pixelfed/home-include-reblogs');\n\n  async function fetchHome(firstLoad) {\n    if (firstLoad || !homeIterator.current) {\n      homeIterator.current = masto.v1.timelines.home.list({ limit: LIMIT });\n    }\n    if (supportsPixelfed && homeIterator.current?.nextParams) {\n      if (typeof homeIterator.current.nextParams === 'string') {\n        homeIterator.current.nextParams += '&include_reblogs=true';\n      } else {\n        homeIterator.current.nextParams.include_reblogs = true;\n      }\n    }\n    const results = await homeIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      let latestItemChanged = false;\n      if (firstLoad) {\n        if (value[0].id !== latestItem.current) {\n          latestItemChanged = true;\n        }\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n      value = dedupeBoosts(value, instance);\n      if (firstLoad && latestItemChanged) clearFollowedTagsState();\n      assignFollowedTags(value, instance);\n\n      // ENFORCE sort by datetime (Latest first)\n      value.sort((a, b) => {\n        const aDate = new Date(a.createdAt);\n        const bDate = new Date(b.createdAt);\n        return bDate - aDate;\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const opts = {\n        limit: 5,\n        since_id: latestItem.current,\n      };\n      if (supports('@pixelfed/home-include-reblogs')) {\n        opts.include_reblogs = true;\n      }\n      const results = await masto.v1.timelines.home.list(opts).next();\n      let { value } = results;\n      console.log('checkForUpdates', latestItem.current, value);\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        latestItem.current = value[0].id;\n        value = dedupeBoosts(value, instance);\n        value = filteredItems(value, 'home');\n        if (value.some((item) => !item.reblog)) {\n          return true;\n        }\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    let sub;\n    (async () => {\n      if (streaming) {\n        sub = streaming.user.subscribe();\n        console.log('🎏 Streaming user', sub);\n        for await (const entry of sub) {\n          if (!sub) break;\n          if (entry.event === 'status.update') {\n            const status = entry.payload;\n            console.log(`🔄 Status ${status.id} updated`);\n            saveStatus(status, instance);\n          } else if (entry.event === 'delete') {\n            const statusID = entry.payload;\n            console.log(`❌ Status ${statusID} deleted`);\n            // delete states.statuses[statusID];\n            const s = getStatus(statusID, instance);\n            if (s) s._deleted = true;\n          }\n        }\n        console.log('💥 Streaming user loop STOPPED');\n      }\n    })();\n    return () => {\n      sub?.unsubscribe?.();\n      sub = null;\n    };\n  }, [streaming]);\n\n  return (\n    <Timeline\n      title={title || t`Following`}\n      id={id || 'following'}\n      emptyText={t`Nothing to see here.`}\n      errorText={t`Unable to load posts.`}\n      instance={instance}\n      fetchItems={fetchHome}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      {...props}\n      // allowFilters\n      filterContext=\"home\"\n      showFollowedTags\n      showReplyParent\n    />\n  );\n}\n\nexport default Following;\n","import { plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport {\n  FocusableItem,\n  MenuDivider,\n  MenuGroup,\n  MenuHeader,\n  MenuItem,\n} from '@szhsin/react-menu';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom';\n\nimport Icon from '../components/icon';\nimport MenuConfirm from '../components/menu-confirm';\nimport Menu2 from '../components/menu2';\nimport { SHORTCUTS_LIMIT } from '../components/shortcuts-settings';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { isMediaFirstInstance } from '../utils/store-utils';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\n// Limit is 4 per \"mode\"\n// https://github.com/mastodon/mastodon/issues/15194\n// Hard-coded https://github.com/mastodon/mastodon/blob/19614ba2477f3d12468f5ec251ce1cc5f8c6210c/app/models/tag_feed.rb#L4\nconst TAGS_LIMIT_PER_MODE = 4;\nconst TOTAL_TAGS_LIMIT = TAGS_LIMIT_PER_MODE + 1;\n\nfunction Hashtags({ media: mediaView, columnMode, ...props }) {\n  // const navigate = useNavigate();\n  let { hashtag, ...params } = columnMode ? {} : useParams();\n  if (props.hashtag) hashtag = props.hashtag;\n  let hashtags = hashtag.trim().split(/[\\s+]+/);\n  hashtags.sort();\n  hashtag = hashtags[0];\n  const [searchParams, setSearchParams] = useSearchParams();\n  const media = mediaView || !!searchParams.get('media');\n  const linkParams = media ? '?media=1' : '';\n\n  const { masto, instance, authenticated } = api({\n    instance: props?.instance || params.instance,\n  });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated: currentAuthenticated,\n  } = api();\n  const hashtagTitle = hashtags.map((t) => `#${t}`).join(' ');\n  const title = instance\n    ? media\n      ? t`${hashtagTitle} (Media only) on ${instance}`\n      : t`${hashtagTitle} on ${instance}`\n    : media\n    ? t`${hashtagTitle} (Media only)`\n    : t`${hashtagTitle}`;\n  useTitle(title, `/:instance?/t/:hashtag`);\n  const latestItem = useRef();\n\n  const mediaFirst = useMemo(() => isMediaFirstInstance(), []);\n\n  // const hashtagsIterator = useRef();\n  const maxID = useRef(undefined);\n  async function fetchHashtags(firstLoad) {\n    // if (firstLoad || !hashtagsIterator.current) {\n    //   hashtagsIterator.current = masto.v1.timelines.tag.$select(hashtag).list({\n    //     limit: LIMIT,\n    //     any: hashtags.slice(1),\n    //   });\n    // }\n    // const results = await hashtagsIterator.current.next();\n\n    // NOTE: Temporary fix for listHashtag not persisting `any` in subsequent calls.\n    const results = await masto.v1.timelines.tag\n      .$select(hashtag)\n      .list({\n        limit: LIMIT,\n        any: hashtags.slice(1),\n        maxId: firstLoad ? undefined : maxID.current,\n        onlyMedia: media ? true : undefined,\n      })\n      .next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance, {\n          skipThreading: media || mediaFirst, // If media view, no need to form threads\n        });\n      });\n\n      maxID.current = value[value.length - 1].id;\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.tag\n        .$select(hashtag)\n        .list({\n          limit: 1,\n          any: hashtags.slice(1),\n          since_id: latestItem.current,\n          onlyMedia: media,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [followUIState, setFollowUIState] = useState('default');\n  const [info, setInfo] = useState();\n  // Get hashtag info\n  useEffect(() => {\n    (async () => {\n      try {\n        const info = await masto.v1.tags.$select(hashtag).fetch();\n        console.log(info);\n        setInfo(info);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [hashtag]);\n\n  const reachLimit = hashtags.length >= TOTAL_TAGS_LIMIT;\n\n  const [featuredUIState, setFeaturedUIState] = useState('default');\n  const [featuredTags, setFeaturedTags] = useState([]);\n  const [isFeaturedTag, setIsFeaturedTag] = useState(false);\n  useEffect(() => {\n    if (!authenticated) return;\n    (async () => {\n      try {\n        const featuredTags = await masto.v1.featuredTags.list();\n        setFeaturedTags(featuredTags);\n        setIsFeaturedTag(\n          featuredTags.some(\n            (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n          ),\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  return (\n    <Timeline\n      key={instance + hashtagTitle}\n      title={title}\n      titleComponent={\n        !!instance && (\n          <h1 class=\"header-double-lines\">\n            <b dir=\"auto\">{hashtagTitle}</b>\n            <div>{instance}</div>\n          </h1>\n        )\n      }\n      id=\"hashtag\"\n      instance={instance}\n      emptyText={t`No one has posted anything with this tag yet.`}\n      errorText={t`Unable to load posts with this tag`}\n      fetchItems={fetchHashtags}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      view={media || mediaFirst ? 'media' : undefined}\n      refresh={media}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          setDownOverflow\n          overflow=\"auto\"\n          // viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          {!!info && hashtags.length === 1 && (\n            <>\n              <MenuConfirm\n                subMenu\n                confirm={info.following}\n                confirmLabel={`Unfollow #${hashtag}?`}\n                disabled={followUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFollowUIState('loading');\n                  if (info.following) {\n                    // const yes = confirm(`Unfollow #${hashtag}?`);\n                    // if (!yes) {\n                    //   setFollowUIState('default');\n                    //   return;\n                    // }\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .unfollow()\n                      .then(() => {\n                        setInfo({ ...info, following: false });\n                        showToast(t`Unfollowed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  } else {\n                    masto.v1.tags\n                      .$select(hashtag)\n                      .follow()\n                      .then(() => {\n                        setInfo({ ...info, following: true });\n                        showToast(t`Followed #${hashtag}`);\n                      })\n                      .catch((e) => {\n                        alert(e);\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFollowUIState('default');\n                      });\n                  }\n                }}\n              >\n                {info.following ? (\n                  <>\n                    <Icon icon=\"check-circle\" />{' '}\n                    <span>\n                      <Trans>Following…</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"plus\" />{' '}\n                    <span>\n                      <Trans>Follow</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuConfirm>\n              <MenuItem\n                type=\"checkbox\"\n                checked={isFeaturedTag}\n                disabled={featuredUIState === 'loading' || !authenticated}\n                onClick={() => {\n                  setFeaturedUIState('loading');\n                  if (isFeaturedTag) {\n                    const featuredTagID = featuredTags.find(\n                      (tag) => tag.name.toLowerCase() === hashtag.toLowerCase(),\n                    ).id;\n                    if (featuredTagID) {\n                      masto.v1.featuredTags\n                        .$select(featuredTagID)\n                        .remove()\n                        .then(() => {\n                          setIsFeaturedTag(false);\n                          showToast(t`Unfeatured on profile`);\n                          setFeaturedTags(\n                            featuredTags.filter(\n                              (tag) => tag.id !== featuredTagID,\n                            ),\n                          );\n                        })\n                        .catch((e) => {\n                          console.error(e);\n                        })\n                        .finally(() => {\n                          setFeaturedUIState('default');\n                        });\n                    } else {\n                      showToast(t`Unable to unfeature on profile`);\n                    }\n                  } else {\n                    masto.v1.featuredTags\n                      .create({\n                        name: hashtag,\n                      })\n                      .then((value) => {\n                        setIsFeaturedTag(true);\n                        showToast(t`Featured on profile`);\n                        setFeaturedTags(featuredTags.concat(value));\n                      })\n                      .catch((e) => {\n                        console.error(e);\n                      })\n                      .finally(() => {\n                        setFeaturedUIState('default');\n                      });\n                  }\n                }}\n              >\n                {isFeaturedTag ? (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Featured on profile</Trans>\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <Icon icon=\"check-circle\" />\n                    <span>\n                      <Trans>Feature on profile</Trans>\n                    </span>\n                  </>\n                )}\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          {!mediaFirst && (\n            <>\n              <MenuHeader className=\"plain\">\n                <Trans>Filters</Trans>\n              </MenuHeader>\n              <MenuItem\n                type=\"checkbox\"\n                checked={!!media}\n                onClick={() => {\n                  if (media) {\n                    searchParams.delete('media');\n                  } else {\n                    searchParams.set('media', '1');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon icon=\"check-circle\" alt=\"☑️\" />{' '}\n                <span class=\"menu-grow\">\n                  <Trans>Media only</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n            </>\n          )}\n          <FocusableItem className=\"menu-field\" disabled={reachLimit}>\n            {({ ref }) => (\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const newHashtag = e.target[0].value?.trim?.();\n                  // Use includes but need to be case insensitive\n                  if (\n                    newHashtag &&\n                    !hashtags.some(\n                      (t) => t.toLowerCase() === newHashtag.toLowerCase(),\n                    )\n                  ) {\n                    hashtags.push(newHashtag);\n                    hashtags.sort();\n                    // navigate(\n                    //   instance\n                    //     ? `/${instance}/t/${hashtags.join('+')}`\n                    //     : `/t/${hashtags.join('+')}`,\n                    // );\n                    location.hash = instance\n                      ? `/${instance}/t/${hashtags.join('+')}`\n                      : `/t/${hashtags.join('+')}${linkParams}`;\n                  }\n                }}\n              >\n                <Icon icon=\"hashtag\" />\n                <input\n                  ref={ref}\n                  type=\"text\"\n                  placeholder={\n                    reachLimit\n                      ? plural(TOTAL_TAGS_LIMIT, {\n                          other: 'Max # tags',\n                        })\n                      : t`Add hashtag`\n                  }\n                  required\n                  autocorrect=\"off\"\n                  autocapitalize=\"off\"\n                  spellCheck={false}\n                  // no spaces, no hashtags\n                  pattern=\"[^#][^\\s#]+[^#]\"\n                  disabled={reachLimit}\n                  dir=\"auto\"\n                />\n              </form>\n            )}\n          </FocusableItem>\n          <MenuGroup takeOverflow>\n            {hashtags.map((tag, i) => (\n              <MenuItem\n                key={tag}\n                disabled={hashtags.length === 1}\n                onClick={(e) => {\n                  hashtags.splice(i, 1);\n                  hashtags.sort();\n                  // navigate(\n                  //   instance\n                  //     ? `/${instance}/t/${hashtags.join('+')}`\n                  //     : `/t/${hashtags.join('+')}`,\n                  // );\n                  location.hash = instance\n                    ? `/${instance}/t/${hashtags.join('+')}${linkParams}`\n                    : `/t/${hashtags.join('+')}${linkParams}`;\n                }}\n              >\n                <Icon icon=\"x\" alt={t`Remove hashtag`} class=\"danger-icon\" />\n                <span class=\"bidi-isolate\">\n                  <span class=\"more-insignificant\">#</span>\n                  {tag}\n                </span>\n              </MenuItem>\n            ))}\n          </MenuGroup>\n          <MenuDivider />\n          <MenuItem\n            disabled={!currentAuthenticated}\n            onClick={() => {\n              if (states.shortcuts.length >= SHORTCUTS_LIMIT) {\n                alert(\n                  plural(SHORTCUTS_LIMIT, {\n                    one: 'Max # shortcut reached. Unable to add shortcut.',\n                    other: 'Max # shortcuts reached. Unable to add shortcut.',\n                  }),\n                );\n                return;\n              }\n              const shortcut = {\n                type: 'hashtag',\n                hashtag: hashtags.join(' '),\n                instance,\n                media: media ? 'on' : undefined,\n              };\n              // Check if already exists\n              const exists = states.shortcuts.some(\n                (s) =>\n                  s.type === shortcut.type &&\n                  s.hashtag\n                    .split(/[\\s+]+/)\n                    .sort()\n                    .join(' ') ===\n                    shortcut.hashtag\n                      .split(/[\\s+]+/)\n                      .sort()\n                      .join(' ') &&\n                  (s.instance ? s.instance === shortcut.instance : true) &&\n                  (s.media ? !!s.media === !!shortcut.media : true),\n              );\n              if (exists) {\n                alert(t`This shortcut already exists`);\n              } else {\n                states.shortcuts.push(shortcut);\n                showToast(t`Hashtag shortcut added`);\n              }\n            }}\n          >\n            <Icon icon=\"shortcut\" />{' '}\n            <span>\n              <Trans>Add to Shortcuts</Trans>\n            </span>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/t/${hashtags.join('+')}`);\n                location.hash = `/${newInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/t/${hashtags.join(\n                  '+',\n                )}${linkParams}`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Hashtags;\n","import './lists.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { InView } from 'react-intersection-observer';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport MenuConfirm from '../components/menu-confirm';\nimport MenuLink from '../components/menu-link';\nimport Menu2 from '../components/menu2';\nimport Modal from '../components/modal';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport { getList, getLists } from '../utils/lists';\nimport states, { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction List(props) {\n  const snapStates = useSnapshot(states);\n  const { masto, instance } = api();\n  const id = props?.id || useParams()?.id;\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n  // const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n\n  const listIterator = useRef();\n  async function fetchList(firstLoad) {\n    if (firstLoad || !listIterator.current) {\n      listIterator.current = masto.v1.timelines.list.$select(id).list({\n        limit: LIMIT,\n      });\n    }\n    const results = await listIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'home');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.list.$select(id).list({\n        limit: 1,\n        since_id: latestItem.current,\n      });\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'home');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    getLists().then(setLists);\n  }, []);\n\n  const [list, setList] = useState({ title: 'List' });\n  // const [title, setTitle] = useState(`List`);\n  useTitle(list.title, `/l/:id`);\n  useEffect(() => {\n    (async () => {\n      try {\n        const list = await getList(id);\n        setList(list);\n        // setTitle(list.title);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n  const [showManageMembersModal, setShowManageMembersModal] = useState(false);\n\n  return (\n    <>\n      <Timeline\n        key={id}\n        title={list.title}\n        id=\"list\"\n        emptyText={t`Nothing yet.`}\n        errorText={t`Unable to load posts.`}\n        instance={instance}\n        fetchItems={fetchList}\n        checkForUpdates={checkForUpdates}\n        useItemID\n        boostsCarousel={snapStates.settings.boostsCarousel}\n        // allowFilters\n        filterContext=\"home\"\n        showReplyParent\n        // refresh={reloadCount}\n        headerStart={\n          // <Link to=\"/l\" class=\"button plain\">\n          //   <Icon icon=\"list\" size=\"l\" />\n          // </Link>\n          <Menu2\n            overflow=\"auto\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"list\" size=\"l\" alt={t`Lists`} />\n                <Icon icon=\"chevron-down\" size=\"s\" />\n              </button>\n            }\n          >\n            <MenuLink to=\"/l\">\n              <span>\n                <Trans>All Lists</Trans>\n              </span>\n            </MenuLink>\n            {lists?.length > 0 && (\n              <>\n                <MenuDivider />\n                {lists.map((list) => (\n                  <MenuLink key={list.id} to={`/l/${list.id}`}>\n                    <span>{list.title}</span>\n                  </MenuLink>\n                ))}\n              </>\n            )}\n          </Menu2>\n        }\n        headerEnd={\n          <Menu2\n            portal\n            setDownOverflow\n            overflow=\"auto\"\n            viewScroll=\"close\"\n            position=\"anchor\"\n            menuButton={\n              <button type=\"button\" class=\"plain\">\n                <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n              </button>\n            }\n          >\n            <MenuItem\n              onClick={() =>\n                setShowListAddEditModal({\n                  list,\n                })\n              }\n            >\n              <Icon icon=\"pencil\" size=\"l\" />\n              <span>\n                <Trans>Edit</Trans>\n              </span>\n            </MenuItem>\n            <MenuItem onClick={() => setShowManageMembersModal(true)}>\n              <Icon icon=\"group\" size=\"l\" />\n              <span>\n                <Trans>Manage members</Trans>\n              </span>\n            </MenuItem>\n          </Menu2>\n        }\n      />\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success' && result.list) {\n                setList(result.list);\n                // reload();\n              } else if (result.state === 'deleted') {\n                // navigate('/l');\n                location.hash = '/l';\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n      {showManageMembersModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowManageMembersModal(false);\n            }\n          }}\n        >\n          <ListManageMembers\n            listID={id}\n            onClose={() => setShowManageMembersModal(false)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n}\n\nconst MEMBERS_LIMIT = 40;\nfunction ListManageMembers({ listID, onClose }) {\n  // Show list of members with [Remove] button\n  // API only returns 40 members at a time, so this need to be paginated with infinite scroll\n  // Show [Add] button after removing a member\n  const { masto, instance } = api();\n  const [members, setMembers] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const [showMore, setShowMore] = useState(false);\n\n  const membersIterator = useRef();\n\n  async function fetchMembers(firstLoad) {\n    setShowMore(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        if (firstLoad || !membersIterator.current) {\n          membersIterator.current = masto.v1.lists\n            .$select(listID)\n            .accounts.list({\n              limit: MEMBERS_LIMIT,\n            });\n        }\n        const results = await membersIterator.current.next();\n        let { done, value } = results;\n        if (value?.length) {\n          if (firstLoad) {\n            setMembers(value);\n          } else {\n            setMembers(members.concat(value));\n          }\n          setShowMore(!done);\n        } else {\n          setShowMore(false);\n        }\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    fetchMembers(true);\n  }, []);\n\n  return (\n    <div class=\"sheet\" id=\"list-manage-members-container\">\n      {!!onClose && (\n        <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n          <Icon icon=\"x\" alt={t`Close`} />\n        </button>\n      )}\n      <header>\n        <h2>\n          <Trans>Manage members</Trans>\n        </h2>\n      </header>\n      <main>\n        <ul>\n          {members.map((member) => (\n            <li key={member.id}>\n              <AccountBlock account={member} instance={instance} />\n              <RemoveAddButton account={member} listID={listID} />\n            </li>\n          ))}\n          {showMore && uiState === 'default' && (\n            <InView as=\"li\" onChange={(inView) => inView && fetchMembers()}>\n              <button type=\"button\" class=\"light block\" onClick={fetchMembers}>\n                <Trans>Show more…</Trans>\n              </button>\n            </InView>\n          )}\n        </ul>\n      </main>\n    </div>\n  );\n}\n\nfunction RemoveAddButton({ account, listID }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [removed, setRemoved] = useState(false);\n\n  return (\n    <MenuConfirm\n      confirm={!removed}\n      confirmLabel={\n        <span>\n          <Trans>\n            Remove <span class=\"bidi-isolate\">@{account.username}</span> from\n            list?\n          </Trans>\n        </span>\n      }\n      align=\"end\"\n      menuItemClassName=\"danger\"\n      onClick={() => {\n        if (removed) {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.create({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(false);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        } else {\n          // const yes = confirm(`Remove ${account.username} from this list?`);\n          // if (!yes) return;\n          setUIState('loading');\n\n          (async () => {\n            try {\n              await masto.v1.lists.$select(listID).accounts.remove({\n                accountIds: [account.id],\n              });\n              setUIState('default');\n              setRemoved(true);\n            } catch (e) {\n              setUIState('error');\n            }\n          })();\n        }\n      }}\n    >\n      <button\n        type=\"button\"\n        class={`light ${removed ? '' : 'danger'}`}\n        disabled={uiState === 'loading'}\n      >\n        {removed ? t`Add` : t`Remove…`}\n      </button>\n    </MenuConfirm>\n  );\n}\n\nexport default List;\n","// This is like very lame \"type-checking\" lol\nconst notificationTypeKeys = {\n  mention: ['account', 'status'],\n  status: ['account', 'status'],\n  reblog: ['account', 'status'],\n  follow: ['account'],\n  follow_request: ['account'],\n  favourite: ['account', 'status'],\n  poll: ['status'],\n  update: ['status'],\n};\nexport function fixNotifications(notifications) {\n  return notifications.filter((notification) => {\n    const { type, id, createdAt } = notification;\n    if (!type) {\n      console.warn('Notification missing type', notification);\n      return false;\n    }\n    if (!id || !createdAt) {\n      console.warn('Notification missing id or createdAt', notification);\n      // Continue processing this despite missing id or createdAt\n    }\n    const keys = notificationTypeKeys[type];\n    if (keys?.length) {\n      return keys.every((key) => !!notification[key]);\n    }\n    return true; // skip other types\n  });\n}\n\nexport function massageNotifications2(notifications) {\n  if (notifications?.notificationGroups) {\n    const {\n      accounts = [],\n      notificationGroups = [],\n      statuses = [],\n    } = notifications;\n    return notificationGroups.map((group) => {\n      const { sampleAccountIds, statusId } = group;\n      const sampleAccounts =\n        sampleAccountIds?.map((id) => accounts.find((a) => a.id === id)) || [];\n      const status = statuses?.find((s) => s.id === statusId) || null;\n      return {\n        ...group,\n        sampleAccounts,\n        status,\n      };\n    });\n  }\n  return notifications;\n}\n\nexport function groupNotifications2(groupNotifications) {\n  // Make grouped notifications to look like faux grouped notifications\n  const newGroupNotifications = groupNotifications.map((gn) => {\n    const {\n      latestPageNotificationAt,\n      mostRecentNotificationId,\n      sampleAccounts,\n      notificationsCount,\n    } = gn;\n\n    return {\n      id: '' + mostRecentNotificationId,\n      createdAt: latestPageNotificationAt,\n      account: sampleAccounts[0],\n      ...gn,\n    };\n  });\n\n  // DISABLED FOR NOW.\n  // Merge favourited and reblogged of same status into a single notification\n  // - new type: \"favourite+reblog\"\n  // - sum numbers for `notificationsCount` and `sampleAccounts`\n  // const mappedNotifications = {};\n  // const newNewGroupNotifications = [];\n  // for (let i = 0; i < newGroupNotifications.length; i++) {\n  //   const gn = newGroupNotifications[i];\n  //   const { type, status, createdAt, notificationsCount, sampleAccounts } = gn;\n  //   const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n  //   let virtualType = type;\n  // if (type === 'favourite' || type === 'reblog') {\n  //   virtualType = 'favourite+reblog';\n  // }\n  //   const key = `${status?.id}-${virtualType}-${date}`;\n  //   const mappedNotification = mappedNotifications[key];\n  //   if (mappedNotification) {\n  //     const accountIDs = mappedNotification.sampleAccounts.map((a) => a.id);\n  //     sampleAccounts.forEach((a) => {\n  //       if (!accountIDs.includes(a.id)) {\n  //         mappedNotification.sampleAccounts.push(a);\n  //       }\n  //     });\n  //     mappedNotification.notificationsCount = Math.max(\n  //       mappedNotification.notificationsCount,\n  //       notificationsCount,\n  //       mappedNotification.sampleAccounts.length,\n  //     );\n  //   } else {\n  //     mappedNotifications[key] = {\n  //       ...gn,\n  //       type: virtualType,\n  //     };\n  //     newNewGroupNotifications.push(mappedNotifications[key]);\n  //   }\n  // }\n\n  // 2nd pass.\n  // - Group 1 account favourte/reblog multiple posts\n  //   - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const newGroupNotifications2 = [];\n  for (let i = 0; i < newGroupNotifications.length; i++) {\n    const gn = newGroupNotifications[i];\n    const { type, account, _accounts, sampleAccounts, createdAt } = gn;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    const hasOneAccount =\n      sampleAccounts?.length === 1 || _accounts?.length === 1;\n    if ((type === 'favourite' || type === 'reblog') && hasOneAccount) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(gn.status);\n        mappedNotification._ids += `-${gn.id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...gn,\n          type,\n          _ids: gn.id,\n          _statuses: [gn.status],\n        });\n        newGroupNotifications2.push(n);\n      }\n    } else {\n      newGroupNotifications2.push(gn);\n    }\n  }\n\n  return newGroupNotifications2;\n}\n\nexport default function groupNotifications(notifications) {\n  // Filter out invalid notifications\n  notifications = fixNotifications(notifications);\n\n  // Create new flat list of notifications\n  // Combine sibling notifications based on type and status id\n  // Concat all notification.account into an array of _accounts\n  const notificationsMap = {};\n  const cleanNotifications = [];\n  for (let i = 0, j = 0; i < notifications.length; i++) {\n    const notification = notifications[i];\n    const { id, status, account, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    let virtualType = type;\n    if (type === 'favourite' || type === 'reblog') {\n      virtualType = 'favourite+reblog';\n    }\n    const key = `${status?.id}-${virtualType}-${date}`;\n    const mappedNotification = notificationsMap[key];\n    if (virtualType === 'follow_request') {\n      cleanNotifications[j++] = notification;\n    } else if (mappedNotification?.account) {\n      const mappedAccount = mappedNotification._accounts.find(\n        (a) => a.id === account.id,\n      );\n      if (mappedAccount) {\n        mappedAccount._types.push(type);\n        mappedAccount._types.sort().reverse();\n        mappedNotification._ids += `-${id}`;\n      } else {\n        account._types = [type];\n        mappedNotification._accounts.push(account);\n        mappedNotification._ids += `-${id}`;\n      }\n    } else {\n      if (account) account._types = [type];\n      let n = (notificationsMap[key] = {\n        ...notification,\n        type: virtualType,\n        _ids: id,\n        _accounts: account ? [account] : [],\n      });\n      cleanNotifications[j++] = n;\n    }\n  }\n\n  // 2nd pass to group \"favourite+reblog\"-type notifications by account if _accounts.length <= 1\n  // This means one acount has favourited and reblogged the multiple statuses\n  // The grouped notification\n  // - type: \"favourite+reblog+account\"\n  // - _statuses: [status, status, ...]\n  const notificationsMap2 = {};\n  const cleanNotifications2 = [];\n  for (let i = 0, j = 0; i < cleanNotifications.length; i++) {\n    const notification = cleanNotifications[i];\n    const { id, account, _accounts, type, createdAt } = notification;\n    const date = createdAt ? new Date(createdAt).toLocaleDateString() : '';\n    if (type === 'favourite+reblog' && account && _accounts.length === 1) {\n      const key = `${account?.id}-${type}-${date}`;\n      const mappedNotification = notificationsMap2[key];\n      if (mappedNotification) {\n        mappedNotification._statuses.push(notification.status);\n        mappedNotification._ids += `-${id}`;\n      } else {\n        let n = (notificationsMap2[key] = {\n          ...notification,\n          type,\n          _ids: id,\n          _statuses: [notification.status],\n        });\n        cleanNotifications2[j++] = n;\n      }\n    } else {\n      cleanNotifications2[j++] = notification;\n    }\n  }\n\n  console.log({ notifications, cleanNotifications, cleanNotifications2 });\n\n  // return cleanNotifications;\n  return cleanNotifications2;\n}\n","import { t, Trans } from '@lingui/macro';\nimport { useMemo, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { fixNotifications } from '../utils/group-notifications';\nimport { saveStatus } from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Mentions({ columnMode, ...props }) {\n  const { masto, instance } = api();\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const [stateType, setStateType] = useState(null);\n  const type = props?.type || searchParams.get('type') || stateType;\n  useTitle(type === 'private' ? t`Private mentions` : t`Mentions`, '/mentions');\n\n  const mentionsIterator = useRef();\n  const latestItem = useRef();\n\n  async function fetchMentions(firstLoad) {\n    if (firstLoad || !mentionsIterator.current) {\n      mentionsIterator.current = masto.v1.notifications.list({\n        limit: LIMIT,\n        types: ['mention'],\n      });\n    }\n    const results = await mentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = fixNotifications(value);\n\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n        console.log('First load', latestItem.current);\n      }\n\n      value.forEach(({ status: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value: value?.map((item) => item.status),\n    };\n  }\n\n  const conversationsIterator = useRef();\n  const latestConversationItem = useRef();\n  async function fetchConversations(firstLoad) {\n    if (firstLoad || !conversationsIterator.current) {\n      conversationsIterator.current = masto.v1.conversations.list({\n        limit: LIMIT,\n      });\n    }\n    const results = await conversationsIterator.current.next();\n    let { value } = results;\n    value = value?.filter((item) => item.lastStatus);\n    if (value?.length) {\n      if (firstLoad) {\n        latestConversationItem.current = value[0].lastStatus.id;\n        console.log('First load', latestConversationItem.current);\n      }\n\n      value.forEach(({ lastStatus: item }) => {\n        saveStatus(item, instance);\n      });\n    }\n    console.log('results', results);\n    return {\n      ...results,\n      value: value?.map((item) => item.lastStatus),\n    };\n  }\n\n  function fetchItems(...args) {\n    if (type === 'private') {\n      return fetchConversations(...args);\n    }\n    return fetchMentions(...args);\n  }\n\n  async function checkForUpdates() {\n    if (type === 'private') {\n      try {\n        const results = await masto.v1.conversations\n          .list({\n            limit: 1,\n            since_id: latestConversationItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log(\n          'checkForUpdates PRIVATE',\n          latestConversationItem.current,\n          value,\n        );\n        const valueContainsLatestItem =\n          value[0]?.id === latestConversationItem.current; // since_id might not be supported\n        if (value?.length && !valueContainsLatestItem) {\n          latestConversationItem.current = value[0].lastStatus.id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    } else {\n      try {\n        const results = await masto.v1.notifications\n          .list({\n            limit: 1,\n            types: ['mention'],\n            since_id: latestItem.current,\n          })\n          .next();\n        let { value } = results;\n        console.log('checkForUpdates ALL', latestItem.current, value);\n        if (value?.length) {\n          latestItem.current = value[0].id;\n          return true;\n        }\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <div class=\"filter-bar centered\">\n        <Link\n          to=\"/mentions\"\n          class={!type ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType(null);\n            }\n          }}\n        >\n          <Trans>All</Trans>\n        </Link>\n        <Link\n          to=\"/mentions?type=private\"\n          class={type === 'private' ? 'is-active' : ''}\n          onClick={(e) => {\n            if (columnMode) {\n              e.preventDefault();\n              setStateType('private');\n            }\n          }}\n        >\n          <Trans>Private</Trans>\n        </Link>\n      </div>\n    );\n  }, [type]);\n\n  return (\n    <Timeline\n      title={t`Mentions`}\n      id=\"mentions\"\n      emptyText={t`No one mentioned you :(`}\n      errorText={t`Unable to load mentions.`}\n      instance={instance}\n      fetchItems={fetchItems}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      timelineStart={TimelineStart}\n      refresh={type}\n    />\n  );\n}\n\nexport default Mentions;\n","import './notifications.css';\n\nimport { msg, Plural, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { Fragment } from 'preact';\nimport { memo } from 'preact/compat';\nimport { useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\nimport { subscribeKey } from 'valtio/utils';\n\nimport AccountBlock from '../components/account-block';\nimport FollowRequestButtons from '../components/follow-request-buttons';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport Notification from '../components/notification';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport enhanceContent from '../utils/enhance-content';\nimport groupNotifications, {\n  groupNotifications2,\n  massageNotifications2,\n} from '../utils/group-notifications';\nimport handleContentLinks from '../utils/handle-content-links';\nimport mem from '../utils/mem';\nimport niceDateTime from '../utils/nice-date-time';\nimport { getRegistration } from '../utils/push-notifications';\nimport shortenNumber from '../utils/shorten-number';\nimport showToast from '../utils/show-toast';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentInstance } from '../utils/store-utils';\nimport supports from '../utils/supports';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nconst NOTIFICATIONS_LIMIT = 80;\nconst NOTIFICATIONS_GROUPED_LIMIT = 20;\nconst emptySearchParams = new URLSearchParams();\n\nconst scrollIntoViewOptions = {\n  block: 'center',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\nconst memSupportsGroupedNotifications = mem(\n  () => supports('@mastodon/grouped-notifications'),\n  {\n    maxAge: 1000 * 60 * 5, // 5 minutes\n  },\n);\n\nexport function mastoFetchNotifications(opts = {}) {\n  const { masto } = api();\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    // https://github.com/mastodon/mastodon/pull/29889\n    return masto.v2_alpha.notifications.list({\n      limit: NOTIFICATIONS_GROUPED_LIMIT,\n      ...opts,\n    });\n  } else {\n    return masto.v1.notifications.list({\n      limit: NOTIFICATIONS_LIMIT,\n      ...opts,\n    });\n  }\n}\n\nexport function getGroupedNotifications(notifications) {\n  if (\n    states.settings.groupedNotificationsAlpha &&\n    memSupportsGroupedNotifications()\n  ) {\n    return groupNotifications2(notifications);\n  } else {\n    return groupNotifications(notifications);\n  }\n}\n\nconst NOTIFICATIONS_POLICIES = [\n  'forNotFollowing',\n  'forNotFollowers',\n  'forNewAccounts',\n  'forPrivateMentions',\n  'forLimitedAccounts',\n];\nconst NOTIFICATIONS_POLICIES_TEXT = {\n  forNotFollowing: msg`You don't follow`,\n  forNotFollowers: msg`Who don't follow you`,\n  forNewAccounts: msg`With a new account`,\n  forPrivateMentions: msg`Who unsolicitedly private mention you`,\n  forLimitedAccounts: msg`Who are limited by server moderators`,\n};\n\nfunction Notifications({ columnMode }) {\n  const { _ } = useLingui();\n  useTitle(t`Notifications`, '/notifications');\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const notificationID = searchParams.get('id');\n  const notificationAccessToken = searchParams.get('access_token');\n  const [showMore, setShowMore] = useState(false);\n  const [onlyMentions, setOnlyMentions] = useState(false);\n  const scrollableRef = useRef();\n  const { nearReachEnd, scrollDirection, reachStart, nearReachStart } =\n    useScroll({\n      scrollableRef,\n    });\n  const hiddenUI = scrollDirection === 'end' && !nearReachStart;\n  const [followRequests, setFollowRequests] = useState([]);\n  const [announcements, setAnnouncements] = useState([]);\n\n  console.debug('RENDER Notifications');\n\n  const notificationsIterator = useRef();\n  async function fetchNotifications(firstLoad) {\n    if (firstLoad || !notificationsIterator.current) {\n      // Reset iterator\n      notificationsIterator.current = mastoFetchNotifications({\n        excludeTypes: ['follow_request'],\n      });\n    }\n    if (/max_id=($|&)/i.test(notificationsIterator.current?.nextParams)) {\n      // Pixelfed returns next paginationed link with empty max_id\n      // I assume, it's done (end of list)\n      return {\n        done: true,\n      };\n    }\n    const allNotifications = await notificationsIterator.current.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      // TEST: Slot in a fake notification to test 'severed_relationships'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'severed_relationships',\n      //   createdAt: '2024-03-22T19:20:08.316Z',\n      //   event: {\n      //     type: 'account_suspension',\n      //     targetName: 'mastodon.dev',\n      //     followersCount: 0,\n      //     followingCount: 0,\n      //   },\n      // });\n\n      // TEST: Slot in a fake notification to test 'moderation_warning'\n      // notifications.unshift({\n      //   id: '123123',\n      //   type: 'moderation_warning',\n      //   createdAt: new Date().toISOString(),\n      //   moderation_warning: {\n      //     id: '1231234',\n      //     action: 'mark_statuses_as_sensitive',\n      //   },\n      // });\n\n      // console.log({ notifications });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      if (firstLoad) {\n        states.notificationsLast = groupedNotifications[0];\n        states.notifications = groupedNotifications;\n\n        // Update last read marker\n        masto.v1.markers\n          .create({\n            notifications: {\n              lastReadId: groupedNotifications[0].id,\n            },\n          })\n          .catch(() => {});\n      } else {\n        states.notifications.push(...groupedNotifications);\n      }\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  async function fetchFollowRequests() {\n    // Note: no pagination here yet because this better be on a separate page. Should be rare use-case???\n    try {\n      return await masto.v1.followRequests.list({\n        limit: 80,\n      });\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const loadFollowRequests = () => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const requests = await fetchFollowRequests();\n        setFollowRequests(requests);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  };\n\n  async function fetchAnnouncements() {\n    try {\n      return await masto.v1.announcements.list();\n    } catch (e) {\n      // Silently fail\n      return [];\n    }\n  }\n\n  const supportsFilteredNotifications = supports(\n    '@mastodon/filtered-notifications',\n  );\n  const [showNotificationsSettings, setShowNotificationsSettings] =\n    useState(false);\n  const [notificationsPolicy, setNotificationsPolicy] = useState({});\n  function fetchNotificationsPolicy() {\n    return masto.v2.notifications.policy.fetch().catch(() => {});\n  }\n  function loadNotificationsPolicy() {\n    fetchNotificationsPolicy()\n      .then((policy) => {\n        console.log('✨ Notifications policy', policy);\n        setNotificationsPolicy(policy);\n      })\n      .catch(() => {});\n  }\n  const [notificationsRequests, setNotificationsRequests] = useState(null);\n  function fetchNotificationsRequest() {\n    return masto.v1.notifications.requests.list();\n  }\n\n  const loadNotifications = (firstLoad) => {\n    setShowNew(false);\n    setUIState('loading');\n    (async () => {\n      try {\n        const fetchNotificationsPromise = fetchNotifications(firstLoad);\n\n        if (firstLoad) {\n          fetchAnnouncements()\n            .then((announcements) => {\n              announcements.sort((a, b) => {\n                // Sort by updatedAt first, then createdAt\n                const aDate = new Date(a.updatedAt || a.createdAt);\n                const bDate = new Date(b.updatedAt || b.createdAt);\n                return bDate - aDate;\n              });\n              setAnnouncements(announcements);\n            })\n            .catch(() => {});\n\n          fetchFollowRequests()\n            .then((requests) => {\n              setFollowRequests(requests);\n            })\n            .catch(() => {});\n\n          if (supportsFilteredNotifications) {\n            loadNotificationsPolicy();\n          }\n        }\n\n        const { done } = await fetchNotificationsPromise;\n        setShowMore(!done);\n\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  useEffect(() => {\n    loadNotifications(true);\n  }, []);\n  useEffect(() => {\n    if (reachStart) {\n      loadNotifications(true);\n    }\n  }, [reachStart]);\n\n  // useEffect(() => {\n  //   if (nearReachEnd && showMore) {\n  //     loadNotifications();\n  //   }\n  // }, [nearReachEnd, showMore]);\n\n  const [showNew, setShowNew] = useState(false);\n\n  const loadUpdates = useCallback(\n    ({ disableIdleCheck = false } = {}) => {\n      if (uiState === 'loading') {\n        return;\n      }\n      console.log('✨ Load updates', {\n        autoRefresh: snapStates.settings.autoRefresh,\n        scrollTop: scrollableRef.current?.scrollTop,\n        inBackground: inBackground(),\n        disableIdleCheck,\n      });\n      if (\n        snapStates.settings.autoRefresh &&\n        scrollableRef.current?.scrollTop < 16 &&\n        (disableIdleCheck || window.__IDLE__) &&\n        !inBackground()\n      ) {\n        loadNotifications(true);\n      }\n    },\n    [snapStates.notificationsShowNew, snapStates.settings.autoRefresh, uiState],\n  );\n  // useEffect(loadUpdates, [snapStates.notificationsShowNew]);\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    if (visible) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadUpdates({\n          disableIdleCheck: true,\n        });\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n  const firstLoad = useRef(true);\n  useEffect(() => {\n    let unsub = subscribeKey(states, 'notificationsShowNew', (v) => {\n      if (firstLoad.current) {\n        firstLoad.current = false;\n        return;\n      }\n      if (uiState === 'loading') return;\n      if (v) loadUpdates();\n      setShowNew(v);\n    });\n    return () => unsub?.();\n  }, []);\n\n  const todayDate = new Date();\n  const yesterdayDate = new Date(todayDate - 24 * 60 * 60 * 1000);\n  let currentDay = new Date();\n  const showTodayEmpty = !snapStates.notifications.some(\n    (notification) =>\n      new Date(notification.createdAt).toDateString() ===\n      todayDate.toDateString(),\n  );\n\n  const announcementsListRef = useRef();\n\n  useEffect(() => {\n    if (notificationID) {\n      states.routeNotification = {\n        id: notificationID,\n        accessToken: atob(notificationAccessToken),\n      };\n    }\n  }, [notificationID, notificationAccessToken]);\n\n  // useEffect(() => {\n  //   if (uiState === 'default') {\n  //     (async () => {\n  //       try {\n  //         const registration = await getRegistration();\n  //         if (registration?.getNotifications) {\n  //           const notifications = await registration.getNotifications();\n  //           console.log('🔔 Push notifications', notifications);\n  //           // Close all notifications?\n  //           // notifications.forEach((notification) => {\n  //           //   notification.close();\n  //           // });\n  //         }\n  //       } catch (e) {}\n  //     })();\n  //   }\n  // }, [uiState]);\n\n  const itemsSelector = '.notification';\n  const jRef = useHotkeys('j', () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let nextItem = allItems[activeItemIndex + 1];\n      if (nextItem) {\n        nextItem.focus();\n        nextItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const kRef = useHotkeys('k', () => {\n    // focus on previous status after active item\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const activeItemRect = activeItem?.getBoundingClientRect();\n    const allItems = Array.from(\n      scrollableRef.current.querySelectorAll(itemsSelector),\n    );\n    if (\n      activeItem &&\n      activeItemRect.top < scrollableRef.current.clientHeight &&\n      activeItemRect.bottom > 0\n    ) {\n      const activeItemIndex = allItems.indexOf(activeItem);\n      let prevItem = allItems[activeItemIndex - 1];\n      if (prevItem) {\n        prevItem.focus();\n        prevItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      const topmostItem = allItems.find((item) => {\n        const itemRect = item.getBoundingClientRect();\n        return itemRect.top >= 44 && itemRect.left >= 0;\n      });\n      if (topmostItem) {\n        topmostItem.focus();\n        topmostItem.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  const oRef = useHotkeys(['enter', 'o'], () => {\n    const activeItem = document.activeElement.closest(itemsSelector);\n    const statusLink = activeItem?.querySelector('.status-link');\n    if (statusLink) {\n      statusLink.click();\n    }\n  });\n\n  return (\n    <div\n      id=\"notifications-page\"\n      class=\"deck-container\"\n      ref={(node) => {\n        scrollableRef.current = node;\n        jRef.current = node;\n        kRef.current = node;\n        oRef.current = node;\n      }}\n      tabIndex=\"-1\"\n    >\n      <div class={`timeline-deck deck ${onlyMentions ? 'only-mentions' : ''}`}>\n        <header\n          hidden={hiddenUI}\n          onClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              scrollableRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\n            }\n          }}\n          onDblClick={(e) => {\n            if (!e.target.closest('a, button')) {\n              loadNotifications(true);\n            }\n          }}\n          class={uiState === 'loading' ? 'loading' : ''}\n        >\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" alt={t`Home`} />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Notifications</Trans>\n            </h1>\n            <div class=\"header-side\">\n              {supportsFilteredNotifications && (\n                <button\n                  type=\"button\"\n                  class=\"button plain4\"\n                  onClick={() => {\n                    setShowNotificationsSettings(true);\n                  }}\n                >\n                  <Icon\n                    icon=\"settings\"\n                    size=\"l\"\n                    alt={t`Notifications settings`}\n                  />\n                </button>\n              )}\n            </div>\n          </div>\n          {showNew && uiState !== 'loading' && (\n            <button\n              class=\"updates-button shiny-pill\"\n              type=\"button\"\n              onClick={() => {\n                loadNotifications(true);\n                scrollableRef.current?.scrollTo({\n                  top: 0,\n                  behavior: 'smooth',\n                });\n              }}\n            >\n              <Icon icon=\"arrow-up\" /> <Trans>New notifications</Trans>\n            </button>\n          )}\n        </header>\n        {announcements.length > 0 && (\n          <div class=\"shazam-container\">\n            <div class=\"shazam-container-inner\">\n              <details class=\"announcements\">\n                <summary>\n                  <span>\n                    <Icon icon=\"announce\" class=\"announcement-icon\" size=\"l\" />{' '}\n                    <Plural\n                      value={announcements.length}\n                      one=\"Announcement\"\n                      other=\"Announcements\"\n                    />{' '}\n                    <small class=\"insignificant\">{instance}</small>\n                  </span>\n                  {announcements.length > 1 && (\n                    <span class=\"announcements-nav-buttons\">\n                      {announcements.map((announcement, index) => (\n                        <button\n                          type=\"button\"\n                          class=\"plain2 small\"\n                          onClick={() => {\n                            announcementsListRef.current?.children[\n                              index\n                            ].scrollIntoView({\n                              behavior: 'smooth',\n                              block: 'nearest',\n                            });\n                          }}\n                        >\n                          {index + 1}\n                        </button>\n                      ))}\n                    </span>\n                  )}\n                </summary>\n                <ul\n                  class={`announcements-list-${\n                    announcements.length > 1 ? 'multiple' : 'single'\n                  }`}\n                  ref={announcementsListRef}\n                >\n                  {announcements.map((announcement) => (\n                    <li>\n                      <AnnouncementBlock announcement={announcement} />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            </div>\n          </div>\n        )}\n        {followRequests.length > 0 && (\n          <div class=\"follow-requests\">\n            <h2 class=\"timeline-header\">\n              <Trans>Follow requests</Trans>\n            </h2>\n            {followRequests.length > 5 ? (\n              <details>\n                <summary>\n                  <Plural\n                    value={followRequests.length}\n                    one=\"# follow request\"\n                    other=\"# follow requests\"\n                  />\n                </summary>\n                <ul>\n                  {followRequests.map((account) => (\n                    <li key={account.id}>\n                      <AccountBlock account={account} />\n                      <FollowRequestButtons\n                        accountID={account.id}\n                        onChange={() => {\n                          // loadFollowRequests();\n                          // loadNotifications(true);\n                        }}\n                      />\n                    </li>\n                  ))}\n                </ul>\n              </details>\n            ) : (\n              <ul>\n                {followRequests.map((account) => (\n                  <li key={account.id}>\n                    <AccountBlock account={account} />\n                    <FollowRequestButtons\n                      accountID={account.id}\n                      onChange={() => {\n                        // loadFollowRequests();\n                        // loadNotifications(true);\n                      }}\n                    />\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n        {supportsFilteredNotifications &&\n          notificationsPolicy?.summary?.pendingRequestsCount > 0 && (\n            <div class=\"shazam-container\">\n              <div class=\"shazam-container-inner\">\n                <div class=\"filtered-notifications\">\n                  <details\n                    onToggle={async (e) => {\n                      const { open } = e.target;\n                      if (open) {\n                        const requests = await fetchNotificationsRequest();\n                        setNotificationsRequests(requests);\n                        console.log({ open, requests });\n                      }\n                    }}\n                  >\n                    <summary>\n                      <Plural\n                        value={notificationsPolicy.summary.pendingRequestsCount}\n                        one=\"Filtered notifications from # person\"\n                        other=\"Filtered notifications from # people\"\n                      />\n                    </summary>\n                    {!notificationsRequests ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      notificationsRequests?.length > 0 && (\n                        <ul>\n                          {notificationsRequests.map((request) => (\n                            <li key={request.id}>\n                              <div class=\"request-notifcations\">\n                                {!request.lastStatus?.id && (\n                                  <AccountBlock\n                                    useAvatarStatic\n                                    showStats\n                                    account={request.account}\n                                  />\n                                )}\n                                {request.lastStatus?.id && (\n                                  <div class=\"last-post\">\n                                    <Link\n                                      class=\"status-link\"\n                                      to={`/${instance}/s/${request.lastStatus.id}`}\n                                    >\n                                      <Status\n                                        status={request.lastStatus}\n                                        size=\"s\"\n                                        readOnly\n                                      />\n                                    </Link>\n                                  </div>\n                                )}\n                                <NotificationRequestModalButton\n                                  request={request}\n                                />\n                              </div>\n                              <NotificationRequestButtons\n                                request={request}\n                                onChange={() => {\n                                  loadNotifications(true);\n                                }}\n                              />\n                            </li>\n                          ))}\n                        </ul>\n                      )\n                    )}\n                  </details>\n                </div>\n              </div>\n            </div>\n          )}\n        <div id=\"mentions-option\">\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={onlyMentions}\n              onChange={(e) => {\n                setOnlyMentions(e.target.checked);\n              }}\n            />{' '}\n            <Trans>Only mentions</Trans>\n          </label>\n        </div>\n        <h2 class=\"timeline-header\">\n          <Trans>Today</Trans>\n        </h2>\n        {showTodayEmpty && (\n          <p class=\"ui-state insignificant\">\n            {uiState === 'default' ? t`You're all caught up.` : <>&hellip;</>}\n          </p>\n        )}\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              // This is leaked from Notifications popover\n              .filter((n) => n.type !== 'follow_request')\n              .map((notification) => {\n                if (onlyMentions && notification.type !== 'mention') {\n                  return null;\n                }\n                const notificationDay = new Date(notification.createdAt);\n                const differentDay =\n                  notificationDay.toDateString() !== currentDay.toDateString();\n                if (differentDay) {\n                  currentDay = notificationDay;\n                }\n                // if notificationDay is yesterday, show \"Yesterday\"\n                // if notificationDay is before yesterday, show date\n                const heading =\n                  notificationDay.toDateString() ===\n                  yesterdayDate.toDateString()\n                    ? t`Yesterday`\n                    : niceDateTime(currentDay, {\n                        hideTime: true,\n                      });\n                return (\n                  <Fragment key={notification._ids || notification.id}>\n                    {differentDay && <h2 class=\"timeline-header\">{heading}</h2>}\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      key={notification._ids || notification.id}\n                    />\n                  </Fragment>\n                );\n              })}\n          </>\n        ) : (\n          <>\n            {uiState === 'loading' && (\n              <>\n                <ul class=\"timeline flat\">\n                  {Array.from({ length: 5 }).map((_, i) => (\n                    <li class=\"notification skeleton\">\n                      <div class=\"notification-type\">\n                        <Icon icon=\"notification\" size=\"xl\" />\n                      </div>\n                      <div class=\"notification-content\">\n                        <p>███████████ ████</p>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n            {uiState === 'error' && (\n              <p class=\"ui-state\">\n                <Trans>Unable to load notifications</Trans>\n                <br />\n                <br />\n                <button type=\"button\" onClick={() => loadNotifications(true)}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            )}\n          </>\n        )}\n        {showMore && (\n          <InView\n            onChange={(inView) => {\n              if (inView) {\n                loadNotifications();\n              }\n            }}\n          >\n            <button\n              type=\"button\"\n              class=\"plain block\"\n              disabled={uiState === 'loading'}\n              onClick={() => loadNotifications()}\n              style={{ marginBlockEnd: '6em' }}\n            >\n              {uiState === 'loading' ? (\n                <Loader abrupt />\n              ) : (\n                <Trans>Show more…</Trans>\n              )}\n            </button>\n          </InView>\n        )}\n      </div>\n      {supportsFilteredNotifications && showNotificationsSettings && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowNotificationsSettings(false);\n            }\n          }}\n        >\n          <div class=\"sheet\" id=\"notifications-settings\" tabIndex=\"-1\">\n            <button\n              type=\"button\"\n              class=\"sheet-close\"\n              onClick={() => setShowNotificationsSettings(false)}\n            >\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <h2>\n                <Trans>Notifications settings</Trans>\n              </h2>\n            </header>\n            <main>\n              <form\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  const {\n                    forNotFollowing,\n                    forNotFollowers,\n                    forNewAccounts,\n                    forPrivateMentions,\n                    forLimitedAccounts,\n                  } = e.target;\n                  const newPolicy = {\n                    ...notificationsPolicy,\n                    forNotFollowing: forNotFollowing.value,\n                    forNotFollowers: forNotFollowers.value,\n                    forNewAccounts: forNewAccounts.value,\n                    forPrivateMentions: forPrivateMentions.value,\n                    forLimitedAccounts: forLimitedAccounts.value,\n                  };\n                  setNotificationsPolicy(newPolicy);\n                  setShowNotificationsSettings(false);\n                  (async () => {\n                    try {\n                      await masto.v2.notifications.policy.update(newPolicy);\n                      showToast(t`Notifications settings updated`);\n                    } catch (e) {\n                      console.error(e);\n                    }\n                  })();\n                }}\n              >\n                <p>\n                  <Trans>Filter out notifications from people:</Trans>\n                </p>\n                <div class=\"notification-policy-fields\">\n                  {NOTIFICATIONS_POLICIES.map((key) => {\n                    const value = notificationsPolicy[key];\n                    return (\n                      <div key={key}>\n                        <label>\n                          {_(NOTIFICATIONS_POLICIES_TEXT[key])}\n                          <select name={key} defaultValue={value} class=\"small\">\n                            <option value=\"accept\">\n                              <Trans>Accept</Trans>\n                            </option>\n                            <option value=\"filter\">\n                              <Trans>Filter</Trans>\n                            </option>\n                            <option value=\"drop\">\n                              <Trans>Ignore</Trans>\n                            </option>\n                          </select>\n                        </label>\n                      </div>\n                    );\n                  })}\n                </div>\n                <p>\n                  <button type=\"submit\">\n                    <Trans>Save</Trans>\n                  </button>\n                </p>\n              </form>\n            </main>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nfunction inBackground() {\n  return !!document.querySelector('.deck-backdrop, #modal-container > *');\n}\n\nfunction AnnouncementBlock({ announcement }) {\n  const { instance } = api();\n  const { contact } = getCurrentInstance();\n  const contactAccount = contact?.account;\n  const {\n    id,\n    content,\n    startsAt,\n    endsAt,\n    published,\n    allDay,\n    publishedAt,\n    updatedAt,\n    read,\n    mentions,\n    statuses,\n    tags,\n    emojis,\n    reactions,\n  } = announcement;\n\n  const publishedAtDate = new Date(publishedAt);\n  const publishedDateText = niceDateTime(publishedAtDate);\n  const updatedAtDate = new Date(updatedAt);\n  const updatedAtText = niceDateTime(updatedAtDate);\n\n  return (\n    <div class=\"announcement-block\">\n      <AccountBlock account={contactAccount} />\n      <div\n        class=\"announcement-content\"\n        onClick={handleContentLinks({ mentions, instance })}\n        dangerouslySetInnerHTML={{\n          __html: enhanceContent(content, {\n            emojis,\n          }),\n        }}\n      />\n      <p class=\"insignificant\">\n        <time datetime={publishedAtDate.toISOString()}>\n          {niceDateTime(publishedAtDate)}\n        </time>\n        {updatedAt && updatedAtText !== publishedDateText && (\n          <>\n            {' '}\n            &bull;{' '}\n            <span class=\"ib\">\n              <Trans>\n                Updated{' '}\n                <time datetime={updatedAtDate.toISOString()}>\n                  {niceDateTime(updatedAtDate)}\n                </time>\n              </Trans>\n            </span>\n          </>\n        )}\n      </p>\n      <div class=\"announcement-reactions\" hidden>\n        {reactions.map((reaction) => {\n          const { name, count, me, staticUrl, url } = reaction;\n          return (\n            <button type=\"button\" class={`plain4 small ${me ? 'reacted' : ''}`}>\n              {url || staticUrl ? (\n                <img src={url || staticUrl} alt={name} width=\"16\" height=\"16\" />\n              ) : (\n                <span>{name}</span>\n              )}{' '}\n              <span class=\"count\">{shortenNumber(count)}</span>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction fetchNotficationsByAccount(accountID) {\n  const { masto } = api();\n  return masto.v1.notifications.list({\n    accountID,\n  });\n}\nfunction NotificationRequestModalButton({ request }) {\n  const { instance } = api();\n  const [uiState, setUIState] = useState('loading');\n  const { account, lastStatus } = request;\n  const [showModal, setShowModal] = useState(false);\n  const [notifications, setNotifications] = useState([]);\n\n  function onClose() {\n    setShowModal(false);\n  }\n\n  useEffect(() => {\n    if (!request?.account?.id) return;\n    if (!showModal) return;\n    setUIState('loading');\n    (async () => {\n      const notifs = await fetchNotficationsByAccount(request.account.id);\n      setNotifications(notifs || []);\n      setUIState('default');\n    })();\n  }, [showModal, request?.account?.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        class=\"plain4 request-notifications-account\"\n        onClick={() => {\n          setShowModal(true);\n        }}\n      >\n        <Icon icon=\"notification\" class=\"more-insignificant\" />{' '}\n        <small>\n          <Trans>\n            View notifications from{' '}\n            <span class=\"bidi-isolate\">@{account.username}</span>\n          </Trans>\n        </small>{' '}\n        <Icon icon=\"chevron-down\" />\n      </button>\n      {showModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              onClose();\n            }\n          }}\n        >\n          <div class=\"sheet\" tabIndex=\"-1\">\n            <button type=\"button\" class=\"sheet-close\" onClick={onClose}>\n              <Icon icon=\"x\" alt={t`Close`} />\n            </button>\n            <header>\n              <b>\n                <Trans>\n                  Notifications from{' '}\n                  <span class=\"bidi-isolate\">@{account.username}</span>\n                </Trans>\n              </b>\n            </header>\n            <main>\n              {uiState === 'loading' ? (\n                <p class=\"ui-state\">\n                  <Loader abrupt />\n                </p>\n              ) : (\n                notifications.map((notification) => (\n                  <div\n                    class=\"notification-peek\"\n                    onClick={(e) => {\n                      const { target } = e;\n                      // If button or links\n                      if (\n                        e.target.tagName === 'BUTTON' ||\n                        e.target.tagName === 'A'\n                      ) {\n                        onClose();\n                      }\n                    }}\n                  >\n                    <Notification\n                      instance={instance}\n                      notification={notification}\n                      isStatic\n                    />\n                  </div>\n                ))\n              )}\n            </main>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nfunction NotificationRequestButtons({ request, onChange }) {\n  const { masto } = api();\n  const [uiState, setUIState] = useState('default');\n  const [requestState, setRequestState] = useState(null); // accept, dismiss\n  const hasRequestState = requestState !== null;\n\n  return (\n    <p class=\"notification-request-buttons\">\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .accept();\n              setRequestState('accept');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'accept',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not be filtered from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to accept notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Allow</Trans>\n      </button>{' '}\n      <button\n        type=\"button\"\n        disabled={uiState === 'loading' || hasRequestState}\n        class=\"light danger\"\n        onClick={() => {\n          setUIState('loading');\n          (async () => {\n            try {\n              await masto.v1.notifications.requests\n                .$select(request.id)\n                .dismiss();\n              setRequestState('dismiss');\n              setUIState('default');\n              onChange({\n                request,\n                state: 'dismiss',\n              });\n              showToast(\n                t`Notifications from @${request.account.username} will not show up in Filtered notifications from now on.`,\n              );\n            } catch (error) {\n              setUIState('error');\n              console.error(error);\n              showToast(t`Unable to dismiss notification request`);\n            }\n          })();\n        }}\n      >\n        <Trans>Dismiss</Trans>\n      </button>\n      <span class=\"notification-request-states\">\n        {uiState === 'loading' ? (\n          <Loader abrupt />\n        ) : requestState === 'accept' ? (\n          <Icon\n            icon=\"check-circle\"\n            alt={t`Accepted`}\n            class=\"notification-accepted\"\n          />\n        ) : (\n          requestState === 'dismiss' && (\n            <Icon\n              icon=\"x-circle\"\n              alt={t`Dismissed`}\n              class=\"notification-dismissed\"\n            />\n          )\n        )}\n      </span>\n    </p>\n  );\n}\n\nexport default memo(Notifications);\n","import { t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuItem } from '@szhsin/react-menu';\nimport { useRef } from 'preact/hooks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Menu2 from '../components/menu2';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { filteredItems } from '../utils/filters';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\n\nfunction Public({ local, columnMode, ...props }) {\n  const snapStates = useSnapshot(states);\n  const isLocal = !!local;\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = isLocal\n    ? t`Local timeline (${instance})`\n    : t`Federated timeline (${instance})`;\n  useTitle(title, isLocal ? `/:instance?/p/l` : `/:instance?/p`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const publicIterator = useRef();\n  async function fetchPublic(firstLoad) {\n    if (firstLoad || !publicIterator.current) {\n      const opts = {\n        limit: LIMIT,\n        local: isLocal || undefined,\n      };\n      if (!isLocal && supports('@pixelfed/global-feed')) {\n        opts.remote = true;\n      }\n      publicIterator.current = masto.v1.timelines.public.list(opts);\n    }\n    const results = await publicIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.timelines.public\n        .list({\n          limit: 1,\n          local: isLocal,\n          since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      const valueContainsLatestItem = value[0]?.id === latestItem.current; // since_id might not be supported\n      if (value?.length && !valueContainsLatestItem) {\n        value = filteredItems(value, 'public');\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return (\n    <Timeline\n      key={instance + isLocal}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>{isLocal ? t`Local timeline` : t`Federated timeline`}</b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"public\"\n      instance={instance}\n      emptyText={t`No one has posted anything yet.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={fetchPublic}\n      checkForUpdates={checkForUpdates}\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem href={isLocal ? `/#/${instance}/p` : `/#/${instance}/p/l`}>\n            {isLocal ? (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Federated</Trans>\n                </span>\n              </>\n            ) : (\n              <>\n                <Icon icon=\"transfer\" />{' '}\n                <span>\n                  <Trans>Switch to Local</Trans>\n                </span>\n              </>\n            )}\n          </MenuItem>\n          <MenuDivider />\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(isLocal ? `/${newInstance}/p/l` : `/${newInstance}/p`);\n                location.hash = isLocal\n                  ? `/${newInstance}/p/l`\n                  : `/${newInstance}/p`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = isLocal\n                  ? `/${currentInstance}/p/l`\n                  : `/${currentInstance}/p`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Public;\n","import './search.css';\n\nimport { useAutoAnimate } from '@formkit/auto-animate/preact';\nimport { t, Trans } from '@lingui/macro';\nimport { useEffect, useLayoutEffect, useRef, useState } from 'preact/hooks';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport AccountBlock from '../components/account-block';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport NavMenu from '../components/nav-menu';\nimport SearchForm from '../components/search-form';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport { fetchRelationships } from '../utils/relationships';\nimport shortenNumber from '../utils/shorten-number';\nimport usePageVisibility from '../utils/usePageVisibility';\nimport useTitle from '../utils/useTitle';\n\nconst SHORT_LIMIT = 5;\nconst LIMIT = 40;\nconst emptySearchParams = new URLSearchParams();\n\nfunction Search({ columnMode, ...props }) {\n  const params = columnMode ? {} : useParams();\n  const { masto, instance, authenticated } = api({\n    instance: params.instance,\n  });\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = columnMode ? [emptySearchParams] : useSearchParams();\n  const searchFormRef = useRef();\n  const q = props?.query || searchParams.get('q');\n  const type = columnMode\n    ? 'statuses'\n    : props?.type || searchParams.get('type');\n  let title = t`Search`;\n  if (q) {\n    switch (type) {\n      case 'statuses':\n        title = t`Search: ${q} (Posts)`;\n        break;\n      case 'accounts':\n        title = t`Search: ${q} (Accounts)`;\n        break;\n      case 'hashtags':\n        title = t`Search: ${q} (Hashtags)`;\n        break;\n      default:\n        title = t`Search: ${q}`;\n    }\n  }\n  useTitle(title, `/search`);\n\n  const [showMore, setShowMore] = useState(false);\n  const offsetRef = useRef(0);\n  useEffect(() => {\n    offsetRef.current = 0;\n  }, [q, type]);\n\n  const scrollableRef = useRef();\n  useLayoutEffect(() => {\n    scrollableRef.current?.scrollTo?.(0, 0);\n  }, [q, type]);\n\n  const [statusResults, setStatusResults] = useState([]);\n  const [accountResults, setAccountResults] = useState([]);\n  const [hashtagResults, setHashtagResults] = useState([]);\n  useEffect(() => {\n    setStatusResults([]);\n    setAccountResults([]);\n    setHashtagResults([]);\n  }, [q]);\n  const setTypeResultsFunc = {\n    statuses: setStatusResults,\n    accounts: setAccountResults,\n    hashtags: setHashtagResults,\n  };\n\n  const [relationshipsMap, setRelationshipsMap] = useState({});\n  const loadRelationships = async (accounts) => {\n    if (!accounts?.length) return;\n    const relationships = await fetchRelationships(accounts, relationshipsMap);\n    if (relationships) {\n      setRelationshipsMap({\n        ...relationshipsMap,\n        ...relationships,\n      });\n    }\n  };\n\n  function loadResults(firstLoad) {\n    if (firstLoad) {\n      offsetRef.current = 0;\n    }\n\n    if (!firstLoad && !authenticated) {\n      // Search results pagination is only available to authenticated users\n      return;\n    }\n\n    setUIState('loading');\n    if (firstLoad && !type) {\n      setStatusResults(statusResults.slice(0, SHORT_LIMIT));\n      setAccountResults(accountResults.slice(0, SHORT_LIMIT));\n      setHashtagResults(hashtagResults.slice(0, SHORT_LIMIT));\n    }\n\n    (async () => {\n      const params = {\n        q,\n        resolve: authenticated,\n        limit: SHORT_LIMIT,\n      };\n      if (type) {\n        params.limit = LIMIT;\n        params.type = type;\n        if (authenticated) params.offset = offsetRef.current;\n      }\n\n      try {\n        const results = await masto.v2.search.fetch(params);\n        console.log(results);\n        if (type) {\n          if (firstLoad) {\n            setTypeResultsFunc[type](results[type]);\n            const length = results[type]?.length;\n            offsetRef.current = LIMIT;\n            setShowMore(!!length);\n          } else {\n            setTypeResultsFunc[type]((prev) => [...prev, ...results[type]]);\n            const length = results[type]?.length;\n            offsetRef.current = offsetRef.current + LIMIT;\n            setShowMore(!!length);\n          }\n        } else {\n          setStatusResults(results.statuses || []);\n          setAccountResults(results.accounts || []);\n          setHashtagResults(results.hashtags || []);\n          offsetRef.current = 0;\n          setShowMore(false);\n        }\n        loadRelationships(results.accounts);\n\n        setUIState('default');\n      } catch (err) {\n        console.error(err);\n        setUIState('error');\n      }\n    })();\n  }\n\n  const lastHiddenTime = useRef();\n  usePageVisibility((visible) => {\n    const reachStart = scrollableRef.current?.scrollTop === 0;\n    if (visible && reachStart) {\n      const timeDiff = Date.now() - lastHiddenTime.current;\n      if (!lastHiddenTime.current || timeDiff > 1000 * 3) {\n        // 3 seconds\n        loadResults(true);\n      } else {\n        lastHiddenTime.current = Date.now();\n      }\n    }\n  });\n\n  useEffect(() => {\n    searchFormRef.current?.setValue?.(q || '');\n    if (q) {\n      loadResults(true);\n    } else {\n      searchFormRef.current?.focus?.();\n    }\n  }, [q, type, instance]);\n\n  useHotkeys(\n    ['/', 'Slash'],\n    (e) => {\n      searchFormRef.current?.focus?.();\n      searchFormRef.current?.select?.();\n    },\n    {\n      preventDefault: true,\n    },\n  );\n\n  const [filterBarParent] = useAutoAnimate();\n\n  return (\n    <div id=\"search-page\" class=\"deck-container\" ref={scrollableRef}>\n      <div class=\"timeline-deck deck\">\n        <header class={uiState === 'loading' ? 'loading' : ''}>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n            </div>\n            <SearchForm ref={searchFormRef} />\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => {\n                  loadResults(true);\n                }}\n                disabled={uiState === 'loading'}\n              >\n                <Icon icon=\"search\" size=\"l\" alt={t`Search`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {!!q && !columnMode && (\n            <div\n              ref={filterBarParent}\n              class={`filter-bar ${uiState === 'loading' ? 'loading' : ''}`}\n            >\n              {!!type && (\n                <Link to={`/search${q ? `?q=${encodeURIComponent(q)}` : ''}`}>\n                  <Icon icon=\"chevron-left\" /> <Trans>All</Trans>\n                </Link>\n              )}\n              {[\n                {\n                  label: t`Accounts`,\n                  type: 'accounts',\n                  to: `/search?q=${encodeURIComponent(q)}&type=accounts`,\n                },\n                {\n                  label: t`Hashtags`,\n                  type: 'hashtags',\n                  to: `/search?q=${encodeURIComponent(q)}&type=hashtags`,\n                },\n                {\n                  label: t`Posts`,\n                  type: 'statuses',\n                  to: `/search?q=${encodeURIComponent(q)}&type=statuses`,\n                },\n              ]\n                .sort((a, b) => {\n                  if (a.type === type) return -1;\n                  if (b.type === type) return 1;\n                  return 0;\n                })\n                .map((link) => (\n                  <Link to={link.to} key={link.type}>\n                    {link.label}\n                  </Link>\n                ))}\n            </div>\n          )}\n          {!!q ? (\n            <>\n              {(!type || type === 'accounts') && (\n                <>\n                  {type !== 'accounts' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Accounts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=accounts`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {accountResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline flat accounts-list\">\n                        {accountResults.map((account) => (\n                          <li key={account.id}>\n                            <AccountBlock\n                              account={account}\n                              instance={instance}\n                              showStats\n                              relationship={relationshipsMap[account.id]}\n                            />\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'accounts' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=accounts`}\n                          >\n                            <Trans>See more accounts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No accounts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'hashtags') && (\n                <>\n                  {type !== 'hashtags' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Hashtags</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=hashtags`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {hashtagResults.length > 0 ? (\n                    <>\n                      <ul class=\"link-list hashtag-list\">\n                        {hashtagResults.map((hashtag) => {\n                          const { name, history } = hashtag;\n                          const total = history?.reduce?.(\n                            (acc, cur) => acc + +cur.uses,\n                            0,\n                          );\n                          return (\n                            <li key={`${name}-${total}`}>\n                              <Link\n                                to={\n                                  instance\n                                    ? `/${instance}/t/${name}`\n                                    : `/t/${name}`\n                                }\n                              >\n                                <Icon icon=\"hashtag\" alt=\"#\" />\n                                <span>{name}</span>\n                                {!!total && (\n                                  <span class=\"count\">\n                                    {shortenNumber(total)}\n                                  </span>\n                                )}\n                              </Link>\n                            </li>\n                          );\n                        })}\n                      </ul>\n                      {type !== 'hashtags' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=hashtags`}\n                          >\n                            <Trans>See more hashtags</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No hashtags found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {(!type || type === 'statuses') && (\n                <>\n                  {type !== 'statuses' && (\n                    <h2 class=\"timeline-header\">\n                      <Trans>Posts</Trans>{' '}\n                      <Link\n                        to={`/search?q=${encodeURIComponent(q)}&type=statuses`}\n                      >\n                        <Icon icon=\"arrow-right\" size=\"l\" alt={t`See more`} />\n                      </Link>\n                    </h2>\n                  )}\n                  {statusResults.length > 0 ? (\n                    <>\n                      <ul class=\"timeline\">\n                        {statusResults.map((status) => (\n                          <li key={status.id}>\n                            <Link\n                              class=\"status-link\"\n                              to={\n                                instance\n                                  ? `/${instance}/s/${status.id}`\n                                  : `/s/${status.id}`\n                              }\n                            >\n                              <Status status={status} />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                      {type !== 'statuses' && (\n                        <div class=\"ui-state\">\n                          <Link\n                            class=\"plain button\"\n                            to={`/search?q=${encodeURIComponent(\n                              q,\n                            )}&type=statuses`}\n                          >\n                            <Trans>See more posts</Trans>{' '}\n                            <Icon icon=\"arrow-right\" />\n                          </Link>\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    !type &&\n                    (uiState === 'loading' ? (\n                      <p class=\"ui-state\">\n                        <Loader abrupt />\n                      </p>\n                    ) : (\n                      <p class=\"ui-state\">\n                        <Trans>No posts found.</Trans>\n                      </p>\n                    ))\n                  )}\n                </>\n              )}\n              {!!type &&\n                (uiState === 'default' ? (\n                  showMore ? (\n                    <InView\n                      onChange={(inView) => {\n                        if (inView) {\n                          loadResults();\n                        }\n                      }}\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"plain block\"\n                        onClick={() => loadResults()}\n                        style={{ marginBlockEnd: '6em' }}\n                      >\n                        <Trans>Show more…</Trans>\n                      </button>\n                    </InView>\n                  ) : (\n                    <p class=\"ui-state insignificant\">\n                      <Trans>The end.</Trans>\n                    </p>\n                  )\n                ) : (\n                  uiState === 'loading' && (\n                    <p class=\"ui-state\">\n                      <Loader abrupt />\n                    </p>\n                  )\n                ))}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader abrupt />\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>\n                Enter your search term or paste a URL above to get started.\n              </Trans>\n            </p>\n          )}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;\n","import '../components/links-bar.css';\nimport './trending.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport { MenuItem } from '@szhsin/react-menu';\nimport { getBlurHashAverageColor } from 'fast-blurhash';\nimport { useEffect, useMemo, useRef, useState } from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Menu2 from '../components/menu2';\nimport RelativeTime from '../components/relative-time';\nimport Timeline from '../components/timeline';\nimport { api } from '../utils/api';\nimport { oklab2rgb, rgb2oklab } from '../utils/color-utils';\nimport { filteredItems } from '../utils/filters';\nimport pmem from '../utils/pmem';\nimport shortenNumber from '../utils/shorten-number';\nimport states, { saveStatus } from '../utils/states';\nimport supports from '../utils/supports';\nimport useTitle from '../utils/useTitle';\n\nconst LIMIT = 20;\nconst TREND_CACHE_TIME = 10 * 60 * 1000; // 10 minutes\n\nconst fetchLinks = pmem(\n  (masto) => {\n    return masto.v1.trends.links.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nconst fetchHashtags = pmem(\n  (masto) => {\n    return masto.v1.trends.tags.list().next();\n  },\n  {\n    maxAge: TREND_CACHE_TIME,\n  },\n);\n\nfunction fetchTrendsStatuses(masto) {\n  if (supports('@pixelfed/trending')) {\n    return masto.pixelfed.v2.discover.posts.trending.list({\n      range: 'daily',\n    });\n  }\n  return masto.v1.trends.statuses.list({\n    limit: LIMIT,\n  });\n}\n\nfunction fetchLinkList(masto, params) {\n  return masto.v1.timelines.link.list(params);\n}\n\nfunction Trending({ columnMode, ...props }) {\n  const snapStates = useSnapshot(states);\n  const params = columnMode ? {} : useParams();\n  const { masto, instance } = api({\n    instance: props?.instance || params.instance,\n  });\n  const { masto: currentMasto, instance: currentInstance } = api();\n  const title = t`Trending (${instance})`;\n  useTitle(title, `/:instance?/trending`);\n  // const navigate = useNavigate();\n  const latestItem = useRef();\n\n  const sameCurrentInstance = instance === currentInstance;\n\n  const [hashtags, setHashtags] = useState([]);\n  const [links, setLinks] = useState([]);\n  const trendIterator = useRef();\n\n  async function fetchTrends(firstLoad) {\n    console.log('fetchTrend', firstLoad);\n    if (firstLoad || !trendIterator.current) {\n      trendIterator.current = fetchTrendsStatuses(masto);\n\n      // Get hashtags\n      if (supports('@mastodon/trending-hashtags')) {\n        try {\n          // const iterator = masto.v1.trends.tags.list();\n          const { value: tags } = await fetchHashtags(masto);\n          console.log('tags', tags);\n          if (tags?.length) {\n            setHashtags(tags);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n\n      // Get links\n      if (supports('@mastodon/trending-links')) {\n        try {\n          const { value } = await fetchLinks(masto, instance);\n          // 4 types available: link, photo, video, rich\n          // Only want links for now\n          const links = value?.filter?.((link) => link.type === 'link');\n          console.log('links', links);\n          if (links?.length) {\n            setLinks(links);\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n    const results = await trendIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      if (firstLoad) {\n        latestItem.current = value[0].id;\n      }\n\n      // value = filteredItems(value, 'public'); // Might not work here\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  // Link mentions\n  // https://github.com/mastodon/mastodon/pull/30381\n  const [currentLinkMentionsLoading, setCurrentLinkMentionsLoading] =\n    useState(false);\n  const currentLinkMentionsIterator = useRef();\n  const [currentLink, setCurrentLink] = useState(null);\n  const hasCurrentLink = !!currentLink;\n  const currentLinkRef = useRef();\n  const supportsTrendingLinkPosts =\n    sameCurrentInstance && supports('@mastodon/trending-link-posts');\n\n  useEffect(() => {\n    if (currentLink && currentLinkRef.current) {\n      currentLinkRef.current.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'center',\n      });\n    }\n  }, [currentLink]);\n\n  const prevCurrentLink = useRef();\n  async function fetchLinkMentions(firstLoad) {\n    if (firstLoad || !currentLinkMentionsIterator.current) {\n      setCurrentLinkMentionsLoading(true);\n      currentLinkMentionsIterator.current = fetchLinkList(masto, {\n        url: currentLink,\n      });\n    }\n    prevCurrentLink.current = currentLink;\n    const results = await currentLinkMentionsIterator.current.next();\n    let { value } = results;\n    if (value?.length) {\n      value = filteredItems(value, 'public');\n      value.forEach((item) => {\n        saveStatus(item, instance);\n      });\n    }\n    if (prevCurrentLink.current === currentLink) {\n      setCurrentLinkMentionsLoading(false);\n    }\n    return {\n      ...results,\n      value,\n    };\n  }\n\n  async function checkForUpdates() {\n    try {\n      const results = await masto.v1.trends.statuses\n        .list({\n          limit: 1,\n          // NOT SUPPORTED\n          // since_id: latestItem.current,\n        })\n        .next();\n      let { value } = results;\n      value = filteredItems(value, 'public');\n      if (value?.length && value[0].id !== latestItem.current) {\n        latestItem.current = value[0].id;\n        return true;\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const TimelineStart = useMemo(() => {\n    return (\n      <>\n        {!!hashtags.length && (\n          <div class=\"filter-bar expandable\">\n            <Icon icon=\"chart\" class=\"insignificant\" size=\"l\" />\n            {hashtags.map((tag, i) => {\n              const { name, history } = tag;\n              const total = history.reduce((acc, cur) => acc + +cur.uses, 0);\n              return (\n                <Link to={`/${instance}/t/${name}`} key={name}>\n                  <span dir=\"auto\">\n                    <span class=\"more-insignificant\">#</span>\n                    {name}\n                  </span>\n                  <span class=\"filter-count\">{shortenNumber(total)}</span>\n                </Link>\n              );\n            })}\n          </div>\n        )}\n        {!!links.length && (\n          <div class=\"links-bar\">\n            <header>\n              <h3>\n                <Trans>Trending News</Trans>\n              </h3>\n            </header>\n            {links.map((link) => {\n              const {\n                authorName,\n                authorUrl,\n                blurhash,\n                description,\n                height,\n                image,\n                imageDescription,\n                language,\n                providerName,\n                providerUrl,\n                publishedAt,\n                title,\n                url,\n                width,\n              } = link;\n              const domain = punycode.toUnicode(\n                URL.parse(url)\n                  .hostname.replace(/^www\\./, '')\n                  .replace(/\\/$/, ''),\n              );\n              let accentColor;\n              if (blurhash) {\n                const averageColor = getBlurHashAverageColor(blurhash);\n                const labAverageColor = rgb2oklab(averageColor);\n                accentColor = oklab2rgb([\n                  0.6,\n                  labAverageColor[1],\n                  labAverageColor[2],\n                ]);\n              }\n\n              return (\n                <div key={url}>\n                  <a\n                    ref={currentLink === url ? currentLinkRef : null}\n                    href={url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    class={\n                      hasCurrentLink\n                        ? currentLink === url\n                          ? 'active'\n                          : 'inactive'\n                        : ''\n                    }\n                    style={\n                      accentColor\n                        ? {\n                            '--accent-color': `rgb(${accentColor.join(',')})`,\n                            '--accent-alpha-color': `rgba(${accentColor.join(\n                              ',',\n                            )}, 0.4)`,\n                          }\n                        : {}\n                    }\n                  >\n                    <article>\n                      <figure>\n                        <img\n                          src={image}\n                          alt={imageDescription}\n                          width={width}\n                          height={height}\n                          loading=\"lazy\"\n                        />\n                      </figure>\n                      <div class=\"article-body\">\n                        <header>\n                          <div class=\"article-meta\">\n                            <span class=\"domain\">{domain}</span>{' '}\n                            {!!publishedAt && <>&middot; </>}\n                            {!!publishedAt && (\n                              <>\n                                <RelativeTime\n                                  datetime={publishedAt}\n                                  format=\"micro\"\n                                />\n                              </>\n                            )}\n                          </div>\n                          {!!title && (\n                            <h1\n                              class=\"title\"\n                              lang={language}\n                              dir=\"auto\"\n                              title={title}\n                            >\n                              {title}\n                            </h1>\n                          )}\n                        </header>\n                        {!!description && (\n                          <p\n                            class=\"description\"\n                            lang={language}\n                            dir=\"auto\"\n                            title={description}\n                          >\n                            {description}\n                          </p>\n                        )}\n                      </div>\n                    </article>\n                  </a>\n                  {supportsTrendingLinkPosts && (\n                    <button\n                      type=\"button\"\n                      class=\"small plain4 block\"\n                      onClick={() => {\n                        setCurrentLink(url);\n                      }}\n                      disabled={url === currentLink}\n                    >\n                      <Icon icon=\"comment2\" />{' '}\n                      <span>\n                        <Trans>Mentions</Trans>\n                      </span>{' '}\n                      <Icon icon=\"chevron-down\" />\n                    </button>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        )}\n        {supportsTrendingLinkPosts && !!links.length && (\n          <div\n            class={`timeline-header-block ${hasCurrentLink ? 'blended' : ''}`}\n          >\n            {hasCurrentLink ? (\n              <>\n                <div style={{ width: 50, flexShrink: 0, textAlign: 'center' }}>\n                  {currentLinkMentionsLoading ? (\n                    <Loader abrupt />\n                  ) : (\n                    <button\n                      type=\"button\"\n                      class=\"light\"\n                      onClick={() => {\n                        setCurrentLink(null);\n                      }}\n                    >\n                      <Icon icon=\"x\" alt={t`Back to showing trending posts`} />\n                    </button>\n                  )}\n                </div>\n                <p>\n                  <Trans>\n                    Showing posts mentioning{' '}\n                    <span class=\"link-text\">\n                      {currentLink\n                        .replace(/^https?:\\/\\/(www\\.)?/i, '')\n                        .replace(/\\/$/, '')}\n                    </span>\n                  </Trans>\n                </p>\n              </>\n            ) : (\n              <p class=\"insignificant\">\n                <Trans>Trending posts</Trans>\n              </p>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }, [hashtags, links, currentLink, currentLinkMentionsLoading]);\n\n  return (\n    <Timeline\n      key={instance}\n      title={title}\n      titleComponent={\n        <h1 class=\"header-double-lines\">\n          <b>\n            <Trans>Trending</Trans>\n          </b>\n          <div>{instance}</div>\n        </h1>\n      }\n      id=\"trending\"\n      instance={instance}\n      emptyText={t`No trending posts.`}\n      errorText={t`Unable to load posts`}\n      fetchItems={hasCurrentLink ? fetchLinkMentions : fetchTrends}\n      checkForUpdates={hasCurrentLink ? undefined : checkForUpdates}\n      checkForUpdatesInterval={5 * 60 * 1000} // 5 minutes\n      useItemID\n      headerStart={<></>}\n      boostsCarousel={snapStates.settings.boostsCarousel}\n      // allowFilters\n      filterContext=\"public\"\n      timelineStart={TimelineStart}\n      refresh={currentLink}\n      clearWhenRefresh\n      view={hasCurrentLink ? 'link-mentions' : undefined}\n      headerEnd={\n        <Menu2\n          portal\n          // setDownOverflow\n          overflow=\"auto\"\n          viewScroll=\"close\"\n          position=\"anchor\"\n          menuButton={\n            <button type=\"button\" class=\"plain\">\n              <Icon icon=\"more\" size=\"l\" alt={t`More`} />\n            </button>\n          }\n        >\n          <MenuItem\n            onClick={() => {\n              let newInstance = prompt(\n                t`Enter a new instance e.g. \"mastodon.social\"`,\n              );\n              if (!/\\./.test(newInstance)) {\n                if (newInstance) alert(t`Invalid instance`);\n                return;\n              }\n              if (newInstance) {\n                newInstance = newInstance.toLowerCase().trim();\n                // navigate(`/${newInstance}/trending`);\n                location.hash = `/${newInstance}/trending`;\n              }\n            }}\n          >\n            <Icon icon=\"bus\" />{' '}\n            <span>\n              <Trans>Go to another instance…</Trans>\n            </span>\n          </MenuItem>\n          {currentInstance !== instance && (\n            <MenuItem\n              onClick={() => {\n                location.hash = `/${currentInstance}/trending`;\n              }}\n            >\n              <Icon icon=\"bus\" />{' '}\n              <small class=\"menu-double-lines\">\n                <Trans>\n                  Go to my instance (<b>{currentInstance}</b>)\n                </Trans>\n              </small>\n            </MenuItem>\n          )}\n        </Menu2>\n      }\n    />\n  );\n}\n\nexport default Trending;\n","import { t, Trans } from '@lingui/macro';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useSnapshot } from 'valtio';\n\nimport Bookmarks from '../pages/bookmarks';\nimport Favourites from '../pages/favourites';\nimport Following from '../pages/following';\nimport Hashtag from '../pages/hashtag';\nimport List from '../pages/list';\nimport Mentions from '../pages/mentions';\nimport Notifications from '../pages/notifications';\nimport Public from '../pages/public';\nimport Search from '../pages/search';\nimport Trending from '../pages/trending';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nfunction Columns() {\n  useTitle(t`Home`, '/');\n  const snapStates = useSnapshot(states);\n  const { shortcuts } = snapStates;\n\n  console.debug('RENDER Columns', shortcuts);\n\n  const components = shortcuts.map((shortcut) => {\n    if (!shortcut) return null;\n    const { type, ...params } = shortcut;\n    const Component = {\n      following: Following,\n      notifications: Notifications,\n      list: List,\n      public: Public,\n      bookmarks: Bookmarks,\n      favourites: Favourites,\n      hashtag: Hashtag,\n      mentions: Mentions,\n      trending: Trending,\n      search: Search,\n    }[type];\n    if (!Component) return null;\n    // Don't show Search column with no query, for now\n    if (type === 'search' && !params.query) return null;\n    // Don't show List column with no list, for now\n    if (type === 'list' && !params.id) return null;\n    return (\n      <Component key={type + JSON.stringify(params)} {...params} columnMode />\n    );\n  });\n\n  useHotkeys(['1', '2', '3', '4', '5', '6', '7', '8', '9'], (e, handler) => {\n    try {\n      const index = parseInt(handler.keys[0], 10) - 1;\n      document.querySelectorAll('#columns > *')[index].focus();\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  return (\n    <div\n      id=\"columns\"\n      onContextMenu={(e) => {\n        // If right-click on header, but not links or buttons\n        if (\n          e.target.closest('.deck > header') &&\n          !e.target.closest('a') &&\n          !e.target.closest('button')\n        ) {\n          e.preventDefault();\n          states.showShortcutsSettings = true;\n        }\n      }}\n    >\n      {components}\n    </div>\n  );\n}\n\nexport default Columns;\n","import './notifications-menu.css';\n\nimport { msg, t, Trans } from '@lingui/macro';\nimport { useLingui } from '@lingui/react';\nimport { ControlledMenu } from '@szhsin/react-menu';\nimport { memo } from 'preact/compat';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSnapshot } from 'valtio';\n\nimport Columns from '../components/columns';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport Notification from '../components/notification';\nimport { api } from '../utils/api';\nimport db from '../utils/db';\nimport { massageNotifications2 } from '../utils/group-notifications';\nimport states, { saveStatus } from '../utils/states';\nimport { getCurrentAccountNS } from '../utils/store-utils';\n\nimport Following from './following';\nimport {\n  getGroupedNotifications,\n  mastoFetchNotifications,\n} from './notifications';\n\nfunction Home() {\n  const { _ } = useLingui();\n  const snapStates = useSnapshot(states);\n  useEffect(() => {\n    (async () => {\n      const keys = await db.drafts.keys();\n      if (keys.length) {\n        const ns = getCurrentAccountNS();\n        const ownKeys = keys.filter((key) => key.startsWith(ns));\n        if (ownKeys.length) {\n          states.showDrafts = true;\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {(snapStates.settings.shortcutsViewMode === 'multi-column' ||\n        (!snapStates.settings.shortcutsViewMode &&\n          snapStates.settings.shortcutsColumnsMode)) &&\n      !!snapStates.shortcuts?.length ? (\n        <Columns />\n      ) : (\n        <Following\n          title={_(msg`Home`)}\n          path=\"/\"\n          id=\"home\"\n          headerStart={false}\n          headerEnd={<NotificationsLink />}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NotificationsLink() {\n  const snapStates = useSnapshot(states);\n  const notificationLinkRef = useRef();\n  const [menuState, setMenuState] = useState(undefined);\n  return (\n    <>\n      <Link\n        ref={notificationLinkRef}\n        to=\"/notifications\"\n        class={`button plain notifications-button ${\n          snapStates.notificationsShowNew ? 'has-badge' : ''\n        } ${menuState || ''}`}\n        onClick={(e) => {\n          e.stopPropagation();\n          if (window.matchMedia('(min-width: calc(40em))').matches) {\n            e.preventDefault();\n            setMenuState((state) => (!state ? 'open' : undefined));\n          }\n        }}\n      >\n        <Icon icon=\"notification\" size=\"l\" alt={t`Notifications`} />\n      </Link>\n      <NotificationsMenu\n        state={menuState}\n        anchorRef={notificationLinkRef}\n        onClose={() => setMenuState(undefined)}\n      />\n    </>\n  );\n}\n\nconst NOTIFICATIONS_DISPLAY_LIMIT = 5;\nfunction NotificationsMenu({ anchorRef, state, onClose }) {\n  const { masto, instance } = api();\n  const snapStates = useSnapshot(states);\n  const [uiState, setUIState] = useState('default');\n\n  const notificationsIterator = mastoFetchNotifications();\n\n  async function fetchNotifications() {\n    const allNotifications = await notificationsIterator.next();\n    const notifications = massageNotifications2(allNotifications.value);\n\n    if (notifications?.length) {\n      notifications.forEach((notification) => {\n        saveStatus(notification.status, instance, {\n          skipThreading: true,\n        });\n      });\n\n      const groupedNotifications = getGroupedNotifications(notifications);\n\n      states.notificationsLast = groupedNotifications[0];\n      states.notifications = groupedNotifications;\n\n      // Update last read marker\n      masto.v1.markers\n        .create({\n          notifications: {\n            lastReadId: groupedNotifications[0].id,\n          },\n        })\n        .catch(() => {});\n    }\n\n    states.notificationsShowNew = false;\n    states.notificationsLastFetchTime = Date.now();\n    return allNotifications;\n  }\n\n  const [hasFollowRequests, setHasFollowRequests] = useState(false);\n  function fetchFollowRequests() {\n    return masto.v1.followRequests.list({\n      limit: 1,\n    });\n  }\n\n  function loadNotifications() {\n    setUIState('loading');\n    (async () => {\n      try {\n        await fetchNotifications();\n        const followRequests = await fetchFollowRequests();\n        setHasFollowRequests(!!followRequests?.length);\n        setUIState('default');\n      } catch (e) {\n        setUIState('error');\n      }\n    })();\n  }\n\n  useEffect(() => {\n    if (state === 'open') loadNotifications();\n  }, [state]);\n\n  const menuRef = useRef();\n\n  return (\n    <ControlledMenu\n      ref={menuRef}\n      menuClassName=\"notifications-menu\"\n      state={state}\n      anchorRef={anchorRef}\n      onClose={onClose}\n      portal={{\n        target: document.body,\n      }}\n      containerProps={{\n        onClick: () => {\n          menuRef.current?.closeMenu?.();\n        },\n      }}\n      overflow=\"auto\"\n      viewScroll=\"close\"\n      position=\"anchor\"\n      align=\"center\"\n      boundingBoxPadding=\"8 8 8 8\"\n    >\n      <header>\n        <h2>\n          <Trans>Notifications</Trans>\n        </h2>\n      </header>\n      <main>\n        {snapStates.notifications.length ? (\n          <>\n            {snapStates.notifications\n              .slice(0, NOTIFICATIONS_DISPLAY_LIMIT)\n              .map((notification) => (\n                <Notification\n                  key={notification._ids || notification.id}\n                  instance={instance}\n                  notification={notification}\n                  disableContextMenu\n                />\n              ))}\n          </>\n        ) : uiState === 'loading' ? (\n          <div class=\"ui-state\">\n            <Loader abrupt />\n          </div>\n        ) : (\n          uiState === 'error' && (\n            <div class=\"ui-state\">\n              <p>\n                <Trans>Unable to fetch notifications.</Trans>\n              </p>\n              <p>\n                <button type=\"button\" onClick={loadNotifications}>\n                  <Trans>Try again</Trans>\n                </button>\n              </p>\n            </div>\n          )\n        )}\n      </main>\n      <footer>\n        <Link to=\"/mentions\" class=\"button plain\">\n          <Icon icon=\"at\" />{' '}\n          <span>\n            <Trans>Mentions</Trans>\n          </span>\n        </Link>\n        <Link to=\"/notifications\" class=\"button plain2\">\n          {hasFollowRequests ? (\n            <Trans>\n              <span class=\"tag collapsed\">New</span>{' '}\n              <span>Follow Requests</span>\n            </Trans>\n          ) : (\n            <b>\n              <Trans>See all</Trans>\n            </b>\n          )}{' '}\n          <Icon icon=\"arrow-right\" />\n        </Link>\n      </footer>\n    </ControlledMenu>\n  );\n}\n\nexport default memo(Home);\n","// export const statusRegex = /\\/@([^@\\/]+)@?([^\\/]+)?\\/([^\\/]+)\\/?$/i;\n// export const statusNoteRegex = /\\/notes\\/([^\\/]+)\\/?$/i;\n\nconst statusPostRegexes = [\n  /^\\/@[^@\\/]+\\/(?:statuses|posts)\\/([^\\/]+)/i, // GoToSocial, Takahe\n  /\\/notes\\/([^\\/]+)/i, // Misskey, Firefish\n  /^\\/(?:notice|objects)\\/([a-z0-9-]+)/i, // Pleroma\n  /\\/@[^@\\/]+@?[^\\/]+?\\/([^\\/]+)/i, // Mastodon\n  /^\\/p\\/[^\\/]+\\/([^\\/]+)/i, // Pixelfed\n];\n\nexport function getInstanceStatusObject(url) {\n  // Regex /:username/:id, where username = @username or @username@domain, id = anything\n  const { hostname, pathname } = URL.parse(url);\n  // const [, username, domain, id] = pathname.match(statusRegex) || [];\n  for (const regex of statusPostRegexes) {\n    const [, id] = pathname.match(regex) || [];\n    console.log(pathname, regex, id);\n    if (id) {\n      return {\n        instance: hostname,\n        id,\n      };\n    }\n  }\n  return {};\n}\n\nfunction getInstanceStatusURL(url) {\n  const { instance, id } = getInstanceStatusObject(url);\n  if (instance && id) {\n    return `/${instance}/s/${id}`;\n  }\n  return null;\n}\n\nexport default getInstanceStatusURL;\n","import { t, Trans } from '@lingui/macro';\nimport { useLayoutEffect, useState } from 'preact/hooks';\nimport { useLocation } from 'react-router-dom';\n\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport { api } from '../utils/api';\nimport getInstanceStatusURL, {\n  getInstanceStatusObject,\n} from '../utils/get-instance-status-url';\n\nexport default function HttpRoute() {\n  const location = useLocation();\n  const url = location.pathname.replace(/^\\//, '');\n  const statusObject = getInstanceStatusObject(url);\n  // const statusURL = getInstanceStatusURL(url);\n  const statusURL = statusObject?.instance\n    ? `/${statusObject.instance}/s/${statusObject.id}`\n    : null;\n  const [uiState, setUIState] = useState('loading');\n\n  useLayoutEffect(() => {\n    setUIState('loading');\n    (async () => {\n      // Check if status returns 200\n      try {\n        const { instance, id } = statusObject;\n        if (id) {\n          const { masto } = api({ instance });\n          const status = await masto.v1.statuses.$select(id).fetch();\n          if (status) {\n            window.location.hash = statusURL + '?view=full';\n            return;\n          }\n        }\n      } catch (e) {}\n\n      // Fallback to search\n      {\n        const { masto: currentMasto, instance: currentInstance } = api();\n        const result = await currentMasto.v2.search.fetch({\n          q: url,\n          limit: 1,\n          resolve: true,\n        });\n        if (result.statuses.length) {\n          const status = result.statuses[0];\n          window.location.hash = `/${currentInstance}/s/${status.id}?view=full`;\n        } else if (result.accounts.length) {\n          const account = result.accounts[0];\n          window.location.hash = `/${currentInstance}/a/${account.id}`;\n        } else if (statusURL) {\n          // Fallback to original URL, which will probably show error\n          window.location.hash = statusURL + '?view=full';\n        } else {\n          setUIState('error');\n        }\n      }\n    })();\n  }, [statusURL]);\n\n  return (\n    <div class=\"ui-state\" tabIndex=\"-1\">\n      {uiState === 'loading' ? (\n        <>\n          <Loader abrupt />\n          <h2>\n            <Trans>Resolving…</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </>\n      ) : (\n        <>\n          <h2>\n            <Trans>Unable to resolve URL</Trans>\n          </h2>\n          <p>\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {url}\n            </a>\n          </p>\n        </>\n      )}\n      <hr />\n      <p>\n        <Link to=\"/\">\n          <Trans>Go home</Trans>\n        </Link>\n      </p>\n    </div>\n  );\n}\n","import './lists.css';\n\nimport { Plural, t, Trans } from '@lingui/macro';\nimport { useEffect, useReducer, useState } from 'preact/hooks';\n\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport ListAddEdit from '../components/list-add-edit';\nimport Loader from '../components/loader';\nimport Modal from '../components/modal';\nimport NavMenu from '../components/nav-menu';\nimport { fetchLists } from '../utils/lists';\nimport useTitle from '../utils/useTitle';\n\nfunction Lists() {\n  useTitle(t`Lists`, `/l`);\n  const [uiState, setUIState] = useState('default');\n\n  const [reloadCount, reload] = useReducer((c) => c + 1, 0);\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    setUIState('loading');\n    (async () => {\n      try {\n        const lists = await fetchLists();\n        console.log(lists);\n        setLists(lists);\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  }, [reloadCount]);\n\n  const [showListAddEditModal, setShowListAddEditModal] = useState(false);\n\n  return (\n    <div id=\"lists-page\" class=\"deck-container\" tabIndex=\"-1\">\n      <div class=\"timeline-deck deck\">\n        <header>\n          <div class=\"header-grid\">\n            <div class=\"header-side\">\n              <NavMenu />\n              <Link to=\"/\" class=\"button plain\">\n                <Icon icon=\"home\" size=\"l\" />\n              </Link>\n            </div>\n            <h1>\n              <Trans>Lists</Trans>\n            </h1>\n            <div class=\"header-side\">\n              <button\n                type=\"button\"\n                class=\"plain\"\n                onClick={() => setShowListAddEditModal(true)}\n              >\n                <Icon icon=\"plus\" size=\"l\" alt={t`New list`} />\n              </button>\n            </div>\n          </div>\n        </header>\n        <main>\n          {lists.length > 0 ? (\n            <>\n              <ul class=\"link-list\">\n                {lists.map((list) => (\n                  <li>\n                    <Link to={`/l/${list.id}`}>\n                      <span>\n                        <Icon icon=\"list\" /> <span>{list.title}</span>\n                      </span>\n                      {/* <button\n                      type=\"button\"\n                      class=\"plain\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        setShowListAddEditModal({\n                          list,\n                        });\n                      }}\n                    >\n                      <Icon icon=\"pencil\" />\n                    </button> */}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n              {lists.length > 1 && (\n                <footer class=\"ui-state\">\n                  <small class=\"insignificant\">\n                    <Plural value={lists.length} one=\"# list\" other=\"# lists\" />\n                  </small>\n                </footer>\n              )}\n            </>\n          ) : uiState === 'loading' ? (\n            <p class=\"ui-state\">\n              <Loader />\n            </p>\n          ) : uiState === 'error' ? (\n            <p class=\"ui-state\">\n              <Trans>Unable to load lists.</Trans>\n            </p>\n          ) : (\n            <p class=\"ui-state\">\n              <Trans>No lists yet.</Trans>\n            </p>\n          )}\n        </main>\n      </div>\n      {showListAddEditModal && (\n        <Modal\n          onClick={(e) => {\n            if (e.target === e.currentTarget) {\n              setShowListAddEditModal(false);\n            }\n          }}\n        >\n          <ListAddEdit\n            list={showListAddEditModal?.list}\n            onClose={(result) => {\n              if (result.state === 'success') {\n                reload();\n              }\n              setShowListAddEditModal(false);\n            }}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default Lists;\n","export default \"__VITE_ASSET__Y_wpqkTO__\"","const { PHANPY_CLIENT_NAME: CLIENT_NAME, PHANPY_WEBSITE: WEBSITE } = import.meta\n  .env;\n\nconst SCOPES = 'read write follow push';\n\nexport async function registerApplication({ instanceURL }) {\n  const registrationParams = new URLSearchParams({\n    client_name: CLIENT_NAME,\n    redirect_uris: location.origin + location.pathname,\n    scopes: SCOPES,\n    website: WEBSITE,\n  });\n  const registrationResponse = await fetch(\n    `https://${instanceURL}/api/v1/apps`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: registrationParams.toString(),\n    },\n  );\n  const registrationJSON = await registrationResponse.json();\n  console.log({ registrationJSON });\n  return registrationJSON;\n}\n\nexport async function getAuthorizationURL({ instanceURL, client_id }) {\n  const authorizationParams = new URLSearchParams({\n    client_id,\n    scope: SCOPES,\n    redirect_uri: location.origin + location.pathname,\n    // redirect_uri: 'urn:ietf:wg:oauth:2.0:oob',\n    response_type: 'code',\n  });\n  const authorizationURL = `https://${instanceURL}/oauth/authorize?${authorizationParams.toString()}`;\n  return authorizationURL;\n}\n\nexport async function getAccessToken({\n  instanceURL,\n  client_id,\n  client_secret,\n  code,\n}) {\n  const params = new URLSearchParams({\n    client_id,\n    client_secret,\n    redirect_uri: location.origin + location.pathname,\n    grant_type: 'authorization_code',\n    code,\n    scope: SCOPES,\n  });\n  const tokenResponse = await fetch(`https://${instanceURL}/oauth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: params.toString(),\n  });\n  const tokenJSON = await tokenResponse.json();\n  console.log({ tokenJSON });\n  return tokenJSON;\n}\n","import './login.css';\n\nimport { t, Trans } from '@lingui/macro';\nimport Fuse from 'fuse.js';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useSearchParams } from 'react-router-dom';\n\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport instancesListURL from '../data/instances.json?url';\nimport { getAuthorizationURL, registerApplication } from '../utils/auth';\nimport store from '../utils/store';\nimport useTitle from '../utils/useTitle';\n\nconst { PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE } = import.meta.env;\n\nfunction Login() {\n  useTitle('Log in');\n  const instanceURLRef = useRef();\n  const cachedInstanceURL = store.local.get('instanceURL');\n  const [uiState, setUIState] = useState('default');\n  const [searchParams] = useSearchParams();\n  const instance = searchParams.get('instance');\n  const submit = searchParams.get('submit');\n  const [instanceText, setInstanceText] = useState(\n    instance || cachedInstanceURL?.toLowerCase() || '',\n  );\n\n  const [instancesList, setInstancesList] = useState([]);\n  const searcher = useRef();\n  useEffect(() => {\n    (async () => {\n      try {\n        const res = await fetch(instancesListURL);\n        const data = await res.json();\n        setInstancesList(data);\n        searcher.current = new Fuse(data);\n      } catch (e) {\n        // Silently fail\n        console.error(e);\n      }\n    })();\n  }, []);\n\n  // useEffect(() => {\n  //   if (cachedInstanceURL) {\n  //     instanceURLRef.current.value = cachedInstanceURL.toLowerCase();\n  //   }\n  // }, []);\n\n  const submitInstance = (instanceURL) => {\n    if (!instanceURL) return;\n    store.local.set('instanceURL', instanceURL);\n\n    (async () => {\n      setUIState('loading');\n      try {\n        const { client_id, client_secret, vapid_key } =\n          await registerApplication({\n            instanceURL,\n          });\n\n        if (client_id && client_secret) {\n          store.session.set('clientID', client_id);\n          store.session.set('clientSecret', client_secret);\n          store.session.set('vapidKey', vapid_key);\n\n          location.href = await getAuthorizationURL({\n            instanceURL,\n            client_id,\n          });\n        } else {\n          alert('Failed to register application');\n        }\n        setUIState('default');\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n  };\n\n  const cleanInstanceText = instanceText\n    ? instanceText\n        .replace(/^https?:\\/\\//, '') // Remove protocol from instance URL\n        .replace(/\\/+$/, '') // Remove trailing slash\n        .replace(/^@?[^@]+@/, '') // Remove @?acct@\n        .trim()\n    : null;\n  const instanceTextLooksLikeDomain =\n    /[^\\s\\r\\n\\t\\/\\\\]+\\.[^\\s\\r\\n\\t\\/\\\\]+/.test(cleanInstanceText) &&\n    !/[\\s\\/\\\\@]/.test(cleanInstanceText);\n\n  const instancesSuggestions = cleanInstanceText\n    ? searcher.current\n        ?.search(cleanInstanceText, {\n          limit: 10,\n        })\n        ?.map((match) => match.item)\n    : [];\n\n  const selectedInstanceText = instanceTextLooksLikeDomain\n    ? cleanInstanceText\n    : instancesSuggestions?.length\n    ? instancesSuggestions[0]\n    : instanceText\n    ? instancesList.find((instance) => instance.includes(instanceText))\n    : null;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // const { elements } = e.target;\n    // let instanceURL = elements.instanceURL.value.toLowerCase();\n    // // Remove protocol from instance URL\n    // instanceURL = instanceURL.replace(/^https?:\\/\\//, '').replace(/\\/+$/, '');\n    // // Remove @acct@ or acct@ from instance URL\n    // instanceURL = instanceURL.replace(/^@?[^@]+@/, '');\n    // if (!/\\./.test(instanceURL)) {\n    //   instanceURL = instancesList.find((instance) =>\n    //     instance.includes(instanceURL),\n    //   );\n    // }\n    // submitInstance(instanceURL);\n    submitInstance(selectedInstanceText);\n  };\n\n  if (submit) {\n    useEffect(() => {\n      submitInstance(instance || selectedInstanceText);\n    }, []);\n  }\n\n  return (\n    <main id=\"login\" style={{ textAlign: 'center' }}>\n      <form onSubmit={onSubmit}>\n        <h1>\n          <img src={logo} alt=\"\" width=\"80\" height=\"80\" />\n          <br />\n          <Trans>Log in</Trans>\n        </h1>\n        <label>\n          <p>\n            <Trans>Instance</Trans>\n          </p>\n          <input\n            value={instanceText}\n            required\n            type=\"text\"\n            class=\"large\"\n            id=\"instanceURL\"\n            ref={instanceURLRef}\n            disabled={uiState === 'loading'}\n            // list=\"instances-list\"\n            autocorrect=\"off\"\n            autocapitalize=\"off\"\n            autocomplete=\"off\"\n            spellCheck={false}\n            placeholder={`instance domain`}\n            onInput={(e) => {\n              setInstanceText(e.target.value);\n            }}\n            dir=\"auto\"\n          />\n          {instancesSuggestions?.length > 0 ? (\n            <ul id=\"instances-suggestions\">\n              {instancesSuggestions.map((instance, i) => (\n                <li>\n                  <button\n                    type=\"button\"\n                    class=\"plain5\"\n                    onClick={() => {\n                      submitInstance(instance);\n                    }}\n                  >\n                    {instance}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <div id=\"instances-eg\">\n              <Trans>e.g. &ldquo;mastodon.social&rdquo;</Trans>\n            </div>\n          )}\n          {/* <datalist id=\"instances-list\">\n            {instancesList.map((instance) => (\n              <option value={instance} />\n            ))}\n          </datalist> */}\n        </label>\n        {uiState === 'error' && (\n          <p class=\"error\">\n            <Trans>\n              Failed to log in. Please try again or try another instance.\n            </Trans>\n          </p>\n        )}\n        <div>\n          <button\n            disabled={\n              uiState === 'loading' || !instanceText || !selectedInstanceText\n            }\n          >\n            {selectedInstanceText\n              ? t`Continue with ${selectedInstanceText}`\n              : t`Continue`}\n          </button>{' '}\n        </div>\n        <Loader hidden={uiState !== 'loading'} />\n        <hr />\n        {!DEFAULT_INSTANCE && (\n          <p>\n            <a href=\"https://joinmastodon.org/servers\" target=\"_blank\">\n              <Trans>Don't have an account? Create one!</Trans>\n            </a>\n          </p>\n        )}\n        <p>\n          <Link to=\"/\">\n            <Trans>Go home</Trans>\n          </Link>\n        </p>\n        <LangSelector />\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import './status.css';\n\nimport { Plural, t, Trans } from '@lingui/macro';\nimport { Menu, MenuDivider, MenuHeader, MenuItem } from '@szhsin/react-menu';\nimport debounce from 'just-debounce-it';\nimport pRetry from 'p-retry';\nimport { memo } from 'preact/compat';\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport punycode from 'punycode/';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { InView } from 'react-intersection-observer';\nimport { matchPath, useSearchParams } from 'react-router-dom';\nimport { useSnapshot } from 'valtio';\n\nimport Avatar from '../components/avatar';\nimport Icon from '../components/icon';\nimport Link from '../components/link';\nimport Loader from '../components/loader';\nimport MediaModal from '../components/media-modal';\nimport Menu2 from '../components/menu2';\nimport NameText from '../components/name-text';\nimport RelativeTime from '../components/relative-time';\nimport Status from '../components/status';\nimport { api } from '../utils/api';\nimport htmlContentLength from '../utils/html-content-length';\nimport shortenNumber from '../utils/shorten-number';\nimport states, {\n  getStatus,\n  saveStatus,\n  statusKey,\n  threadifyStatus,\n} from '../utils/states';\nimport statusPeek from '../utils/status-peek';\nimport { getCurrentAccount } from '../utils/store-utils';\nimport useScroll from '../utils/useScroll';\nimport useTitle from '../utils/useTitle';\n\nimport getInstanceStatusURL from './../utils/get-instance-status-url';\n\nconst LIMIT = 40;\nconst SUBCOMMENTS_OPEN_ALL_LIMIT = 10;\nconst MAX_WEIGHT = 5;\n\nlet cachedRepliesToggle = {};\nlet cachedStatusesMap = {};\nlet scrollPositions = {};\nfunction resetScrollPosition(id) {\n  delete cachedStatusesMap[id];\n  delete scrollPositions[id];\n}\n\nconst scrollIntoViewOptions = {\n  block: 'nearest',\n  inline: 'center',\n  behavior: 'smooth',\n};\n\n// Select all statuses except those inside collapsed details/summary\n// Hat-tip to @AmeliaBR@front-end.social\n// https://front-end.social/@AmeliaBR/109784776146144471\nconst STATUSES_SELECTOR =\n  '.status-link:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *), .status-focus:not(details:not([open]) > summary ~ *, details:not([open]) > summary ~ * *)';\n\nconst STATUS_URL_REGEX = /\\/s\\//i;\n\nfunction StatusPage(params) {\n  const { id } = params;\n  const { masto, instance } = api({ instance: params.instance });\n  const snapStates = useSnapshot(states);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaOnlyParam = searchParams.get('media-only');\n  const mediaIndex = parseInt(mediaParam || mediaOnlyParam, 10);\n  let showMedia = mediaIndex > 0;\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const mediaStatus = getStatus(mediaStatusID, instance);\n  if (mediaStatusID && !mediaStatus) {\n    showMedia = false;\n  }\n  const showMediaOnly = showMedia && !!mediaOnlyParam;\n\n  const sKey = statusKey(id, instance);\n  const [heroStatus, setHeroStatus] = useState(states.statuses[sKey]);\n  useEffect(() => {\n    if (states.statuses[sKey]) {\n      setHeroStatus(states.statuses[sKey]);\n    }\n  }, [sKey]);\n\n  const closeLink = useMemo(() => {\n    const { prevLocation } = states;\n    const pathname =\n      (prevLocation?.pathname || '') + (prevLocation?.search || '');\n    const matchStatusPath =\n      matchPath('/:instance/s/:id', pathname) || matchPath('/s/:id', pathname);\n    if (!pathname || matchStatusPath) {\n      return '/';\n    }\n    return pathname;\n  }, []);\n\n  useEffect(() => {\n    if (!heroStatus && showMedia) {\n      (async () => {\n        try {\n          const status = await masto.v1.statuses.$select(id).fetch();\n          saveStatus(status, instance);\n          setHeroStatus(status);\n        } catch (err) {\n          console.error(err);\n          alert('Unable to load post.');\n          location.hash = closeLink;\n        }\n      })();\n    }\n  }, [showMedia]);\n\n  const mediaAttachments = mediaStatusID\n    ? snapStates.statuses[statusKey(mediaStatusID, instance)]?.mediaAttachments\n    : heroStatus?.mediaAttachments;\n\n  const handleMediaClose = useCallback(() => {\n    if (\n      !window.matchMedia('(min-width: calc(40em + 350px))').matches &&\n      snapStates.prevLocation\n    ) {\n      history.back();\n    } else {\n      if (showMediaOnly) {\n        location.hash = closeLink;\n      } else {\n        searchParams.delete('media');\n        searchParams.delete('mediaStatusID');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [showMediaOnly, closeLink, snapStates.prevLocation]);\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      // carouselRef.current?.focus?.();\n      const $carousel = document.querySelector('.carousel');\n      if ($carousel) {\n        $carousel.focus();\n      }\n    }, 100);\n    return () => clearTimeout(timer);\n  }, [showMediaOnly]);\n\n  useEffect(() => {\n    const $deckContainers = document.querySelectorAll('.deck-container');\n    $deckContainers.forEach(($deckContainer) => {\n      $deckContainer.setAttribute('inert', '');\n    });\n    return () => {\n      $deckContainers.forEach(($deckContainer) => {\n        $deckContainer.removeAttribute('inert');\n      });\n    };\n  }, []);\n\n  return (\n    <div class=\"deck-backdrop\">\n      {showMedia ? (\n        mediaAttachments?.length ? (\n          <MediaModal\n            mediaAttachments={mediaAttachments}\n            statusID={mediaStatusID || id}\n            instance={instance}\n            lang={heroStatus?.language}\n            index={mediaIndex - 1}\n            onClose={handleMediaClose}\n          />\n        ) : (\n          <div class=\"media-modal-container loading\">\n            <Loader abrupt />\n          </div>\n        )\n      ) : (\n        <Link to={closeLink} />\n      )}\n      {!showMediaOnly && (\n        <StatusThread\n          id={id}\n          instance={params.instance}\n          closeLink={closeLink}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction StatusParent(props) {\n  const { linkable, to, onClick, ...restProps } = props;\n  return linkable ? (\n    <Link class=\"status-link\" to={to} onClick={onClick} {...restProps} />\n  ) : (\n    <div class=\"status-focus\" tabIndex={0} {...restProps} />\n  );\n}\n\nfunction StatusThread({ id, closeLink = '/', instance: propInstance }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mediaParam = searchParams.get('media');\n  const mediaStatusID = searchParams.get('mediaStatusID');\n  const showMedia = parseInt(mediaParam, 10) > 0;\n  const firstLoad = useRef(\n    !states.prevLocation &&\n      (history.length === 1 ||\n        ('navigation' in window && navigation?.entries?.()?.length === 1)),\n  );\n  const [viewMode, setViewMode] = useState(\n    searchParams.get('view') || firstLoad.current ? 'full' : null,\n  );\n  const translate = !!parseInt(searchParams.get('translate'));\n  const { masto, instance } = api({ instance: propInstance });\n  const {\n    masto: currentMasto,\n    instance: currentInstance,\n    authenticated,\n  } = api();\n  const sameInstance = instance === currentInstance;\n  const snapStates = useSnapshot(states);\n  const [statuses, setStatuses] = useState([]);\n  const [uiState, setUIState] = useState('default');\n  const heroStatusRef = useRef();\n  const sKey = statusKey(id, instance);\n  const totalDescendants = useRef(0);\n\n  const scrollableRef = useRef();\n  useEffect(() => {\n    scrollableRef.current?.focus();\n  }, []);\n  useEffect(() => {\n    const onScroll = debounce(() => {\n      // console.log('onScroll');\n      if (!scrollableRef.current) return;\n      const { scrollTop } = scrollableRef.current;\n      if (uiState !== 'loading') {\n        scrollPositions[id] = scrollTop;\n      }\n    }, 50);\n    scrollableRef.current?.addEventListener('scroll', onScroll, {\n      passive: true,\n    });\n    onScroll();\n    return () => {\n      onScroll.cancel();\n      scrollableRef.current?.removeEventListener('scroll', onScroll);\n    };\n  }, [id, uiState !== 'loading']);\n\n  const scrollOffsets = useRef();\n  const lastInitContextTS = useRef();\n  const initContext = ({ reloadHero } = {}) => {\n    console.debug('initContext', id);\n    setUIState('loading');\n    let heroTimer;\n\n    const cachedStatuses = cachedStatusesMap[id];\n    if (cachedStatuses) {\n      // Case 1: It's cached, let's restore them to make it snappy\n      const reallyCachedStatuses = cachedStatuses.filter(\n        (s) => states.statuses[sKey],\n        // Some are not cached in the global state, so we need to filter them out\n      );\n      setStatuses(reallyCachedStatuses);\n    } else {\n      // const heroIndex = statuses.findIndex((s) => s.id === id);\n      // if (heroIndex !== -1) {\n      //   // Case 2: It's in current statuses. Slice off all descendant statuses after the hero status to be safe\n      //   const slicedStatuses = statuses.slice(0, heroIndex + 1);\n      //   setStatuses(slicedStatuses);\n      // } else {\n      // Case 3: Not cached and not in statuses, let's start from scratch\n      setStatuses([{ id }]);\n      // }\n    }\n\n    (async () => {\n      const heroFetch = () =>\n        pRetry(() => masto.v1.statuses.$select(id).fetch(), {\n          retries: 4,\n        });\n      const contextFetch = pRetry(\n        () => masto.v1.statuses.$select(id).context.fetch(),\n        {\n          retries: 8,\n        },\n      );\n\n      const hasStatus = !!snapStates.statuses[sKey];\n      let heroStatus = snapStates.statuses[sKey];\n      if (hasStatus && !reloadHero) {\n        console.debug('Hero status is cached');\n      } else {\n        try {\n          heroStatus = await heroFetch();\n          saveStatus(heroStatus, instance);\n          // Give time for context to appear\n          await new Promise((resolve) => {\n            setTimeout(resolve, 100);\n          });\n        } catch (e) {\n          console.error(e);\n          setUIState('error');\n          return;\n        }\n      }\n\n      try {\n        const context = await contextFetch;\n        const { ancestors, descendants } = context;\n\n        totalDescendants.current = descendants?.length || 0;\n\n        const missingStatuses = new Set();\n        ancestors.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n          if (\n            status.inReplyToId &&\n            !ancestors.find((s) => s.id === status.inReplyToId)\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n        });\n        const ancestorsIsThread = ancestors.every(\n          (s) => s.account.id === heroStatus.account.id,\n        );\n        const nestedDescendants = [];\n        descendants.forEach((status) => {\n          saveStatus(status, instance, {\n            skipThreading: true,\n          });\n\n          if (\n            status.inReplyToId &&\n            !descendants.find((s) => s.id === status.inReplyToId) &&\n            status.inReplyToId !== heroStatus.id\n          ) {\n            missingStatuses.add(status.inReplyToId);\n          }\n\n          if (status.inReplyToAccountId === status.account.id) {\n            // If replying to self, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else if (status.inReplyToId === heroStatus.id) {\n            // If replying to the hero status, it's a reply, level 1\n            nestedDescendants.push(status);\n          } else if (\n            !status.inReplyToAccountId &&\n            nestedDescendants.find((s) => s.id === status.inReplyToId) &&\n            status.account.id === heroStatus.account.id\n          ) {\n            // If replying to hero's own statuses, it's part of the thread, level 1\n            nestedDescendants.push(status);\n          } else {\n            // If replying to someone else, it's a reply to a reply, level 2\n            const parent = descendants.find((s) => s.id === status.inReplyToId);\n            if (parent) {\n              if (!parent.__replies) {\n                parent.__replies = [];\n              }\n              parent.__replies.push(status);\n            } else {\n              // If no parent, something is wrong\n              console.warn('No parent found for', status);\n            }\n          }\n        });\n\n        console.log({ ancestors, descendants, nestedDescendants });\n        if (missingStatuses.size) {\n          console.error('Missing statuses', [...missingStatuses]);\n        }\n\n        function expandReplies(_replies) {\n          return _replies?.map((_r) => ({\n            id: _r.id,\n            account: _r.account,\n            repliesCount: _r.repliesCount,\n            content: _r.content,\n            weight: calcStatusWeight(_r),\n            replies: expandReplies(_r.__replies),\n          }));\n        }\n\n        const allStatuses = [\n          ...ancestors.map((s) => ({\n            id: s.id,\n            ancestor: true,\n            isThread: ancestorsIsThread,\n            accountID: s.account.id,\n            account: s.account,\n            repliesCount: s.repliesCount,\n            weight: calcStatusWeight(s),\n          })),\n          {\n            id,\n            accountID: heroStatus.account.id,\n            weight: calcStatusWeight(heroStatus),\n          },\n          ...nestedDescendants.map((s) => ({\n            id: s.id,\n            account: s.account,\n            accountID: s.account.id,\n            descendant: true,\n            thread: s.account.id === heroStatus.account.id,\n            weight: calcStatusWeight(s),\n            replies: expandReplies(s.__replies),\n          })),\n        ];\n\n        setUIState('default');\n        scrollOffsets.current = {\n          offsetTop: heroStatusRef.current?.offsetTop,\n          scrollTop: scrollableRef.current?.scrollTop,\n        };\n\n        // Set limit to hero's index\n        const heroLimit = allStatuses.findIndex((s) => s.id === id);\n        if (heroLimit >= limit) {\n          setLimit(heroLimit + 1);\n        }\n\n        console.log({ allStatuses });\n        setStatuses(allStatuses);\n        cachedStatusesMap[id] = allStatuses;\n\n        // Let's threadify this one\n        // Note that all non-hero statuses will trigger saveStatus which will threadify them too\n        // By right, at this point, all descendant statuses should be cached\n        threadifyStatus(heroStatus, instance);\n      } catch (e) {\n        console.error(e);\n        setUIState('error');\n      }\n    })();\n\n    lastInitContextTS.current = Date.now();\n\n    return () => {\n      clearTimeout(heroTimer);\n    };\n  };\n\n  useEffect(initContext, [id, masto]);\n\n  const [showRefresh, setShowRefresh] = useState(false);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const now = Date.now();\n      if (\n        lastInitContextTS.current &&\n        now - lastInitContextTS.current >= 60_000\n      ) {\n        setShowRefresh(true);\n      }\n    }, 60_000); // 1 minute\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    if (!statuses.length) return;\n    console.debug('STATUSES', statuses);\n    const scrollPosition = scrollPositions[id];\n    console.debug('scrollPosition', scrollPosition);\n    if (!!scrollPosition) {\n      console.debug('Case 1', {\n        id,\n        scrollPosition,\n      });\n      scrollableRef.current.scrollTop = scrollPosition;\n    } else if (scrollOffsets.current) {\n      const newScrollOffsets = {\n        offsetTop: heroStatusRef.current?.offsetTop,\n        scrollTop: scrollableRef.current?.scrollTop,\n      };\n      const newScrollTop =\n        newScrollOffsets.offsetTop -\n        scrollOffsets.current.offsetTop +\n        newScrollOffsets.scrollTop;\n      console.debug('Case 2', {\n        scrollOffsets: scrollOffsets.current,\n        newScrollOffsets,\n        newScrollTop,\n        statuses: [...statuses],\n      });\n      scrollableRef.current.scrollTop = newScrollTop;\n    } else if (statuses.length === 1) {\n      console.debug('Case 3', {\n        id,\n      });\n      scrollableRef.current.scrollTop = 0;\n    }\n\n    // RESET\n    scrollOffsets.current = null;\n  }, [statuses]);\n\n  useEffect(() => {\n    if (snapStates.reloadStatusPage <= 0) return;\n    // Delete the cache for the context\n    (async () => {\n      try {\n        const { instanceURL } = getCurrentAccount();\n        const contextURL = `https://${instanceURL}/api/v1/statuses/${id}/context`;\n        console.log('Clear cache', contextURL);\n        const apiCache = await caches.open('api');\n        await apiCache.delete(contextURL, { ignoreVary: true });\n\n        return initContext({\n          reloadHero: true,\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [snapStates.reloadStatusPage]);\n\n  useEffect(() => {\n    return () => {\n      // RESET\n      scrollPositions = {};\n      states.reloadStatusPage = 0;\n      cachedStatusesMap = {};\n      cachedRepliesToggle = {};\n      statusWeightCache.clear();\n    };\n  }, []);\n\n  const heroStatus = snapStates.statuses[sKey] || snapStates.statuses[id];\n  const heroDisplayName = useMemo(() => {\n    // Remove shortcodes from display name\n    if (!heroStatus) return '';\n    const { account } = heroStatus;\n    const div = document.createElement('div');\n    div.innerHTML = account.displayName;\n    return div.innerText.trim();\n  }, [heroStatus]);\n  const heroContentText = useMemo(() => {\n    if (!heroStatus) return '';\n    let text = statusPeek(heroStatus);\n    if (text.length > 64) {\n      // \"The title should ideally be less than 64 characters in length\"\n      // https://www.w3.org/Provider/Style/TITLE.html\n      text = text.slice(0, 64) + '…';\n    }\n    return text;\n  }, [heroStatus]);\n  useTitle(\n    heroDisplayName && heroContentText\n      ? `${heroDisplayName}: \"${heroContentText}\"`\n      : t`Post`,\n    '/:instance?/s/:id',\n  );\n\n  const postInstance = useMemo(() => {\n    if (!heroStatus) return;\n    const { url } = heroStatus;\n    if (!url) return;\n    return URL.parse(url).hostname;\n  }, [heroStatus]);\n  const postSameInstance = useMemo(() => {\n    if (!postInstance) return;\n    return postInstance === instance;\n  }, [postInstance, instance]);\n\n  const [limit, setLimit] = useState(LIMIT);\n  const showMore = useMemo(() => {\n    // return number of statuses to show\n    return statuses.length - limit;\n  }, [statuses.length, limit]);\n\n  const hasDescendants = statuses.some((s) => s.descendant);\n  const ancestors = statuses.filter((s) => s.ancestor);\n\n  const [heroInView, setHeroInView] = useState(true);\n  const heroPointer = useMemo(() => {\n    // get top offset of heroStatus\n    if (!heroStatusRef.current || heroInView) return null;\n    const { top } = heroStatusRef.current.getBoundingClientRect();\n    return top > 0 ? 'down' : 'up';\n  }, [heroInView]);\n\n  useHotkeys(\n    'esc',\n    () => {\n      location.hash = closeLink;\n    },\n    {\n      // If media is open, esc to close media first\n      // Else close the status page\n      enabled: !showMedia,\n      ignoreEventWhen: (e) => {\n        const hasModal = !!document.querySelector('#modal-container > *');\n        return hasModal;\n      },\n    },\n  );\n  // For backspace, will always close both media and status page\n  useHotkeys('backspace', () => {\n    location.hash = closeLink;\n  });\n\n  useHotkeys('j', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    console.log({ allStatusLinks });\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let nextStatus = allStatusLinks[activeStatusIndex + 1];\n      if (nextStatus) {\n        nextStatus.focus();\n        nextStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  useHotkeys('k', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    const activeStatusRect = activeStatus?.getBoundingClientRect();\n    const allStatusLinks = Array.from(\n      scrollableRef.current.querySelectorAll(STATUSES_SELECTOR),\n    );\n    if (\n      activeStatus &&\n      activeStatusRect.top < scrollableRef.current.clientHeight &&\n      activeStatusRect.bottom > 0\n    ) {\n      const activeStatusIndex = allStatusLinks.indexOf(activeStatus);\n      let prevStatus = allStatusLinks[activeStatusIndex - 1];\n      if (prevStatus) {\n        prevStatus.focus();\n        prevStatus.scrollIntoView(scrollIntoViewOptions);\n      }\n    } else {\n      // If active status is not in viewport, get the topmost status-link in viewport\n      const topmostStatusLink = allStatusLinks.find((statusLink) => {\n        const statusLinkRect = statusLink.getBoundingClientRect();\n        return statusLinkRect.top >= 44 && statusLinkRect.left >= 0; // 44 is the magic number for header height, not real\n      });\n      if (topmostStatusLink) {\n        topmostStatusLink.focus();\n        topmostStatusLink.scrollIntoView(scrollIntoViewOptions);\n      }\n    }\n  });\n\n  // NOTE: I'm not sure if 'x' is the best shortcut for this, might change it later\n  // IDEA: x is for expand\n  useHotkeys('x', () => {\n    const activeStatus = document.activeElement.closest(\n      '.status-link, .status-focus',\n    );\n    if (activeStatus) {\n      const details = activeStatus.nextElementSibling;\n      if (details && details.tagName.toLowerCase() === 'details') {\n        details.open = !details.open;\n      }\n    }\n  });\n\n  const [reachTopPost, setReachTopPost] = useState(false);\n  // const { nearReachStart } = useScroll({\n  //   scrollableRef,\n  //   distanceFromStartPx: 16,\n  // });\n\n  const initialPageState = useRef(showMedia ? 'media+status' : 'status');\n\n  const handleMediaClick = useCallback(\n    (e, i, media, status) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setSearchParams({\n        media: i + 1,\n        mediaStatusID: status.id,\n      });\n    },\n    [id],\n  );\n\n  const handleStatusLinkClick = useCallback((e, status) => {\n    resetScrollPosition(status.id);\n  }, []);\n\n  useEffect(() => {\n    let timer;\n    if (mediaStatusID && showMedia) {\n      timer = setTimeout(() => {\n        const status = scrollableRef.current?.querySelector(\n          `.status-link[href*=\"/${mediaStatusID}\"]`,\n        );\n        if (status) {\n          status.scrollIntoView(scrollIntoViewOptions);\n        }\n      }, 400); // After CSS transition\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [mediaStatusID, showMedia]);\n\n  const renderStatus = useCallback(\n    (status, i) => {\n      const {\n        id: statusID,\n        ancestor,\n        isThread,\n        descendant,\n        thread,\n        replies,\n        repliesCount,\n        weight,\n      } = status;\n      const isHero = statusID === id;\n      const isLinkable = isThread || ancestor;\n\n      return (\n        <li\n          key={statusID}\n          ref={isHero ? heroStatusRef : null}\n          class={`${ancestor ? 'ancestor' : ''} ${\n            descendant ? 'descendant' : ''\n          } ${thread ? 'thread' : ''} ${isHero ? 'hero' : ''}`}\n        >\n          {isHero ? (\n            <>\n              <InView\n                threshold={0.1}\n                onChange={(inView) => {\n                  queueMicrotask(() => {\n                    requestAnimationFrame(() => {\n                      setHeroInView(inView);\n                    });\n                  });\n                }}\n                class=\"status-focus\"\n                tabIndex={0}\n              >\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size=\"l\"\n                  enableTranslate\n                  forceTranslate={translate}\n                />\n              </InView>\n              {uiState !== 'loading' && !authenticated ? (\n                <div class=\"post-status-banner\">\n                  <p>\n                    <Trans>\n                      You're not logged in. Interactions (reply, boost, etc) are\n                      not possible.\n                    </Trans>\n                  </p>\n                  <Link to=\"/login\" class=\"button\">\n                    <Trans>Log in</Trans>\n                  </Link>\n                </div>\n              ) : (\n                !sameInstance && (\n                  <div class=\"post-status-banner\">\n                    <p>\n                      <Trans>\n                        This post is from another instance (<b>{instance}</b>).\n                        Interactions (reply, boost, etc) are not possible.\n                      </Trans>\n                    </p>\n                    <button\n                      type=\"button\"\n                      disabled={uiState === 'loading'}\n                      onClick={() => {\n                        setUIState('loading');\n                        (async () => {\n                          try {\n                            const results = await currentMasto.v2.search.fetch({\n                              q: heroStatus.url,\n                              type: 'statuses',\n                              resolve: true,\n                              limit: 1,\n                            });\n                            if (results.statuses.length) {\n                              const status = results.statuses[0];\n                              location.hash = currentInstance\n                                ? `/${currentInstance}/s/${status.id}`\n                                : `/s/${status.id}`;\n                            } else {\n                              throw new Error('No results');\n                            }\n                          } catch (e) {\n                            setUIState('default');\n                            alert(t`Error: ${e}`);\n                            console.error(e);\n                          }\n                        })();\n                      }}\n                    >\n                      <Icon icon=\"transfer\" />{' '}\n                      <Trans>\n                        Switch to my instance to enable interactions\n                      </Trans>\n                    </button>\n                  </div>\n                )\n              )}\n            </>\n          ) : (\n            <StatusParent\n              linkable={isLinkable}\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            >\n              {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`}\n              onClick={() => {\n                resetScrollPosition(statusID);\n              }}\n            > */}\n              {i === 0 && ancestor ? (\n                <InView\n                  threshold={0.5}\n                  onChange={(inView) => {\n                    queueMicrotask(() => {\n                      requestAnimationFrame(() => {\n                        setReachTopPost(inView);\n                      });\n                    });\n                  }}\n                >\n                  <Status\n                    statusID={statusID}\n                    instance={instance}\n                    withinContext\n                    size={thread || ancestor ? 'm' : 's'}\n                    enableTranslate\n                    onMediaClick={handleMediaClick}\n                    onStatusLinkClick={handleStatusLinkClick}\n                  />\n                </InView>\n              ) : (\n                <Status\n                  statusID={statusID}\n                  instance={instance}\n                  withinContext\n                  size={thread || ancestor ? 'm' : 's'}\n                  enableTranslate\n                  onMediaClick={handleMediaClick}\n                  onStatusLinkClick={handleStatusLinkClick}\n                  showActionsBar={!!descendant}\n                />\n              )}\n              {ancestor && repliesCount > 1 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={repliesCount}>\n                    {shortenNumber(repliesCount)}\n                  </span>\n                </div>\n              )}{' '}\n              {/* {replies?.length > LIMIT && (\n                        <div class=\"replies-link\">\n                          <Icon icon=\"comment\" />{' '}\n                          <span title={replies.length}>\n                            {shortenNumber(replies.length)}\n                          </span>\n                        </div>\n                      )} */}\n            </StatusParent>\n            // </Link>\n          )}\n          {descendant && replies?.length > 0 && (\n            <SubComments\n              instance={instance}\n              replies={replies}\n              hasParentThread={thread}\n              level={1}\n              accWeight={weight}\n              openAll={totalDescendants.current < SUBCOMMENTS_OPEN_ALL_LIMIT}\n              parentLink={{\n                to: instance ? `/${instance}/s/${statusID}` : `/s/${statusID}`,\n                onClick: () => resetScrollPosition(statusID),\n              }}\n            />\n          )}\n          {uiState === 'loading' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-loading\">\n                <Loader abrupt={heroStatus.repliesCount >= 3} />\n              </div>\n            )}\n          {uiState === 'error' &&\n            isHero &&\n            !!heroStatus?.repliesCount &&\n            !hasDescendants && (\n              <div class=\"status-error\">\n                <Trans>Unable to load replies.</Trans>\n                <br />\n                <button\n                  type=\"button\"\n                  class=\"plain\"\n                  onClick={() => {\n                    states.reloadStatusPage++;\n                  }}\n                >\n                  <Trans>Try again</Trans>\n                </button>\n              </div>\n            )}\n        </li>\n      );\n    },\n    [\n      id,\n      instance,\n      uiState,\n      authenticated,\n      sameInstance,\n      translate,\n      handleMediaClick,\n      handleStatusLinkClick,\n      hasDescendants,\n    ],\n  );\n\n  const prevLocationIsStatusPage = useMemo(() => {\n    // Navigation API\n    if ('navigation' in window && navigation?.entries) {\n      const prevEntry = navigation.entries()[navigation.currentEntry.index - 1];\n      if (prevEntry?.url) {\n        return STATUS_URL_REGEX.test(prevEntry.url);\n      }\n    }\n    return STATUS_URL_REGEX.test(states.prevLocation?.pathname);\n  }, [sKey]);\n\n  const moreStatusesKeys = useMemo(() => {\n    if (!showMore) return [];\n    const ids = [];\n    function getIDs(status) {\n      ids.push(status.id);\n      if (status.replies) {\n        status.replies.forEach(getIDs);\n      }\n    }\n    statuses.slice(limit).forEach(getIDs);\n    return ids.map((id) => statusKey(id, instance));\n  }, [showMore, statuses, limit, instance]);\n\n  const statusesList = useMemo(\n    () => statuses.slice(0, limit).map(renderStatus),\n    [statuses, limit, renderStatus],\n  );\n\n  // If there's spoiler in hero status, auto-expand it\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      if (!heroStatusRef.current) return;\n      const spoilerButton = heroStatusRef.current.querySelector(\n        '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n      );\n      if (spoilerButton) spoilerButton.click();\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [id]);\n\n  return (\n    <div\n      tabIndex=\"-1\"\n      ref={scrollableRef}\n      class={`status-deck deck contained ${\n        statuses.length > 1 ? 'padded-bottom' : ''\n      } ${\n        initialPageState.current === 'status' && !firstLoad.current\n          ? 'slide-in'\n          : ''\n      } ${viewMode ? `deck-view-${viewMode}` : ''}`}\n      onAnimationEnd={(e) => {\n        // Fix the bounce effect when switching viewMode\n        // `slide-in` animation kicks in when switching viewMode\n        if (initialPageState.current === 'status') {\n          // e.target.classList.remove('slide-in');\n          initialPageState.current = null;\n        }\n      }}\n    >\n      <header\n        class={`${uiState === 'loading' ? 'loading' : ''}`}\n        onDblClick={(e) => {\n          // reload statuses\n          states.reloadStatusPage++;\n        }}\n      >\n        {/* <div>\n            <Link class=\"button plain deck-close\" href={closeLink}>\n              <Icon icon=\"chevron-left\" size=\"xl\" />\n            </Link>\n          </div> */}\n        <div class=\"header-grid header-grid-2\">\n          <h1>\n            {prevLocationIsStatusPage && (\n              <button\n                type=\"button\"\n                class=\"plain deck-back\"\n                onClick={() => {\n                  history.back();\n                }}\n              >\n                <Icon icon=\"chevron-left\" size=\"xl\" alt={t`Back`} />\n              </button>\n            )}\n            {!heroInView && heroStatus && uiState !== 'loading' ? (\n              <>\n                <span class=\"hero-heading\">\n                  <NameText\n                    account={heroStatus.account}\n                    instance={instance}\n                    showAvatar\n                    short\n                  />{' '}\n                  <span class=\"insignificant\">\n                    &bull;{' '}\n                    <RelativeTime\n                      datetime={heroStatus.createdAt}\n                      format=\"micro\"\n                    />\n                  </span>\n                </span>{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    heroStatusRef.current.scrollIntoView({\n                      behavior: 'smooth',\n                      block: 'start',\n                    });\n                  }}\n                  title={t`Go to main post`}\n                >\n                  <Icon\n                    icon={heroPointer === 'down' ? 'arrow-down' : 'arrow-up'}\n                  />\n                </button>\n              </>\n            ) : (\n              <>\n                Post{' '}\n                <button\n                  type=\"button\"\n                  class=\"ancestors-indicator light small\"\n                  onClick={(e) => {\n                    // Scroll to top\n                    e.preventDefault();\n                    e.stopPropagation();\n                    scrollableRef.current.scrollTo({\n                      top: 0,\n                      behavior: 'smooth',\n                    });\n                  }}\n                  hidden={!ancestors.length || reachTopPost}\n                  title={t`${ancestors.length} posts above ‒ Go to top`}\n                >\n                  <Icon icon=\"arrow-up\" />\n                  {ancestors\n                    .filter(\n                      (a, i, arr) =>\n                        arr.findIndex((b) => b.accountID === a.accountID) === i,\n                    )\n                    .slice(0, 3)\n                    .map((ancestor) => (\n                      <Avatar\n                        key={ancestor.account.id}\n                        url={ancestor.account.avatar}\n                        alt={ancestor.account.displayName}\n                      />\n                    ))}\n                  {/* <Icon icon=\"comment\" />{' '} */}\n                  {ancestors.length > 3 && (\n                    <>\n                      {' '}\n                      <span class=\"insignificant\">\n                        {shortenNumber(ancestors.length)}\n                      </span>\n                    </>\n                  )}\n                </button>\n              </>\n            )}\n          </h1>\n          <div class=\"header-side\">\n            <button\n              type=\"button\"\n              class=\"plain4 button-switch-view\"\n              style={{\n                display: viewMode === 'full' ? '' : 'none',\n              }}\n              onClick={() => {\n                setViewMode(null);\n                searchParams.delete('media');\n                searchParams.delete('media-only');\n                searchParams.delete('view');\n                setSearchParams(searchParams);\n              }}\n              title={t`Switch to Side Peek view`}\n            >\n              <Icon icon=\"layout4\" size=\"l\" />\n            </button>\n            {showRefresh && (\n              <button\n                type=\"button\"\n                class=\"plain button-refresh\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                  setShowRefresh(false);\n                }}\n              >\n                <Icon icon=\"refresh\" size=\"l\" alt={t`Refresh`} />\n              </button>\n            )}\n            <Menu2\n              align=\"end\"\n              portal={{\n                // Need this, else the menu click will cause scroll jump\n                target: scrollableRef.current,\n              }}\n              menuButton={\n                <button type=\"button\" class=\"button plain4\">\n                  <Icon icon=\"more\" alt={t`More`} size=\"xl\" />\n                </button>\n              }\n            >\n              <MenuItem\n                disabled={uiState === 'loading'}\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Icon icon=\"refresh\" />\n                <span>\n                  <Trans>Refresh</Trans>\n                </span>\n              </MenuItem>\n              <MenuItem\n                className=\"menu-switch-view\"\n                onClick={() => {\n                  setViewMode(viewMode === 'full' ? null : 'full');\n                  searchParams.delete('media');\n                  searchParams.delete('media-only');\n                  if (viewMode === 'full') {\n                    searchParams.delete('view');\n                  } else {\n                    searchParams.set('view', 'full');\n                  }\n                  setSearchParams(searchParams);\n                }}\n              >\n                <Icon\n                  icon={\n                    {\n                      '': 'layout5',\n                      full: 'layout4',\n                    }[viewMode || '']\n                  }\n                />\n                <span>\n                  {viewMode === 'full'\n                    ? t`Switch to Side Peek view`\n                    : t`Switch to Full view`}\n                </span>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  // Click all buttons with class .spoiler but not .spoiling\n                  const buttons = Array.from(\n                    scrollableRef.current.querySelectorAll(\n                      '.spoiler-button:not(.spoiling), .spoiler-media-button:not(.spoiling)',\n                    ),\n                  );\n                  buttons.forEach((button) => {\n                    button.click();\n                  });\n                }}\n              >\n                <Icon icon=\"eye-open\" />{' '}\n                <span>\n                  <Trans>Show all sensitive content</Trans>\n                </span>\n              </MenuItem>\n              <MenuDivider />\n              <MenuHeader className=\"plain\">\n                <Trans>Experimental</Trans>\n              </MenuHeader>\n              <MenuItem\n                disabled={!postInstance || postSameInstance}\n                onClick={() => {\n                  const statusURL = getInstanceStatusURL(heroStatus.url);\n                  if (statusURL) {\n                    location.hash = statusURL;\n                  } else {\n                    alert(t`Unable to switch`);\n                  }\n                }}\n              >\n                <Icon icon=\"transfer\" />\n                <small class=\"menu-double-lines\">\n                  {postInstance\n                    ? t`Switch to post's instance (${punycode.toUnicode(\n                        postInstance,\n                      )})`\n                    : t`Switch to post's instance`}\n                </small>\n              </MenuItem>\n            </Menu2>\n            <Link class=\"button plain deck-close\" to={closeLink}>\n              <Icon icon=\"x\" size=\"xl\" alt={t`Close`} />\n            </Link>\n          </div>\n        </div>\n      </header>\n      {!!statuses.length && heroStatus ? (\n        <ul\n          class={`timeline flat contextual grow ${\n            uiState === 'loading' ? 'loading' : ''\n          }`}\n        >\n          {statusesList}\n          {showMore > 0 && (\n            <li>\n              <button\n                type=\"button\"\n                class=\"plain block show-more\"\n                disabled={uiState === 'loading'}\n                onClick={() => setLimit((l) => l + LIMIT)}\n                style={{ marginBlockEnd: '6em' }}\n                data-state-post-ids={moreStatusesKeys.join(' ')}\n              >\n                <div class=\"ib avatars-bunch\">\n                  {/* show avatars for first 5 statuses */}\n                  {statuses.slice(limit, limit + 5).map((status) => (\n                    <Avatar\n                      key={status.id}\n                      url={status.account.avatarStatic}\n                      // title={`${status.avatar.displayName} (@${status.avatar.acct})`}\n                    />\n                  ))}\n                </div>{' '}\n                <div class=\"ib\">\n                  <Trans>Show more…</Trans>{' '}\n                  <span class=\"tag\">\n                    {showMore > LIMIT ? `${LIMIT}+` : showMore}\n                  </span>\n                </div>\n              </button>\n            </li>\n          )}\n        </ul>\n      ) : (\n        <>\n          {uiState === 'loading' && (\n            <ul class=\"timeline flat contextual grow loading\">\n              <li>\n                <Status skeleton size=\"l\" />\n              </li>\n            </ul>\n          )}\n          {uiState === 'error' && (\n            <p class=\"ui-state\">\n              <Trans>Unable to load post</Trans>\n              <br />\n              <br />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  states.reloadStatusPage++;\n                }}\n              >\n                <Trans>Try again</Trans>\n              </button>\n            </p>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction SubComments({\n  replies,\n  instance,\n  hasParentThread,\n  level,\n  accWeight,\n  openAll,\n  parentLink,\n}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // Total comments count, including sub-replies\n  const diveDeep = (replies) => {\n    return replies.reduce((acc, reply) => {\n      const { repliesCount, replies } = reply;\n      const count = replies?.length || repliesCount;\n      return acc + count + diveDeep(replies || []);\n    }, 0);\n  };\n  const totalComments = replies.length + diveDeep(replies);\n  const sameCount = replies.length === totalComments;\n\n  // Get the first 3 accounts, unique by id\n  const accounts = replies\n    .map((r) => r.account)\n    .filter((a, i, arr) => arr.findIndex((b) => b.id === a.id) === i)\n    .slice(0, 3);\n\n  const totalWeight = useMemo(() => {\n    return replies?.reduce((acc, reply) => {\n      return acc + reply?.weight;\n    }, accWeight);\n  }, [accWeight, replies?.length]);\n\n  let open = false;\n  if (openAll) {\n    open = true;\n  } else if (totalWeight <= MAX_WEIGHT) {\n    open = true;\n  } else if (!hasParentThread && totalComments === 1) {\n    const shortReply = calcStatusWeight(replies[0]) < 2;\n    if (shortReply) open = true;\n  }\n  const openBefore = cachedRepliesToggle[replies[0].id];\n\n  const handleMediaClick = useCallback((e, i, media, status) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setSearchParams({\n      media: i + 1,\n      mediaStatusID: status.id,\n    });\n  }, []);\n\n  const detailsRef = useRef();\n  useLayoutEffect(() => {\n    function handleScroll(e) {\n      // NOTE: this scrollLeft works for RTL too\n      // Browsers do the magic for us\n      e.target.dataset.scrollLeft = e.target.scrollLeft;\n    }\n    detailsRef.current?.addEventListener('scroll', handleScroll, {\n      passive: true,\n    });\n    return () => {\n      detailsRef.current?.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <details\n      ref={detailsRef}\n      class=\"replies\"\n      open={openBefore || open}\n      onToggle={(e) => {\n        const { open } = e.target;\n        // use first reply as ID\n        cachedRepliesToggle[replies[0].id] = open;\n      }}\n      style={{\n        '--comments-level': level,\n      }}\n      data-comments-level={level}\n      data-comments-level-overflow={level > 4}\n    >\n      <summary class=\"replies-summary\" hidden={open}>\n        <span class=\"avatars\">\n          {accounts.map((a) => (\n            <Avatar\n              key={a.id}\n              url={a.avatarStatic}\n              title={`${a.displayName} @${a.username}`}\n              squircle={a?.bot}\n            />\n          ))}\n        </span>\n        <span class=\"replies-counts\">\n          <b>\n            <Plural\n              value={replies.length}\n              one=\"# reply\"\n              other={\n                <Trans>\n                  <span title={replies.length}>\n                    {shortenNumber(replies.length)}\n                  </span>{' '}\n                  replies\n                </Trans>\n              }\n            />\n          </b>\n          {!sameCount && totalComments > 1 && (\n            <>\n              {' '}\n              &middot;{' '}\n              <span>\n                <Plural\n                  value={totalComments}\n                  one=\"# comment\"\n                  other={\n                    <Trans>\n                      <span title={totalComments}>\n                        {shortenNumber(totalComments)}\n                      </span>{' '}\n                      comments\n                    </Trans>\n                  }\n                />\n              </span>\n            </>\n          )}\n        </span>\n        <Icon icon=\"chevron-down\" class=\"replies-summary-chevron\" />\n        {!!parentLink && (\n          <Link\n            class=\"replies-parent-link\"\n            to={parentLink.to}\n            onClick={parentLink.onClick}\n            title={t`View post with its replies`}\n          >\n            &raquo;\n          </Link>\n        )}\n      </summary>\n      <ul>\n        {replies.map((r) => (\n          <li key={r.id}>\n            {/* <Link\n              class=\"status-link\"\n              to={instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`}\n              onClick={() => {\n                resetScrollPosition(r.id);\n              }}\n            > */}\n            <div class=\"status-focus\" tabIndex={0}>\n              <Status\n                statusID={r.id}\n                instance={instance}\n                withinContext\n                size=\"s\"\n                enableTranslate\n                onMediaClick={handleMediaClick}\n                showActionsBar\n              />\n              {!r.replies?.length && r.repliesCount > 0 && (\n                <div class=\"replies-link\">\n                  <Icon icon=\"comment2\" alt={t`Replies`} />{' '}\n                  <span title={r.repliesCount}>\n                    {shortenNumber(r.repliesCount)}\n                  </span>\n                </div>\n              )}\n            </div>\n            {/* </Link> */}\n            {r.replies?.length && (\n              <SubComments\n                instance={instance}\n                replies={r.replies}\n                level={level + 1}\n                accWeight={!open ? r.weight : totalWeight}\n                openAll={openAll}\n                parentLink={{\n                  to: instance ? `/${instance}/s/${r.id}` : `/s/${r.id}`,\n                  onClick: () => {\n                    resetScrollPosition(r.id);\n                  },\n                }}\n              />\n            )}\n          </li>\n        ))}\n      </ul>\n    </details>\n  );\n}\n\nconst MEDIA_VIRTUAL_LENGTH = 140;\nconst POLL_VIRTUAL_LENGTH = 35;\nconst CARD_VIRTUAL_LENGTH = 70;\nconst WEIGHT_SEGMENT = 140;\nconst statusWeightCache = new Map();\nfunction calcStatusWeight(status) {\n  const cachedWeight = statusWeightCache.get(status.id);\n  if (cachedWeight) return cachedWeight;\n  const { spoilerText, content, mediaAttachments, poll, card } = status;\n  const length = htmlContentLength(spoilerText + content);\n  const mediaLength = mediaAttachments?.length ? MEDIA_VIRTUAL_LENGTH : 0;\n  const pollLength = (poll?.options?.length || 0) * POLL_VIRTUAL_LENGTH;\n  const cardLength =\n    card && (mediaAttachments?.length || poll?.options?.length)\n      ? 0\n      : CARD_VIRTUAL_LENGTH;\n  const totalLength = length + mediaLength + pollLength + cardLength;\n  const weight = totalLength / WEIGHT_SEGMENT;\n  statusWeightCache.set(status.id, weight);\n  return weight;\n}\n\nexport default memo(StatusPage);\n","import { useParams } from 'react-router-dom';\n\nimport Status from './status';\n\nexport default function StatusRoute() {\n  const params = useParams();\n  const { id, instance } = params;\n  return <Status id={id} instance={instance} />;\n}\n","export default \"__VITE_ASSET__W5CngKHO__\"","export default \"__VITE_ASSET__vmqRZ5q5__\"","export default \"__VITE_ASSET__DFAo1Udm__\"","export default \"__VITE_ASSET__D2_o1n6___\"","export default \"__VITE_ASSET__ySLnBMku__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20fill-rule='evenodd'%20stroke-linejoin='round'%20stroke-miterlimit='2'%20clip-rule='evenodd'%20viewBox='0%200%20102%2028'%3e%3cpath%20fill='none'%20d='M0%200h101.5v27.5H0z'/%3e%3cg%20fill-rule='nonzero'%3e%3cpath%20fill='url(%23a)'%20d='M2.32%2021.85c1.4%200%202.21-.85%202.21-2.3v-4.64H8.5c4.45%200%207.54-2.9%207.54-7.24%200-4.35-2.98-7.24-7.32-7.24h-6.4C.93.43.11%201.28.11%202.73v16.82c0%201.45.82%202.3%202.21%202.3Zm2.21-10.4V3.94h3c2.54%200%204%201.34%204%203.75s-1.47%203.76-4%203.76h-3Z'/%3e%3cpath%20fill='url(%23b)'%20d='M20.52%2021.88c1.25%200%202.13-.76%202.13-2.23v-7.04c0-2.07%201.2-3.49%203.21-3.49%201.95%200%202.95%201.23%202.95%203.25v7.28c0%201.47.89%202.23%202.13%202.23%201.26%200%202.14-.76%202.14-2.23v-8.18c0-3.64-1.99-5.9-5.48-5.9-2.38%200-4.1%201.12-4.93%203.1h-.09V2.3c0-1.38-.78-2.2-2.1-2.2-1.31%200-2.1.82-2.1%202.2v17.34c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23c)'%20d='M40.45%2021.82c1.96%200%203.93-.98%204.8-2.65h.1v.8c.08%201.27.89%201.91%202.05%201.91%201.21%200%202.08-.73%202.08-2.15v-8.95c0-3.17-2.63-5.25-6.65-5.25-3.26%200-5.78%201.16-6.5%203.04-.15.32-.23.63-.23.96%200%20.97.75%201.64%201.79%201.64.69%200%201.23-.26%201.7-.79.95-1.23%201.74-1.65%203.04-1.65%201.62%200%202.64.85%202.64%202.31v1.04l-3.95.24c-3.93.23-6.13%201.88-6.13%204.74%200%202.83%202.27%204.76%205.26%204.76Zm1.4-3.09c-1.43%200-2.4-.73-2.4-1.9%200-1.12.91-1.83%202.51-1.95l3.31-.2v1.14c0%201.7-1.54%202.91-3.41%202.91Z'/%3e%3cpath%20fill='url(%23d)'%20d='M54.37%2021.88c1.26%200%202.14-.76%202.14-2.23v-7.09c0-2.03%201.21-3.44%203.13-3.44s2.89%201.17%202.89%203.22v7.31c0%201.47.88%202.23%202.14%202.23%201.24%200%202.13-.76%202.13-2.23v-8.2c0-3.68-1.96-5.87-5.45-5.87-2.41%200-4%201.07-4.83%203.01h-.09v-.87c0-1.35-.85-2.17-2.14-2.17-1.28%200-2.06.82-2.06%202.15v11.95c0%201.47.9%202.23%202.14%202.23Z'/%3e%3cpath%20fill='url(%23e)'%20d='M71.65%2027.17c1.26%200%202.14-.76%202.14-2.23v-6h.09a5.15%205.15%200%200%200%204.88%202.88c3.92%200%206.35-3.05%206.35-8.1%200-5.07-2.44-8.1-6.43-8.1a5.12%205.12%200%200%200-4.86%202.99h-.09v-.85c0-1.45-.88-2.21-2.1-2.21-1.24%200-2.11.76-2.11%202.2v17.2c0%201.46.89%202.22%202.13%202.22Zm5.6-8.8c-2.1%200-3.47-1.8-3.47-4.65%200-2.81%201.37-4.67%203.47-4.67%202.14%200%203.49%201.83%203.49%204.67%200%202.86-1.35%204.66-3.5%204.66Z'/%3e%3cpath%20fill='url(%23f)'%20d='M89.61%2027.39c3.44%200%205.26-1.5%206.73-5.55l4.81-13.1a4%204%200%200%200%20.24-1.26c0-1.13-.85-1.93-2.08-1.93-1.1%200-1.71.51-2.07%201.7l-3.4%2010.9h-.08L90.35%207.28c-.36-1.25-.94-1.73-2.07-1.73-1.26%200-2.21.83-2.21%201.99%200%20.35.09.82.25%201.26l5%2013.21-.21.56c-.52%201.1-1.32%201.42-2.07%201.42l-.75-.01c-.96%200-1.56.54-1.56%201.4%200%201.29%201%202%202.88%202Z'/%3e%3c/g%3e%3cdefs%3e%3cradialGradient%20id='a'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='b'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='c'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='d'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='e'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3cradialGradient%20id='f'%20cx='0'%20cy='0'%20r='1'%20gradientTransform='rotate(28.51%20.06%20.22)%20scale(57.6252)'%20gradientUnits='userSpaceOnUse'%3e%3cstop%20offset='0'%20stop-color='%23a4bff7'/%3e%3cstop%20offset='1'%20stop-color='%236081e6'/%3e%3c/radialGradient%3e%3c/defs%3e%3c/svg%3e\"","import './welcome.css';\n\nimport { t, Trans } from '@lingui/macro';\n\nimport boostsCarouselUrl from '../assets/features/boosts-carousel.jpg';\nimport groupedNotificationsUrl from '../assets/features/grouped-notifications.jpg';\nimport multiColumnUrl from '../assets/features/multi-column.jpg';\nimport multiHashtagTimelineUrl from '../assets/features/multi-hashtag-timeline.jpg';\nimport nestedCommentsThreadUrl from '../assets/features/nested-comments-thread.jpg';\nimport logoText from '../assets/logo-text.svg';\nimport logo from '../assets/logo.svg';\n\nimport LangSelector from '../components/lang-selector';\nimport Link from '../components/link';\nimport states from '../utils/states';\nimport useTitle from '../utils/useTitle';\n\nconst {\n  PHANPY_DEFAULT_INSTANCE: DEFAULT_INSTANCE,\n  PHANPY_WEBSITE: WEBSITE,\n  PHANPY_PRIVACY_POLICY_URL: PRIVACY_POLICY_URL,\n  PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL: DEFAULT_INSTANCE_REGISTRATION_URL,\n} = import.meta.env;\nconst appSite = WEBSITE\n  ? WEBSITE.replace(/https?:\\/\\//g, '').replace(/\\/$/, '')\n  : null;\nconst appVersion = __BUILD_TIME__\n  ? `${__BUILD_TIME__.slice(0, 10).replace(/-/g, '.')}${\n      __COMMIT_HASH__ ? `.${__COMMIT_HASH__}` : ''\n    }`\n  : null;\n\nfunction Welcome() {\n  useTitle(null, ['/', '/welcome']);\n  return (\n    <main id=\"welcome\">\n      <div class=\"hero-container\">\n        <div class=\"hero-content\">\n          <h1>\n            <img\n              src={logo}\n              alt=\"\"\n              width=\"160\"\n              height=\"160\"\n              style={{\n                aspectRatio: '1/1',\n                marginBlockEnd: -16,\n              }}\n            />\n            <img src={logoText} alt=\"Phanpy\" width=\"200\" />\n          </h1>\n          <p class=\"desc\">\n            <Trans>A minimalistic opinionated Mastodon web client.</Trans>\n          </p>\n          <p>\n            <Link\n              to={\n                DEFAULT_INSTANCE\n                  ? `/login?instance=${DEFAULT_INSTANCE}&submit=1`\n                  : '/login'\n              }\n              class=\"button\"\n            >\n              {DEFAULT_INSTANCE ? t`Log in` : t`Log in with Mastodon`}\n            </Link>\n          </p>\n          {DEFAULT_INSTANCE && DEFAULT_INSTANCE_REGISTRATION_URL && (\n            <p>\n              <a href={DEFAULT_INSTANCE_REGISTRATION_URL} class=\"button plain5\">\n                <Trans>Sign up</Trans>\n              </a>\n            </p>\n          )}\n          {!DEFAULT_INSTANCE && (\n            <p class=\"insignificant\">\n              <small>\n                <Trans>\n                  Connect your existing Mastodon/Fediverse account.\n                  <br />\n                  Your credentials are not stored on this server.\n                </Trans>\n              </small>\n            </p>\n          )}\n        </div>\n        {(appSite || appVersion) && (\n          <p class=\"app-site-version\">\n            <small>\n              {appSite} {appVersion}\n            </small>\n          </p>\n        )}\n        <p>\n          <Trans>\n            <a href=\"https://github.com/cheeaun/phanpy\" target=\"_blank\">\n              Built\n            </a>{' '}\n            by{' '}\n            <a\n              href=\"https://mastodon.social/@cheeaun\"\n              target=\"_blank\"\n              onClick={(e) => {\n                e.preventDefault();\n                states.showAccount = 'cheeaun@mastodon.social';\n              }}\n            >\n              @cheeaun\n            </a>\n            .{' '}\n            <a href={PRIVACY_POLICY_URL} target=\"_blank\">\n              Privacy Policy\n            </a>\n            .\n          </Trans>\n        </p>\n        <div>\n          <LangSelector />\n        </div>\n      </div>\n      <div id=\"why-container\">\n        <div class=\"sections\">\n          <section>\n            <img\n              src={boostsCarouselUrl}\n              alt={t`Screenshot of Boosts Carousel`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Boosts Carousel</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Visually separate original posts and re-shared posts (boosted\n                posts).\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={nestedCommentsThreadUrl}\n              alt={t`Screenshot of nested comments thread`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Nested comments thread</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Effortlessly follow conversations. Semi-collapsible replies.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={groupedNotificationsUrl}\n              alt={t`Screenshot of grouped notifications`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Grouped notifications</Trans>\n            </h4>\n            <p>\n              <Trans>\n                Similar notifications are grouped and collapsed to reduce\n                clutter.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiColumnUrl}\n              alt={t`Screenshot of multi-column UI`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Single or multi-column</Trans>\n            </h4>\n            <p>\n              <Trans>\n                By default, single column for zen-mode seekers. Configurable\n                multi-column for power users.\n              </Trans>\n            </p>\n          </section>\n          <section>\n            <img\n              src={multiHashtagTimelineUrl}\n              alt={t`Screenshot of multi-hashtag timeline with a form to add more hashtags`}\n              loading=\"lazy\"\n            />\n            <h4>\n              <Trans>Multi-hashtag timeline</Trans>\n            </h4>\n            <p>\n              <Trans>Up to 5 hashtags combined into a single timeline.</Trans>\n            </p>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Welcome;\n","// Replace alert() with toastify-js\nimport Toastify from 'toastify-js';\n\nconst nativeAlert = window.alert;\nif (!window.__nativeAlert) window.__nativeAlert = nativeAlert;\n\nwindow.alert = function (message) {\n  console.debug(\n    'ALERT: This is a custom alert() function. Native alert() is still available as window.__nativeAlert()',\n  );\n  // If Error object, show the message\n  if (message instanceof Error && message?.message) {\n    message = message.message;\n  }\n  // If not string, stringify it\n  if (typeof message !== 'string') {\n    message = JSON.stringify(message);\n  }\n\n  const toast = Toastify({\n    text: message,\n    className: 'alert',\n    gravity: 'top',\n    position: 'center',\n    duration: 10_000,\n    offset: {\n      y: 48,\n    },\n    onClick: () => {\n      toast.hideToast();\n    },\n  });\n  toast.showToast();\n};\n","import './app.css';\n\nimport { useLingui } from '@lingui/react';\nimport debounce from 'just-debounce-it';\nimport {\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'preact/hooks';\nimport { matchPath, Route, Routes, useLocation } from 'react-router-dom';\n\nimport 'swiped-events';\n\nimport { subscribe } from 'valtio';\n\nimport BackgroundService from './components/background-service';\nimport ComposeButton from './components/compose-button';\nimport { ICONS } from './components/ICONS';\nimport KeyboardShortcutsHelp from './components/keyboard-shortcuts-help';\nimport Loader from './components/loader';\nimport Modals from './components/modals';\nimport NotificationService from './components/notification-service';\nimport SearchCommand from './components/search-command';\nimport Shortcuts from './components/shortcuts';\nimport NotFound from './pages/404';\nimport AccountStatuses from './pages/account-statuses';\nimport Bookmarks from './pages/bookmarks';\nimport Catchup from './pages/catchup';\nimport Favourites from './pages/favourites';\nimport Filters from './pages/filters';\nimport FollowedHashtags from './pages/followed-hashtags';\nimport Following from './pages/following';\nimport Hashtag from './pages/hashtag';\nimport Home from './pages/home';\nimport HttpRoute from './pages/http-route';\nimport List from './pages/list';\nimport Lists from './pages/lists';\nimport Login from './pages/login';\nimport Mentions from './pages/mentions';\nimport Notifications from './pages/notifications';\nimport Public from './pages/public';\nimport Search from './pages/search';\nimport StatusRoute from './pages/status-route';\nimport Trending from './pages/trending';\nimport Welcome from './pages/welcome';\nimport {\n  api,\n  initAccount,\n  initClient,\n  initInstance,\n  initPreferences,\n} from './utils/api';\nimport { getAccessToken } from './utils/auth';\nimport focusDeck from './utils/focus-deck';\nimport states, { initStates, statusKey } from './utils/states';\nimport store from './utils/store';\nimport { getCurrentAccount, setCurrentAccountID } from './utils/store-utils';\n\nimport './utils/toast-alert';\n\nwindow.__STATES__ = states;\nwindow.__STATES_STATS__ = () => {\n  const keys = [\n    'statuses',\n    'accounts',\n    'spoilers',\n    'unfurledLinks',\n    'statusQuotes',\n  ];\n  const counts = {};\n  keys.forEach((key) => {\n    counts[key] = Object.keys(states[key]).length;\n  });\n  console.warn('STATE stats', counts);\n\n  const { statuses } = states;\n  const unmountedPosts = [];\n  for (const key in statuses) {\n    const $post = document.querySelector(\n      `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n    );\n    if (!$post) {\n      unmountedPosts.push(key);\n    }\n  }\n  console.warn('Unmounted posts', unmountedPosts.length, unmountedPosts);\n};\n\n// Experimental \"garbage collection\" for states\n// Every 15 minutes\n// Only posts for now\nsetInterval(() => {\n  if (!window.__IDLE__) return;\n  const { statuses, unfurledLinks, notifications } = states;\n  let keysCount = 0;\n  const { instance } = api();\n  for (const key in statuses) {\n    if (!window.__IDLE__) break;\n    try {\n      const $post = document.querySelector(\n        `[data-state-post-id~=\"${key}\"], [data-state-post-ids~=\"${key}\"]`,\n      );\n      const postInNotifications = notifications.some(\n        (n) => key === statusKey(n.status?.id, instance),\n      );\n      if (!$post && !postInNotifications) {\n        delete states.statuses[key];\n        delete states.statusQuotes[key];\n        for (const link in unfurledLinks) {\n          const unfurled = unfurledLinks[link];\n          const sKey = statusKey(unfurled.id, unfurled.instance);\n          if (sKey === key) {\n            delete states.unfurledLinks[link];\n            break;\n          }\n        }\n        keysCount++;\n      }\n    } catch (e) {}\n  }\n  if (keysCount) {\n    console.info(`GC: Removed ${keysCount} keys`);\n  }\n}, 15 * 60 * 1000);\n\n// Preload icons\n// There's probably a better way to do this\n// Related: https://github.com/vitejs/vite/issues/10600\nsetTimeout(() => {\n  for (const icon in ICONS) {\n    setTimeout(() => {\n      if (Array.isArray(ICONS[icon])) {\n        ICONS[icon][0]?.();\n      } else if (typeof ICONS[icon] === 'object') {\n        ICONS[icon].module?.();\n      } else {\n        ICONS[icon]?.();\n      }\n    }, 1);\n  }\n}, 5000);\n\n(() => {\n  window.__IDLE__ = true;\n  const nonIdleEvents = [\n    'mousemove',\n    'mousedown',\n    'resize',\n    'keydown',\n    'touchstart',\n    'pointerdown',\n    'pointermove',\n    'wheel',\n  ];\n  const setIdle = () => {\n    window.__IDLE__ = true;\n  };\n  const IDLE_TIME = 3_000; // 3 seconds\n  const debouncedSetIdle = debounce(setIdle, IDLE_TIME);\n  const onNonIdle = () => {\n    window.__IDLE__ = false;\n    debouncedSetIdle();\n  };\n  nonIdleEvents.forEach((event) => {\n    window.addEventListener(event, onNonIdle, {\n      passive: true,\n      capture: true,\n    });\n  });\n  window.addEventListener('blur', setIdle, {\n    passive: true,\n  });\n  // When cursor leaves the window, set idle\n  document.documentElement.addEventListener(\n    'mouseleave',\n    (e) => {\n      if (!e.relatedTarget && !e.toElement) {\n        setIdle();\n      }\n    },\n    {\n      passive: true,\n    },\n  );\n  // document.addEventListener(\n  //   'visibilitychange',\n  //   () => {\n  //     if (document.visibilityState === 'visible') {\n  //       onNonIdle();\n  //     }\n  //   },\n  //   {\n  //     passive: true,\n  //   },\n  // );\n})();\n\n// Possible fix for iOS PWA theme-color bug\n// It changes when loading web pages in \"webview\"\nconst isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\nif (isIOS) {\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      const theme = store.local.get('theme');\n      let $meta;\n      if (theme) {\n        // Get current meta\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][data-theme-setting=\"manual\"]`,\n        );\n        if ($meta) {\n          const color = $meta.content;\n          const tempColor =\n            theme === 'light'\n              ? $meta.dataset.themeLightColorTemp\n              : $meta.dataset.themeDarkColorTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      } else {\n        // Get current color scheme\n        const colorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n          .matches\n          ? 'dark'\n          : 'light';\n        // Get current theme-color\n        $meta = document.querySelector(\n          `meta[name=\"theme-color\"][media*=\"${colorScheme}\"]`,\n        );\n        if ($meta) {\n          const color = $meta.dataset.content;\n          const tempColor = $meta.dataset.contentTemp;\n          $meta.content = tempColor || '';\n          setTimeout(() => {\n            $meta.content = color;\n          }, 10);\n        }\n      }\n    }\n  });\n}\n\n{\n  const theme = store.local.get('theme');\n  // If there's a theme, it's NOT auto\n  if (theme) {\n    // dark | light\n    document.documentElement.classList.add(`is-${theme}`);\n    document\n      .querySelector('meta[name=\"color-scheme\"]')\n      .setAttribute('content', theme || 'dark light');\n\n    // Enable manual theme <meta>\n    const $manualMeta = document.querySelector(\n      'meta[data-theme-setting=\"manual\"]',\n    );\n    if ($manualMeta) {\n      $manualMeta.name = 'theme-color';\n      $manualMeta.content =\n        theme === 'light'\n          ? $manualMeta.dataset.themeLightColor\n          : $manualMeta.dataset.themeDarkColor;\n    }\n    // Disable auto theme <meta>s\n    const $autoMetas = document.querySelectorAll(\n      'meta[data-theme-setting=\"auto\"]',\n    );\n    $autoMetas.forEach((m) => {\n      m.name = '';\n    });\n  }\n  const textSize = store.local.get('textSize');\n  if (textSize) {\n    document.documentElement.style.setProperty('--text-size', `${textSize}px`);\n  }\n}\n\nsubscribe(states, (changes) => {\n  for (const [action, path, value, prevValue] of changes) {\n    // Change #app dataset based on settings.shortcutsViewMode\n    if (path.join('.') === 'settings.shortcutsViewMode') {\n      const $app = document.getElementById('app');\n      if ($app) {\n        $app.dataset.shortcutsViewMode = states.shortcuts?.length ? value : '';\n      }\n    }\n\n    // Add/Remove cloak class to body\n    if (path.join('.') === 'settings.cloakMode') {\n      const $body = document.body;\n      $body.classList.toggle('cloak', value);\n    }\n  }\n});\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [uiState, setUIState] = useState('loading');\n  useLingui();\n\n  useEffect(() => {\n    const instanceURL = store.local.get('instanceURL');\n    const code = decodeURIComponent(\n      (window.location.search.match(/code=([^&]+)/) || [, ''])[1],\n    );\n\n    if (code) {\n      console.log({ code });\n      // Clear the code from the URL\n      window.history.replaceState(\n        {},\n        document.title,\n        window.location.pathname || '/',\n      );\n\n      const clientID = store.session.get('clientID');\n      const clientSecret = store.session.get('clientSecret');\n      const vapidKey = store.session.get('vapidKey');\n\n      (async () => {\n        setUIState('loading');\n        const { access_token: accessToken } = await getAccessToken({\n          instanceURL,\n          client_id: clientID,\n          client_secret: clientSecret,\n          code,\n        });\n\n        const client = initClient({ instance: instanceURL, accessToken });\n        await Promise.allSettled([\n          initPreferences(client),\n          initInstance(client, instanceURL),\n          initAccount(client, instanceURL, accessToken, vapidKey),\n        ]);\n        initStates();\n\n        setIsLoggedIn(true);\n        setUIState('default');\n      })();\n    } else {\n      window.__IGNORE_GET_ACCOUNT_ERROR__ = true;\n      const account = getCurrentAccount();\n      if (account) {\n        setCurrentAccountID(account.info.id);\n        const { client } = api({ account });\n        const { instance } = client;\n        // console.log('masto', masto);\n        initStates();\n        setUIState('loading');\n        (async () => {\n          try {\n            await initPreferences(client);\n            await initInstance(client, instance);\n          } catch (e) {\n          } finally {\n            setIsLoggedIn(true);\n            setUIState('default');\n          }\n        })();\n      } else {\n        setUIState('default');\n      }\n    }\n  }, []);\n\n  let location = useLocation();\n  states.currentLocation = location.pathname;\n  // useLayoutEffect(() => {\n  //   states.currentLocation = location.pathname;\n  // }, [location.pathname]);\n\n  useEffect(focusDeck, [location, isLoggedIn]);\n\n  if (/\\/https?:/.test(location.pathname)) {\n    return <HttpRoute />;\n  }\n\n  return (\n    <>\n      <PrimaryRoutes isLoggedIn={isLoggedIn} loading={uiState === 'loading'} />\n      <SecondaryRoutes isLoggedIn={isLoggedIn} />\n      {uiState === 'default' && (\n        <Routes>\n          <Route path=\"/:instance?/s/:id\" element={<StatusRoute />} />\n        </Routes>\n      )}\n      {isLoggedIn && <ComposeButton />}\n      {isLoggedIn && <Shortcuts />}\n      <Modals />\n      {isLoggedIn && <NotificationService />}\n      <BackgroundService isLoggedIn={isLoggedIn} />\n      {uiState !== 'loading' && <SearchCommand onClose={focusDeck} />}\n      <KeyboardShortcutsHelp />\n    </>\n  );\n}\n\nfunction PrimaryRoutes({ isLoggedIn, loading }) {\n  const location = useLocation();\n  const nonRootLocation = useMemo(() => {\n    const { pathname } = location;\n    return !/^\\/(login|welcome)/i.test(pathname);\n  }, [location]);\n\n  return (\n    <Routes location={nonRootLocation || location}>\n      <Route\n        path=\"/\"\n        element={\n          isLoggedIn ? (\n            <Home />\n          ) : loading ? (\n            <Loader id=\"loader-root\" />\n          ) : (\n            <Welcome />\n          )\n        }\n      />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/welcome\" element={<Welcome />} />\n    </Routes>\n  );\n}\n\nfunction getPrevLocation() {\n  return states.prevLocation || null;\n}\nfunction SecondaryRoutes({ isLoggedIn }) {\n  // const snapStates = useSnapshot(states);\n  const location = useLocation();\n  // const prevLocation = snapStates.prevLocation;\n  const backgroundLocation = useRef(getPrevLocation());\n\n  const isModalPage = useMemo(() => {\n    return (\n      matchPath('/:instance/s/:id', location.pathname) ||\n      matchPath('/s/:id', location.pathname)\n    );\n  }, [location.pathname, matchPath]);\n  if (isModalPage) {\n    if (!backgroundLocation.current)\n      backgroundLocation.current = getPrevLocation();\n  } else {\n    backgroundLocation.current = null;\n  }\n  console.debug({\n    backgroundLocation: backgroundLocation.current,\n    location,\n  });\n\n  return (\n    <Routes location={backgroundLocation.current || location}>\n      {isLoggedIn && (\n        <>\n          <Route path=\"/notifications\" element={<Notifications />} />\n          <Route path=\"/mentions\" element={<Mentions />} />\n          <Route path=\"/following\" element={<Following />} />\n          <Route path=\"/b\" element={<Bookmarks />} />\n          <Route path=\"/f\" element={<Favourites />} />\n          <Route path=\"/l\">\n            <Route index element={<Lists />} />\n            <Route path=\":id\" element={<List />} />\n          </Route>\n          <Route path=\"/fh\" element={<FollowedHashtags />} />\n          <Route path=\"/ft\" element={<Filters />} />\n          <Route path=\"/catchup\" element={<Catchup />} />\n        </>\n      )}\n      <Route path=\"/:instance?/t/:hashtag\" element={<Hashtag />} />\n      <Route path=\"/:instance?/a/:id\" element={<AccountStatuses />} />\n      <Route path=\"/:instance?/p\">\n        <Route index element={<Public />} />\n        <Route path=\"l\" element={<Public local />} />\n      </Route>\n      <Route path=\"/:instance?/trending\" element={<Trending />} />\n      <Route path=\"/:instance?/search\" element={<Search />} />\n      {/* <Route path=\"/:anything\" element={<NotFound />} /> */}\n    </Routes>\n  );\n}\n\nexport { App };\n","import './index.css';\nimport './cloak-mode.css';\nimport './polyfills';\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\n// Polyfill needed for Firefox < 122\n// https://bugzilla.mozilla.org/show_bug.cgi?id=1423593\n// import '@formatjs/intl-segmenter/polyfill';\nimport { render } from 'preact';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './app';\nimport { initActivateLang } from './utils/lang';\n\ninitActivateLang();\n\nif (import.meta.env.DEV) {\n  import('preact/debug');\n}\n\nrender(\n  <I18nProvider i18n={i18n}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </I18nProvider>,\n  document.getElementById('app'),\n);\n\n// Storage cleanup\nsetTimeout(() => {\n  try {\n    // Clean up iconify localStorage\n    Object.keys(localStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        localStorage.removeItem(key);\n      }\n    });\n    Object.keys(sessionStorage).forEach((key) => {\n      if (key.startsWith('iconify')) {\n        sessionStorage.removeItem(key);\n      }\n    });\n\n    // Clean up old settings key\n    localStorage.removeItem('settings:boostsCarousel');\n  } catch (e) {}\n}, 5000);\n\nwindow.__CLOAK__ = () => {\n  document.body.classList.toggle('cloak');\n};\n"],"names":["functionDebounce","debounce","fn","wait","callFirst","timeout","debouncedFn","clear","flush","call","debounceWrapper","context","args","callNow","window","document","event","params","evt","handleTouchStart","handleTouchMove","handleTouchEnd","xDown","yDown","xDiff","yDiff","timeDown","startEl","touchCount","e","swipeThreshold","getNearestAttribute","swipeUnit","swipeTimeout","timeDiff","eventType","changedTouches","eventData","xUp","yUp","el","attributeName","defaultValue","attributeValue","usePageVisibility","deps","savedCallback","useRef","useEffect","current","handleVisibilityChange","hidden","visibilityState","console","STREAMING_TIMEOUT","POLL_INTERVAL","BackgroundService","memo","isLoggedIn","visible","setVisible","useState","checkLatestNotification","masto","instance","skipCheckMarkers","states","notificationsLast","notificationsIterator","v1","notifications","list","limit","sinceId","id","value","next","length","notificationsShowNew","lastReadId","markers","fetch","timeline","sub","streamTimeout","pollNotifications","streaming","api","hasStreaming","setTimeout","user","notification","subscribe","log","entry","_a","checkForUpdates","clearTimeout","clearInterval","info","useInterval","lastCheckDate","useHotkeys","currentCloakMode","Date","diff","i18n","settings","text","_","ComposeButton","snapStates","useSnapshot","handleButton","composerState","minimized","openOSK","shiftKey","openCompose","showCompose","ignoreEventWhen","querySelector","_jsx","type","onClick","class","publishing","publishingError","children","Icon","icon","size","alt","KeyboardShortcutsHelp","onClose","showKeyboardShortcutsHelp","hasModal","Modal","tabindex","Trans","keys","0","action","className","1","2","map","parents","coords","siblings","animations","intersections","intervals","options","debounces","enabled","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","getElements","animate","handleResizes","entries","updateAllPos","updatePos","observePosition","oldObserver","rect","invocations","buffer","getCoords","offsetWidth","offsetHeight","rootMargin","px","observer","optionsOrPlugin","getOptions","delay","isPlugin","currentAnimation","parent","forEach","lowPriority","poll","callback","resize","supportedBrowser","nodes","mutation","node","target","i","child","isMounted","preExisting","add","remain","remove","raw","str","getScrollOffset","p","x","y","getTransitionSizes","oldCoords","newCoords","widthFrom","heightFrom","widthTo","heightTo","styles","paddingY","paddingX","getTarget","isEnabled","callbacks","getPluginTuple","pluginReturn","config","animation","pluginOrOptions","deltaX","deltaY","start","end","keyframes","cleanUp","style","prev","finalX","finalY","top","left","width","height","deletePosition","adjustScroll","styleReset","scrollDeltaX","scrollDeltaY","scrollBefore","lastHeight","lastWidth","startScroll","smoothScroll","offsetParent","parentStyles","parentCoords","autoAnimate","element","useAutoAnimate","controller","setController","setEnabled","Accounts","accounts","store","local","getJSON","currentAccount","getCurrentAccountID","moreThanOneAccount","reload","useReducer","accountsListParent","_jsxs","tabIndex","ref","account","isCurrent","isDefault","Avatar","url","avatarStatic","onDblClick","$select","NameText","test","showAcct","setCurrentAccountID","_Fragment","Menu2","align","menuButton","MenuItem","MenuDivider","disabled","splice","MenuConfirm","subMenu","confirmLabel","menuItemClassName","href","Link","to","logo","regionMaps","LangSelector","useLingui","populatedLocales","useMemo","LOCALES","lang","regionlessCode","replace","native","localeCode2Text","code","locale","fallback","CATALOGS","find","c","nativeName","_common","name","sort","a","b","order","localeCompare","DEFAULT_LANG","onChange","localStorage","setItem","common","import","createBackendPushSubscription","subscription","push","create","fetchBackendPushSubscription","updateBackendPushSubscription","update","removeBackendPushSubscription","isPushSupported","navigator","getRegistration","serviceWorker","getSubscription","registration","pushManager","undefined","urlBase64ToUint8Array","base64String","padding","repeat","base64","rawData","atob","outputArray","Uint8Array","charCodeAt","initSubscription","backendSubscription","err","message","sameEndpoint","vapidKey","sameKey","key2","getCurrentAccount","applicationServerKey","vapidKeyStr","applicationServerKeyStr","updateSubscription","data","policy","error","removeSubscription","DEFAULT_TEXT_SIZE","TEXT_SIZES","PHANPY_WEBSITE","WEBSITE","PHANPY_PRIVACY_POLICY_URL","PRIVACY_POLICY_URL","PHANPY_IMG_ALT_API_URL","IMG_ALT_API_URL","PHANPY_GIPHY_API_KEY","GIPHY_API_KEY","Settings","currentTheme","get","themeFormRef","targetLanguage","contentTranslationTargetLanguage","systemTargetLanguage","getTranslateTargetLanguage","systemTargetLanguageText","currentTextSize","prefs","setPrefs","authenticated","onInput","formData","theme","documentElement","html","classList","$manualMeta","$autoMetas","querySelectorAll","m","toggle","defaultChecked","fontSize","min","max","step","parseInt","setProperty","for","checked","autoRefresh","boostsCarousel","targetLanguages","showCommon","contentTranslationHideLanguages","contentTranslation","composerGIFPicker","mediaAltGenerator","supports","groupedNotificationsAlpha","shortcutSettingsCloudImportExport","cloakMode","PushNotificationsSection","display","flexWrap","gap","lineHeight","src","aspectRatio","verticalAlign","borderRadius","RelativeTime","datetime","readOnly","__BUILD_TIME__","showToast","uiState","setUIState","allowNotifications","setAllowNotifications","setNeedRelogin","pushFormRef","needRelogin","alerts","previousPolicyRef","policyEl","namedItem","isLoading","values","mention","favourite","reblog","follow","follow_request","followRequest","status","key","alertsCount","allowNotifications2","alert","permission","label","components","alert2","focusDeck","timer","columns","getElementById","modals","modal","modalFocusElement","focus","pages","page","useLocationChange","location","useLocation","currentLocationRef","pathname","FETCH_MAX_AGE","MAX_AGE","fetchLists","pmem","lists","title","set","updatedAt","now","maxAge","getLists","fetchList","getList","theList","getListTitle","addListStore","updateListStore","index","deleteListStore","listID","findIndex","ListAddEdit","editMode","nameFieldRef","repliesPolicyFieldRef","exclusiveFieldRef","repliesPolicy","exclusive","supportsExclusive","onSubmit","preventDefault","FormData","listResult","replies_policy","MUTE_DURATIONS","MUTE_DURATIONS_LABELS","i18nDuration","fetchFamiliarFollowers","currentID","ACCOUNT_INFO_MAX_AGE","memFetchFamiliarFollowers","fetchPostingStats","fetchStatuses","statuses","stats","boosts","replies","originals","Math","memFetchPostingStats","standalone","currentInstance","isString","currentMasto","sameCurrentInstance","setInfo","info2","fetchAccount","bot","createdAt","displayName","acct","avatar","fields","followersCount","followingCount","group","lastStatusAt","locked","note","statusesCount","username","memorial","moved","roles","hideCollections","header","headerStatic","isSelf","infoHasEssentials","updated","account2","accountInstance","headerCornerColors","setHeaderCornerColors","fetchFollowers","firstLoad","toUnicode","domain","LIMIT","familiarFollowersCache","followersIterator","results","newValue","familiarFollowers2","familiar","familiarFollowers","filter","fetchFollowing","followingIterator","setFamiliarFollowers","postingStats","setPostingStats","postingStatsUIState","renderFamiliarFollowers","LinkOrDiv","accountLink","hasPostingStats","total","setPostingStatsUIState","followers","onRelationshipChange","useCallback","relationship","newAccount","onProfileUpdate","rel","avatarSize","skeleton","i18n2","AccountBlock","headerIsAvatar","ctx","canvas","pixelDimension","g","willReadFrequently","r","imageSmoothingEnabled","dataLength","colors","getImageData","color","lightenRGB","rgbColors","AccountHandleInfo","matchMedia","handleWithInstance","clipboard","MenuLink","role","handleContentLinks","enhanceContent","emojis","verifiedAt","EmojiText","__html","follower","fetchAccounts","excludeRelationshipAttrs","blankCopy","shortenNumber","daysSinceLastPost","FAMILIAR_FOLLOWERS_LIMIT","RelatedActions","currentAuthenticated","showingReblogs","notifying","followedBy","blocking","accountID","following","blockedBy","muting","mutingNotifications","requested","domainBlocking","endorsed","privateNote","currentInfo","acctWithInstance","setCurrentInfo","sameInstance","setIsSelf","q","setRelationship","relationship2","setRelationshipUIState","updateAccount","showAddRemoveLists","setShowAddRemoveLists","setLists","niceDateTime","showTranslatedBio","showPrivateNoteModal","showEditProfile","setShowPrivateNoteModal","lists2","loading","onMenuChange","setShowTranslatedBio","handle","share","newRelationship","SubMenu2","reloadGenericAccounts","counter","direction","duration","setShowEditProfile","relationshipUIState","Loader","TranslatedBioSheet","AddRemoveListsSheet","EditProfileSheet","state","alpha","urlObj","host","fieldsText","luminence","path","listsContainingAccount2","setListsContainingAccount","reloadCount","setShowListAddEditModal","inList","listsContainingAccount","l","showListAddEditModal","accountIds","result","PrivateNoteSheet","initialNote","textareaRef","e2","trim","setAccount","source","fieldsAttributesRef","displayName2","fieldsAttributes","fieldsAttributesFields","field","FieldsAttributesRow","rows","Array","hasValue","setHasValue","server","AccountSheet","propInstance","AccountInfo","lookup","skip_webfinger","v2","search","resolve","accountURL","URL","parse","hostname","Drafts","drafts","setDrafts","db","ns","getCurrentAccountNS","ownKeys","startsWith","getMany","getTime","hasDrafts","abrupt","draft","draftStatus","replyTo","updatedAtDate","replyToStatus","MiniDraft","spoilerText","mediaAttachments","hasPoll","hasMedia","firstImageMedia","image","file","objectURL","createObjectURL","hasPollOrMedia","EmbedModal","dangerouslySetInnerHTML","GenericAccounts","postID","isCurrentInstance","setAccounts","showMore","setShowMore","showGenericAccounts","heading","staticAccounts","showReactions","relationshipsMap","setRelationshipsMap","loadRelationships","relationships","fetchRelationships","loadAccounts","done","isArray","theAccount","j","_types","newAccounts","post","Status","_b","showStats","InView","MediaAltModal","forceTranslate","setForceTranslate","differentLanguage","localeMatch","supportsTTS","speak","dir","whiteSpace","textWrap","TranslationBlock","sourceLanguage","clamp","gammaToLinear","pow","linearToGamma","rgb2oklab","s","cbrt","oklab2rgb","L","round","MediaModal","statusID","carouselRef","currentIndex","setCurrentIndex","carouselFocusItem","useLayoutEffect","scrollIntoView","prevStatusID","scrollLeft","clientWidth","differentStatusID","scrollTo","isRTL","behavior","showControls","setShowControls","handleSwipe","addEventListener","removeEventListener","handleScroll","abs","passive","mediaAccentColors","media","blurhash","averageColor","getBlurHashAverageColor","labAverageColor","mediaAccentGradient","range","join","toastRef","hideToast","contains","backgroundAttachment","backgroundImage","accentColor","description","showMediaAlt","Media","showOriginal","stopPropagation","overflow","position","menuClassName","remoteUrl","matches","CATEGORIES","CATEGORIES_INFO","spam","legal","violation","stampLabel","other","excludeStamp","ReportModal","split","rules","currentDomain","getCurrentInstance","selectedCategory","setSelectedCategory","showRules","setShowRules","rulesRef","hasRules","setHasRules","previewMode","useAvatarStatic","showActivity","Object","fromEntries","category","comment","forward","ruleIds","reports","accountId","statusIds","Fragment","rule","required","maxlength","LZString","f","keyStrBase64","keyStrUriSafe","baseReverseDic","getBaseValue","alphabet","character","input","res","compressed","uncompressed","buf","TotalLen","current_value","bitsPerChar","getCharFromInt","context_dictionary","context_dictionaryToCreate","context_c","context_wc","context_w","context_enlargeIn","context_dictSize","context_numBits","context_data","context_data_val","context_data_position","ii","resetValue","getNextValue","dictionary","enlargeIn","dictSize","numBits","w","bits","resb","maxpower","power","module","floatingButtonUrl","multiColumnUrl$1","tabMenuBarUrl","MAX_FETCH","fetchFollowedTags","iterator","followedTags","tags","fetchCount","getFollowedTags","fauxDiv","extractTagsFromStatus","content","hashtagLinks","AsyncText","setText","Promise","then","SHORTCUTS_LIMIT","TYPES","TYPE_TEXT","public","bookmarks","favourites","hashtag","trending","mentions","TYPE_PARAMS","notRequired","placeholder","pattern","fetchAccountTitle","SHORTCUTS_META","excludeViewMode","subtitle","query","encodeURIComponent","ShortcutsSettings","shortcuts","showForm","setShowForm","showImportExport","setShowImportExport","shortcutsListParent","opacity","textTransform","imgURL","multiColumnUrl","shortcutsViewMode","Boolean","shortcut","excludedViewMode","includes","shortcutsArr","from","temp","shortcutIndex","justifyContent","alignItems","currentTarget","ShortcutForm","mode","ImportExport","FORM_NOTES","currentType","setCurrentType","setFollowedHashtags","form","formRef","switch","followedHashtags","autocorrect","autocapitalize","tag","shortcutsStr","compressToEncodedURIComponent","importShortcutStr","setImportShortcutStr","parsedImportShortcutStr","setImportUIState","parsed","JSON","decompressFromEncodedURIComponent","hasCurrentSettings","shortcutsImportFieldRef","v","dt","importUIState","menuFooter","nonUniqueShortcuts","exceededLimit","newShortcuts","writeText","settingsJSON","newNote","changes","prevValue","Modals","navigate","useNavigate","preload","ComposeSuspense","__COMPOSE__","editStatus","newStatus","reloadStatusPage","reply","edit","toast","prevLocation","showSettings","showAccounts","showAccount","destination","showDrafts","showMediaModal","showShortcutsSettings","showEmbedModal","showReportModal","FollowRequestButtons","requestState","setRequestState","hasRelationship","followRequests","authorize","Error","NOTIFICATION_ICONS","severed_relationships","moderation_warning","emoji_reaction","emojiText","emoji","emoji_url","staticUrl","emojiObject","CustomEmoji","contentText","count","postsCount","postType","Subject","clickable","3","poll-self","poll-voted","favourite+reblog","admin.sign_up","admin.report","targetAccount","SEVERED_RELATIONSHIPS_TEXT","account_suspension","targetName","domain_block","user_domain_block","MODERATION_WARNING_TEXT","none","disable","mark_statuses_as_sensitive","delete_statuses","sensitive","silence","suspend","AVATARS_LIMIT","Notification","isStatic","disableContextMenu","report","_ids","_accounts","_statuses","sampleAccounts","notificationsCount","actualStatus","actualStatusID","isVoted","voted","isReplyToOthers","inReplyToAccountId","favsCount","reblogsCount","props","handleOpenGenericAccounts","showAvatar","emojiURL","shortcode","formattedCreatedAt","toLocaleString","genericAccountsHeading","statusKey","debug","type2","status2","TruncatedLink","onContextMenu","dispatchEvent","clientX","clientY","useTruncated","oldProps","newProps","accessToken","NotificationService","routeNotification","showNotificationSheet","notificationAccount","hasAccount","hash","warn","id2","setShowNotificationSheet","tagName","instanceURL","SearchForm","forwardRef","searchParams","setSearchParams","useSearchParams","searchMenuOpen","setSearchMenuOpen","setQuery","searchFieldRef","useImperativeHandle","setValue","select","blur","autocomplete","spellCheck","onSearch","onFocus","onBlur","onKeyDown","focusItem","nextItem","nextElementSibling","parentElement","firstItem","prevItem","previousElementSibling","lastItem","click","queryType","SearchCommand","showSearch","setShowSearch","searchFormRef","isSearchPage","closeSearch","enableOnFormTags","Shortcuts","shortcutsColumnsMode","menuRef","hasLists","formattedShortcuts","pin","handler","closeMenu","updatesButton","instanceRef","viewScroll","groupBoosts","newValues","boostStash","serialBoosts","item","boostStashID","items","half","floor","slice","dedupeBoosts","boostedStatusIDs","filteredItems","boosterID","statusKey2","groupContext","contextIndex","contexts","t","repliedItem","self","inReplyToId","firstItemAccountID","newItems","appliedContextIndices","inReplyToIds","contextItems","aDate","bDate","every","it","sKey","statusReply","queueMicrotask","fallbackFetch","fetchStatus","saveStatus","ids","replyToStatuses","skipThreading","assignFollowedTags","statusFollowedTags","extractedTags","acc","itemFollowedTags","statusWithFollowedTags","followedTags2","useScroll","scrollableRef","distanceFromStart","distanceFromEnd","scrollThresholdStart","scrollThresholdEnd","distanceFromStartPx","_distanceFromStartPx","distanceFromEndPx","_distanceFromEndPx","scrollDirection","setScrollDirection","reachStart","setReachStart","reachEnd","setReachEnd","nearReachStart","setNearReachStart","nearReachEnd","setNearReachEnd","isVertical","scrollableElement","previousScrollStart","scrollTop","onScroll","scrollHeight","scrollWidth","clientHeight","scrollStart","scrollDimension","clientDimension","scrollDistance","init","Event","useScrollFn","useThrottledCallback","MediaPost","onMediaClick","accountEmojis","repliesCount","reblogged","favourited","favouritesCount","bookmarked","muted","visibility","language","editedAt","filtered","card","uri","_deleted","_pinned","debugHover","filterContext","useContext","FilterContext","isFiltered","filterInfo","hasSpoiler","readingExpandMedia","mediaKey","toLowerCase","filterTitleStr","showSpoilerMedia","NavMenu","showFollowing","bindLongPress","useLongPress","threshold","detect","cancelOnMovement","buttonRef","menuState","setMenuState","boundingBoxPadding","safeBoundingBoxPadding","mutesIterator","fetchMutes","mutes","blocksIterator","fetchBlocks","blocks","supportsLists","buttonClickTS","squircle","ControlledMenu","anchorRef","containerProps","zIndex","portal","body","unmountOnClose","appVersion","commitHash","__COMMIT_HASH__","confirm","scrollIntoViewOptions","block","inline","Timeline","titleComponent","emptyText","errorText","useItemID","fetchItems","checkForUpdatesInterval","headerStart","headerEnd","timelineStart","refresh","view","showFollowedTags","showReplyParent","clearWhenRefresh","setItems","showNew","setShowNew","mediaFirst","allowGrouping","loadItemsTS","firstLoad2","loadItems","useDebouncedCallback","ts","otherPosts","pinnedPosts","items2","itemsSelector","jRef","activeItem","activeItemRect","closest","getBoundingClientRect","allItems","activeItemIndex","indexOf","itemRect","topmostItem","kRef","findLast","oRef","handleLoadNewPosts","showNewPostsIndicator","dotRef","headerRef","nearReachStart2","hiddenUI","prevView","disableIdleCheck","loadOrCheckUpdates","inBackground","noPointers","__IDLE__","visible2","hasUpdate","lastHiddenTime","TimelineItem","inView","fItems","bFiltered","filteredItemsIDs","aFiltered","isCarousel","unfiltered","filteredItems2","has","StatusCarousel","_pinned2","_grouped","item2","statusID3","_pinned3","actualStatusID3","reblog3","statusID2","actualStatusID2","reblog2","url2","showCompact","_differentAuthor","isSpoiler","manyItems","isMiddle","isStart","isEnd","TimelineStatusCompact","itemKey","enableCommentHint","endButtonRef","render","setRender","newID","oldID","startButtonRef","statusPeekText","statusPeek","statusThreadNumber","titlesStr","MIN_YEAR","MIN_YEAR_MONTH","supportsInputMonth","createElement","setAttribute","_isSearchEnabled","isSearchEnabled","AccountStatuses","useParams","month","excludeReplies","excludeBoosts","tagged","accountStatusesIterator","allSearchParams","searchOffsetRef","isMediaFirstInstance","searchEnabled","setSearchEnabled","isValidMonth","_year","_month","monthIndex","after","afterStr","before","beforeStr","searchResults","value2","offset","pinnedStatuses","pinnedStatusesIds","postId","setFeaturedTags","acctDisplay","accountDisplay","featuredTags","monthYear","fetchAccountPromiseRef","useTitle","fetchPromise","cachedAccount","filterBarRef","TimelineStart","year","month2","date","validity","MonthPicker","active","allowSwitch","offsetLeft","fetchAccountStatuses","masto2","monthFieldRef","yearFieldRef","checkValidity","minYear","minMonth","maxYear","maxMonth","Bookmarks","bookmarksIterator","fetchBookmarks","catchupUrl","FILTER_CONTEXT","RANGES","FILTER_KEYS","original","groups","FILTER_SORTS","FILTER_GROUPS","DTF","mem","Intl","DateTimeFormat","day","hour","minute","Catchup","dtf","showTopLinks","setShowTopLinks","supportsPixelfed","fetchHome","maxCreatedAt","maxCreatedAtDate","allResults","mainloop","homeIterator","nextParams","createdAtDate","selfPost","addedResults","catchupRangeRef","catchupLastRef","handleCatchupClick","catchupID","catchup","posts","setPosts","reloadCatchups","setLastCatchupEndAt","prevCatchups","setPrevCatchups","lastCatchupEndAt","catchups","ownCatchups","trimmedCatchups","lastCatchups","restCatchups","endAt","startAt","reloadCatchupsCount","_followedTags","_e","thePost","__FILTER","links","sharers","links2","link","topLinks","shared","linksLoop","likes","filteredPosts","authors","authorCounts","selectedFilterCategory","filteredPosts2","setSelectedAuthor","sortBy","authorsHash","setSortOrder","authorCountsMap","postFilterMatches","boostedPosts","__BOOSTERS","selectedAuthor","filteredPostsMap","authorID","authorCountsList","sortedFilteredPosts","aAccountID","authorIndices","bAccountID","aIndex","bIndex","postDensity","bDensity","aDensity","sortOrder","groupBy","prevGroup","authorsListParent","autoAnimated","isFiltered2","postsBar","postsBarType","posts2","postsBins","binByTime","lastCatchupRange","sortOrderIndex","authorElement","scrollableRect","authorRect","right","showHelp","setShowHelp","hlRef","_2","escRef","ignoreModifiers","setRange","format","pc","yes","setSelectedFilterCategory","setSortBy","formatRange","setGroupBy","transform","imageDescription","publishedAt","punycode","filterCounts","author","paddingInline","showSeparator","IntersectionPostLineItem","isFollowedTags","PostLine","isReplyTo","show","setShow","IntersectionObserver","unobserve","MEDIA_DENSITY","CARD_DENSITY","pollContent","cur","htmlContentLength","PostPeek","density","isThread","_thread","readingExpandSpoilers","showMedia","showPostContent","emojifyText","o","multiple","remoteMediaURL","_f","_h","_g","_j","_i","mediaURL","MEDIA_SIZE","previewUrl","onError","gifv","video","audio","PostStats","numBins","dates","minDate","normalized","binIndex","bins","Favourites","favouritesIterator","fetchFavourites","FILTER_CONTEXT_UNIMPLEMENTED","FILTER_CONTEXT_LABELS","home","thread","EXPIRY_DURATIONS","EXPIRY_DURATIONS_LABELS","Filters","showFiltersAddEditModal","setShowFiltersAddEditModal","filters","setFilters","keywords","expiresAt","k","keyword","ExpiryStatus","_id","incID","FiltersAddEdit","filterAction","hasExpiry","expiresAtDate","editKeywords","setEditKeywords","keywordsRef","setRemovedKeyword_IDs","filteredEditKeywords","setRemovedKeywordIDs","removedKeyword_IDs","title2","keywordIDs","getAll","keywordKeywords","keywordWholeWords","wholeWord","removedKeywordIDs","keywordsAttributes","context2","expiresIn","filterResult","filterAction2","_id2","showNeverExpires","expired","rerender","FollowedHashtags","Following","latestItem","latestItemChanged","clearFollowedTagsState","opts","payload","TAGS_LIMIT_PER_MODE","TOTAL_TAGS_LIMIT","Hashtags","mediaView","columnMode","hashtags","linkParams","hashtagTitle","maxID","fetchHashtags","timelines","any","maxId","onlyMedia","since_id","valueContainsLatestItem","followUIState","setFollowUIState","reachLimit","featuredUIState","setFeaturedUIState","isFeaturedTag","featuredTags2","setIsFeaturedTag","finally","featuredTagID","catch","MenuHeader","delete","FocusableItem","newHashtag","MenuGroup","exists","newInstance","List","listIterator","setList","showManageMembersModal","setShowManageMembersModal","list2","setDownOverflow","ListManageMembers","MEMBERS_LIMIT","members","setMembers","membersIterator","fetchMembers","member","as","RemoveAddButton","removed","setRemoved","notificationTypeKeys","fixNotifications","massageNotifications2","notificationGroups","sampleAccountIds","statusId","groupNotifications2","groupNotifications3","latestPageNotificationAt","newGroupNotifications","mostRecentNotificationId","gn","newGroupNotifications2","mappedNotification","n","notificationsMap2","groupNotifications","notificationsMap","cleanNotifications","virtualType","mappedAccount","cleanNotifications2","emptySearchParams","URLSearchParams","Mentions","stateType","setStateType","mentionsIterator","fetchMentions","types","conversationsIterator","latestConversationItem","lastStatus","fetchConversations","NOTIFICATIONS_LIMIT","NOTIFICATIONS_GROUPED_LIMIT","memSupportsGroupedNotifications","mastoFetchNotifications","v2_alpha","getGroupedNotifications","NOTIFICATIONS_POLICIES","NOTIFICATIONS_POLICIES_TEXT","forNotFollowing","forNotFollowers","forNewAccounts","forPrivateMentions","forLimitedAccounts","Notifications","notificationID","notificationAccessToken","onlyMentions","setOnlyMentions","setFollowRequests","announcements","setAnnouncements","excludeTypes","allNotifications","groupedNotifications","notificationsLastFetchTime","fetchFollowRequests","loadFollowRequests","requests","fetchAnnouncements","supportsFilteredNotifications","showNotificationsSettings","setNotificationsPolicy","fetchNotificationsPolicy","loadNotificationsPolicy","notificationsRequests","setNotificationsRequests","fetchNotificationsRequest","loadNotifications","fetchNotificationsPromise","fetchNotifications","loadUpdates","unsub","subscribeKey","yesterdayDate","todayDate","currentDay","showTodayEmpty","announcementsListRef","statusLink","setShowNotificationsSettings","announcement","AnnouncementBlock","notificationsPolicy","onToggle","open","request","NotificationRequestModalButton","NotificationRequestButtons","differentDay","notificationDay","newPolicy","contact","contactAccount","startsAt","endsAt","published","reactions","allDay","read","publishedAtDate","publishedDateText","updatedAtText","reaction","me","fetchNotficationsByAccount","setShowModal","showModal","setNotifications","notifs","hasRequestState","Public","isLocal","publicIterator","fetchPublic","remote","prompt","SHORT_LIMIT","Search","offsetRef","statusResults","setStatusResults","accountResults","setAccountResults","hashtagResults","setHashtagResults","setTypeResultsFunc","loadResults","filterBarParent","history","reduce","TREND_CACHE_TIME","fetchLinks","trends","fetchTrendsStatuses","pixelfed","discover","fetchLinkList","Trending","setHashtags","setLinks","trendIterator","fetchTrends","currentLinkMentionsLoading","setCurrentLinkMentionsLoading","currentLinkMentionsIterator","currentLink","setCurrentLink","supportsTrendingLinkPosts","currentLinkRef","hasCurrentLink","fetchLinkMentions","prevCurrentLink","authorName","authorUrl","providerName","providerUrl","flexShrink","textAlign","Columns","Hashtag","Component","Home","NotificationsLink","notificationLinkRef","NotificationsMenu","NOTIFICATIONS_DISPLAY_LIMIT","hasFollowRequests","setHasFollowRequests","statusPostRegexes","getInstanceStatusObject","regex","match","getInstanceStatusURL","HttpRoute","statusObject","statusURL","Lists","instancesListURL","PHANPY_CLIENT_NAME","CLIENT_NAME","SCOPES","registerApplication","registrationParams","client_name","redirect_uris","origin","scopes","website","method","headers","toString","json","getAuthorizationURL","registrationJSON","client_id","authorizationParams","scope","redirect_uri","authorizationURL","client_secret","PHANPY_DEFAULT_INSTANCE","DEFAULT_INSTANCE","Login","instanceURLRef","cachedInstanceURL","submit","instanceText","setInstanceText","instancesList","setInstancesList","searcher","Fuse","submitInstance","vapid_key","session","cleanInstanceText","instanceTextLooksLikeDomain","instancesSuggestions","instance2","selectedInstanceText","SUBCOMMENTS_OPEN_ALL_LIMIT","MAX_WEIGHT","cachedRepliesToggle","cachedStatusesMap","scrollPositions","resetScrollPosition","STATUSES_SELECTOR","STATUS_URL_REGEX","StatusPage","mediaParam","mediaOnlyParam","mediaIndex","mediaStatusID","mediaStatus","getStatus","showMediaOnly","heroStatus","setHeroStatus","closeLink","matchStatusPath","matchPath","handleMediaClose","$carousel","$deckContainers","$deckContainer","StatusParent","linkable","restProps","StatusThread","navigation","translate","setStatuses","heroStatusRef","totalDescendants","scrollOffsets","lastInitContextTS","reloadHero","heroTimer","cachedStatuses","reallyCachedStatuses","heroFetch","pRetry","contextFetch","hasStatus","heroStatus2","_replies","_r","expandReplies","weight","descendants","missingStatuses","ancestors2","ancestors","ancestorsIsThread","nestedDescendants","__replies","ancestor","allStatuses","offsetTop","setLimit","showRefresh","setShowRefresh","interval","scrollPosition","setInterval","newScrollOffsets","newScrollTop","heroDisplayName","div","heroContentText","apiCache","postInstance","statusWeightCache","innerHTML","heroInView","activeStatus","postSameInstance","activeStatusRect","activeStatusIndex","allStatusLinks","nextStatus","heroPointer","topmostStatusLink","prevStatus","statusLinkRect","details","reachTopPost","initialPageState","handleMediaClick","renderStatus","descendant","isHero","requestAnimationFrame","setHeroInView","setReachTopPost","handleStatusLinkClick","isLinkable","SubComments","hasDescendants","showActionsBar","prevEntry","level","moreStatusesKeys","openAll","parentLink","getIDs","statusesList","spoilerButton","viewMode","prevLocationIsStatusPage","arr","setViewMode","button","buttons","hasParentThread","replies2","replies3","diveDeep","totalComments","sameCount","totalWeight","accWeight","calcStatusWeight","openBefore","detailsRef","open2","dataset","POLL_VIRTUAL_LENGTH","cachedWeight","mediaLength","MEDIA_VIRTUAL_LENGTH","pollLength","cardLength","CARD_VIRTUAL_LENGTH","StatusRoute","boostsCarouselUrl","groupedNotificationsUrl","multiHashtagTimelineUrl","nestedCommentsThreadUrl","logoText","PHANPY_DEFAULT_INSTANCE_REGISTRATION_URL","DEFAULT_INSTANCE_REGISTRATION_URL","appSite","Welcome","marginBlockEnd","nativeAlert","__nativeAlert","Toastify","gravity","__STATES__","__STATES_STATS__","counts","unmountedPosts","unfurledLinks","postInNotifications","$post","unfurled","keysCount","ICONS","nonIdleEvents","setIdle","debouncedSetIdle","onNonIdle","isIOS","$meta","tempColor","colorScheme","themeDarkColor","textSize","$app","$body","setIsLoggedIn","decodeURIComponent","clientID","clientSecret","allSettled","client","initPreferences","initStates","PrimaryRoutes","Routes","Route","nonRootLocation","backgroundLocation","getPrevLocation","initActivateLang","I18nProvider","HashRouter","App","removeItem","sessionStorage","__CLOAK__"],"mappings":"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","x_google_ignoreList":[0,1,6,7,26]}